const moduleName = 'security';
const componentName = 'authprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editAuthProfileHeader = `${prefix}.editAuthProfileHeader`;
export const newAuthProfileHeader = `${prefix}.newAuthProfileHeader`;
export const authTypeInputPlaceholder = `${prefix}.authTypeInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const discardedCurrentValuesConfirmation = `${prefix}.discardedCurrentValuesConfirmation`;
export const resetToDefaultValuesHeader = `${prefix}.resetToDefaultValuesHeader`;
export const pingAccessAgentSettingsHeader = `${prefix}.pingAccessAgentSettingsHeader`;
export const jwtTitleHeader = `${prefix}.jwtTitleHeader`;
export const samlTitleHeader = `${prefix}.samlTitleHeader`;
export const tacacsTitleHeader = `${prefix}.tacacsTitleHeader`;
export const sectionHttpAuthenticationHeader = `${prefix}.sectionHttpAuthenticationHeader`;
export const ldapTitleHeader = `${prefix}.ldapTitleHeader`;

export const ENGLISH = {
    [editAuthProfileHeader]: 'Edit Auth Profile: {0}',
    [newAuthProfileHeader]: 'Create Auth Profile: {0}',
    [authTypeInputPlaceholder]: 'Select Auth Type',
    [typeInputLabel]: 'Type',
    [sectionTitleGeneral]: 'General',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [discardedCurrentValuesConfirmation]: 'Switching type will reset any stored values to default.',
    [resetToDefaultValuesHeader]: 'Reset to Defaults',
    [pingAccessAgentSettingsHeader]: 'PingAccess Agent',
    [jwtTitleHeader]: 'JWT',
    [samlTitleHeader]: 'SAML',
    [tacacsTitleHeader]: 'TACACS+',
    [sectionHttpAuthenticationHeader]: 'HTTP Authentication',
    [ldapTitleHeader]: 'LDAP',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'authprofilejwtsettings';
const prefix = `${moduleName}.${componentName}`;

export const jwtServerProfileLabel = `${prefix}.jwtServerProfileLabel`;
export const jwtDropdownPlaceholder = `${prefix}.jwtDropdownPlaceholder`;

export const ENGLISH = {
    [jwtServerProfileLabel]: 'JWT Server Profile',
    [jwtDropdownPlaceholder]: 'Select JWT Server Profile',
};const moduleName = 'security';
const componentName = 'authprofilesamlsettings';
const prefix = `${moduleName}.${componentName}`;

export const samlIdentityProviderSettingsHeader = `${prefix}.samlIdentityProviderSettingsHeader`;
export const idpMetadataInputLabel = `${prefix}.idpMetadataInputLabel`;
export const idpMetadataHeader = `${prefix}.idpMetadataHeader`;
export const samlServiceProviderSettingsHeader = `${prefix}.samlServiceProviderSettingsHeader`;
export const entityTypeInputLabel = `${prefix}.entityTypeInputLabel`;
export const organizationNameInputLabel = `${prefix}.organizationNameInputLabel`;
export const organizationDisplayNameInputLabel = `${prefix}.organizationDisplayNameInputLabel`;
export const organizationUrlInputLabel = `${prefix}.organizationUrlInputLabel`;
export const technicalContactNameInputLabel = `${prefix}.technicalContactNameInputLabel`;
export const technicalContactEmailInputLabel = `${prefix}.technicalContactEmailInputLabel`;
export const fqdnInputLabel = `${prefix}.fqdnInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const displayNameInputPlaceholder = `${prefix}.displayNameInputPlaceholder`;
export const urlInputPlaceholder = `${prefix}.urlInputPlaceholder`;
export const emailInputPlaceholder = `${prefix}.emailInputPlaceholder`;
export const fqdnInputPlaceholder = `${prefix}.fqdnInputPlaceholder`;
export const idpInputPlaceholder = `${prefix}.idpInputPlaceholder`;

export const ENGLISH = {
    [samlIdentityProviderSettingsHeader]: 'SAML Identity Provider Settings',
    [idpMetadataInputLabel]: 'IDP Metadata',
    [idpMetadataHeader]: 'Identity Provider',
    [samlServiceProviderSettingsHeader]: 'Service Provider',
    [entityTypeInputLabel]: 'Entity Type',
    [organizationNameInputLabel]: 'Organization Name',
    [organizationDisplayNameInputLabel]: 'Organization Display Name',
    [organizationUrlInputLabel]: 'Organization URL',
    [technicalContactNameInputLabel]: 'Technical Contact Name',
    [technicalContactEmailInputLabel]: 'Technical Contact Email',
    [fqdnInputLabel]: 'FQDN',
    [displayNameInputPlaceholder]: 'Enter Display Name',
    [urlInputPlaceholder]: 'Enter URL',
    [emailInputPlaceholder]: 'Enter Email',
    [fqdnInputPlaceholder]: 'Enter FQDN',
    [idpInputPlaceholder]: 'Enter IDP Metadata',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'authprofilehttpauthentication';
const prefix = `${moduleName}.${componentName}`;

export const requiredUserGroupMembershipHeader = `${prefix}.requiredUserGroupMembershipHeader`;
export const requiredUserGroupMembershipInputPlaceholder = `${prefix}.requiredUserGroupMembershipInputPlaceholder`;
export const requiredUserGroupMembershipInputLabel = `${prefix}.requiredUserGroupMembershipInputLabel`;
export const cacheExpirationTimeInputLabel = `${prefix}.cacheExpirationTimeInputLabel`;
export const cacheExpirationTimeInputPlaceholder = `${prefix}.cacheExpirationTimeInputPlaceholder`;
export const insertHttpClientInputLabel = `${prefix}.insertHttpClientInputLabel`;
export const insertHttpClientInputPlaceholder = `${prefix}.insertHttpClientInputPlaceholder`;
export const cacheExpirationTimeInputInnerText = `${prefix}.cacheExpirationTimeInputInnerText`;

export const ENGLISH = {
    [requiredUserGroupMembershipHeader]: 'Required User Group Membership ({0})',
    [requiredUserGroupMembershipInputPlaceholder]: 'Enter Value',
    [requiredUserGroupMembershipInputLabel]: 'Group Full DN',
    [cacheExpirationTimeInputLabel]: 'Auth Credential Cache Expiration',
    [cacheExpirationTimeInputPlaceholder]: 'Enter Cache Expiration',
    [insertHttpClientInputLabel]: 'Client User ID Header Name',
    [insertHttpClientInputPlaceholder]: 'Enter Header Name',
    [cacheExpirationTimeInputInnerText]: 'Seconds',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'authprofileldapsettings';
const prefix = `${moduleName}.${componentName}`;

export const ldapServersInputLabel = `${prefix}.ldapServersInputLabel`;
export const ldapServersColumnInputLabel = `${prefix}.ldapServersColumnInputLabel`;
export const ldapServersInputPlaceholder = `${prefix}.ldapServersInputPlaceholder`;
export const ldapSecurityModeLabel = `${prefix}.ldapSecurityModeLabel`;
export const baseDnInputLabel = `${prefix}.baseDnInputLabel`;
export const baseDnInputPlaceholder = `${prefix}.baseDnInputPlaceholder`;
export const administratorBindButtonLabel = `${prefix}.administratorBindButtonLabel`;
export const anonymousBindButtonLabel = `${prefix}.anonymousBindButtonLabel`;
export const adminBindDnInputLabel = `${prefix}.adminBindDnInputLabel`;
export const adminBindDnInputPlaceholder = `${prefix}.adminBindDnInputPlaceholder`;
export const adminBindPasswordInputPlaceholder = `${prefix}.adminBindPasswordInputPlaceholder`;
export const adminBindPasswordInputLabel = `${prefix}.adminBindPasswordInputLabel`;
export const ldapSettingsIgnoreReferralsCheckboxLabel = `${prefix}.ldapSettingsIgnoreReferralsCheckboxLabel`;
export const userDnPatternInputLabel = `${prefix}.userDnPatternInputLabel`;
export const userDnPatternInputPlaceholder = `${prefix}.userDnPatternInputPlaceholder`;
export const userTokenInputLabel = `${prefix}.userTokenInputLabel`;
export const userTokenInputPlaceholder = `${prefix}.userTokenInputPlaceholder`;
export const userSearchDnInputLabel = `${prefix}.userSearchDnInputLabel`;
export const userSearchDnInputPlaceholder = `${prefix}.userSearchDnInputPlaceholder`;
export const userSectionHeader = `${prefix}.userSectionHeader`;
export const groupSearchDnInputLabel = `${prefix}.groupSearchDnInputLabel`;
export const groupSearchDnInputPlaceholder = `${prefix}.groupSearchDnInputPlaceholder`;
export const userSearchScopeInputLabel = `${prefix}.userSearchScopeInputLabel`;
export const searchScopeDropDownPlaceholder = `${prefix}.searchScopeDropDownPlaceholder`;
export const userIdAttributeInputLabel = `${prefix}.userIdAttributeInputLabel`;
export const userIdAttributeInputPlaceholder = `${prefix}.userIdAttributeInputPlaceholder`;
export const groupSectionHeader = `${prefix}.groupSectionHeader`;
export const groupFilterInputLabel = `${prefix}.groupFilterInputLabel`;
export const groupFilterInputPlaceholder = `${prefix}.groupFilterInputPlaceholder`;
export const groupMemberAttributeInputLabel = `${prefix}.groupMemberAttributeInputLabel`;
export const groupMemberAttributeInputPlaceholder = `${prefix}. groupMemberAttributeInputPlaceholder`;
export const groupSearchScopeInputLabel = `${prefix}. groupSearchScopeInputLabel`;
export const groupMemberAttributeIsFullDnCheckboxLabel = `${prefix}. groupMemberAttributeIsFullDnCheckboxLabel`;
export const settingsSectionLabel = `${prefix}. settingsSectionLabel`;
export const settingsSectionLabelTooltip = `${prefix}. settingsSectionLabelTooltip`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const portInputPlaceholder = `${prefix}.portInputPlaceholder`;

export const ENGLISH = {
    [ldapServersInputLabel]: 'LDAP Servers ({0})',
    [ldapServersColumnInputLabel]: 'Servers',
    [ldapServersInputPlaceholder]: 'Enter IP Address',
    [ldapSecurityModeLabel]: 'LDAP Connection Security Mode',
    [baseDnInputLabel]: 'Base DN',
    [baseDnInputPlaceholder]: 'Enter Base DN',
    [administratorBindButtonLabel]: 'Administrator Bind',
    [anonymousBindButtonLabel]: 'Anonymous Bind',
    [adminBindDnInputLabel]: 'Admin Bind DN',
    [adminBindDnInputPlaceholder]: 'Enter User',
    [adminBindPasswordInputPlaceholder]: 'Enter Password',
    [adminBindPasswordInputLabel]: 'Admin Bind Password',
    [ldapSettingsIgnoreReferralsCheckboxLabel]: 'Ignore Referrals',
    [userTokenInputLabel]: 'User Token',
    [userTokenInputPlaceholder]: 'Enter User Token',
    [userDnPatternInputLabel]: 'User DN Pattern',
    [userDnPatternInputPlaceholder]: 'Enter User DN Pattern',
    [userSearchDnInputLabel]: 'User Search DN',
    [userSearchDnInputPlaceholder]: 'Enter User Search Root',
    [userSectionHeader]: 'User',
    [groupSearchDnInputLabel]: 'Group Search DN',
    [groupSearchDnInputPlaceholder]: 'Enter Group Search Root',
    [userSearchScopeInputLabel]: 'User Search Scope',
    [searchScopeDropDownPlaceholder]: 'None',
    [userIdAttributeInputLabel]: 'User ID Attribute',
    [userIdAttributeInputPlaceholder]: 'Enter User Attribute',
    [groupSectionHeader]: 'Group',
    [groupFilterInputLabel]: 'Group Filter',
    [groupFilterInputPlaceholder]: 'Enter Group Filter',
    [groupMemberAttributeInputLabel]: 'Group Member Attribute',
    [groupMemberAttributeInputPlaceholder]: 'Enter Group Member Attribute',
    [groupSearchScopeInputLabel]: 'Group Search Scope',
    [groupMemberAttributeIsFullDnCheckboxLabel]: 'Enable Full DN For Group Member Attribute',
    [settingsSectionLabel]: 'Settings',
    [settingsSectionLabelTooltip]: 'LDAP Bind Settings',
    [portInputLabel]: 'Port',
    [portInputPlaceholder]: 'Enter Port',
};const moduleName = 'security';
const componentName = 'authprofilepingaccesssettings';
const prefix = `${moduleName}.${componentName}`;

export const pingAccessAgentInputLabel = `${prefix}.pingAccessAgentInputLabel`;
export const pingAccessAgentInputPlaceholder = `${prefix}.pingAccessAgentInputPlaceholder`;

export const ENGLISH = {
    [pingAccessAgentInputLabel]: 'PingAccess Agent',
    [pingAccessAgentInputPlaceholder]: 'Select PingAccess Agent',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'authprofiletacacsplussettings';
const prefix = `${moduleName}.${componentName}`;

export const tacacsServersInputLabel = `${prefix}.tacacsServersInputLabel`;
export const tacacsServersInputPlaceholder = `${prefix}.tacacsServersInputPlaceholder`;
export const tacacsPortInputLabel = `${prefix}.tacacsPortInputLabel`;
export const tacacsPortInputPlaceholder = `${prefix}.tacacsPortInputPlaceholder`;
export const tacacsPasswordInputLabel = `${prefix}.tacacsPasswordInputLabel`;
export const tacacsPasswordInputPlaceholder = `${prefix}.tacacsPasswordInputPlaceholder`;
export const tacacsServiceInputLabel = `${prefix}.tacacsServiceInputLabel`;
export const tacacsServiceInputPlaceholder = `${prefix}.tacacsServiceInputPlaceholder`;
export const tacacsAuthorizationAttributesNameInputLabel = `${prefix}.tacacsAuthorizationAttributesNameInputLabel`;
export const tacacsAuthorizationAttributesValueInputLabel = `${prefix}.tacacsAuthorizationAttributesValueInputLabel`;
export const tacacsAuthorizationAttributesMandatoryCheckboxLabel = `${prefix}.tacacsAuthorizationAttributesMandatoryCheckboxLabel`;
export const nameColumnLabel = `${prefix}.nameColumnLabel`;
export const valueColumnLabel = `${prefix}.valueColumnLabel`;
export const mandatoryColumnLabel = `${prefix}.mandatoryColumnLabel`;

export const ENGLISH = {
    [tacacsServersInputLabel]: 'Servers ({0})',
    [tacacsServersInputPlaceholder]: 'Enter IP Address',
    [tacacsPortInputLabel]: 'Port',
    [tacacsPortInputPlaceholder]: 'Enter Port',
    [tacacsPasswordInputLabel]: 'Password',
    [tacacsPasswordInputPlaceholder]: 'Enter Password',
    [tacacsServiceInputLabel]: 'TACACS+ Service',
    [tacacsServiceInputPlaceholder]: 'Select Service',
    [tacacsAuthorizationAttributesNameInputLabel]: 'Name',
    [tacacsAuthorizationAttributesMandatoryCheckboxLabel]: 'Mandatory',
    [nameColumnLabel]: 'Name',
    [mandatoryColumnLabel]: 'Mandatory',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'authorizationattributesgrid';
const prefix = `${moduleName}.${componentName}`;

export const tacacsAuthorizationAttributesInputLabel = `${prefix}.tacacsAuthorizationAttributesInputLabel`;
export const tacacsAuthorizationAttributesNameInputLabel = `${prefix}.tacacsAuthorizationAttributesNameInputLabel`;
export const tacacsAuthorizationAttributesValueInputLabel = `${prefix}.tacacsAuthorizationAttributesValueInputLabel`;
export const tacacsAuthorizationAttributesMandatoryCheckboxLabel = `${prefix}.tacacsAuthorizationAttributesMandatoryCheckboxLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const nameColumnPlaceholder = `${prefix}.nameColumnPlaceholder`;
export const valueColumnPlaceholder = `${prefix}.valueColumnPlaceholder`;
export const addButtonLabel = `${prefix}.addButtonLabel`;

export const ENGLISH = {
    [tacacsAuthorizationAttributesInputLabel]: 'Authorization Attributes ({0})',
    [tacacsAuthorizationAttributesNameInputLabel]: 'Name',
    [tacacsAuthorizationAttributesMandatoryCheckboxLabel]: 'Mandatory',
    [valueColumnPlaceholder]: 'Enter Value',
    [removeButtonLabel]: 'Remove',
    [addButtonLabel]: 'Add',
};undefined WafModule
 


  
  
  
 

const moduleName = 'wafprofile';
const componentName = 'wafdatafilemodal';
const prefix = `${moduleName}.${componentName}`;

export const wafDataFileModalTitle = `${prefix}.wafDataFileModalTitle`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeDropdownLabel = `${prefix}.typeDropdownLabel`;
export const typeDropdownPlaceholder = `${prefix}.typeDropdownPlaceholder`;
export const dataTextareaLabel = `${prefix}.dataTextareaLabel`;
export const dataTextareaPlaceholder = `${prefix}.dataTextareaPlaceholder`;

export const ENGLISH = {
    [wafDataFileModalTitle]: 'Add File: {0}',
    [sectionTitleGeneral]: 'General',
    [typeDropdownLabel]: 'Type',
    [typeDropdownPlaceholder]: 'Select Type',
    [dataTextareaLabel]: 'Data',
    [dataTextareaPlaceholder]: 'Enter Data',
};undefined WafModule
 


  
  
  
 

const moduleName = 'wafprofile';
const componentName = 'wafdatafilegrid';
const prefix = `${moduleName}.${componentName}`;

export const wafDataFileGridTitle = `${prefix}.wafDataFileGridTitle`;
export const wafDataFileName = `${prefix}.wafDataFileName`;
export const wafDataFileType = `${prefix}.wafDataFileType`;
export const addWafDataFileButtonLabel = `${prefix}.addWafDataFileButtonLabel`;
export const removeWafDataFileButtonLabel = `${prefix}.removeWafDataFileButtonLabel`;
export const editWafDataFileButtonLabel = `${prefix}.editWafDataFileButtonLabel`;
export const expandWafDataFileButtonLabel = `${prefix}.expandWafDataFileButtonLabel`;
export const wafDataLabel = `${prefix}.wafDataLabel`;

export const ENGLISH = {
    [wafDataFileGridTitle]: 'Files: ({0})',
    [wafDataFileName]: 'Name',
    [wafDataFileType]: 'Type',
    [addWafDataFileButtonLabel]: 'Add',
    [removeWafDataFileButtonLabel]: 'Remove',
    [editWafDataFileButtonLabel]: 'Edit',
    [expandWafDataFileButtonLabel]: 'Expand',
    [wafDataLabel]: 'Data',
};const moduleName = 'accounts';
const componentName = 'myaccountpreview';
const prefix = `${moduleName}.${componentName}`;

export const tenantLabel = `${prefix}.tenantLabel`;

export const ENGLISH = {
    [tenantLabel]: 'Tenant',
};undefined WafModule
 


  
  
  
 

const moduleName = 'wafprofile';
const componentName = 'wafprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const sectionTitleDefaultActions = `${prefix}.sectionTitleDefaultActions`;
export const sectionTitleFiles = `${prefix}.sectionTitleFiles`;
export const sectionTitleContentTypeMapping = `${prefix}.sectionTitleContentTypeMapping`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionPlaceholder = `${prefix}.descriptionPlaceholder`;
export const allowTitleLabel = `${prefix}.allowTitleLabel`;
export const restrictedTitleLabel = `${prefix}.restrictedTitleLabel`;
export const staticTitleLabel = `${prefix}.staticTitleLabel`;
export const staticExtensionsInputLabel = `${prefix}.staticExtensionsInputLabel`;
export const staticExtensionsInputPlaceholder = `${prefix}.staticExtensionsInputPlaceholder`;
export const maxClientRequestSizeInputLabel = `${prefix}.maxClientRequestSizeInputLabel`;
export const maxClientRequestSizeInputPlaceholder = `${prefix}.maxClientRequestSizeInputPlaceholder`;
export const maxBackendResponseInputLabel = `${prefix}.maxBackendResponseInputLabel`;
export const maxBackendResponseInputPlaceholder = `${prefix}.maxBackendResponseInputPlaceholder`;
export const regexMatchLimitInputLabel = `${prefix}.regexMatchLimitInputLabel`;
export const regexMatchLimitInputPlaceholder = `${prefix}.regexMatchLimitInputPlaceholder`;
export const regexRecursionLimitInputLabel = `${prefix}.regexRecursionLimitInputLabel`;
export const regexRecursionLimitInputPlaceholder = `${prefix}.regexRecursionLimitInputPlaceholder`;
export const maxExecutionTimeInputLabel = `${prefix}.maxExecutionTimeInputLabel`;
export const maxExecutionTimeInputPlaceholder = `${prefix}.maxExecutionTimeInputPlaceholder`;
export const maxExecutionTimeInputInnerText = `${prefix}.maxExecutionTimeInputInnerText`;
export const maxClientRequestSizeInputInnerText = `${prefix}.maxClientRequestSizeInputInnerText`;
export const maxBackendResponseInputInnerText = `${prefix}.maxBackendResponseInputInnerText`;
export const argumentSeparatorInputLabel = `${prefix}.argumentSeparatorInputLabel`;
export const argumentSeparatorInputPlaceholder = `${prefix}.argumentSeparatorInputPlaceholder`;
export const cookieFormatVersionRadioInputGroupLabel = `${prefix}.cookieFormatVersionRadioInputGroupLabel`;
export const netscapeCookiesRadioInputLabel = `${prefix}.netscapeCookiesRadioInputLabel`;
export const versionOneCookiesRadioInputLabel = `${prefix}.versionOneCookiesRadioInputLabel`;
export const ignoreIncompleteRequestBodyErrorMessageCheckboxLabel = `${prefix}.ignoreIncompleteRequestBodyErrorMessageCheckboxLabel`;
export const enableXXEProtectionCheckboxLabel = `${prefix}.enableXXEProtectionCheckboxLabel`;
export const allowedVersionsDropdownLabel = `${prefix}.allowedVersionsDropdownLabel`;
export const allowedVersionsDropdownPlaceholder = `${prefix}.allowedVersionsDropdownPlaceholder`;
export const allowedMethodsDropdownLabel = `${prefix}.allowedMethodsDropdownLabel`;
export const allowedMethodsDropdownPlaceholder = `${prefix}.allowedMethodsDropdownPlaceholder`;
export const contentTypeMappingGridTitle = `${prefix}.contentTypeMappingGridTitle`;
export const restrictedExtensionsInputLabel = `${prefix}.restrictedExtensionsInputLabel`;
export const restrictedExtensionsInputPlaceholder = `${prefix}.restrictedExtensionsInputPlaceholder`;
export const restrictedHeadersInputLabel = `${prefix}.restrictedHeadersInputLabel`;
export const restrictedHeadersInputPlaceholder = `${prefix}.restrictedHeadersInputPlaceholder`;
export const requestHeaderPhaseInputLabel = `${prefix}.requestHeaderPhaseInputLabel`;
export const requestHeaderPhaseInputPlaceholder = `${prefix}.requestHeaderPhaseInputPlaceholder`;
export const requestBodyPhaseInputLabel = `${prefix}.requestBodyPhaseInputLabel`;
export const requestBodyPhaseInputPlaceholder = `${prefix}.requestBodyPhaseInputPlaceholder`;
export const responseHeaderPhaseInputLabel = `${prefix}.responseHeaderPhaseInputLabel`;
export const responseHeaderPhaseInputPlaceholder = `${prefix}.responseHeaderPhaseInputPlaceholder`;
export const responseBodyPhaseInputLabel = `${prefix}.responseBodyPhaseInputLabel`;
export const responseBodyPhaseInputPlaceholder = `${prefix}.responseBodyPhaseInputPlaceholder`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit WAF Profile: {0}',
    [modalHeaderNew]: 'Create WAF Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [sectionTitleDefaultActions]: 'Default Actions',
    [sectionTitleFiles]: 'Files',
    [sectionTitleContentTypeMapping]: 'Content Type Mapping',
    [descriptionInputLabel]: 'Description',
    [descriptionPlaceholder]: 'Enter Description',
    [allowTitleLabel]: 'Allow',
    [restrictedTitleLabel]: 'Restricted',
    [staticTitleLabel]: 'Static',
    [staticExtensionsInputLabel]: 'Static Extensions',
    [staticExtensionsInputPlaceholder]: 'Enter Static Extensions',
    [maxClientRequestSizeInputLabel]: 'Maximum Client Request Size',
    [maxClientRequestSizeInputPlaceholder]: 'Enter Maximum Client Request Size',
    [maxBackendResponseInputLabel]: 'Maximum Backend Response',
    [maxBackendResponseInputPlaceholder]: 'Enter Maximum Backend Response',
    [regexMatchLimitInputLabel]: 'Regex Match Limit',
    [regexMatchLimitInputPlaceholder]: 'Enter Regex Match Limit',
    [regexRecursionLimitInputLabel]: 'Regex Recursion Limit',
    [regexRecursionLimitInputPlaceholder]: 'Enter Regex Recursion Limit',
    [maxExecutionTimeInputLabel]: 'Maximum Execution Time',
    [maxExecutionTimeInputPlaceholder]: 'Enter Maximum Execution Time',
    [maxExecutionTimeInputInnerText]: 'Milliseconds',
    [maxClientRequestSizeInputInnerText]: 'KB',
    [maxBackendResponseInputInnerText]: 'KB',
    [argumentSeparatorInputLabel]: 'Argument Separator',
    [argumentSeparatorInputPlaceholder]: 'Enter Argument Separator',
    [cookieFormatVersionRadioInputGroupLabel]: 'Cookie Format Version',
    [netscapeCookiesRadioInputLabel]: 'Netscape Cookies',
    [versionOneCookiesRadioInputLabel]: 'Version 1 Cookies',
    [ignoreIncompleteRequestBodyErrorMessageCheckboxLabel]: 'Ignore Request Body Parsing Errors due to partial Scanning',
    [enableXXEProtectionCheckboxLabel]: 'Enable XXE Protection',
    [allowedVersionsDropdownLabel]: 'Allowed Versions',
    [allowedVersionsDropdownPlaceholder]: 'Select Allowed Versions',
    [allowedMethodsDropdownLabel]: 'Allowed Methods',
    [allowedMethodsDropdownPlaceholder]: 'Select Allowed Methods',
    [contentTypeMappingGridTitle]: 'Content Type Mapping ({0})',
    [restrictedExtensionsInputLabel]: 'Restricted Extensions',
    [restrictedExtensionsInputPlaceholder]: 'Enter Restricted Extensions',
    [restrictedHeadersInputLabel]: 'Restricted Headers',
    [restrictedHeadersInputPlaceholder]: 'Enter Restricted Headers',
    [requestHeaderPhaseInputLabel]: 'Request Header Phase',
    [requestHeaderPhaseInputPlaceholder]: 'Enter Request Header Phase',
    [requestBodyPhaseInputLabel]: 'Request Body Phase',
    [requestBodyPhaseInputPlaceholder]: 'Enter Request Body Phase',
    [responseHeaderPhaseInputLabel]: 'Respose Header Phase',
    [responseHeaderPhaseInputPlaceholder]: 'Enter Response Header Phase',
    [responseBodyPhaseInputLabel]: 'Response Body Phase',
    [responseBodyPhaseInputPlaceholder]: 'Enter Response Body Phase',
};const moduleName = 'accounts';
const componentName = 'myaccountmodalservice';
const prefix = `${moduleName}.${componentName}`;

export const myAccountLabel = `${prefix}.myAccountLabel`;

export const ENGLISH = {
    [myAccountLabel]: 'My Account',
};undefined WafModule
 


  
  
  
 

const moduleName = 'wafprofile';
const componentName = 'wafprofilecontenttypemappinggrid';
const prefix = `${moduleName}.${componentName}`;

export const contentTypeMappingGridTitle = `${prefix}.contentTypeMappingGridTitle`;
export const contentTypeInputLabel = `${prefix}.contentTypeInputLabel`;
export const contentTypeInputPlaceholder = `${prefix}.contentTypeInputPlaceholder`;
export const requestParserDropdownLabel = `${prefix}.requestParserDropdownLabel`;
export const requestParserDropdownPlaceholder = `${prefix}.requestParserDropdownPlaceholder`;
export const addContentTypeMappingButtonLabel = `${prefix}.addContentTypeMappingButtonLabel`;
export const removeContentTypeMappingButtonLabel = `${prefix}.removeContentTypeMappingButtonLabel`;

export const ENGLISH = {
    [contentTypeMappingGridTitle]: 'Content Type Mapping: ({0})',
    [contentTypeInputLabel]: 'Content Type',
    [contentTypeInputPlaceholder]: 'Enter Content String',
    [requestParserDropdownLabel]: 'Request Parser',
    [requestParserDropdownPlaceholder]: 'Select Request Parser',
    [addContentTypeMappingButtonLabel]: 'Add',
    [removeContentTypeMappingButtonLabel]: 'Remove',
};undefined UserProfileModule
 


  
  
  
 

const moduleName = 'userprofile';
const componentName = 'userprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const maxPasswordHistoryCountInputLabel = `${prefix}.maxPasswordHistoryCountInputLabel`;
export const maxLoginFailureCountInputLabel = `${prefix}.maxLoginFailureCountInputLabel`;
export const accountLockTimeoutInputLabel = `${prefix}.accountLockTimeoutInputLabel`;
export const maxConcurrentSessionsInputLabel = `${prefix}.maxConcurrentSessionsInputLabel`;
export const credentialsTimeoutThresholdInputLabel = `${prefix}.credentialsTimeoutThresholdInputLabel`;
export const accountLockTimeoutInnerText = `${prefix}.accountLockTimeoutInnerText`;
export const credentialsTimeoutThresholdInnerText = `${prefix}.credentialsTimeoutThresholdInnerText`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const maxPasswordHistoryCountInputPlaceholder = `${prefix}.maxPasswordHistoryCountPlaceholder`;
export const maxLoginFailureCountInputPlaceholder = `${prefix}.maxLoginFailureCountPlaceholder`;
export const accountLockTimeoutInputPlaceholder = `${prefix}.accountLockTimeoutPlaceholder`;
export const maxConcurrentSessionsInputPlaceholder = `${prefix}.maxConcurrentSessionsPlaceholder`;
export const credentialsTimeoutThresholdInputPlaceholder = `${prefix}.credentialsTimeoutThresholdPlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit User Profile: {0}',
    [modalHeaderNew]: 'New User Profile: {0}',
    [maxPasswordHistoryCountInputLabel]: 'Max Password History Count',
    [maxLoginFailureCountInputLabel]: 'Max Login Failure Count',
    [accountLockTimeoutInputLabel]: 'Account Lock Timeout',
    [maxConcurrentSessionsInputLabel]: 'Max Concurrent Sessions',
    [credentialsTimeoutThresholdInputLabel]: 'Credentials Timeout Threshold',
    [accountLockTimeoutInnerText]: 'minutes',
    [credentialsTimeoutThresholdInnerText]: 'days',
    [maxPasswordHistoryCountInputPlaceholder]: 'Enter Max Password History Count',
    [maxLoginFailureCountInputPlaceholder]: 'Enter Max Login Failure Count',
    [accountLockTimeoutInputPlaceholder]: 'Enter Account Lock Timeout',
    [maxConcurrentSessionsInputPlaceholder]: 'Enter Max Concurrent Sessions',
    [credentialsTimeoutThresholdInputPlaceholder]: 'Enter Credentials Timeout Threshold',
    [sectionTitleGeneral]: 'General',
};const moduleName = 'accounts';
const componentName = 'tenantmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionInputPlaceholder = `${prefix}.descriptionInputPlaceholder`;
export const tenantAccessLabel = `${prefix}.tenantAccessLabel`;
export const tenantVrfLabel = `${prefix}.tenantVrfLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Tenant: {0}',
    [modalHeaderNew]: 'New Tenant: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [descriptionInputPlaceholder]: 'Enter a description',
    [tenantAccessLabel]: 'Tenant Access to Provider Service Engine',
    [tenantVrfLabel]: 'Tenant VRF',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
};const moduleName = 'accounts';
const componentName = 'myacountmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const sectionTitleDisplay = `${prefix}.sectionTitleDisplay`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const userNameInputLabel = `${prefix}.userNameInputLabel`;
export const oldPasswordInputLabel = `${prefix}.oldPasswordInputLabel`;
export const oldPasswordInputPlaceholder = `${prefix}.oldPasswordInputPlaceholder`;
export const newPasswordInputLabel = `${prefix}.newPasswordInputLabel`;
export const newPasswordInputPlaceholder = `${prefix}.newPasswordInputPlaceholder`;
export const confirmNewPasswordInputLabel = `${prefix}.confirmNewPasswordInputLabel`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const emailInputPlaceholder = `${prefix}.emailInputPlaceholder`;
export const timeZoneLabel = `${prefix}.timeZoneLabel`;
export const utcTimeLabel = `${prefix}.utcTimeLabel`;
export const localTimeLabel = `${prefix}.localTimeLabel`;
export const languageLabel = `${prefix}.languageLabel`;
export const changePasswordHeader = `${prefix}.changePasswordHeader`;
export const passwordMismatchError = `${prefix}.passwordMismatchError`;
export const sectionTitleControllerSettings = `${prefix}.sectionTitleControllerSettings`;
export const sessionTimeoutLabel = `${prefix}.sessionTimeoutLabel`;
export const minutesHelperText = `${prefix}.minutesInnerText`;
export const dnsRefreshPeriodInputLabel = `${prefix}.dnsRefreshPeriodInputLabel`;
export const sessionTimeoutInputPlaceholder = `${prefix}.sessionTimeoutInputPlaceholder`;
export const dnsRefreshPeriodInputPlaceholder = `${prefix}.dnsRefreshPeriodInputPlaceholder`;
export const newPasswordErrorText = `${prefix}.newPasswordErrorText`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit My Account: {0}',
    [sectionTitleGeneral]: 'General',
    [sectionTitleDisplay]: 'Display',
    [userNameInputLabel]: 'Username',
    [oldPasswordInputLabel]: 'Old Password',
    [oldPasswordInputPlaceholder]: 'Enter Old Password',
    [newPasswordInputLabel]: 'New Password',
    [newPasswordInputPlaceholder]: 'Enter New Password',
    [confirmNewPasswordInputLabel]: 'Confirm New Password',
    [emailInputLabel]: 'Email',
    [emailInputPlaceholder]: 'Enter Email',
    [timeZoneLabel]: 'Time Zone',
    [utcTimeLabel]: 'UTC Time',
    [localTimeLabel]: 'Local Time',
    [dnsRefreshPeriodInputLabel]: 'DNS Refresh Period',
    [languageLabel]: 'Language',
    [changePasswordHeader]: 'Change Password',
    [passwordMismatchError]: 'Password does not match',
    [sectionTitleControllerSettings]: 'Controller',
    [sessionTimeoutLabel]: 'Session Timeout',
    [minutesHelperText]: 'Minutes',
    [sessionTimeoutInputPlaceholder]: 'Enter Session Timeout',
    [dnsRefreshPeriodInputPlaceholder]: 'Enter DNS Refresh Period',
    [newPasswordErrorText]: `Password must be {0} characters minimum, nonsequential and contains at least
        three of the following criteria (uppercase, lowercase, numeric or special characters)`,
};undefined AlertModule
 


  
  
  
 
const moduleName = 'alert';
const componentName = 'actiongroupconfigmodal';
const prefix = `${moduleName}.${componentName}`;

export const nameLabel = `${prefix}.nameLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const emailInputPlaceholder = `${prefix}.emailInputPlaceholder`;
export const levelInputLabel = `${prefix}.levelInputLabel`;
export const levelInputPlaceholder = `${prefix}.levelInputPlaceholder`;
export const controlScriptInputLabel = `${prefix}.controlScriptInputLabel`;
export const controlScriptInputPlaceholder = `${prefix}.controlScriptInputPlaceholder`;
export const snmpTrapInputLabel = `${prefix}.snmpTrapInputLabel`;
export const snmpTrapInputPlaceholder = `${prefix}.snmpTrapInputPlaceholder`;
export const syslogLabel = `${prefix}.syslogLabel`;
export const syslogPlaceholder = `${prefix}.syslogPlaceholder`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionInputPlaceholder = `${prefix}.descriptionInputPlaceholder`;

export const ENGLISH = {
    [nameInputPlaceholder]: 'Enter Name',
    [modalHeaderEdit]: 'Edit Alert Action: {0}',
    [modalHeaderNew]: 'New Alert Action: {0}',
    [sectionTitleGeneral]: 'General',
    [emailInputLabel]: 'Email Notification',
    [emailInputPlaceholder]: 'Select Email Notification',
    [levelInputLabel]: 'Alert Level',
    [levelInputPlaceholder]: 'Select Alert Level',
    [controlScriptInputLabel]: 'Control Script',
    [controlScriptInputPlaceholder]: 'Select Control Script',
    [snmpTrapInputLabel]: 'SNMP Trap',
    [snmpTrapInputPlaceholder]: 'Select SNMP Trap',
    [syslogLabel]: 'Syslog',
    [syslogPlaceholder]: 'Select Syslog',
    [descriptionInputLabel]: 'Description',
    [descriptionInputPlaceholder]: 'Enter Description',
};undefined AlertModule
 


  
  
  
 
const moduleName = 'alert';
const componentName = 'alertsyslogmodal';
const prefix = `${moduleName}.${componentName}`;

export const nameLabel = `${prefix}.nameLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const removeLabel = `${prefix}.removeLabel`;
export const editLabel = `${prefix}.editLabel`;
export const addLabel = `${prefix}.addLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionInputPlaceholder = `${prefix}.descriptionInputPlaceholder`;
export const syslogServersLabel = `${prefix}.syslogServersLabel`;
export const addressLabel = `${prefix}.addressLabel`;
export const portLabel = `${prefix}.portLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [nameInputPlaceholder]: 'Enter Name',
    [modalHeaderEdit]: 'Edit Syslog: {0}',
    [modalHeaderNew]: 'New Syslog: {0}',
    [sectionTitleGeneral]: 'General',
    [removeLabel]: 'Remove',
    [editLabel]: 'Edit',
    [addLabel]: 'Add',
    [descriptionInputLabel]: 'Description',
    [descriptionInputPlaceholder]: 'Enter Description',
    [syslogServersLabel]: 'Syslog Servers ({0})',
    [addressLabel]: 'Address',
    [portLabel]: 'Port',
    [removeButtonLabel]: 'Remove',
};undefined AlertModule
 


  
  
  
 
const moduleName = 'alert';
const componentName = 'alertemailmodal';
const prefix = `${moduleName}.${componentName}`;

export const nameLabel = `${prefix}.nameLabel`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const toAddressLabel = `${prefix}.toAddressLabel`;
export const ccAddressLabel = `${prefix}.ccAddressLabel`;
export const toEmailPlaceholder = `${prefix}.toEmailPlaceholder`;
export const ccEmailPlaceholder = `${prefix}.ccEmailPlaceholder`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [descriptionLabel]: 'Description',
    [toAddressLabel]: 'To Address',
    [ccAddressLabel]: 'CC Address',
    [toEmailPlaceholder]: 'Enter To Address',
    [ccEmailPlaceholder]: 'Enter CC Address',
    [modalHeaderEdit]: 'Edit Email Notification: {0}',
    [modalHeaderNew]: 'New Email Notification: {0}',
    [sectionTitleGeneral]: 'General',
};const moduleName = 'webhook';
const componentName = 'webhookmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalHeader = `${prefix}.generalHeader`;
export const nameFieldLabel = `${prefix}.nameFieldLabel`;
export const nameFieldPlaceholder = `${prefix}.nameFieldPlaceholder`;
export const callbackUrlFieldLabel = `${prefix}.callbackUrlFieldLabel`;
export const callbackUrlFieldPlaceholder = `${prefix}.callbackUrlFieldPlaceholder`;
export const verificationTokenFieldLabel = `${prefix}.verificationTokenFieldLabel`;
export const verificationTokenFieldPlaceholder = `${prefix}.verificationTokenFieldPlaceholder`;
export const descriptionFieldLabel = `${prefix}.descriptionFieldLabel`;
export const descriptionFieldPlaceholder = `${prefix}.descriptionFieldPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Webhook: {0}',
    [modalTitleNew]: 'New Webhook: {0}',
    [generalHeader]: 'General',
    [callbackUrlFieldLabel]: 'Callback URL',
    [callbackUrlFieldPlaceholder]: 'Enter URL',
    [verificationTokenFieldLabel]: 'Verification Token',
    [verificationTokenFieldPlaceholder]: 'Enter Token',
    [descriptionFieldLabel]: 'Description',
    [descriptionFieldPlaceholder]: 'Enter Description',
};const moduleName = 'alert';
const componentName = 'alertsyslogservermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeader = `${prefix}.modalHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const generalLabel = `${prefix}.generalLabel`;
export const syslogServerLabel = `${prefix}.syslogServerLabel`;
export const portLabel = `${prefix}.portLabel`;
export const syslogServerPlaceholderLabel = `${prefix}.syslogServerPlaceholderLabel`;
export const portPlaceholderLabel = `${prefix}.portPlaceholderLabel`;

export const ENGLISH = {
    [modalHeader]: 'Syslog Server',
    [nameInputLabel]: 'Name',
    [ipAddressLabel]: 'IP Address',
    [saveButtonLabel]: 'Save',
    [generalLabel]: 'General',
    [syslogServerLabel]: 'Syslog Server',
    [portLabel]: 'Port',
    [syslogServerPlaceholderLabel]: 'Enter Hostname or IP Address',
    [portPlaceholderLabel]: 'Enter Port',
};const moduleName = 'aviforms';
const componentName = 'avienumdropdown';
const prefix = `${moduleName}.${componentName}`;

export const defaultPlaceholderText = `${prefix}.defaultPlaceholderText`;

export const ENGLISH = {
    [defaultPlaceholderText]: 'Select',
};const moduleName = 'shared';
const componentName = 'avirepeatednumbers';
const prefix = `${moduleName}.${componentName}`;

export const placeholderLabel = `${prefix}.placeholderLabel`;

export const ENGLISH = {
    [placeholderLabel]: 'Enter Value(s)',
};const moduleName = 'shared';
const componentName = 'avirepeatedkeyvaluesgrid';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const keyFieldPlaceholder = `${prefix}.keyFieldPlaceholder`;
export const valueFieldPlaceholder = `${prefix}.valueFieldPlaceholder`;
export const keyDuplicationErrorMsg = `${prefix}.keyDuplicationErrorMsg`;
export const duplicateValuesErrorMsg = `${prefix}.duplicateValuesErrorMsg`;
export const keyColumnLabel = `${prefix}.keyColumnLabel`;
export const valueColumnLabel = `${prefix}.valueColumnLabel`;
export const removeButtonLabel = `${prefix}.removeBtnLabel`;

export const ENGLISH = {
    [header]: 'Key & Value',
    [addButtonLabel]: 'Add',
    [keyFieldPlaceholder]: 'Enter Key',
    [valueFieldPlaceholder]: 'Enter Value',
    [keyDuplicationErrorMsg]: 'System does not support duplicate keys. Please update or delete.',
    [duplicateValuesErrorMsg]: 'Duplicate keys: {0}.',
    [keyColumnLabel]: 'Key',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'aviforms';
const componentName = 'avirepeatedstringsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const stringInputPlaceholder = `${prefix}.stringInputPlaceholder`;
export const keyDuplicationErrorMsg = `${prefix}.keyDuplicationErrorMsg`;
export const duplicatValuesErrorMsg = `${prefix}.duplicatValuesErrorMsg`;
export const columnTitleString = `${prefix}.columnTitleString`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [stringInputPlaceholder]: 'Enter Value',
    [keyDuplicationErrorMsg]: 'System does not support duplicate values. Please update or delete.',
    [duplicatValuesErrorMsg]: 'Duplicate values: {0}.',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'aviforms';
const componentName = 'cloudvrfcontext';
const prefix = `${moduleName}.${componentName}`;

export const setCloudVrfContextHeader = `${prefix}.setCloudVrfContextHeader`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const vrfContextLabel = `${prefix}.vrfContextLabel`;
export const notSetLabel = `${prefix}.notSetLabel`;
export const credentialsButtonLabel = `${prefix}.credentialsButtonLabel`;

export const ENGLISH = {
    [setCloudVrfContextHeader]: 'Set Cloud & VRF',
    [cloudLabel]: 'Cloud',
    [vrfContextLabel]: 'VRF Context',
    [notSetLabel]: 'Not Set',
    [credentialsButtonLabel]: 'Set Cloud & VRF',
};const moduleName = 'autoscale';
const componentName = 'autoscalepolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const instancesInputLabel = `${prefix}.instancesInputLabel`;
export const minimumInnerText = `${prefix}.minimumInnerText`;
export const maximumInnerText = `${prefix}.maximumInnerText`;
export const intelligentLabel = `${prefix}.intelligentLabel`;
export const predictedLoadLabel = `${prefix}.predictedLoadLabel`;
export const scaleOutHeader = `${prefix}.scaleOutHeader`;
export const alertsInputLabel = `${prefix}.alertsInputLabel`;
export const cooldownPeriodInputLabel = `${prefix}.cooldownPeriodInputLabel`;
export const adjustmentStepInputLabel = `${prefix}.adjustmentStepInputLabel`;
export const intelligentMarginInputLabel = `${prefix}.intelligentMarginInputLabel`;
export const scaleInHeader = `${prefix}.scaleInHeader`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const alertDropdownPlaceholder = `${prefix}.inputPlaceHolderLabel`;
export const cooldownInputPlaceholder = `${prefix}.cooldownInputPlaceholder`;
export const adjustmentStepInputPlaceholder = `${prefix}.adjustmentStepInputPlaceholder`;
export const intelligentMarginInputPlaceholder = `${prefix}.intelligentMarginInputPlaceholder`;
export const minSizeInputPlaceholder = `${prefix}.minSizeInputPlaceholder`;
export const maxSizeInputPlaceholder = `${prefix}.maxSizeInputPlaceholder`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const serverGarbageCollectionLabel = `${prefix}.serverGarbageCollectionLabel`;
export const serverGarbageCollectionPlaceholder = `${prefix}.serverGarbageCollectionPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Server AutoScale Policy: {0}',
    [modalTitleNew]: 'New Server AutoScale Policy: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [instancesInputLabel]: 'Instances',
    [minimumInnerText]: 'Minimum',
    [maximumInnerText]: 'Maximum',
    [intelligentLabel]: 'Intelligent (Machine Learning)',
    [predictedLoadLabel]: 'Use Predicted Load',
    [scaleOutHeader]: 'Scale Out',
    [alertsInputLabel]: 'Alerts',
    [cooldownPeriodInputLabel]: 'Cooldown Period',
    [adjustmentStepInputLabel]: 'Adjustment Step',
    [intelligentMarginInputLabel]: 'Intelligent Margin',
    [scaleInHeader]: 'Scale In',
    [secondsInnerText]: 'Seconds',
    [nameInputPlaceholder]: 'Enter Name',
    [alertDropdownPlaceholder]: 'Select Alerts',
    [cooldownInputPlaceholder]: 'Enter Cooldown Period',
    [adjustmentStepInputPlaceholder]: 'Enter Adjustment Step',
    [intelligentMarginInputPlaceholder]: 'Enter Intelligent Margin',
    [minSizeInputPlaceholder]: 'Enter Minimum Instances',
    [maxSizeInputPlaceholder]: 'Enter Maximum Instances',
    [minutesInnerText]: 'Minutes',
    [serverGarbageCollectionLabel]: 'Server Garbage Collection Delay',
    [serverGarbageCollectionPlaceholder]: 'Enter Server Garbage Collection Delay',
};const moduleName = 'shared';
const componentName = 'backuppassphrase';
const prefix = `${moduleName}.${componentName}`;

export const passphraseLabel = `${prefix}.passphraseLabel`;
export const passphrasePlaceholder = `${prefix}.passphrasePlaceholder`;
export const confirmPassphraseLabel = `${prefix}.confirmPassphraseLabel`;
export const confirmPassphrasePlaceholder = `${prefix}.confirmPassphrasePlaceholder`;

export const ENGLISH = {
    [passphraseLabel]: 'Passphrase',
    [passphrasePlaceholder]: 'Enter Passphrase',
    [confirmPassphraseLabel]: 'Confirm Passphrase',
    [confirmPassphrasePlaceholder]: 'Enter Confirm Passphrase',
};const moduleName = 'aviforms';
const componentName = 'cloudvrfcontextdialog';
const prefix = `${moduleName}.${componentName}`;

export const setCloudVrfContextHeader = `${prefix}.setCloudVrfContextHeader`;
export const cloudSelectLabel = `${prefix}.cloudSelectLabel`;
export const cloudSelectPlaceholder = `${prefix}.cloudSelectPlaceholder`;
export const vrfContextSelectLabel = `${prefix}.vrfContextSelectLabel`;
export const vrfContextSelectPlaceholder = `${prefix}.vrfContextSelectPlaceholder`;
export const alertModalMessage = `${prefix}.alertModalMessage`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;

export const ENGLISH = {
    [setCloudVrfContextHeader]: 'Set Cloud & VRF',
    [cloudSelectLabel]: 'Cloud',
    [cloudSelectPlaceholder]: 'Select Cloud',
    [vrfContextSelectLabel]: 'VRF Context',
    [vrfContextSelectPlaceholder]: 'Select VRF Context',
    [alertModalMessage]: 'Once set Cloud and VRF Context cannot be changed',
    [submitButtonLabel]: 'Set',
};const moduleName = 'aviforms';
const componentName = 'credentialsverification';
const prefix = `${moduleName}.${componentName}`;

export const changeCredentialsButtonLabel = `${prefix}.changeCredentialsButtonLabel`;

export const ENGLISH = {
    [changeCredentialsButtonLabel]: 'Change Credentials',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botdetectionresultmatchgrid';
const prefix = `${moduleName}.${componentName}`;

export const classificationsLabelWithCount = `${prefix}.classificationLabelWithCount`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const classificationLabel = `${prefix}.classificationLabel`;
export const valueLabel = `${prefix}.valueLabel`;
export const classificationPlaceHolder = `${prefix}.classificationPlaceHolder`;
export const valuePlaceHolder = `${prefix}.valuePlaceHolder`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [classificationsLabelWithCount]: 'Classifications ({0})',
    [removeActionLabel]: 'Remove',
    [classificationLabel]: 'Classification',
    [classificationPlaceHolder]: 'Select Classification',
    [valuePlaceHolder]: 'Enter Value',
};const moduleName = 'aviforms';
const componentName = 'stringgrouporcustomvalue';
const prefix = `${moduleName}.${componentName}`;

export const selectFromAvailableLabel = `${prefix}.selectFromAvailableLabel`;
export const enterCustomValueLabel = `${prefix}.enterCustomValueLabel`;
export const selectStringGroupPlaceholder = `${prefix}.selectStringGroupPlaceholder`;

export const ENGLISH = {
    [selectFromAvailableLabel]: 'Select From Available',
    [enterCustomValueLabel]: 'Enter Custom Value',
    [selectStringGroupPlaceholder]: 'Select String Group',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botallowrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const noNameLabel = `${prefix}.noNameLabel`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const matchSectionTitle = `${prefix}.matchSectionTitle`;
export const actionSectionTitle = `${prefix}.actionSectionTitle`;

export const nameLabel = `${prefix}.nameLabel`;
export const enterNamePlaceholder = `${prefix}.enterNamePlaceholder`;
export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;
export const httpMethodLabel = `${prefix}.httpMethodLabel`;
export const pathLabel = `${prefix}.pathLabel`;
export const hostHeaderLabel = `${prefix}.hostHeaderLabel`;
export const botActionLabel = `${prefix}.botActionLabel`;
export const selectBotActionLabel = `${prefix}.selectBotActionLabel`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create Allow Rule: {0}',
    [modalTitleEdit]: 'Edit Allow Rule: {0}',
    [noNameLabel]: 'No Name',
    [generalSectionTitle]: 'General',
    [matchSectionTitle]: 'Match',
    [actionSectionTitle]: 'Action',
    [enterNamePlaceholder]: 'Enter Name',
    [clientIpAddressLabel]: 'Client IP Address',
    [httpMethodLabel]: 'HTTP Method',
    [pathLabel]: 'Path',
    [hostHeaderLabel]: 'Host Header',
    [botActionLabel]: 'Bot Action',
    [selectBotActionLabel]: 'Select Bot Action',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botmappingrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const matchSectionTitle = `${prefix}.matchSectionTitle`;
export const actionSectionTitle = `${prefix}.actionSectionTitle`;

export const nameLabel = `${prefix}.nameLabel`;
export const enterNamePlaceholder = `${prefix}.enterNamePlaceholder`;
export const componentMatcherLabel = `${prefix}.componentMatcherLabel`;
export const selectComponentMatcherPlaceholder = `${prefix}.selectComponentMatcherLabel`;
export const clientClassLabel = `${prefix}.clientClassLabel`;
export const botTypeMatcherLabel = `${prefix}.botTypeMatcherLabel`;
export const stringMatcherLabel = `${prefix}.stringMatcherLabel`;
export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;
export const httpMethodLabel = `${prefix}.httpMethodLabel`;
export const pathMatcherLabel = `${prefix}.pathMatcherLabel`;
export const hdrMatcherLabel = `${prefix}.hdrMatcherLabel`;
export const hostHeaderMatcherLabel = `${prefix}.hostHeaderMatcherLabel`;
export const botClassificationLabel = `${prefix}.botClassificationLabel`;
export const selectBotClassificationPlaceholder = `${prefix}.selectBotClassificationLabel`;
export const clientTypeLabel = `${prefix}.clientTypeLabel`;
export const selectClientTypePlaceholder = `${prefix}.selectClientTypeLabel`;
export const stringLabel = `${prefix}.stringLabel`;
export const enterStringPlaceholder = `${prefix}.enterStringLabel`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create Mapping Rule: {0}',
    [modalTitleEdit]: 'Edit Mapping Rule: {0}',
    [generalSectionTitle]: 'General',
    [matchSectionTitle]: 'Match',
    [actionSectionTitle]: 'Action',
    [enterNamePlaceholder]: 'Enter Name',
    [componentMatcherLabel]: 'Component Matcher',
    [selectComponentMatcherPlaceholder]: 'Select Component Matcher',
    [clientClassLabel]: 'Client Class',
    [botTypeMatcherLabel]: 'Bot Type Matcher',
    [stringMatcherLabel]: 'String Matcher',
    [clientIpAddressLabel]: 'Client IP Address',
    [httpMethodLabel]: 'HTTP Method',
    [pathMatcherLabel]: 'Path Matcher',
    [hdrMatcherLabel]: 'Header Matcher',
    [hostHeaderMatcherLabel]: 'Host Header',
    [botClassificationLabel]: 'Bot Classification',
    [clientTypeLabel]: 'Client Type',
    [selectBotClassificationPlaceholder]: 'Select Bot Classification',
    [selectClientTypePlaceholder]: 'Select Client Type',
    [stringLabel]: 'String',
    [enterStringPlaceholder]: 'Enter String',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botmanagementpolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const allowListSectionTitle = `${prefix}.allowListSectionTitle`;
export const userAgentSectionTitle = `${prefix}.userAgentSectionTitle`;
export const ipReputationSectionTitle = `${prefix}.ipReputationSectionTitle`;
export const ipLocationSectionTitle = `${prefix}.ipLocationSectionTitle`;
export const botMappingSectionTitle = `${prefix}.botMappingSectionTitle`;

export const editLabel = `${prefix}.editLabel`;
export const deleteLabel = `${prefix}.deleteLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const numberOfMatchesLabel = `${prefix}.numberOfMatchesLabel`;
export const actionLabel = `${prefix}.actionLabel`;
export const enterNamePlaceholder = `${prefix}.enterNamePlaceholder`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const enterDescriptionLabel = `${prefix}.enterDescriptionLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const allowRulesLabel = `${prefix}.allowRulesLabel`;
export const useUserAgentLabel = `${prefix}.useUserAgentLabel`;
export const useIpReputationLabel = `${prefix}.useIpReputationLabel`;
export const ipReputationDbLabel = `${prefix}.ipReputationDbLabel`;
export const selectIpReputationDbLabel = `${prefix}.selectIpReputationDbLabel`;
export const ipReputationMappingLabel = `${prefix}.ipReputationMappingLabel`;
export const selectIpReputationMappingLabel = `${prefix}.selectIpReputationMappingLabel`;
export const useIpLocationDbLabel = `${prefix}.useIpLocationDbLabel`;
export const geoIpDbLabel = `${prefix}.geoIpDbLabel`;
export const selectGeoIpDbLabel = `${prefix}.selectGeoIpDbLabel`;
export const cloudProviderLabel = `${prefix}.cloudProviderLabel`;
export const selectCloudProviderLabel = `${prefix}.selectCloudProviderLabel`;
export const searchEnginesLabel = `${prefix}.searchEnginesLabel`;
export const selectSearchEnginesLabel = `${prefix}.selectSearchEnginesLabel`;
export const userBotMappingLabel = `${prefix}.userBotMappingLabel`;
export const selectUserBotMappingLabel = `${prefix}.selectUserBotMappingLabel`;
export const systemBotMappingLabel = `${prefix}.systemBotMappingLabel`;
export const selectSystemBotMappingLabel = `${prefix}.selectSystemBotMappingLabel`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create Bot Management Policy: {0}',
    [modalTitleEdit]: 'Edit Bot Management Policy: {0}',
    [generalSectionTitle]: 'General',
    [allowListSectionTitle]: 'Allow List',
    [userAgentSectionTitle]: 'UserAgent',
    [ipReputationSectionTitle]: 'IP Reputation',
    [ipLocationSectionTitle]: 'IP Location',
    [botMappingSectionTitle]: 'Bot Mapping',

    [editLabel]: 'Edit',
    [deleteLabel]: 'Delete',
    [numberOfMatchesLabel]: 'Number of Matches',
    [actionLabel]: 'Action',
    [enterNamePlaceholder]: 'Enter Name',
    [descriptionLabel]: 'Description',
    [enterDescriptionLabel]: 'Enter Description',
    [addButtonLabel]: 'Add',
    [allowRulesLabel]: 'Allow Rules ({0})',
    [useUserAgentLabel]: 'Use User Agent based Bot detection',
    [useIpReputationLabel]: 'Use IP Reputation based Bot detection',
    [ipReputationDbLabel]: 'IP Reputation DB',
    [selectIpReputationDbLabel]: 'Select IP Reputation DB',
    [ipReputationMappingLabel]: 'IP Reputation Mapping',
    [selectIpReputationMappingLabel]: 'Select IP Reputation Mapping',
    [useIpLocationDbLabel]: 'Use IP Location DB',
    [geoIpDbLabel]: 'GeoIP DB',
    [selectGeoIpDbLabel]: 'Select GeoIP DB',
    [cloudProviderLabel]: 'Cloud Provider',
    [selectCloudProviderLabel]: 'Select Cloud Provider',
    [searchEnginesLabel]: 'Search Engine',
    [selectSearchEnginesLabel]: 'Select Search Engine',
    [userBotMappingLabel]: 'User Bot Mapping',
    [selectUserBotMappingLabel]: 'Select User Bot Mapping',
    [systemBotMappingLabel]: 'System Bot Mapping',
    [selectSystemBotMappingLabel]: 'Select System Bot Mapping',
};const moduleName = 'aviforms';
const componentName = 'credentialsverificationdialog';
const prefix = `${moduleName}.${componentName}`;

export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const connectButtonLabel = `${prefix}.connectButtonLabel`;

export const ENGLISH = {
    [cancelButtonLabel]: 'Cancel',
    [connectButtonLabel]: 'Connect',
};const moduleName = 'botdetectionpolicy';
const componentName = 'ipreputationtypemappingmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const identificationSectionTitle = `${prefix}.identificationSectionTitle`;

export const typeLabel = `${prefix}.typeLabel`;
export const selectTypeLabel = `${prefix}.selectTypeLabel`;
export const clientClassLabel = `${prefix}.clientClassLabel`;
export const clientTypeLabel = `${prefix}.clientTypeLabel`;
export const selectClientClassLabel = `${prefix}.selectClientClassLabel`;
export const selectClientTypePlaceholder = `${prefix}.selectClientTypeLabel`;
export const identifierLabel = `${prefix}.identifierLabel`;
export const enterStringPlaceholder = `${prefix}.enterStringPlaceholder`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create Type Mapping',
    [modalTitleEdit]: 'Edit Type Mapping',
    [generalSectionTitle]: 'General',
    [identificationSectionTitle]: 'Identification',

    [typeLabel]: 'Type',
    [selectTypeLabel]: 'Select Type',
    [clientClassLabel]: 'Client Class',
    [clientTypeLabel]: 'Client Type',
    [selectClientClassLabel]: 'Select Class Type',
    [selectClientTypePlaceholder]: 'Select Client Type',
    [identifierLabel]: 'Identifier',
    [enterStringPlaceholder]: 'Enter String',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botmappingmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const nameLabel = `${prefix}.nameLabel`;
export const numberOfMatchesLabel = `${prefix}.numberOfMatchesLabel`;
export const actionLabel = `${prefix}.actionLabel`;
export const classifyAsLabel = `${prefix}.classifyAsLabel`;
export const enterNamePlaceholder = `${prefix}.enterNamePlaceholder`;
export const editLabel = `${prefix}.editLabel`;
export const deleteLabel = `${prefix}.deleteLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const botMappingRulesLabel = `${prefix}.botMappingRulesLabel`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create Bot Mapping: {0}',
    [modalTitleEdit]: 'Edit Bot Mapping: {0}',
    [generalSectionTitle]: 'General',
    [numberOfMatchesLabel]: 'Number of Matches',
    [actionLabel]: 'Action',
    [classifyAsLabel]: 'Classify as: ',
    [enterNamePlaceholder]: 'Enter Name',
    [editLabel]: 'Edit',
    [deleteLabel]: 'Delete',
    [addButtonLabel]: 'Add',
    [botMappingRulesLabel]: 'Bot Mapping Rules ({0})',
};const moduleName = 'cloud';
const componentName = 'azureconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const credentialsSectionHeader = `${prefix}.credentialsSectionHeader`;
export const subscriptionIdLabel = `${prefix}.subscriptionIdLabel`;
export const credentialsNotSetPlaceholder = `${prefix}.credentialsNotSetPlaceholder`;
export const azureCredentialsLabel = `${prefix}.azureCredentialsLabel`;
export const useAzureMsiAuthenticationLabel = `${prefix}.useAzureMsiAuthenticationLabel`;
export const useAzureMsiAuthenticationEnabledValue = `${prefix}.useAzureMsiAuthenticationEnabledValue`;
export const useAzureMsiAuthenticationNotEnabledValue = `${prefix}.useAzureMsiAuthenticationNotEnabledValue`;
export const setCredentialsButtonLabel = `${prefix}.setCredentialsButtonLabel`;
export const changeCredentialsButtonLabel = `${prefix}.changeCredentialsButtonLabel`;

export const ENGLISH = {
    [sectionTitle]: 'Azure',
    [credentialsSectionHeader]: 'Credentials',
    [subscriptionIdLabel]: 'Subscription ID',
    [credentialsNotSetPlaceholder]: 'Not Set',
    [azureCredentialsLabel]: 'Azure Credentials',
    [useAzureMsiAuthenticationLabel]: 'Use Azure Managed Service Identity (MSI) Authentication',
    [useAzureMsiAuthenticationEnabledValue]: 'Enabled',
    [useAzureMsiAuthenticationNotEnabledValue]: 'Not Enabled',
    [setCredentialsButtonLabel]: 'Set Credentials',
    [changeCredentialsButtonLabel]: 'Change Credentials',
};const moduleName = 'cloud';
const componentName = 'azuredns';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const noneLabel = `${prefix}.noneLabel`;
export const azureDnsLabel = `${prefix}.azureDnsLabel`;
export const otherDnsLabel = `${prefix}.otherDnsLabel`;
export const dnsProviderLabel = `${prefix}.dnsProviderLabel`;
export const dnsProviderPlaceholder = `${prefix}.dnsProviderPlaceholder`;
export const enableStateBasedDnsRegistrationLabel = `${prefix}.enableStateBasedDnsRegistrationLabel`;

export const ENGLISH = {
    [sectionTitle]: 'DNS',
    [noneLabel]: 'None',
    [azureDnsLabel]: 'Azure DNS',
    [otherDnsLabel]: 'Other DNS',
    [dnsProviderLabel]: 'DNS Provider',
    [dnsProviderPlaceholder]: 'Select Provider',
    [enableStateBasedDnsRegistrationLabel]: 'Enable State Based DNS Registration',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botipreputationtypemappingmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleCreate = `${prefix}.modalTitleCreate`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const nameLabel = `${prefix}.nameLabel`;
export const enterNamePlaceholder = `${prefix}.enterNamePlaceholder`;
export const typeMappingsLabel = `${prefix}.typeMappingsLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const typeLabel = `${prefix}.typeLabel`;
export const botClientClassLabel = `${prefix}.botClientClassLabel`;
export const botClientTypeLabel = `${prefix}.botClientTypeLabel`;
export const identifierLabel = `${prefix}.identifierLabel`;
export const editLabel = `${prefix}.editLabel`;
export const deleteLabel = `${prefix}.deleteLabel`;

export const ENGLISH = {
    [modalTitleCreate]: 'Create IP Reputation Mapping: {0}',
    [modalTitleEdit]: 'Edit IP Reputation Mapping: {0}',
    [generalSectionTitle]: 'General',
    [enterNamePlaceholder]: 'Enter Name',
    [typeMappingsLabel]: 'Type Mappings ({0})',
    [addButtonLabel]: 'Add',
    [typeLabel]: 'Type',
    [botClientClassLabel]: 'Bot Client Class',
    [botClientTypeLabel]: 'Bot Client Type',
    [identifierLabel]: 'Identifier',
    [editLabel]: 'Edit',
    [deleteLabel]: 'Delete',
};const moduleName = 'cloud';
const componentName = 'azureeditcredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const azureCredentialsHeader = `${prefix}.azureCredentialsHeader`;
export const subscriptionIdLabel = `${prefix}.subscriptionIdLabel`;
export const subscriptionIdPlaceholder = `${prefix}.subscriptionIdPlaceholder`;
export const useAzureMsiAuthenticationLabel = `${prefix}.useAzureMsiAuthenticationLabel`;
export const azureCredentialsPlaceholder = `${prefix}.azureCredentialsPlaceholder`;

export const ENGLISH = {
    [azureCredentialsHeader]: 'Azure Credentials',
    [subscriptionIdLabel]: 'Subscription ID',
    [subscriptionIdPlaceholder]: 'Enter ID',
    [useAzureMsiAuthenticationLabel]: 'Use Azure Managed Service Identity (MSI) Authentication',
    [azureCredentialsPlaceholder]: 'Select Credentials',
};const moduleName = 'cloud';
const componentName = 'azurelocationnetwork';
const prefix = `${moduleName}.${componentName}`;

export const locationAndNetworkSectionHeader = `${prefix}.locationAndNetworkSectionHeader`;
export const locationLabel = `${prefix}.locationLabel`;
export const locationPlaceholder = `${prefix}.locationPlaceholder`;
export const resourceGroupLabel = `${prefix}.resourceGroupLabel`;
export const resourceGroupPlaceholder = `${prefix}.resourceGroupPlaceholder`;
export const vNetLabel = `${prefix}.vNetLabel`;
export const vNetPlaceholder = `${prefix}.vNetPlaceholder`;
export const vNetHelperText = `${prefix}.vNetHelperText`;
export const serviceEngineNetworkLabel = `${prefix}.serviceEngineNetworkLabel`;
export const serviceEngineNetworkPlaceholder = `${prefix}.serviceEngineNetworkPlaceholder`;
export const serviceEngineHelperText = `${prefix}.serviceEngineHelperText`;
export const useAzureEnhancedHaFeaturesLabel = `${prefix}.useAzureEnhancedHaFeaturesLabel`;
export const availabilityZonesLabel = `${prefix}.availabilityZonesLabel`;
export const availabilityZonesPlaceholder = `${prefix}.availabilityZonesPlaceholder`;
export const availabilityZonesHelperText = `${prefix}.availabilityZonesHelperText`;
export const useDedicatedManagementInterfaceLabel = `${prefix}.useDedicatedManagementInterfaceLabel`;
export const subnetForManagementInterfaceLabel = `${prefix}.subnetForManagementInterfaceLabel`;
export const subnetForManagementInterfacePlaceholder = `${prefix}.subnetForManagementInterfacePlaceholder`;
export const subnetHelperText = `${prefix}.subnetHelperText`;
export const storageSectionHeader = `${prefix}.storageSectionHeader`;
export const serviceEngineDiskEncryptionLabel = `${prefix}.serviceEngineDiskEncryptionLabel`;
export const serviceEngineDiskEncryptionPlaceholder = `${prefix}.serviceEngineDiskEncryptionPlaceholder`;
export const seDiskEncryptionHelperText = `${prefix}.seDiskEncryptionHelperText`;

export const ENGLISH = {
    [locationAndNetworkSectionHeader]: 'Location & Network',
    [locationLabel]: 'Location',
    [locationPlaceholder]: 'Select Location',
    [resourceGroupLabel]: 'Resource Group',
    [resourceGroupPlaceholder]: 'Select Resource Group',
    [vNetLabel]: 'VNet',
    [vNetPlaceholder]: 'Select VNet',
    [vNetHelperText]: 'Select Location to populate Virtual Networks',
    [serviceEngineNetworkLabel]: 'Service Engine Network',
    [serviceEngineNetworkPlaceholder]: 'Select Service Engine Network',
    [serviceEngineHelperText]: 'Select VNet to populate Service Engines',
    [useAzureEnhancedHaFeaturesLabel]: "Use Azure's Enhanced HA Features",
    [availabilityZonesLabel]: 'Availability Zones',
    [availabilityZonesPlaceholder]: 'Enter Availability Zones',
    [availabilityZonesHelperText]: 'Valid values are 1, 2 and 3. Maximum 3 values are allowed.',
    [useDedicatedManagementInterfaceLabel]: 'Use Dedicated Management Interface',
    [subnetForManagementInterfaceLabel]: 'Subnet for Management Interface',
    [subnetForManagementInterfacePlaceholder]: 'Select Subnet for Management Interface',
    [subnetHelperText]: 'Select VNet to populate Subnets',
    [storageSectionHeader]: 'Storage',
    [serviceEngineDiskEncryptionLabel]: 'Service Engine Disk Encryption',
    [serviceEngineDiskEncryptionPlaceholder]: 'Select Service Engine Disk Encryption',
    [seDiskEncryptionHelperText]: 'Select Location to populate Disk Encryption Sets',
};const moduleName = 'cloud';
const componentName = 'cloudmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameLabel = `${prefix}.nameLabel`;
export const nameLabelPlaceholder = `${prefix}.nameLabelPlaceholder`;
export const typeLabel = `${prefix}.typeLabel`;
export const typeHelperText = `${prefix}.typeHelperText`;
export const dhcpCheckboxLabel = `${prefix}.dhcpCheckboxLabel`;
export const objNamePrefixLabel = `${prefix}.objNamePrefixLabel`;
export const nsxtTabTitle = `${prefix}.nsxtTabTitle`;
export const ipamDnsTabTitle = `${prefix}.ipamDnsTabTitle`;
export const serviceEngineTabTitle = `${prefix}.serviceEngineTabTitle`;
export const linuxTabTitle = `${prefix}.linuxTabTitle`;
export const autoScalePollingIntervalLabel = `${prefix}.autoScalePolingIntervalLabel`;
export const autoScalePollingIntervalPlaceholder = `${prefix}.autoScalePollingIntervalPlaceholder`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const staticRouteCheckboxLabel = `${prefix}.staticRouteLabel`;
export const azureTabTitle = `${prefix}.azureTabTitle`;
export const dnsTabTitle = `${prefix}.dnsTabTitle`;
export const tagsTabTitle = `${prefix}.tagsTabTitle`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Cloud: {0}',
    [modalTitleNew]: 'New Cloud: {0}',
    [sectionTitleGeneral]: 'General',
    [nameLabelPlaceholder]: 'Enter Name',
    [typeLabel]: 'Type',
    [typeHelperText]: "Changing the Cloud type is only supported from the Clouds page by clicking 'Convert Cloud Type'.",
    [dhcpCheckboxLabel]: 'DHCP',
    [objNamePrefixLabel]: 'Object Name Prefix',
    [nsxtTabTitle]: 'NSXT',
    [ipamDnsTabTitle]: 'IPAMDNS',
    [serviceEngineTabTitle]: 'Service Engine',
    [linuxTabTitle]: 'Linux',
    [autoScalePollingIntervalLabel]: 'Autoscale Polling Interval',
    [autoScalePollingIntervalPlaceholder]: 'Autoscale Polling Interval',
    [secondsHelperText]: 'Seconds',
    [staticRouteCheckboxLabel]: 'Use Static Routes for VIP Placement',
    [azureTabTitle]: 'Azure',
    [dnsTabTitle]: 'DNS',
    [tagsTabTitle]: 'Tags',
};const moduleName = 'cloud';
const componentName = 'dnsresolvermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalHeader = `${prefix}.generalHeader`;
export const resolverNameInputLabel = `${prefix}.resolverNameInputLabel`;
export const resolverNameInputPlaceholderText = `${prefix}.resolverNameInputPlaceholderText`;
export const useManagementCheckboxLabel = `${prefix}.useManagementCheckboxLabel`;
export const fixedTtlInputLabel = `${prefix}.fixedTtlInputLabel`;
export const fixedTtlInputPlaceholderText = `${prefix}.fixedTtlInputPlaceholderText`;
export const minimumTtlInputLabel = `${prefix}.minimumTtlInputLabel`;
export const minimumTtlInputPlaceholderText = `${prefix}.minimumTtlInputPlaceholderText`;
export const nameServerHeaderWithCount = `${prefix}.nameServerHeaderWithCount`;
export const ttlHelperText = `${prefix}.ttlHelperText`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit DNS Resolver: {0}',
    [modalTitleNew]: 'New DNS Resolver: {0}',
    [generalHeader]: 'General',
    [resolverNameInputLabel]: 'Name',
    [resolverNameInputPlaceholderText]: 'Enter Name',
    [useManagementCheckboxLabel]: 'Use Management',
    [fixedTtlInputLabel]: 'Fixed TTL',
    [fixedTtlInputPlaceholderText]: 'Enter Fixed TTL',
    [minimumTtlInputLabel]: 'Minimum TTL',
    [minimumTtlInputPlaceholderText]: 'Enter Minimum TTL',
    [nameServerHeaderWithCount]: 'Name Servers ({0})',
    [ttlHelperText]: 'Seconds',
};const moduleName = 'cloud';
const componentName = 'dnsresolvernameserversgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const addressInputPlaceholder = `${prefix}.addressInputPlaceholder`;
export const columnTitleAddress = `${prefix}.columnTitleAddress`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [addressInputPlaceholder]: 'Enter Name Server IP address',
    [columnTitleAddress]: 'Name Server IP',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'cloud';
const componentName = 'customtags';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const customTagsLabel = `${prefix}.customTagsLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleKey = `${prefix}.columnTitleKey`;
export const columnKeyPlaceholder = `${prefix}.columnKeyPlaceholder`;
export const columnTitleValue = `${prefix}.columnTitleValue`;
export const columnValuePlaceholder = `${prefix}.columnValuePlaceholder`;
export const removeActionLabel = `${prefix}.removeActionLabel`;

export const ENGLISH = {
    [sectionTitle]: 'Tags',
    [customTagsLabel]: 'Key & Value(s) ({0})',
    [addButtonLabel]: 'Add',
    [columnTitleKey]: 'Key',
    [columnKeyPlaceholder]: 'Enter Key',
    [columnValuePlaceholder]: 'Enter Value',
    [removeActionLabel]: 'Remove',
};const moduleName = 'cloud';
const componentName = 'seusagedirectorypath';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const autoSelectPathRadioLabel = `${prefix}.autoSelectPathRadioLabel`;
export const singlePathForAllLogsRadioLabel = `${prefix}.singlePathForAllLogsRadioLabel`;
export const separatePathRadioLabel = `${prefix}.separatePathRadioLabel`;
export const systemLogPathLabel = `${prefix}.systemLogPathLabel`;
export const pathPlaceholder = `${prefix}.pathPlaceholder`;
export const sizelabel = `${prefix}.sizeLabel`;
export const sizeHelperText = `${prefix}.sizeHelperText`;
export const sizePlaceholder = `${prefix}.sizePlaceholder`;
export const pathForClientLogsLabel = `${prefix}.pathForClientLogsLabel`;

export const ENGLISH = {
    [sectionTitle]: 'Directory Path for Service Engine Usage',
    [autoSelectPathRadioLabel]: 'Autoselect path',
    [singlePathForAllLogsRadioLabel]: 'Single path for all logs',
    [separatePathRadioLabel]: 'Separate paths for System & Client logs',
    [systemLogPathLabel]: 'Path for System Logs',
    [pathPlaceholder]: 'Enter Path',
    [sizelabel]: 'Size',
    [sizeHelperText]: 'Gigabytes',
    [sizePlaceholder]: 'Enter Size',
    [pathForClientLogsLabel]: 'Path for Client Logs',
};const moduleName = 'cloud';
const componentName = 'dnsresolvergrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleName]: 'Name',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};const moduleName = 'cloud';
const componentName = 'linuxserverconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const sshUserLabel = `${prefix}.sshUserLabel`;
export const sshUserPlaceholder = `${prefix}.sshUserPlaceholder`;
export const inbandManagementCheckboxLabel = `${prefix}.inbandManagementCheckboxLabel`;
export const serversLabel = `${prefix}.serversResolverLabel`;

export const ENGLISH = {
    [sectionTitle]: 'Linux',
    [sshUserLabel]: 'SSH User',
    [sshUserPlaceholder]: 'Select SSH User',
    [inbandManagementCheckboxLabel]: 'Use Inband Management',
    [serversLabel]: 'Servers ({0})',
};const moduleName = 'cloud';
const componentName = 'hostserversmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleNew = `${prefix}.modalTitleNew`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const hostIpAddressLabel = `${prefix}.hostIpAddressLabel`;
export const hostIpAddressPlaceholder = `${prefix}.hostIpAddressPlaceholder`;
export const serviceEngineGroupLabel = `${prefix}.serviceEngineGroupHeader`;
export const serviceEngineGroupPlaceholder = `${prefix}.serviceEngineGroupPlaceholder`;
export const serviceEngineGroupHelperText = `${prefix}.serviceEngineGroupHelperText`;
export const enableDpdkLabel = `${prefix}.enableDpdkLabel`;
export const enableInbandManagementLabel = `${prefix}.enableInbandManagementLabel`;
export const coreServiceEngineNumberLabel = `${prefix}.coreServiceEngineNumberLabel`;
export const allLabel = `${prefix}.allLabel`;
export const customLabel = `${prefix}.customLabel`;
export const coresLabel = `${prefix}.coresLabel`;
export const coreNumberPlaceholder = `${prefix}.coreNumberPlaceholder`;
export const serviceEngineMemoryAmountLabel = `${prefix}.serviceEngineMemoryAmountLabel`;
export const memoryLabel = `${prefix}.memoryLabel`;
export const serviceEngineMemoryAmountPlaceholder = `${prefix}.serviceEngineMemoryAmountPlaceholder`;
export const serviceEngineMemoryAmountHelperText = `${prefix}.serviceEngineMemoryAmountHelperText`;
export const verifyHostMenuLabel = `${prefix}.verifyHostMenuLabel`;
export const cleanUpMenuLabel = `${prefix}.cleanUpMenuLabel`;

export const ENGLISH = {
    [modalTitleNew]: 'Add Server',
    [modalTitleEdit]: 'Edit Server',
    [generalSectionTitle]: 'General',
    [hostIpAddressLabel]: 'Host IP Address',
    [hostIpAddressPlaceholder]: 'Enter IP Address',
    [serviceEngineGroupLabel]: 'Service Engine Group',
    [serviceEngineGroupPlaceholder]: 'Select Service Engine Group',
    [serviceEngineGroupHelperText]: 'The above service engine group can be set once the cloud is created.',
    [enableDpdkLabel]: 'Enable DPDK',
    [enableInbandManagementLabel]: 'Enable Inband Management',
    [coreServiceEngineNumberLabel]: 'Number of Cores for Service Engines',
    [allLabel]: 'All',
    [customLabel]: 'Custom',
    [coresLabel]: 'Cores',
    [coreNumberPlaceholder]: 'Enter Number Cores',
    [serviceEngineMemoryAmountLabel]: 'Amount of memory for Service Engines',
    [memoryLabel]: 'Memory',
    [serviceEngineMemoryAmountPlaceholder]: 'Enter Memory Amount',
    [serviceEngineMemoryAmountHelperText]: 'Gigabytes',
    [verifyHostMenuLabel]: 'Verify Host',
    [cleanUpMenuLabel]: 'Clean Up',
};undefined CloudModule
 


  
  
  
 

const moduleName = 'cloud';
const componentName = 'managementnetworkconfig';
const prefix = `${moduleName}.${componentName}`;

export const managementNetworkSectionTitle = `${prefix}.managementNetworkSectionTitle`;
export const transportZoneSelectLabel = `${prefix}.transportZoneSelectLabel`;
export const transportZoneSelectPlaceholder = `${prefix}.transportZoneSelectPlaceholder`;
export const transportZoneSelectHelperText = `${prefix}.transportZoneSelectHelperText`;
export const tier1LogicalRouterSelectLabel = `${prefix}.tier1LogicalRouterSelectLabel`;
export const tier1LogicalRouterSelectPlaceholder = `${prefix}.tier1LogicalRouterSelectPlaceholder`;
export const vlanSegmentSelectLabel = `${prefix}.vlanSegmentSelectLabel`;
export const overlaySegmentSelectLabel = `${prefix}.overlaySegmentSelectLabel`;
export const segmentSelectPlaceholder = `${prefix}.segmentSelectPlaceholder`;
export const segmentDropdownHelperText = `${prefix}.segmentDropdownHelperText`;

export const ENGLISH = {
    [managementNetworkSectionTitle]: 'Management Network',
    [transportZoneSelectLabel]: 'Transport Zone',
    [transportZoneSelectPlaceholder]: 'Select Transport Zone',
    [transportZoneSelectHelperText]: 'Connect credentials to populate Transport Zones',
    [vlanSegmentSelectLabel]: 'VLAN Segment',
    [tier1LogicalRouterSelectLabel]: 'Tier1 Logical Router',
    [tier1LogicalRouterSelectPlaceholder]: 'Select Tier1 Logical Router',
    [overlaySegmentSelectLabel]: 'Overlay Segment',
    [segmentSelectPlaceholder]: 'Select Segment',
    [segmentDropdownHelperText]: 'Configure Tier1 Logical Router ID to populate Segment IDs',
};const moduleName = 'cloud';
const componentName = 'hostserversgrid';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleHostIpAddress = `${prefix}.hostIpAddressHeader`;
export const columnTitleServiceEngineGroup = `${prefix}.serviceEngineGroupHeader`;
export const columnTitleCores = `${prefix}.coresHeader`;
export const columnTitleMemory = `${prefix}.memoryHeader`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;

export const ENGLISH = {
    [columnTitleHostIpAddress]: 'Host IP Address',
    [columnTitleServiceEngineGroup]: 'Service Engine Group',
    [columnTitleCores]: 'Cores',
    [columnTitleMemory]: 'Memory (GB)',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
    [addButtonLabel]: 'Add',
};const moduleName = 'cloud';
const componentName = 'ipamdnsconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const ipamProfileSelectLabel = `${prefix}.ipamProfileSelectLabel`;
export const ipamProfileSelectPlaceholder = `${prefix}.ipamProfileSelectPlaceholder`;
export const dnsProfileSelectLabel = `${prefix}.dnsProfileSelectLabel`;
export const dnsProfileSelectPlaceholder = `${prefix}.dnsProfileSelectPlaceholder`;
export const stateBasedDnsRegistrationCheckboxLabel = `${prefix}.stateBasedDnsRegistrationCheckboxLabel`;
export const dnsResolverLabel = `${prefix}.dnsResolverLabel`;

export const ENGLISH = {
    [sectionTitle]: 'IPAMDNS',
    [ipamProfileSelectLabel]: 'IPAM Profile',
    [ipamProfileSelectPlaceholder]: 'Select IPAM Profile',
    [dnsProfileSelectLabel]: 'DNS Profile',
    [dnsProfileSelectPlaceholder]: 'Select DNS Profile',
    [stateBasedDnsRegistrationCheckboxLabel]: 'Enable State Based DNS Registration',
    [dnsResolverLabel]: 'DNS Resolvers ({0})',
};const moduleName = 'cloud';
const componentName = 'noorchestratorconfiguration.component';
const prefix = `${moduleName}.${componentName}`;

export const noOrchestratorSectionTitle = `${prefix}.noOrchestratorSectionTitle`;
export const dhcpSectionHeader = `${prefix}.dhcpSettingSectionHeader`;
export const routesSectionHeader = `${prefix}.routesSectionHeader`;
export const useIp4DhcpCheckboxLabel = `${prefix}.useIp4DhcpCheckboxLabel`;
export const useIp6DhcpCheckboxLabel = `${prefix}.useIp6DhcpCheckboxLabel`;
export const enableVipStaticRoutesCheckboxLabel = `${prefix}.enableVipStaticRoutesCheckboxLabel`;
export const preferStaticRoutesCheckboxLabel = `${prefix}.preferStaticRoutesCheckboxLabel`;

export const ENGLISH = {
    [noOrchestratorSectionTitle]: 'No Orchestrator',
    [dhcpSectionHeader]: 'DHCP',
    [routesSectionHeader]: 'Routes',
    [useIp4DhcpCheckboxLabel]: 'Use IPv4 DHCP',
    [useIp6DhcpCheckboxLabel]: 'Use IPv6 DHCP',
    [enableVipStaticRoutesCheckboxLabel]: 'Enable VIP Static Routes',
    [preferStaticRoutesCheckboxLabel]: 'Prefer Static Routes',
};undefined CloudModule
 


  
  
  
 

const moduleName = 'cloud';
const componentName = 'managementnetworkconfig';
const prefix = `${moduleName}.${componentName}`;

export const dataNetworksSectionTitle = `${prefix}.dataNetworksSectionTitle`;
export const dataNetworkSegmentsHeader = `${prefix}.dataNetworkSegmentsHeader`;
export const transportZoneSelectLabel = `${prefix}.transportZoneSelectLabel`;
export const transportZoneSelectPlaceholder = `${prefix}.transportZoneSelectPlaceholder`;
export const transportZoneSelectHelperText = `${prefix}.transportZoneSelectHelperText`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const vlanSegmentSelectLabel = `${prefix}.vlanSegmentSelectLabel`;
export const tier1LogicalRouterFieldLabel = `${prefix}.tier1LogicalRouterFieldLabel`;
export const tier1LogicalRouterSelectPlaceholder = `${prefix}.tier1LogicalRouterSelectPlaceholder`;
export const segmentConfigModeInputLabel = `${prefix}.segmentConfigModeInputLabel`;
export const manualSegmentTooltipLabel = `${prefix}.manualSegmentTooltipLabel`;
export const autoSegmentTooltipLabel = `${prefix}.autoSegmentTooltipLabel`;
export const overlaySegmentFieldLabel = `${prefix}.overlaySegmentFieldLabel`;
export const segmentSelectPlaceholder = `${prefix}.segmentSelectPlaceholder`;
export const segmentDropdownHelperText = `${prefix}.segmentDropdownHelperText`;

export const ENGLISH = {
    [dataNetworksSectionTitle]: 'Data Networks',
    [dataNetworkSegmentsHeader]: 'Data Network Segment(s)',
    [transportZoneSelectLabel]: 'Transport Zone',
    [transportZoneSelectPlaceholder]: 'Select Transport Zone',
    [transportZoneSelectHelperText]: 'Connect credentials to populate Transport Zones',
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [vlanSegmentSelectLabel]: 'VLAN Segment',
    [tier1LogicalRouterFieldLabel]: 'Logical Router',
    [tier1LogicalRouterSelectPlaceholder]: 'Select Tier1 Logical Router',
    [segmentConfigModeInputLabel]: 'Logical Segments Config Mode',
    [manualSegmentTooltipLabel]: 'Manual',
    [autoSegmentTooltipLabel]: 'Automatic',
    [overlaySegmentFieldLabel]: 'Overlay Segment',
    [segmentSelectPlaceholder]: 'Select Segment',
    [segmentDropdownHelperText]: 'Configure Tier1 Logical Router ID to populate Segment IDs',
};const moduleName = 'cloud';
const componentName = 'verifycloudconnectoruserhostmodal';
const prefix = `${moduleName}.${componentName}`;

export const verifyHostModalTitle = `${prefix}.verifyHostModalTitle`;
export const cleanUpModalTitle = `${prefix}.cleanUpModalTitle`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const hostIpLabel = `${prefix}.hostIpLabel`;
export const hostIpPlaceholder = `${prefix}.hostIpPlaceholder`;
export const verifyButtonLabel = `${prefix}.verifyButtonLabel`;
export const submitBtnLabel = `${prefix}.submitBtnLabel`;

export const ENGLISH = {
    [verifyHostModalTitle]: 'Verify SSH Credentials with Host',
    [cleanUpModalTitle]: 'Clean up existing Service Engine configuration',
    [generalSectionTitle]: 'General',
    [hostIpLabel]: 'Host IP',
    [hostIpPlaceholder]: 'Enter Host IP',
    [verifyButtonLabel]: 'Verify',
    [submitBtnLabel]: 'Done',
};const moduleName = 'cloud';
const componentName = 'nsxtconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitle = `${prefix}.sectionTitle`;
export const credentialSectionHeader = `${prefix}.credentialSectionHeader`;
export const managerAddressInputLabel = `${prefix}.managerAddressInputLabel`;
export const managerCredentialSelectLabel = `${prefix}.managerCredentialSelectLabel`;
export const managerNotSetPlaceholder = `${prefix}.managerNotSetPlaceholder`;

export const ENGLISH = {
    [sectionTitle]: 'NSXT',
    [credentialSectionHeader]: 'Credentials',
    [managerAddressInputLabel]: 'NSXT Manager Address',
    [managerCredentialSelectLabel]: 'NSXT Manager Credentials',
    [managerNotSetPlaceholder]: 'Not Set',
};const moduleName = 'cloud';
const componentName = 'vcenterserverslist';
const prefix = `${moduleName}.${componentName}`;

export const vCenterServersHeader = `${prefix}.vCenterServersHeader`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const actionTitleRemove = `${prefix}.actionTitleRemove`;
export const actionTitleEdit = `${prefix}.actionTitleEdit`;
export const configureTransportZoneWarning = `${prefix}.configureTransportZoneWarning`;

export const ENGLISH = {
    [vCenterServersHeader]: 'vCenter Servers ({0})',
    [addButtonLabel]: 'Add',
    [columnTitleName]: 'Name',
    [actionTitleRemove]: 'Remove',
    [actionTitleEdit]: 'Edit',
    [configureTransportZoneWarning]: 'Configure Transport Zone to add vCenter Servers',
};const moduleName = 'cloud';
const componentName = 'convertcloudtypedialog';
const prefix = `${moduleName}.${componentName}`;

export const convertCloudTypeHeader = `${prefix}.convertCloudTypeHeader`;
export const convertCloudTypeMessage = `${prefix}.convertCloudTypeMessage`;
export const cloudTypeInputLabel = `${prefix}.cloudTypeInputLabel`;
export const cloudTypeInputPlaceholder = `${prefix}.cloudTypeInputPlaceholder`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const continueButtonLabel = `${prefix}.continueButtonLabel`;

export const ENGLISH = {
    [convertCloudTypeHeader]: 'Convert Cloud Type',
    [convertCloudTypeMessage]: 'Select the new cloud type for cloud: {0}',
    [cloudTypeInputLabel]: 'Cloud Type',
    [cloudTypeInputPlaceholder]: 'Select Cloud Type',
    [cancelButtonLabel]: 'Cancel',
    [continueButtonLabel]: 'Yes, continue',
};const moduleName = 'cloud';
const componentName = 'vcenterservermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameLabel = `${prefix}.nameLabel`;
export const cloudSelectLabel = `${prefix}.cloudSelectLabel`;
export const cloudSelectPlaceholder = `${prefix}.cloudSelectPlaceholder`;
export const credentialSectionHeader = `${prefix}.credentialSectionHeader`;
export const vCenterAddressLabel = `${prefix}.vCenterAddressLabel`;
export const vCenterNotSetPlaceholder = `${prefix}.vCenterNotSetPlaceholder`;
export const vCenterCredentialsSelectLabel = `${prefix}.vCenterCredentialsSelectLabel`;
export const contentLibrarySelectLabel = `${prefix}.contentLibrarySelectLabel`;
export const contentLibrarySelectPlaceholder = `${prefix}.contentLibrarySelectPlaceholder`;
export const contentLibrarySelectHelperText = `${prefix}.contentLibrarySelectHelperText`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit vCenter Server: {0}',
    [modalTitleNew]: 'New vCenter Server: {0}',
    [sectionTitleGeneral]: 'General',
    [cloudSelectLabel]: 'Cloud',
    [cloudSelectPlaceholder]: 'Select Cloud',
    [credentialSectionHeader]: 'Credentials',
    [vCenterNotSetPlaceholder]: 'Not Set',
    [vCenterAddressLabel]: 'vCenter Address',
    [vCenterCredentialsSelectLabel]: 'vCenter Credentials',
    [contentLibrarySelectLabel]: 'Content Library',
    [contentLibrarySelectPlaceholder]: 'Select Content Library',
    [contentLibrarySelectHelperText]: 'Connect credentials to populate Content Libraries',
};const moduleName = 'cloud';
const componentName = 'serviceengineconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const templateServiceEngineGroupInputLabel = `${prefix}.templateServiceEngineGroupInputLabel`;
export const templateSegGroupDropdownPlaceholder = `${prefix}.templateSegGroupDropdownPlaceholder`;
export const templateSegGroupHelperText = `${prefix}.templateSegGroupHelperText`;

export const ENGLISH = {
    [templateServiceEngineGroupInputLabel]: 'Template Service Engine Group',
    [templateSegGroupDropdownPlaceholder]: 'Select Template Service Engine Group',
    [templateSegGroupHelperText]: 'The above template can be set once the cloud is created.',
};const moduleName = 'cloud';
const componentName = 'nsxteditcredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const setNsxtCredentialsHeader = `${prefix}.setNsxtCredentialsHeader`;
export const managerAddressInputLabel = `${prefix}.managerAddressInputLabel`;
export const managerCredentialSelectLabel = `${prefix}.managerCredentialSelectLabel`;

export const ENGLISH = {
    [setNsxtCredentialsHeader]: 'Set NSXT Credentials',
    [managerAddressInputLabel]: 'NSXT Manager Address',
    [managerCredentialSelectLabel]: 'NSXT Manager Credentials',
};const moduleName = 'cloudconnectoruser';
const componentName = 'nsxtcredentials';
const prefix = `${moduleName}.${componentName}`;

export const usernameFieldLabel = `${prefix}.usernameFieldLabel`;
export const passwordFieldLabel = `${prefix}.passwordFieldLabel`;
export const usernameFieldPlaceholder = `${prefix}.usernameFieldPlaceholder`;
export const passwordFieldPlaceholder = `${prefix}.passwordFieldPlaceholder`;

export const ENGLISH = {
    [usernameFieldLabel]: 'Username',
    [passwordFieldLabel]: 'Password',
    [usernameFieldPlaceholder]: 'Enter Username',
    [passwordFieldPlaceholder]: 'Enter Password',
};const moduleName = 'cloud';
const componentName = 'vcenterservereditcredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const setVcenterServerCredentialsHeader = `${prefix}.setVcenterServerCredentialsHeader`;
export const vCenterAddressLabel = `${prefix}.vCenterAddressLabel`;
export const vCenterCredentialsSelectLabel = `${prefix}.vCenterCredentialsSelectLabel`;
export const vCenterCredentialsSelectPlaceholder = `${prefix}.vCenterCredentialsSelectPlaceholder`;

export const ENGLISH = {
    [setVcenterServerCredentialsHeader]: 'Set vCenter Server Credentials',
    [vCenterAddressLabel]: 'vCenter Address',
    [vCenterCredentialsSelectLabel]: 'vCenter Credentials',
    [vCenterCredentialsSelectPlaceholder]: 'Select vCenter Credentials',
};const moduleName = 'cloudconnectoruser';
const componentName = 'vcentercredentials';
const prefix = `${moduleName}.${componentName}`;

export const usernameFieldLabel = `${prefix}.usernameFieldLabel`;
export const passwordFieldLabel = `${prefix}.passwordFieldLabel`;
export const usernameFieldPlaceholder = `${prefix}.usernameFieldPlaceholder`;
export const passwordFieldPlaceholder = `${prefix}.passwordFieldPlaceholder`;

export const ENGLISH = {
    [usernameFieldLabel]: 'Username',
    [passwordFieldLabel]: 'Password',
    [usernameFieldPlaceholder]: 'Enter Username',
    [passwordFieldPlaceholder]: 'Enter Password',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'clusteredit';
const prefix = `${moduleName}.${componentName}`;

export const editControllerConfigurationHeader = `${prefix}.editControllerConfigurationHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const ipAddressInputPlaceholder = `${prefix}.ipAddressInputPlaceholder`;
export const generalHeader = `${prefix}.generalHeader`;
export const clusterNodeHeader = `${prefix}.clusterNodeHeader`;

export const ENGLISH = {
    [editControllerConfigurationHeader]: 'Edit Cluster',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [ipAddressInputLabel]: 'Controller Cluster IP',
    [ipAddressInputPlaceholder]: 'Enter IP Address',
    [generalHeader]: 'General',
    [clusterNodeHeader]: 'Cluster Node',
};const moduleName = 'cloudconnectoruser';
const componentName = 'nsxtcredentials';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalHeader = `${prefix}.generalHeader`;
export const nameFieldLabel = `${prefix}.nameFieldLabel`;
export const nameFieldPlaceholder = `${prefix}.nameFieldPlaceholder`;
export const credentialsTypeFieldLabel = `${prefix}.credentialsTypeFieldLabel`;
export const sshCredentialsHeader = `${prefix}.sshCredentialsHeader`;
export const authenticationFieldLabel = `${prefix}.authenticationFieldLabel`;
export const sshKeyFieldLabel = `${prefix}.sshKeyFieldLabel`;
export const passwordFieldLabel = `${prefix}.passwordFieldLabel`;
export const passwordFieldPlaceholder = `${prefix}.passwordFieldPlaceholder`;
export const keysFieldLabel = `${prefix}.keysFieldLabel`;
export const sshKeyValuePairFieldLabel = `${prefix}.sshKeyValuePairFieldLabel`;
export const importPrivateKeyFieldLabel = `${prefix}.importPrivateKeyFieldLabel`;
export const importPrivateKeyFieldTooltip = `${prefix}.importPrivateKeyFieldTooltip`;
export const publicKeyFieldLabel = `${prefix}.publicKeyFieldLabel`;
export const publicKeyFieldPlaceholder = `${prefix}.publicKeyFieldPlaceholder`;
export const privateKeyFieldLabel = `${prefix}.privateKeyFieldLabel`;
export const privateKeyPassphraseFieldLabel = `${prefix}.privateKeyPassphraseFieldLabel`;
export const passphrasePlaceholder = `${prefix}.passphrasePlaceholder`;
export const azureCredentialsHeader = `${prefix}.azureCredentialsHeader`;
export const usernamePasswordFieldLabel = `${prefix}.usernamePasswordFieldLabel`;
export const applicationIdFieldLabel = `${prefix}.applicationIdFieldLabel`;
export const usernameFieldLabel = `${prefix}.usernameFieldLabel`;
export const usernameFieldPlaceholder = `${prefix}.usernameFieldPlaceholder`;
export const activeDirectoryFieldLabel = `${prefix}.activeDirectoryFieldLabel`;
export const authenticationTokenFieldLabel = `${prefix}.authenticationTokenFieldLabel`;
export const tenantIdFieldLabel = `${prefix}.tenantIdFieldLabel`;
export const gcpCredentialsHeader = `${prefix}.gcpCredentialsHeader`;
export const nsxtCredentialsHeader = `${prefix}.nsxtCredentialsHeader`;
export const vcenterCredentialsHeader = `${prefix}.vcenterCredentialsHeader`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit User Credentials: {0}',
    [modalTitleNew]: 'New User Credentials: {0}',
    [generalHeader]: 'General',
    [nameFieldLabel]: 'Name',
    [nameFieldPlaceholder]: 'Enter Name',
    [credentialsTypeFieldLabel]: 'Credentials Type',
    [sshCredentialsHeader]: 'SSH Credentials',
    [authenticationFieldLabel]: 'Authentication',
    [sshKeyFieldLabel]: 'SSH Key',
    [passwordFieldLabel]: 'Password',
    [passwordFieldPlaceholder]: 'Enter Password',
    [keysFieldLabel]: 'Keys',
    [sshKeyValuePairFieldLabel]: 'Generate SSH Key Value Pair',
    [importPrivateKeyFieldLabel]: 'Import Private Key',
    [importPrivateKeyFieldTooltip]: 'Copypaste your Private Key into the field below or load it from a file',
    [publicKeyFieldLabel]: 'Public Key',
    [publicKeyFieldPlaceholder]: 'Enter Public Key',
    [privateKeyFieldLabel]: 'Paste Private Key',
    [privateKeyPassphraseFieldLabel]: 'Private Key Passphrase',
    [passphrasePlaceholder]: 'Passphrase',
    [azureCredentialsHeader]: 'Azure Credentials',
    [usernamePasswordFieldLabel]: 'UsernamePassword',
    [applicationIdFieldLabel]: 'Application ID',
    [usernameFieldLabel]: 'Username',
    [usernameFieldPlaceholder]: 'Enter Username',
    [activeDirectoryFieldLabel]: 'Active Directory',
    [authenticationTokenFieldLabel]: 'Authentication Token',
    [tenantIdFieldLabel]: 'Tenant ID',
    [gcpCredentialsHeader]: 'GCP Credentials',
    [nsxtCredentialsHeader]: 'NSXT Credentials',
    [vcenterCredentialsHeader]: 'vCenter Credentials',
};const moduleName = 'cloudconnectoruser';
const componentName = 'gcpcredentials';
const prefix = `${moduleName}.${componentName}`;

export const serviceAccountKeyFileDataLabel = `${prefix}.serviceAccountKeyFileDataLabel`;
export const serviceAccountKeyFileDataTooltip = `${prefix}.serviceAccountKeyFileDataTooltip`;
export const serviceAccountKeyFileDataPlaceholder = `${prefix}.serviceAccountKeyFileDataPlaceholder`;

export const ENGLISH = {
    [serviceAccountKeyFileDataLabel]: 'Import or Paste Service Account Key',
    [serviceAccountKeyFileDataTooltip]: 'Copypaste your Service Account Key File Data into the field below or load it from a file',
    [serviceAccountKeyFileDataPlaceholder]: 'Paste Service Account Key',
};const moduleName = 'core';
const componentName = 'avialert';
const prefix = `${moduleName}.${componentName}`;

export const confirmButtonText = `${prefix}.confirmButtonText`;
export const headerText = `${prefix}.headerText`;
export const alertMessage = `${prefix}.alertMessage`;

export const ENGLISH = {
    [confirmButtonText]: 'Dismiss',
    [headerText]: 'Warning',
    [alertMessage]: 'We have encountered a problem during your request:',
};const moduleName = 'cluster';
const componentName = 'clusternodegrid';
const prefix = `${moduleName}.${componentName}`;

export const addLabel = `${prefix}.addLabel`;
export const editLabel = `${prefix}.editLabel`;
export const removeLabel = `${prefix}.removeLabel`;
export const nameLabel = `${prefix}.nameInputLabel`;
export const ipLabel = `${prefix}.ipLabel`;
export const publicIpOrNameLabel = `${prefix}.publicIpOrNameLabel`;
export const indexLabel = `${prefix}.indexLabel`;

export const ENGLISH = {
    [addLabel]: 'Add',
    [editLabel]: 'Edit',
    [removeLabel]: 'Remove',
    [ipLabel]: 'Cluster IP',
    [publicIpOrNameLabel]: 'Public IP Or Host Name',
    [indexLabel]: 'Index',
};const moduleName = 'core';
const componentName = 'centrallicensealerts';
const prefix = `${moduleName}.${componentName}`;

export const controllerNotRegisteredMessage = `${prefix}.controllerNotRegisteredMessage`;
export const registerControllerButtonText = `${prefix}.registerControllerButtonText`;

export const ENGLISH = {
    [controllerNotRegisteredMessage]: 'Register your Controller with Cloud Services to complete product activation.',
    [registerControllerButtonText]: 'Register Controller',
};const moduleName = 'clusternode';
const componentName = 'clusternodemodal';
const prefix = `${moduleName}.${componentName}`;

export const editClusterNodeHeader = `${prefix}.editClusterNodeHeader`;
export const newClusterNodeHeader = `${prefix}.newClusterNodeHeader`;
export const generalLabel = `${prefix}.generalLabel`;
export const ipLabel = `${prefix}.ipLabel`;
export const ipInputPlaceholder = `${prefix}.ipInputPlaceholder`;
export const nameLabel = `${prefix}.nameLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const passwordLabel = `${prefix}.passwordLabel`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const publicIpLabel = `${prefix}.publicIpLabel`;
export const publicIpOrHostNameInputPlaceholder = `${prefix}.publicIpOrHostNameInputPlaceholder`;
export const duplicateIpErrorMessage = `${prefix}.duplicateIpErrorMessage`;
export const duplicateNameErrorMessage = `${prefix}.duplicateNameErrorMessage`;

export const ENGLISH = {
    [editClusterNodeHeader]: 'Edit Cluster Node: {0}',
    [newClusterNodeHeader]: 'Add Cluster Node: {0}',
    [generalLabel]: 'General',
    [ipLabel]: 'IP Address',
    [ipInputPlaceholder]: 'Enter IP Address',
    [nameInputPlaceholder]: 'Enter Name',
    [passwordLabel]: 'Password',
    [passwordInputPlaceholder]: 'Enter Password',
    [publicIpLabel]: 'Public IP or Host Name',
    [publicIpOrHostNameInputPlaceholder]: 'Enter Public IP Or Host Name',
    [duplicateIpErrorMessage]: 'Duplicate IP Not Allowed',
    [duplicateNameErrorMessage]: 'Duplicate Name Not Allowed',
};const moduleName = 'cportal';
const componentName = 'addattachmentsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addAttachmentsGridHeaderLabel = `${prefix}.addAttachmentsGridHeaderLabel`;
export const addTechSupportActionLabel = `${prefix}.addTechSupportActionLabel`;
export const addTrafficCaptureActionLabel = `${prefix}.addTrafficCaptureActionLabel`;
export const addCoreFilesActionLabel = `${prefix}.addCoreFilesActionLabel`;
export const addUploadsActionLabel = `${prefix}.addUploadsActionLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const nameColumnLabel = `${prefix}.nameColumnLabel`;
export const statusColumnLabel = `${prefix}.statusColumnLabel`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const emptyGridPlaceholder = `${prefix}.emptyGridPlaceholder`;
export const techSupportAttachmentsSelectionDialogHeader = `${prefix}.techSupportAttachmentsSelectionDialogHeader`;
export const trafficCaptureAttachmentsSelectionDialogHeader = `${prefix}.trafficCaptureAttachmentsSelectionDialogHeader`;

export const ENGLISH = {
    [addAttachmentsGridHeaderLabel]: 'Files to be uploaded ({0})',
    [addButtonLabel]: 'Add',
    [addTechSupportActionLabel]: 'Tech Support',
    [addTrafficCaptureActionLabel]: 'Traffic Capture',
    [addCoreFilesActionLabel]: 'Core',
    [addUploadsActionLabel]: 'Uploads',
    [nameColumnLabel]: 'Name',
    [statusColumnLabel]: 'Status',
    [removeActionLabel]: 'Remove',
    [emptyGridPlaceholder]: 'No new files have been added',
    [techSupportAttachmentsSelectionDialogHeader]: 'Tech Support Files',
    [trafficCaptureAttachmentsSelectionDialogHeader]: 'Traffic Capture Files',
};const moduleName = 'cportal';
const componentName = 'casecommentslist';
const prefix = `${moduleName}.${componentName}`;

export const anonymousUserName = `${prefix}.anonymousUserName`;
export const noCommentsMadeMessage = `${prefix}.noCommentsMadeMessage`;

export const ENGLISH = {
    [anonymousUserName]: 'Anonymous',
    [noCommentsMadeMessage]: 'No Comments have been made',
};const moduleName = 'cportal';
const componentName = 'caseattachmentsgrid';
const prefix = `${moduleName}.${componentName}`;

export const attachmentGridHeaderLabel = `${prefix}.attachmentGridHeaderLabel`;
export const attachmentNameColumnLabel = `${prefix}.attachmentNameColumnLabel`;
export const nameColumnLabel = `${prefix}.nameColumnLabel`;
export const statusColumnLabel = `${prefix}.statusColumnLabel`;
export const uploadSuccessLabel = `${prefix}.uploadSuccessLabel`;
export const uploadFailedLabel = `${prefix}.uploadFailedLabel`;
export const uploadInProgressLabel = `${prefix}.uploadInProgressLabel`;

export const ENGLISH = {
    [attachmentGridHeaderLabel]: 'Attached Files ({0})',
    [attachmentNameColumnLabel]: 'File Name',
    [nameColumnLabel]: 'Name',
    [statusColumnLabel]: 'Status',
    [uploadSuccessLabel]: 'Upload Successful',
    [uploadFailedLabel]: 'Upload Failed',
    [uploadInProgressLabel]: 'Uploading',
};const moduleName = 'cportal';
const componentName = 'cportalinfopreview';
const prefix = `${moduleName}.${componentName}`;

export const portalUrlLabel = `${prefix}.portalUrlLabel`;

export const ENGLISH = {
    [portalUrlLabel]: 'Cloud Services Portal URL',
};const moduleName = 'cportal';
const componentName = 'casepreview';
const prefix = `${moduleName}.${componentName}`;

export const casePreviewHeader = `${prefix}.casePreviewHeader`;
export const caseStatusLabel = `${prefix}.caseStatusLabel`;
export const caseCreatedDateLabel = `${prefix}.caseCreatedDateLabel`;

export const ENGLISH = {
    [casePreviewHeader]: 'Support Information',
    [caseStatusLabel]: 'Status',
    [caseCreatedDateLabel]: 'Date Created',
};const moduleName = 'cportal';
const componentName = 'attachmentsselectiondialog';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const gridHeaderLabel = `${prefix}.gridHeaderLabel`;
export const dateColumnLabel = `${prefix}.dateColumnLabel`;
export const typeColumnLabel = `${prefix}.typeColumnLabel`;
export const nameColumnLabel = `${prefix}.nameColumnLabel`;
export const durationColumnLabel = `${prefix}.durationColumnLabel`;
export const sizeColumnLabel = `${prefix}.sizeColumnLabel`;
export const removeActionLabel = `${prefix}.removeActionLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [cancelButtonLabel]: 'Cancel',
    [gridHeaderLabel]: 'Files on Controller ({0})',
    [addButtonLabel]: 'Add',
    [dateColumnLabel]: 'Date',
    [typeColumnLabel]: 'Type',
    [nameColumnLabel]: 'Name',
    [durationColumnLabel]: 'Duration',
    [sizeColumnLabel]: 'Size',
    [removeActionLabel]: 'Remove',
};const moduleName = 'cportal';
const componentName = 'cportalinfomodal';
const prefix = `${moduleName}.${componentName}`;

export const caseManagementLabel = `${prefix}.caseManagementLabel`;
export const ipReputationLabel = `${prefix}.ipReputationLabel`;
export const appSignaturesSyncLabel = `${prefix}.appSignaturesSyncLabel`;
export const generalHeader = `${prefix}.generalHeader`;
export const accountNameInputLabel = `${prefix}.accountNameInputLabel`;
export const organizationNameInputLabel = `${prefix}.organizationNameInputLabel`;
export const departmentInputPlaceholder = `${prefix}.departmentInputPlaceholder`;
export const contactInputLabel = `${prefix}.contactInputLabel`;
export const contactInputPlaceholder = `${prefix}.contactInputPlaceholder`;
export const optInHeader = `${prefix}.optInHeader`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleAdd = `${prefix}.modalTitleAdd`;
export const signaturesLabel = `${prefix}.signaturesLabel`;
export const systemProxyLabel = `${prefix}.systemProxyLabel`;
export const enableCaseManagementLabel = `${prefix}.enableCaseManagementLabel`;
export const enableProactiveSupportLabel = `${prefix}.enableProactiveSupportLabel`;
export const enableAutomaticCasesSystemFailureLabel = `${prefix}.enableAutomaticCasesSystemFailureLabel`;
export const enableAutomaticCasesServiceFailureLabel = `${prefix}.enableAutomaticCasesServiceFailureLabel`;
export const threatIntelligenceLabel = `${prefix}.threatIntelligenceLabel`;
export const enableCrsDataLabel = `${prefix}.enableCrsDataLabel`;
export const enableAutoDownloadWafLabel = `${prefix}.enableAutoDownloadWafLabel`;
export const enableApplicationRulesDbLabel = `${prefix}.enableApplicationRulesDbLabel`;
export const enableAutoSyncIpLabel = `${prefix}.enableAutoSyncIpLabel`;
export const proxyHeader = `${prefix}.proxyHeader`;
export const enableWafManagementLabel = `${prefix}.enableWafManagementLabel`;
export const enableUserAgentDbManagementLabel = `${prefix}.enableUserAgentDbManagementLabel`;
export const userAgentDbLabel = `${prefix}.userAgentDbLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Cloud Services Settings',
    [modalTitleAdd]: 'Add Cloud Services Settings',
    [caseManagementLabel]: 'Case Management',
    [signaturesLabel]: 'Signatures',
    [ipReputationLabel]: 'IP Reputation',
    [appSignaturesSyncLabel]: 'Application Rules',
    [generalHeader]: 'General',
    [accountNameInputLabel]: 'Account',
    [organizationNameInputLabel]: 'Organization',
    [departmentInputPlaceholder]: 'Select Account Name',
    [contactInputLabel]: 'Default Contact',
    [contactInputPlaceholder]: 'Contacts',
    [optInHeader]: 'Opt In',
    [systemProxyLabel]: 'Use Cloud Services Split Proxy',
    [enableCaseManagementLabel]: 'Enable Case Management',
    [enableWafManagementLabel]: 'Enable Cloud Services WAF Management',
    [enableProactiveSupportLabel]: 'Proactive Support',
    [enableAutomaticCasesSystemFailureLabel]: 'Enable automatic cases on system failure',
    [enableAutomaticCasesServiceFailureLabel]: 'Enable automatic cases on service engine failure',
    [threatIntelligenceLabel]: 'Threat Intelligence',
    [enableCrsDataLabel]: 'Receive notifications when new CRS data is available',
    [enableAutoDownloadWafLabel]: 'Enable auto download WAF Signatures',
    [enableApplicationRulesDbLabel]: 'Enable autosync Application Rules DB updates',
    [enableAutoSyncIpLabel]: 'Enable autosync IP Reputation DB updates',
    [proxyHeader]: 'Proxy',
    [enableUserAgentDbManagementLabel]: 'Enable User Agent DB Sync',
    [userAgentDbLabel]: 'User Agent DB',
};const moduleName = 'cportal';
const componentName = 'casemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const caseSectionLabel = `${prefix}.caseSectionLabel`;
export const subjectLabel = `${prefix}.subjectLabel`;
export const subjectPlaceholder = `${prefix}.subjectPlaceholder`;
export const contactLabel = `${prefix}.contactLabel`;
export const contactPlaceholder = `${prefix}.contactPlaceholder`;
export const typeLabel = `${prefix}.typeLabel`;
export const severityLabel = `${prefix}.severityLabel`;
export const versionLabel = `${prefix}.versionLabel`;
export const environmentLabel = `${prefix}.environmentLabel`;
export const environmentPlaceholder = `${prefix}.environmentPlaceholder`;
export const useCasesLabel = `${prefix}.useCasesLabel`;
export const useCasesPlaceholder = `${prefix}.useCasesPlaceholder`;
export const businessJustificationLabel = `${prefix}.businessJustificationLabel`;
export const businessJustificationPlaceholder = `${prefix}.businessJustificationPlaceholder`;
export const currentSolutionLabel = `${prefix}.currentSolutionLabel`;
export const currentSolutionPlaceholder = `${prefix}.currentSolutionPlaceholder`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const descriptionPlaceholder = `${prefix}.descriptionPlaceholder`;
export const customTagLabel = `${prefix}.customTagLabel`;
export const customTagPlaceholder = `${prefix}.customTagPlaceholder`;
export const attachmentsLabel = `${prefix}.attachmentsLabel`;
export const activityLabel = `${prefix}.activityLabel`;
export const criticalSeverityLabel = `${prefix}.criticalSeverityLabel`;
export const highSeverityLabel = `${prefix}.highSeverityLabel`;
export const mediumSeverityLabel = `${prefix}.mediumSeverityLabel`;
export const lowSeverityLabel = `${prefix}.lowSeverityLabel`;
export const defaultSeverityLabel = `${prefix}.defaultSeverityLabel`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Case: {0}',
    [modalTitleNew]: 'New Case: {0}',
    [caseSectionLabel]: 'Case',
    [subjectLabel]: 'Subject',
    [subjectPlaceholder]: 'Enter Subject',
    [contactLabel]: 'Contact',
    [contactPlaceholder]: 'Select Contact',
    [typeLabel]: 'Type',
    [severityLabel]: 'Severity',
    [versionLabel]: 'Version',
    [environmentLabel]: 'Ecosystem',
    [environmentPlaceholder]: 'Select Ecosystem',
    [useCasesLabel]: 'Use Cases',
    [useCasesPlaceholder]: 'Enter Use Cases',
    [businessJustificationLabel]: 'Business Justification',
    [businessJustificationPlaceholder]: 'Enter Business Justification',
    [currentSolutionLabel]: 'Current Solution',
    [currentSolutionPlaceholder]: 'Enter Current Solution',
    [descriptionLabel]: 'Description',
    [descriptionPlaceholder]: 'Enter Description',
    [customTagLabel]: 'Custom Tag',
    [customTagPlaceholder]: 'Enter Custom Tag',
    [attachmentsLabel]: 'Attachments',
    [activityLabel]: 'Activity',
    [criticalSeverityLabel]: 'Critical',
    [highSeverityLabel]: 'High',
    [mediumSeverityLabel]: 'Medium',
    [lowSeverityLabel]: 'Low',
    [defaultSeverityLabel]: 'Default',
    [submitButtonLabel]: 'Submit',
};const moduleName = 'cportal';
const componentName = 'casecustomtagsgrid';
const prefix = `${moduleName}.${componentName}`;

export const customTagLabelWithCount = `${prefix}.customTagLabelWithCount`;
export const addTagButtonLabel = `${prefix}.addTagButtonLabel`;
export const systemTagTypePlaceholder = `${prefix}.systemTagTypePlaceholder`;
export const systemTagValuePlaceholder = `${prefix}.systemTagValuePlaceholder`;
export const customTagTypePlaceholder = `${prefix}.customTagTypePlaceholder`;
export const customTagValuePlaceholder = `${prefix}.customTagValuePlaceholder`;
export const valueLabel = `${prefix}.valueLabel`;
export const typeLabel = `${prefix}.typeLabel`;
export const removeActionLabel = `${prefix}.removeActionLabel`;

export const ENGLISH = {
    [customTagLabelWithCount]: 'Custom Tag ({0})',
    [addTagButtonLabel]: 'Add',
    [systemTagTypePlaceholder]: 'Select System Type',
    [systemTagValuePlaceholder]: 'Select Value',
    [customTagTypePlaceholder]: 'Enter Custom Type',
    [customTagValuePlaceholder]: 'Enter Value',
    [typeLabel]: 'Type',
    [removeActionLabel]: 'Remove',
};const moduleName = 'cportal';
const componentName = 'systemproxy';
const prefix = `${moduleName}.${componentName}`;

export const serverHostLabel = `${prefix}.serverHostLabel`;
export const serverHostPlaceholder = `${prefix}.serverHostPlaceholder`;
export const portLabel = `${prefix}.portLabel`;
export const portPlaceholder = `${prefix}.portPlaceholder`;
export const userNameLabel = `${prefix}.userNameLabel`;
export const usernamePlaceholder = `${prefix}.usernamePlaceholder`;
export const passwordLabel = `${prefix}.passwordLabel`;
export const passwordPlaceholder = `${prefix}.passwordPlaceholder`;

export const ENGLISH = {
    [serverHostLabel]: 'Server Host',
    [serverHostPlaceholder]: 'Enter Server Host',
    [portLabel]: 'Port',
    [portPlaceholder]: 'Enter Port Number',
    [userNameLabel]: 'Username',
    [usernamePlaceholder]: 'Enter Username',
    [passwordLabel]: 'Password',
    [passwordPlaceholder]: 'Enter Password',
};const moduleName = 'CportalModule';
const componentName = 'cportalpage';
const prefix = `${moduleName}.${componentName}`;

export const cloudServicesLabel = `${prefix}.cloudServicesLabel`;
export const editCloudServicesSettingsTooltip = `${prefix}.editCloudServicesSettingsTooltip`;
export const reconnectNowLabel = `${prefix}.reconnectNowLabel`;
export const connectedLabel = `${prefix}.connectedLabel`;
export const disconnectedLabel = `${prefix}.disconnectedLabel`;
export const controllerLabel = `${prefix}.controllerLabel`;
export const editControllerSettingsTooltip = `${prefix}.editControllerSettingsTooltip`;
export const registeredLabel = `${prefix}.registeredLabel`;
export const unregisteredLabel = `${prefix}.unregisteredLabel`;
export const registerControllerBtnLabel = `${prefix}.registerControllerBtnLabel`;
export const deregisterControllerBtnLabel = `${prefix}.deregisterControllerBtnLabel`;
export const connectionErrorMessage = `${prefix}.connectionErrorMessage`;
export const isDeregisterControllerMessage = `${prefix}.isDeregisterControllerMessage`;
export const cloudServicesRegisterControllerMessage = `${prefix}.cloudServicesRegisterControllerMessage`;
export const editBtnLabel = `${prefix}.editBtnLabel`;
export const controllerRegisteredControllerBtnLabel = `${prefix}.controllerRegisteredControllerBtnLabel`;
export const notConnectedErrorMessage = `${prefix}.notConnectedErrorMessage`;
export const notRegisteredAndConnectedErrorMessage = `${prefix}.notRegisteredAndConnectedErrorMessage`;
export const attemptingToConnectMessage = `${prefix}.attemptingToConnectMessage`;
export const learnMoreLink = `${prefix}.learnMoreLink`;

export const ENGLISH = {
    [cloudServicesLabel]: 'Cloud Services',
    [editCloudServicesSettingsTooltip]: 'Edit Cloud Services settings',
    [editBtnLabel]: 'Edit',
    [reconnectNowLabel]: 'Reconnect now.',
    [connectedLabel]: 'Connected',
    [disconnectedLabel]: 'Disconnected',
    [controllerLabel]: 'CONTROLLER',
    [editControllerSettingsTooltip]: 'Edit controller settings',
    [registeredLabel]: 'Registered',
    [unregisteredLabel]: 'Not Registered',
    [controllerRegisteredControllerBtnLabel]: 'Complete Registration',
    [registerControllerBtnLabel]: 'Register Controller',
    [deregisterControllerBtnLabel]: 'Deregister Controller',
    [connectionErrorMessage]: 'A connection error has occurred, controller will autoretry in 10 seconds.',
    [notConnectedErrorMessage]: 'We successfully made a connection to Cloud Services but was unable to complete registration, Please try again.',
    [notRegisteredAndConnectedErrorMessage]: 'Register your Controller with Cloud Services to take advantage of autoupdates in controller support and more.',
    [attemptingToConnectMessage]: 'Controller attempting to connect to Cloud Services, Please wait to complete registration. This may take several minutes.',
    [isDeregisterControllerMessage]: 'Are you sure you want to Deregister this controller?',
    [cloudServicesRegisterControllerMessage]: 'Cloud Services must be connected for registering controller.',
    [learnMoreLink]: 'Learn More',
};const moduleName = 'datagrid';
const componentName = 'avicollectiondatagrid';
const prefix = `${moduleName}.${componentName}`;

export const createButtonLabel = `${prefix}.createButtonLabel`;
export const editActionLabel = `${prefix}.editActionLabel`;
export const deleteActionLabel = `${prefix}.deleteActionLabel`;
export const tenantColumnLabel = `${prefix}.tenantColumnLabel`;

export const ENGLISH = {
    [editActionLabel]: 'Edit',
    [deleteActionLabel]: 'Delete',
    [tenantColumnLabel]: 'Tenant',
};Copyright 2022 VMware, Inc.  All rights reserved. VMware Confidential
  
 

const moduleName = 'dialog';
const componentName = 'jsonviewer';
const prefix = `${moduleName}.${componentName}`;

export const downloadConfigTitle = `${prefix}.downloadConfigTitle`;
export const dialogTitle = `${prefix}.dialogTitle`;
export const copyConfigToClipboardTitle = `${prefix}.copyConfigToClipboardTitle`;
export const configPreviewedNotSavedAlertMessage = `${prefix}.configPreviewedNotSavedAlertMessage`;

export const ENGLISH = {
    [dialogTitle]: 'JSON Viewer: {0}',
    [downloadConfigTitle]: 'Download config as JSON',
    [copyConfigToClipboardTitle]: 'Copy config to clipboard',
    [configPreviewedNotSavedAlertMessage]: 'Changes being previewed have not been saved. Save configuration for changes to take effect.',
};const moduleName = 'datagrid';
const componentName = 'movedatagridrow';
const prefix = `${moduleName}.${componentName}`;

export const moveLabel = `${prefix}.moveLabel`;
export const placementRadioButtonLabel = `${prefix}.placementRadioButtonLabel`;
export const indexDropdownLabel = `${prefix}.indexDropdownLabel`;
export const indexDropdownPlaceholder = `${prefix}.indexDropdownPlaceholder`;
export const defaultItemType = `${prefix}.defaultItemType`;
export const aboveLabel = `${prefix}.aboveLabel`;
export const belowLabel = `${prefix}.belowLabel`;

export const ENGLISH = {
    [moveLabel]: 'Move',
    [placementRadioButtonLabel]: 'Placement',
    [indexDropdownLabel]: 'Index',
    [indexDropdownPlaceholder]: 'Select Index',
    [defaultItemType]: 'item',
    [aboveLabel]: 'Above',
    [belowLabel]: 'Below',
};const moduleName = 'errorpage';
const componentName = 'errorpageprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editErrorPageHeader = `${prefix}.editErrorPageHeader`;
export const newErrorPageHeader = `${prefix}.newErrorPageHeader`;
export const errorPageBodyFieldLabel = `${prefix}.errorPageBodyFieldLabel`;
export const indexInputLabel = `${prefix}.indexInputLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const enabledInputLabel = `${prefix}.enabledInputLabel`;
export const htmlBodyInputLabel = `${prefix}.htmlBodyInputLabel`;
export const redirectToUrlInputLabel = `${prefix}.redirectToUrlInputLabel`;
export const pageBodyInputPlaceholder = `${prefix}.pageBodyInputPlaceholder`;
export const redirectUrlInputPlaceholder = `${prefix}.redirectUrlInputPlaceholder`;
export const urlInputLabel = `${prefix}.urlInputLabel`;
export const statusCodesLabel = `${prefix}.statusCodesLabel`;
export const addPageButtonLabel = `${prefix}.addPageButtonLabel`;
export const generalLabel = `${prefix}.generalLabel`;
export const statusCodesPlaceholder = `${prefix}.statusCodesPlaceholder`;

export const ENGLISH = {
    [editErrorPageHeader]: 'Edit Error Page: {0}',
    [newErrorPageHeader]: 'Add Error Page: {0}',
    [errorPageBodyFieldLabel]: 'Error Page',
    [enabledInputLabel]: 'Enable Error Page',
    [htmlBodyInputLabel]: 'HTML Body',
    [redirectToUrlInputLabel]: 'Redirect to URL',
    [pageBodyInputPlaceholder]: 'Select Error Page Body',
    [redirectUrlInputPlaceholder]: 'Redirect URL',
    [statusCodesLabel]: 'Status Codes',
    [urlInputLabel]: 'URL',
    [generalLabel]: 'General',
    [statusCodesPlaceholder]: 'Enter Status Codes',
};const moduleName = 'errorpage';
const componentName = 'errorpagebody';
const prefix = `${moduleName}.${componentName}`;

export const headerLabel = `${prefix}.headerLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const placeholderMessage = `${prefix}.placeholderMessage`;

export const ENGLISH = {
    [headerLabel]: 'Error Page Body',
    [columnTitleName]: 'Name',
    [placeholderMessage]: 'No Items Found',
};const moduleName = 'errorpage';
const componentName = 'errorpagebodymodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const htmlContentInputLabel = `${prefix}.htmlContentInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const htmlContentInputPlaceholder = `${prefix}.htmlContentInputPlaceholder`;
export const generalHeader = `${prefix}.generalHeader`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Error Page Body: {0}',
    [modalTitleNew]: 'New Error Page Body: {0}',
    [nameInputLabel]: 'Name',
    [htmlContentInputLabel]: 'HTML Content',
    [nameInputPlaceholder]: 'Enter Name',
    [htmlContentInputPlaceholder]: 'Enter HTML Content',
    [generalHeader]: 'General',
};const moduleName = 'errorpage';
const componentName = 'errorpageprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editErrorPageProfileHeader = `${prefix}.editErrorPageProfileHeader`;
export const newErrorPageProfileHeader = `${prefix}.newErrorPageProfileHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const errorPagesHeader = `${prefix}.errorPagesHeader`;
export const generalLabel = `${prefix}.generalLabel`;

export const ENGLISH = {
    [editErrorPageProfileHeader]: 'Edit Error Page Profile: {0}',
    [newErrorPageProfileHeader]: 'New Error Page Profile: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [errorPagesHeader]: 'Error Pages',
    [generalLabel]: 'General',
};const moduleName = 'dialog';
const componentName = 'avidismisschangesconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const resetToDefaultsHeader = `${prefix}.resetToDefaultsHeader`;
export const unsavedChangesHeader = `${prefix}.unsavedChangesHeader`;

export const unsavedChangesWarning = `${prefix}.unsavedChangesWarning`;
export const resetToDefaultsWarning = `${prefix}.resetToDefaultsWarning`;

export const ENGLISH = {
    [resetToDefaultsHeader]: 'Reset to Defaults',
    [unsavedChangesHeader]: 'Unsaved Changes',

    [unsavedChangesWarning]: 'Changes have not been saved.',
    [resetToDefaultsWarning]: 'Switching type will reset any stored values to default.',
};const moduleName = 'errorpage';
const componentName = 'errorpageprofilepreview';
const prefix = `${moduleName}.${componentName}`;

export const errorPageIndexPosition = `${prefix}.errorPageIndexPosition`;

export const ENGLISH = {
    [errorPageIndexPosition]: 'Error Page Index Position',
};const moduleName = 'errorpage';
const componentName = 'errorpageprofilegrid';
const prefix = `${moduleName}.${componentName}`;

export const addLabel = `${prefix}.addLabel`;
export const statusCodeLabel = `${prefix}.statusCodeLabel`;
export const editLabel = `${prefix}.editLabel`;
export const indexLabel = `${prefix}.indexLabel`;
export const removeLabel = `${prefix}.removeLabel`;
export const enableLabel = `${prefix}.enableLabel`;
export const errorPageOrUrlLabel = `${prefix}.errorPageOrUrlLabel`;
export const errorPageLabel = `${prefix}.errorPageLabel`;
export const htmlBodyLabel = `${prefix}.htmlBodyLabel`;
export const redirectLabel = `${prefix}.redirectLabel`;

export const ENGLISH = {
    [addLabel]: 'Add',
    [statusCodeLabel]: 'Status Codes',
    [editLabel]: 'Edit',
    [indexLabel]: 'Index',
    [removeLabel]: 'Remove',
    [enableLabel]: 'Enable',
    [errorPageOrUrlLabel]: 'Error Page or URL',
    [errorPageLabel]: 'Error Page',
    [htmlBodyLabel]: 'HTML Body',
    [redirectLabel]: 'Redirect',
};const moduleName = 'groupsModule';
const componentName = 'ipaddrgroupmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const ipGroupCreateTypeIpLabel = `${prefix}.ipGroupCreateTypeIpLabel`;
export const ipGroupCreateTypeCountryCodeLabel = `${prefix}.ipGroupCreateTypeCountryCodeLabel`;
export const typeLabel = `${prefix}.typeLabel`;
export const ipListFileUploadLabel = `${prefix}.ipListFileUploadLabel`;
export const countryCodesInputLabel = `${prefix}.countryCodesInputLabel`;
export const countryCodesInputPlaceholder = `${prefix}.countryCodesInputPlaceholder`;
export const ipAddressesLabel = `${prefix}.ipAddressesLabel`;
export const fileHasNoValidIpAddressesErrorMessage = `${prefix}.fileHasNoValidIpAddressesErrorMessage`;
export const fileUploadSuccessMessage = `${prefix}.fileUploadSuccessMessage`;
export const discardedCurrentValuesConfirmation = `${prefix}.discardedCurrentValuesConfirmation`;
export const resetToDefaultValuesHeader = `${prefix}.resetToDefaultValuesHeader`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit IP Group: {0}',
    [modalTitleNew]: 'New IP Group: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [ipGroupCreateTypeIpLabel]: 'IP Address',
    [ipGroupCreateTypeCountryCodeLabel]: 'Country Code',
    [typeLabel]: 'Type',
    [ipListFileUploadLabel]: 'Import IP Address From File',
    [countryCodesInputLabel]: 'Country Code',
    [countryCodesInputPlaceholder]: 'Select Country Code',
    [ipAddressesLabel]: 'IP Addresses ({0})',
    [fileHasNoValidIpAddressesErrorMessage]: 'File does not contain any valid IP addresses.',
    [fileUploadSuccessMessage]: 'Successfully imported {0} records. {1} duplicates removed.',
    [discardedCurrentValuesConfirmation]: 'Switching type will reset any stored values to default.',
    [resetToDefaultValuesHeader]: 'Reset to Defaults',
};const moduleName = 'GroupsModule';
const componentName = 'stringgroupmodal';
const prefix = `${moduleName}.${componentName}`;

export const editStringGroupModalHeader = `${prefix}.editStringGroupModalHeader`;
export const newStringGroupModalHeader = `${prefix}.newStringGroupModalHeader`;
export const stringTypeLabel = `${prefix}.stringTypeLabel`;
export const keyValueTypeLabel = `${prefix}.keyValueTypeLabel`;
export const stringTypePlaceHolder = `${prefix}.stringTypePlaceHolder`;
export const resetToDefaultValuesHeader = `${prefix}.resetToDefaultValuesHeader`;
export const typeString = `${prefix}.typeString`;
export const typeKeyValue = `${prefix}.typeKeyValue`;
export const browseBtnLabel = `${prefix}.browseBtnLabel`;
export const typeStringFileDataLabel = `${prefix}.typeStringFileDataLabel`;
export const typeKeyValueFileDataLabel = `${prefix}.typeKeyValueFileDataLabel`;
export const typeLabel = `${prefix}.typeLabel`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const duplicateValuesAlert = `${prefix}.duplicateValuesAlert`;
export const discardedCurrentValuesConfirmation = `${prefix}.discardedCurrentValuesConfirmation`;

export const ENGLISH = {
    [editStringGroupModalHeader]: 'Edit String Group: {0}',
    [newStringGroupModalHeader]: 'Create String Group: {0}',
    [stringTypeLabel]: 'String(s) ({0})',
    [keyValueTypeLabel]: 'Key & Value(s) ({0})',
    [stringTypePlaceHolder]: 'Enter String',
    [resetToDefaultValuesHeader]: 'Reset to Default Values',
    [typeString]: 'String',
    [typeKeyValue]: 'Key & Value',
    [browseBtnLabel]: 'Import File',
    [typeStringFileDataLabel]: 'Import String(s) From File',
    [typeKeyValueFileDataLabel]: 'Import Key & Value(s) From File',
    [typeLabel]: 'Type',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [duplicateValuesAlert]: 'One or more strings being imported already existed. Those have been overwritten by the newly provided instances of the strings.',
    [discardedCurrentValuesConfirmation]: 'Switching type will reset any stored values to default.',
};const moduleName = 'groupsModule';
const componentName = 'ipaddrgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const ipAddressPlaceholder = `${prefix}.ipAddressPlaceholder`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;
export const inputHelperText = `${prefix}.editButtonLabel`;
export const duplicateValuesErrorMsg = `${prefix}.duplicateValuesErrorMsg`;
export const keyDuplicationErrorMsg = `${prefix}.keyDuplicationErrorMsg`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleIpAddress]: 'IP Address',
    [ipAddressPlaceholder]: 'Enter IP Address',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
    [inputHelperText]: 'Accepts Single, Comma Separated and Ranges',
    [duplicateValuesErrorMsg]: 'Duplicate values: {0}',
    [keyDuplicationErrorMsg]: 'System does not support duplicate values. Please update or delete.',
};undefined GslbModule
 


  
  
  
 

const moduleName = 'gslbgeodbprofile';
const componentName = 'gslbgeodbprofileentriesgrid';
const prefix = `${moduleName}.${componentName}`;

export const gridTitleEntries = `${prefix}.gridTitleEntries`;
export const filenameDropdownLabel = `${prefix}.filenameDropdownLabel`;
export const priorityInputLabel = `${prefix}.priorityInputLabel`;
export const formatDropdownLabel = `${prefix}.formatDropdownLabel`;
export const filenameDropdownPlaceholder = `${prefix}.filenameDropdownPlaceholder`;
export const priorityInputPlaceholder = `${prefix}.priorityInputPlaceholder`;
export const formatDropdownPlaceholder = `${prefix}.formatDropdownPlaceholder`;
export const addEntryButtonLabel = `${prefix}.addEntryButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [gridTitleEntries]: 'GeoDB Entries ({0})',
    [filenameDropdownLabel]: 'File Name',
    [priorityInputLabel]: 'Priority',
    [formatDropdownLabel]: 'Format',
    [filenameDropdownPlaceholder]: 'Select File',
    [priorityInputPlaceholder]: 'Enter Priority',
    [formatDropdownPlaceholder]: 'Select Format',
    [addEntryButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'gslb';
const componentName = 'gslbcheckpointsmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const timestampLabel = `${prefix}.timestampLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const descriptionLabel = `${prefix}.descriptionLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Checkpoint: {0}',
    [modalTitleNew]: 'New Checkpoint: {0}',
    [timestampLabel]: 'Timestamp',
    [descriptionLabel]: 'Description',
};const moduleName = 'header';
const componentName = 'appaboutmodal';
const prefix = `${moduleName}.${componentName}`;

export const aboutModalTitle = `${prefix}.aboutModalTitle`;
export const versionLabel = `${prefix}.versionLabel`;
export const buildLabel = `${prefix}.buildLabel`;
export const patchLabel = `${prefix}.patchLabel`;
export const dateLabel = `${prefix}.dateLabel`;

export const ENGLISH = {
    [aboutModalTitle]: 'About VMware NSX ALB (Avi)',
    [versionLabel]: 'Version',
    [buildLabel]: 'Build',
    [patchLabel]: 'Patch',
    [dateLabel]: 'Date',
};const moduleName = 'header';
const componentName = 'generatessotokendialog';
const prefix = `${moduleName}.${componentName}`;

export const generateSsoTokenDialogHeader = `${prefix}.generateSsoTokenDialogHeader`;
export const generateSsoTokenDescription = `${prefix}.generateSsoTokenDescription`;
export const closeButtonLabel = `${prefix}.closeButtonLabel`;
export const generateButtonLabel = `${prefix}.generateButtonLabel`;
export const tokenLifetimeLabel = `${prefix}.tokenLifetimeLabel`;
export const tokenLifetimePlaceholder = `${prefix}.tokenLifetimePlaceholder`;
export const tokenLifetimeTooltipMessage = `${prefix}.tokenLifetimeTooltipMessage`;
export const hoursHelperText = `${prefix}.hoursHelperText`;
export const tokenLabel = `${prefix}.tokenLabel`;

export const ENGLISH = {
    [generateSsoTokenDialogHeader]: 'Generate SSO Token',
    [generateSsoTokenDescription]: 'This is a token generated for user <b>{0}<b> and can be ' +
        'used for token authentication during login.',
    [closeButtonLabel]: 'Close',
    [generateButtonLabel]: 'Generate',
    [tokenLifetimeLabel]: 'Token Lifetime',
    [tokenLifetimePlaceholder]: 'Enter Token Lifetime',
    [tokenLifetimeTooltipMessage]: 'Length of time Generated Token will be accessible before ' +
        'selfdestructing.',
    [hoursHelperText]: 'Hours',
    [tokenLabel]: 'Token',
};undefined GslbModule
 


  
  
  
 

const moduleName = 'gslbgeodbprofile';
const componentName = 'geoprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const sectionTitleEntries = `${prefix}.sectionTitleEntries`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Geo Profile: {0}',
    [modalHeaderNew]: 'New Geo Profile: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [sectionTitleGeneral]: 'General',
    [sectionTitleEntries]: 'Entries',
};const moduleName = 'header';
const componentName = 'usercard';
const prefix = `${moduleName}.${componentName}`;

export const myAccountButtonLabel = `${prefix}.myAccountButtonLabel`;
export const lastLoginLabel = `${prefix}.lastLoginLabel`;

export const ENGLISH = {
    [myAccountButtonLabel]: 'My Account',
    [lastLoginLabel]: 'Last Login {0}',
};const moduleName = 'header';
const componentName = 'usercardmenu';
const prefix = `${moduleName}.${componentName}`;

export const signOutLabel = `${prefix}.signOutLabel`;
export const aboutLabel = `${prefix}.aboutLabel`;

export const ENGLISH = {
    [signOutLabel]: 'Sign Out',
    [aboutLabel]: 'About NSX ALB (Avi)',
};const moduleName = 'header';
const componentName = 'usermenuadditionalmenu';
const prefix = `${moduleName}.${componentName}`;

export const customerPortalLabel = `${prefix}.customerPortalLabel`;
export const aviApiDocumentationLabel = `${prefix}.aviApiDocumentationLabel`;
export const generateTokenLabel = `${prefix}.generateTokenLabel`;
export const vmWareNsxAlbTokenLabel = `${prefix}.vmWareNsxAlbTokenLabel`;

export const ENGLISH = {
    [customerPortalLabel]: 'Customer Portal',
    [aviApiDocumentationLabel]: 'Avi API Documentation',
    [generateTokenLabel]: 'Generate Token',
    [vmWareNsxAlbTokenLabel]: 'VMware NSXALB Documentation',
};const moduleName = 'dialog';
const componentName = 'avicontinueconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const warningHeader = `${prefix}.warningHeader`;

export const continueQuestionWarning = `${prefix}.continueQuestionWarning`;

export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const yesContinueBtnLabel = `${prefix}.yesContinueBtnLabel`;

export const ENGLISH = {
    [warningHeader]: 'Warning',

    [continueQuestionWarning]: 'Are you sure you want to continue?',

    [cancelBtnLabel]: 'Cancel',
    [yesContinueBtnLabel]: 'Yes, Continue',
};const moduleName = 'header';
const componentName = 'stategroup';
const prefix = `${moduleName}.${componentName}`;

export const application = `${prefix}.application`;
export const templates = `${prefix}.templates`;
export const infrastructureOption = `${prefix}.infrastructureOption`;
export const administrationOption = `${prefix}.administrationOption`;
export const operationsOption = `${prefix}.operationsOption`;

export const ENGLISH = {
    [application]: 'Applications',
    [templates]: 'Templates',
    [infrastructureOption]: 'Infrastructure',
    [administrationOption]: 'Administration',
    [operationsOption]: 'Operations',
};const moduleName = 'ipreputationdb';
const componentName = 'ipreputationdblistpagecard';
const prefix = `${moduleName}.${componentName}`;

export const ipReputationDB = `${prefix}.ipReputationDB`;
export const nameFieldLabel = `${prefix}.nameFieldLabel`;
export const descriptionFieldLabel = `${prefix}.descriptionFieldLabel`;
export const vendorFieldLabel = `${prefix}.vendorFieldLabel`;
export const filenameLabel = `${prefix}.filenameLabel`;
export const fileTypeLabel = `${prefix}.fileTypeLabel`;
export const lastUpdate = `${prefix}.lastUpdate`;

export const ENGLISH = {
    [ipReputationDB]: 'IP Reputation DB',
    [nameFieldLabel]: 'Name',
    [descriptionFieldLabel]: 'Description',
    [vendorFieldLabel]: 'Vendor',
    [filenameLabel]: 'Filename',
    [fileTypeLabel]: 'Type',
    [lastUpdate]: 'Last Update {0}',
};const moduleName = 'icapprofile';
const componentName = 'icapprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const descriptionPlaceholder = `${prefix}.descriptionPlaceholder`;
export const cloudSelectLabel = `${prefix}.cloudSelectLabel`;
export const cloudSelectPlaceholder = `${prefix}.cloudSelectPlaceholder`;
export const poolGroupSelectLabel = `${prefix}.poolGroupSelectLabel`;
export const poolGroupSelectPlaceholder = `${prefix}.poolGroupSelectPlaceholder`;
export const vendorSelectLabel = `${prefix}.vendorSelectLabel`;
export const vendorSelectPlaceholder = `${prefix}.vendorSelectPlaceholder`;
export const statusUrlInputLabel = `${prefix}.statusUrlInputLabel`;
export const statusUrlInputPlaceholder = `${prefix}.statusUrlInputPlaceholder`;
export const serviceUrlInputLabel = `${prefix}.serviceUrlInputLabel`;
export const serverUrlInputPlaceholder = `${prefix}.serverUrlInputPlaceholder`;
export const bufferSizeInputLabel = `${prefix}.bufferSizeInputLabel`;
export const bufferSizeInputPlaceholder = `${prefix}.bufferSizeInputPlaceholder`;
export const enablePreviewInputLabel = `${prefix}.enablePreviewInputLabel`;
export const allow204ResponseLabel = `${prefix}.allow204ResponseLabel`;
export const previewSizeInputLabel = `${prefix}.previewSizeInputLabel`;
export const previewSizeInputPlaceholder = `${prefix}.previewSizeInputPlaceholder`;
export const responseTimeoutInputLabel = `${prefix}.responseTimeoutInputLabel`;
export const responseTimeoutInputPlaceholder = `${prefix}.responseTimeoutInputPlaceholder`;
export const responseThresholdInputLabel = `${prefix}.responseThresholdInputLabel`;
export const responseThresholdInputPlaceholder = `${prefix}.responseThresholdInputPlaceholder`;
export const sectionTitleAction = `${prefix}.sectionTitleAction`;
export const subSectionTitleFailureAction = `${prefix}.subSectionTitleFailureAction`;
export const subSectionTitleLargeUploadFailureAction = `${prefix}.subSectionTitleLargeUploadFailureAction`;
export const kilobytesDataLabel = `${prefix}.kilobytesDataLabel`;
export const millisecondsDataLabel = `${prefix}.millisecondsDataLabel`;
export const bytesDataLabel = `${prefix}.bytesDataLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit ICAP Profile: {0}',
    [modalTitleNew]: 'New ICAP Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [descriptionLabel]: 'Description',
    [descriptionPlaceholder]: 'Enter Description',
    [cloudSelectLabel]: 'Cloud',
    [cloudSelectPlaceholder]: 'Select Cloud',
    [poolGroupSelectLabel]: 'Pool Group',
    [poolGroupSelectPlaceholder]: 'Select Pool Group',
    [vendorSelectLabel]: 'Vendor',
    [vendorSelectPlaceholder]: 'Select Vendor',
    [statusUrlInputLabel]: 'Status URL',
    [statusUrlInputPlaceholder]: 'Enter Status URL',
    [serviceUrlInputLabel]: 'Service URL',
    [serverUrlInputPlaceholder]: 'Enter URL',
    [bufferSizeInputLabel]: 'Request Buffer Size',
    [bufferSizeInputPlaceholder]: 'Enter Size',
    [enablePreviewInputLabel]: 'Enable ICAP Preview',
    [allow204ResponseLabel]: 'Allow 204 Response',
    [previewSizeInputLabel]: 'Preview Size',
    [previewSizeInputPlaceholder]: 'Enter Size',
    [responseTimeoutInputLabel]: 'Response Timeout',
    [responseTimeoutInputPlaceholder]: 'Enter Timeout',
    [responseThresholdInputLabel]: 'Slow Response warning Threshold',
    [responseThresholdInputPlaceholder]: 'Enter Threshold',
    [sectionTitleAction]: 'Action',
    [subSectionTitleFailureAction]: 'Failure Action',
    [subSectionTitleLargeUploadFailureAction]: 'Large Upload Failure Action',
    [kilobytesDataLabel]: 'kilobytes',
    [millisecondsDataLabel]: 'milliseconds',
    [bytesDataLabel]: 'bytes',
};const moduleName = 'ipreputationdb';
const componentName = 'ipreputationsearchrecordcard';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const invalidInputText = `${prefix}.invalidInputText`;
export const matchFoundMessage = `${prefix}.matchFoundMessage`;
export const searchRecordMessage = `${prefix}.searchRecordMessage`;
export const noRecordFoundMessage = `${prefix}.noRecordFoundMessage`;
export const threatTypeLabel = `${prefix}.threatTypeLabel`;

export const ENGLISH = {
    [header]: 'Search Records',
    [searchInputPlaceholder]: 'Search by IP Address',
    [invalidInputText]: 'Not a valid IPv4 Address',
    [matchFoundMessage]: 'Found 1 match in <b>{0}<b>',
    [searchRecordMessage]: 'Searching records in <b>{0}<b>',
    [noRecordFoundMessage]: 'No Records Found for {0}',
    [threatTypeLabel]: 'Threat Types ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsawsusablenetworksgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const columnTitleAvailabilityZone = `${prefix}.columnTitleAvailabilityZone`;
export const columnTitleUsableNetwork = `${prefix}.columnTitleUsableNetwork`;
export const availabilityZoneSelectPlaceholder = `${prefix}.availabilityZoneSelectPlaceholder`;
export const usableNetworkSelectPlaceholder = `${prefix}.usableNetworkSelectPlaceholder`;
export const usableNetworksLabel = `${prefix}.usableNetworksLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [columnTitleAvailabilityZone]: 'Availability Zone',
    [columnTitleUsableNetwork]: 'Usable Network',
    [availabilityZoneSelectPlaceholder]: 'Select Availability Zone',
    [usableNetworkSelectPlaceholder]: 'Select Usable Network',
    [usableNetworksLabel]: 'Usable Networks ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsawsprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const credentialSectionHeader = `${prefix}.credentialSectionHeader`;
export const valueNotSetPlaceholder = `${prefix}.valueNotSetPlaceholder`;
export const accessKeyIdInputLabel = `${prefix}.accessKeyIdInputLabel`;
export const secretAccessKeyInputLabel = `${prefix}.secretAccessKeyInputLabel`;
export const regionInputLabel = `${prefix}.regionInputLabel`;
export const awsHeaderLabel = `${prefix}.awsHeaderLabel`;
export const accessLabel = `${prefix}.accessLabel`;
export const iamRolesLabel = `${prefix}.iamRolesLabel`;
export const proxyLabel = `${prefix}.proxyLabel`;
export const hostIpAddressInputLabel = `${prefix}.hostIpAddressInputLabel`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const useIamAssumeRoleLabel = `${prefix}.useIamAssumeRoleLabel`;
export const iamAssumeRoleDropdownLabel = `${prefix}.iamAssumeRoleDropdownLabel`;
export const iamAssumeRoleDropdownPlaceholder = `${prefix}.iamAssumeRoleDropdownPlaceholder`;
export const vpcDropdownLabel = `${prefix}.vpcDropdownLabel`;
export const vpcDropdownPlaceholder = `${prefix}.vpcDropdownPlaceholder`;
export const usableDomainLabel = `${prefix}.usableDomainLabel`;
export const usableDomainsGridLabel = `${prefix}.usableDomainsGridLabel`;
export const domainInputPlaceholder = `${prefix}.domainInputPlaceholder`;

export const ENGLISH = {
    [credentialSectionHeader]: 'Credentials',
    [valueNotSetPlaceholder]: 'Not Set',
    [accessKeyIdInputLabel]: 'Access Key ID',
    [secretAccessKeyInputLabel]: 'Secret Access Key',
    [regionInputLabel]: 'Region',
    [awsHeaderLabel]: 'AWS',
    [accessLabel]: 'Access',
    [iamRolesLabel]: 'IAM Roles',
    [proxyLabel]: 'Proxy',
    [hostIpAddressInputLabel]: 'Host IP Address',
    [portInputLabel]: 'Port',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [useIamAssumeRoleLabel]: 'Use CrossAccount IAM AssumeRole',
    [iamAssumeRoleDropdownLabel]: 'IAM AssumeRole',
    [iamAssumeRoleDropdownPlaceholder]: 'Select IAM AssumeRole',
    [vpcDropdownLabel]: 'VPC',
    [vpcDropdownPlaceholder]: 'Select VPC',
    [usableDomainLabel]: 'Usable Domain',
    [usableDomainsGridLabel]: 'Usable Domains ({0})',
    [domainInputPlaceholder]: 'Enter Domain',
};const moduleName = 'ipreputationdb';
const componentName = 'ipreputationchangerequestcard';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const buttonLabel = `${prefix}.buttonLabel`;
export const changeButtonDescription = `${prefix}.changeButtonDescription`;
export const description = `${prefix}.description`;

export const ENGLISH = {
    [header]: 'Change Request',
    [buttonLabel]: 'Change Request',
    [changeButtonDescription]: 'Clicking will open in a new tab',
    [description]: 'Incorrectly identified URLs or IPs can be submitted for a change request through BrightCloud link below:',
};const moduleName = 'ipam';
const componentName = 'ipamdnsawscredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const setAwsCredentialsHeader = `${prefix}.setAwsCredentialsHeader`;
export const useIamRolesOption = `${prefix}.useIamRolesOption`;
export const useAccessKeysOption = `${prefix}.useAccessKeysOption`;
export const accessKeyIdInputLabel = `${prefix}.accessKeyIdInputLabel`;
export const accessKeyIdInputPlaceholder = `${prefix}.accessKeyIdInputPlaceholder`;
export const secretAccessKeyInputLabel = `${prefix}.secretAccessKeyInputLabel`;
export const secretAccessKeyInputPlaceholder = `${prefix}.secretAccessKeyInputPlaceholder`;
export const regionInputLabel = `${prefix}.regionInputLabel`;
export const regionInputPlaceholder = `${prefix}.regionInputPlaceholder`;
export const accessAwsThroughProxyInputLabel = `${prefix}.accessAwsThroughProxyInputLabel`;
export const proxyHostInputLabel = `${prefix}.proxyHostInputLabel`;
export const proxyPortInputLabel = `${prefix}.proxyPortInputLabel`;
export const proxyHostInputPlaceholder = `${prefix}.proxyHostInputPlaceholder`;
export const proxyPortInputPlaceholder = `${prefix}.proxyPortInputPlaceholder`;
export const proxyUsernameInputLabel = `${prefix}.proxyUsernameInputLabel`;
export const proxyUsernameInputPlaceholder = `${prefix}.proxyUsernameInputPlaceholder`;
export const proxyPasswordInputLabel = `${prefix}.proxyPasswordInputLabel`;
export const proxyPasswordPlaceholder = `${prefix}.proxyPasswordPlaceholder`;
export const useCrossAccountAssumeRoleInputLabel = `${prefix}.useCrossAccountAssumeRoleInputLabel`;
export const iamAssumeRoleInputLabel = `${prefix}.iamAssumeRoleInputLabel`;
export const proxyHeader = `${prefix}.proxyHeader`;

export const ENGLISH = {
    [setAwsCredentialsHeader]: 'Set AWS Credentials',
    [useIamRolesOption]: 'Use IAM Roles',
    [useAccessKeysOption]: 'Use Access Keys',
    [accessKeyIdInputLabel]: 'Access Key ID',
    [accessKeyIdInputPlaceholder]: 'Enter Access Key ID',
    [secretAccessKeyInputLabel]: 'Secret Access Key',
    [secretAccessKeyInputPlaceholder]: 'Enter Secret Access Key',
    [regionInputLabel]: 'Region',
    [regionInputPlaceholder]: 'Enter Region',
    [accessAwsThroughProxyInputLabel]: 'Access AWS through Proxy',
    [proxyHostInputLabel]: 'Host IP Address',
    [proxyHostInputPlaceholder]: 'Enter Host IP Address',
    [proxyPortInputPlaceholder]: 'Enter Port',
    [proxyPortInputLabel]: 'Port',
    [proxyUsernameInputLabel]: 'Username',
    [proxyUsernameInputPlaceholder]: 'Enter Username',
    [proxyPasswordInputLabel]: 'Password',
    [proxyPasswordPlaceholder]: 'Enter Password',
    [proxyHeader]: 'Proxy',
};const moduleName = 'ipam';
const componentName = 'ipamdnsazureprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const credentialSectionHeader = `${prefix}.credentialSectionHeader`;
export const valueNotSetPlaceholder = `${prefix}.valueNotSetPlaceholder`;
export const subscriptionIdInputLabel = `${prefix}.subscriptionIdInputLabel`;
export const tenantNameInputLabel = `${prefix}.tenantNameInputLabel`;
export const applicationIdInputLabel = `${prefix}.applicationIdInputLabel`;
export const authenticationTokenInputLabel = `${prefix}.authenticationTokenInputLabel`;
export const tenantIdInputLabel = `${prefix}.tenantIdInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const azureSectionHeader = `${prefix}.azureSectionHeader`;

export const ENGLISH = {
    [credentialSectionHeader]: 'Credentials',
    [valueNotSetPlaceholder]: 'Not Set',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [subscriptionIdInputLabel]: 'Subscription ID',
    [tenantNameInputLabel]: 'Tenant Name',
    [applicationIdInputLabel]: 'Application ID',
    [authenticationTokenInputLabel]: 'Authentication Key',
    [tenantIdInputLabel]: 'Tenant ID',
    [azureSectionHeader]: 'Azure',
};const moduleName = 'ipreputationdb';
const componentName = 'ipreputationdblistpageheader';
const prefix = `${moduleName}.${componentName}`;

export const ipReputationTitle = `${prefix}.ipReputationTitle`;
export const registerControllerMessage = `${prefix}.registerControllerMessage`;
export const registerControllerButtonLabel = `${prefix}.registerControllerButtonLabel`;
export const enableIPReputationSyncMessage = `${prefix}.enableIPReputationSyncMessage`;
export const editCloudServicesSettingsButtonLabel = `${prefix}.editCloudServicesSettingsButtonLabel`;

export const ENGLISH = {
    [ipReputationTitle]: 'IP Reputation',
    [registerControllerMessage]: 'Register your controller and easily stay current with IP ' +
        'Reputation updates.',
    [registerControllerButtonLabel]: 'Register Controller',
    [enableIPReputationSyncMessage]: 'Keep IP Reputation DB uptodate by enabling IP Reputation ' +
        'autoupdate in Pulse.',
    [editCloudServicesSettingsButtonLabel]: 'Edit Cloud Services Settings',
};const moduleName = 'ipam';
const componentName = 'ipamdnsopenstackprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleCustom = `${prefix}.sectionTitleCustom`;
export const customIpamDnsProfileInputLabel = `${prefix}.customIpamDnsProfileInputLabel`;
export const customIpamDnsProfileInputPlaceholder = `${prefix}.customIpamDnsProfileInputPlaceholder`;
export const usableDomainsGridLabel = `${prefix}.usableDomainsGridLabel`;
export const usableDomainLabel = `${prefix}.usableDomainLabel`;
export const scriptParamsGridLabel = `${prefix}.scriptParamsGridLabel`;
export const addScriptParamsLabel = `${prefix}.addScriptParamsLabel`;

export const ENGLISH = {
    [sectionTitleCustom]: 'Custom',
    [customIpamDnsProfileInputLabel]: 'Custom IPAMDNS Profile',
    [customIpamDnsProfileInputPlaceholder]: 'Select Custom IPAMDNS Profile',
    [usableDomainsGridLabel]: 'Usable Domains ({0})',
    [usableDomainLabel]: 'Usable Domain',
    [scriptParamsGridLabel]: 'Script Params ({0})',
    [addScriptParamsLabel]: 'Add Script Params',
};const moduleName = 'ipam';
const componentName = 'customipamdnsprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const scriptInputLabel = `${prefix}.scriptInputLabel`;
export const scriptHeaderWithCount = `$${prefix}.scriptHeaderWithCount`;
export const addButtonLabel = `${prefix}.addButtonLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Custom IPAMDNS Profile: {0}',
    [modalTitleNew]: 'New Custom IPAMDNS Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Enter Name',
    [scriptInputLabel]: 'Script',
    [scriptHeaderWithCount]: 'Script Params ({0})',
    [addButtonLabel]: 'Add',
};const moduleName = 'ipam';
const componentName = 'infobloxusablesubnetsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const columnTitleIpv4 = `${prefix}.columnTitleIpv4`;
export const columnTitleIpv6 = `${prefix}.columnTitleIpv6`;
export const ipv4SelectPlaceholder = `${prefix}.ipv4SelectPlaceholder`;
export const ipv6SelectPlaceholder = `${prefix}.ipv6SelectPlaceholder`;
export const usableSubnetsGridHeader = `${prefix}.usableSubnetsGridHeader`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [columnTitleIpv4]: 'IPv4',
    [columnTitleIpv6]: 'IPv6',
    [ipv4SelectPlaceholder]: 'Select IPv4 Subnet',
    [ipv6SelectPlaceholder]: 'Select IPv6 Subnet',
    [usableSubnetsGridHeader]: 'Usable Subnets ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsinfobloxcredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const setInfobloxCredentialsHeader = `${prefix}.setInfobloxCredentialsHeader`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const ipAddressInputPlaceholder = `${prefix}.ipAddressInputPlaceholder`;
export const networkViewInputLabel = `${prefix}.networkViewInputLabel`;
export const networkViewInputPlaceholder = `${prefix}.networkViewInputPlaceholder`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const usernameInputPlaceholder = `${prefix}.usernameInputPlaceholder`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const dnsViewInputLabel = `${prefix}.dnsViewInputLabel`;
export const dnsViewInputPlaceholder = `${prefix}.dnsViewInputPlaceholder`;

export const ENGLISH = {
    [setInfobloxCredentialsHeader]: 'Set Infoblox Credentials',
    [ipAddressInputLabel]: 'IP Address or FQDN',
    [ipAddressInputPlaceholder]: 'Enter IP Address or FQDN',
    [networkViewInputLabel]: 'Network View',
    [dnsViewInputLabel]: 'DNS View',
    [dnsViewInputPlaceholder]: 'Enter DNS View',
    [networkViewInputPlaceholder]: 'Enter Network View',
    [usernameInputLabel]: 'Username',
    [usernameInputPlaceholder]: 'Enter Username',
    [passwordInputLabel]: 'Password',
    [passwordInputPlaceholder]: 'Enter Password',
};const moduleName = 'ipam';
const componentName = 'infobloxusabledomainsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const columnTitleUsableDomain = `${prefix}.columnTitleUsableDomain`;
export const domainSelectPlaceholder = `${prefix}.domainSelectPlaceholder`;
export const usableDomainsGridHeader = `${prefix}.usableDomainsGridHeader`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [columnTitleUsableDomain]: 'Usable Domain',
    [domainSelectPlaceholder]: 'Select Usable Domain',
    [usableDomainsGridHeader]: 'Usable Domains ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsazurecredentialsdialog';
const prefix = `${moduleName}.${componentName}`;

export const setAzureCredentialsHeader = `${prefix}.setAzureCredentialsHeader`;
export const subscriptionIdInputLabel = `${prefix}.subscriptionIdInputLabel`;
export const useUsernamePasswordCredentialsOption = `${prefix}.useUsernamePasswordCredentialsOption`;
export const useApplicationIdCredentialsOption = `${prefix}.useApplicationIdCredentialsOption`;
export const tenantNameInputLabel = `${prefix}.tenantNameInputLabel`;
export const applicationIdInputLabel = `${prefix}.applicationIdInputLabel`;
export const authenticationTokenInputLabel = `${prefix}.authenticationTokenInputLabel`;
export const tenantIdInputLabel = `${prefix}.tenantIdInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const tenantNameInputPlaceholder = `${prefix}.tenantNameInputPlaceholder`;
export const applicationIdInputPlaceholder = `${prefix}.applicationIdInputPlaceholder`;
export const authenticationTokenInputPlaceholder = `${prefix}.authenticationTokenInputPlaceholder`;
export const tenantIdInputPlaceholder = `${prefix}.tenantIdInputPlaceholder`;
export const usernameInputPlaceholder = `${prefix}.usernameInputPlaceholder`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const subscriptionIdInputPlaceholder = `${prefix}.subscriptionIdInputPlaceholder`;

export const ENGLISH = {
    [setAzureCredentialsHeader]: 'Set Azure Credentials',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [subscriptionIdInputLabel]: 'Subscription ID',
    [useUsernamePasswordCredentialsOption]: 'Use UsernamePassword credentials',
    [useApplicationIdCredentialsOption]: 'Use Application ID credentials',
    [tenantNameInputLabel]: 'Tenant Name',
    [applicationIdInputLabel]: 'Application ID',
    [authenticationTokenInputLabel]: 'Authentication Key',
    [tenantIdInputLabel]: 'Tenant ID',
    [usernameInputPlaceholder]: 'Enter Username',
    [passwordInputPlaceholder]: 'Enter Password',
    [subscriptionIdInputPlaceholder]: 'Enter Subscription ID',
    [tenantNameInputPlaceholder]: 'Enter Tenant Name',
    [applicationIdInputPlaceholder]: 'Enter Application ID',
    [authenticationTokenInputPlaceholder]: 'Enter Authentication Key',
    [tenantIdInputPlaceholder]: 'Enter Tenant ID',
};const moduleName = 'ipam';
const componentName = 'internaldnsservicedomainsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const columnTitleDomainName = `${prefix}.columnTitleDomainName`;
export const columnTitleRecordTtl = `${prefix}.columnTitleRecordTtl`;
export const domainNameInputPlaceholder = `${prefix}.domainNameInputPlaceholder`;
export const recordTtlInputPlaceholder = `${prefix}.recordTtlInputPlaceholder`;
export const dnsServiceDomainsGridHeader = `${prefix}.dnsServiceDomainsGridHeader`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [columnTitleDomainName]: 'Domain Name',
    [columnTitleRecordTtl]: 'Override Record TTL',
    [domainNameInputPlaceholder]: 'Enter Domain Name',
    [recordTtlInputPlaceholder]: 'Enter Record TTL (Seconds)',
    [dnsServiceDomainsGridHeader]: 'DNS Service Domains ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsopenstackprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const openStackHeader = `${prefix}.openStackHeader`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const usernameInputPlaceholder = `${prefix}.usernameInputPlaceholder`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const tenantInputLabel = `${prefix}.tenantInputLabel`;
export const tenantInputPlaceholder = `${prefix}.tenantInputPlaceholder`;
export const keystoneHostInputLabel = `${prefix}.keystoneHostInputLabel`;
export const keystoneHostInputPlaceholder = `${prefix}.keystoneHostInputPlaceholder`;
export const vipNetworkNameInputLabel = `${prefix}.vipNetworkNameInputLabel`;
export const vipNetworkNameInputPlaceholder = `${prefix}.vipNetworkNameInputPlaceholder`;
export const regionInputLabel = `${prefix}.regionInputLabel`;
export const regionInputPlaceholder = `${prefix}.regionInputPlaceholder`;

export const ENGLISH = {
    [openStackHeader]: 'OpenStack',
    [usernameInputLabel]: 'Username',
    [usernameInputPlaceholder]: 'Enter Username',
    [passwordInputLabel]: 'Password',
    [passwordInputPlaceholder]: 'Enter Password',
    [tenantInputLabel]: 'Tenant',
    [tenantInputPlaceholder]: 'Enter Tenant',
    [keystoneHostInputLabel]: 'Keystone Host',
    [keystoneHostInputPlaceholder]: 'Enter Keystone Host',
    [vipNetworkNameInputLabel]: 'Network',
    [vipNetworkNameInputPlaceholder]: 'Enter Network',
    [regionInputLabel]: 'Region',
    [regionInputPlaceholder]: 'Enter Region',
};const moduleName = 'l4policy';
const componentName = 'l4ruleportmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const portMatchLabel = `${prefix}.portMatchLabel`;

export const ENGLISH = {
    [portMatchLabel]: 'Service Port',
};const moduleName = 'ipam';
const componentName = 'ipamdnsinfobloxprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const credentialSectionHeader = `${prefix}.credentialSectionHeader`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const networkViewInputLabel = `${prefix}.networkViewInputLabel`;
export const dnsViewInputLabel = `${prefix}.dnsViewInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const valueNotSetPlaceholder = `${prefix}.valueNotSetPlaceholder`;
export const infobloxHeader = `${prefix}.infobloxHeader`;
export const settingsSectionHeader = `${prefix}.settingsSectionHeader`;
export const wapiVersionInputLabel = `${prefix}.wapiVersionInputLabel`;
export const wapiVersionInputPlaceholder = `${prefix}.wapiVersionInputPlaceholder`;
export const extensibleAttributesGridHeader = `${prefix}.extensibleAttributesGridHeader`;

export const ENGLISH = {
    [credentialSectionHeader]: 'Credentials',
    [ipAddressInputLabel]: 'IP Address or FQDN',
    [networkViewInputLabel]: 'Network View',
    [dnsViewInputLabel]: 'DNS View',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [valueNotSetPlaceholder]: 'Not Set',
    [infobloxHeader]: 'Infoblox',
    [settingsSectionHeader]: 'Settings',
    [wapiVersionInputLabel]: 'WAPI Version',
    [wapiVersionInputPlaceholder]: 'Enter WAPI Version',
    [extensibleAttributesGridHeader]: 'Extensible Attributes ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsinternalprofileconfig';
const prefix = `${moduleName}.${componentName}`;

export const cloudInputLabel = `${prefix}.cloudInputLabel`;
export const cloudInputPlaceholder = `${prefix}.cloudInputPlaceholder`;
export const cloudFieldDescription = `${prefix}.cloudFieldDescription`;
export const defaultTtlInputLabel = `${prefix}.defaultTtlInputLabel`;
export const defaultTtlInputPlaceholder = `${prefix}.defaultTtlInputPlaceholder`;
export const secondsInnerText = `${prefix}.secondsInnerText`;

export const ENGLISH = {
    [cloudInputLabel]: 'Cloud',
    [cloudInputPlaceholder]: 'Select Cloud',
    [cloudFieldDescription]: 'Select Cloud to use for Usable Network',
    [defaultTtlInputLabel]: 'Default Record TTL for all domains',
    [defaultTtlInputPlaceholder]: 'Enter Default Record TTL for all domains',
    [secondsInnerText]: 'Seconds',
};const moduleName = 'ipam';
const componentName = 'internalipamusablenetworksgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const columnTitleNetwork = `${prefix}.columnTitleNetwork`;
export const networkSelectPlaceholder = `${prefix}.networkSelectPlaceholder`;
export const usableNetworksGridHeader = `${prefix}.usableNetworksGridHeader`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [removeButtonLabel]: 'Remove',
    [columnTitleNetwork]: 'Network',
    [networkSelectPlaceholder]: 'Select Network',
    [usableNetworksGridHeader]: 'Usable Networks ({0})',
};const moduleName = 'ipam';
const componentName = 'ipamdnsprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const typeDropdownLabel = `${prefix}.typeDropdownLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeDropdownPlaceholder = `${prefix}.typeDropdownPlaceholder`;
export const sectionTitleInfoblox = `${prefix}.sectionTitleInfoblox`;
export const allocateIpInVrfCheckboxLabel = `${prefix}.allocateIpInVrfCheckboxLabel`;
export const aviVantageSectionHeader = `${prefix}.aviVantageSectionHeader`;
export const sectionTitleCustom = `${prefix}.sectionTitleCustom`;
export const sectionTitleOpenstack = `${prefix}.sectionTitleOpenstack`;
export const sectionTitleAzure = `${prefix}.sectionTitleAzure`;
export const sectionTitleAws = `${prefix}.sectionTitleAws`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit IPAMDNS Profile: {0}',
    [modalTitleNew]: 'New IPAMDNS Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [typeDropdownLabel]: 'Type',
    [nameInputPlaceholder]: 'Enter Name',
    [typeDropdownPlaceholder]: 'Select Type',
    [sectionTitleInfoblox]: 'Infoblox',
    [aviVantageSectionHeader]: 'Avi Vantage',
    [allocateIpInVrfCheckboxLabel]: 'Allocate IP in VRF',
    [sectionTitleCustom]: 'Custom',
    [sectionTitleOpenstack]: 'OpenStack',
    [sectionTitleAzure]: 'Azure',
    [sectionTitleAws]: 'AWS',
};const moduleName = 'l4policy';
const componentName = 'l4ruleprotocolmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const protocolMatchLabel = `${prefix}.protocolMatchLabel`;

export const ENGLISH = {
    [protocolMatchLabel]: 'Protocol',
};const moduleName = 'l4policy';
const componentName = 'l4ruleselectpoolaction';
const prefix = `${moduleName}.${componentName}`;

export const actionHeader = `${prefix}.actionHeader`;
export const actionTypeRadioLabelPool = `${prefix}.actionTypeRadioLabelPool`;
export const actionTypeRadioLabelPoolGroup = `${prefix}.actionTypeRadioLabelPoolGroup`;
export const poolLabel = `${prefix}.poolLabel`;
export const poolInputPlaceholder = `${prefix}.poolInputPlaceholder`;
export const poolGroupLabel = `${prefix}.poolGroupLabel`;
export const poolGroupInputPlaceholder = `${prefix}.poolGroupInputPlaceholder`;

export const ENGLISH = {
    [actionHeader]: 'Passthrough served by',
    [actionTypeRadioLabelPool]: 'Pool',
    [actionTypeRadioLabelPoolGroup]: 'Pool Group',
    [poolLabel]: 'Pool',
    [poolInputPlaceholder]: 'Select a Pool',
    [poolGroupLabel]: 'Pool Group',
    [poolGroupInputPlaceholder]: 'Select a Pool Group',
};const moduleName = 'launchconfig';
const componentName = 'launchconfigmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameLabel = `${prefix}.nameLabel`;
export const namePlaceholder = `${prefix}.namePlaceholder`;
export const useExternalAsgLabel = `${prefix}.useExternalAsgLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Launch Config: {0}',
    [modalTitleNew]: 'New Launch Config: {0}',
    [sectionTitleGeneral]: 'General',
    [namePlaceholder]: 'Enter Name',
    [useExternalAsgLabel]: 'Use External ASG',
};const moduleName = 'l4policy';
const componentName = 'l4policysetmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleNew = `${prefix}.modalTitleNew`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const policySetNameLabel = `${prefix}.policySetNameLabel`;
export const policySetDescriptionLabel = `${prefix}.policySetDescriptionLabel`;
export const l4ConnectionPolicySectionTitle = `${prefix}.l4ConnectionPolicySectionTitle`;
export const l4RuleGridTitle = `${prefix}.l4RuleGridTitle`;
export const addRuleBtnLabel = `${prefix}.addRuleBtnLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const enterNameLabel = `${prefix}.enterNameLabel`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const enterDescriptionLabel = `${prefix}.enterDescriptionLabel`;
export const columnTitleEnabled = `${prefix}.columnTitleEnabled`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const editLabel = `${prefix}.editLabel`;
export const deleteLabel = `${prefix}.deleteLabel`;
export const addLabel = `${prefix}.addLabel`;
export const selectPoolActionLabel = `${prefix}.selectPoolActionLabel`;

export const ENGLISH = {
    [modalTitleNew]: 'New L4 Policy Set: {0}',
    [modalTitleEdit]: 'Edit L4 Policy Set: {0}',
    [generalSectionTitle]: 'General',
    [policySetNameLabel]: 'Name',
    [policySetDescriptionLabel]: 'Description',
    [l4ConnectionPolicySectionTitle]: 'L4 Connection Policy',
    [enterNameLabel]: 'Enter Name',
    [descriptionLabel]: 'Description',
    [enterDescriptionLabel]: 'Enter Description',
    [columnTitleEnabled]: 'Enabled',
    [columnTitleName]: 'Name',
    [l4RuleGridTitle]: 'Rules',
    [editLabel]: 'Edit',
    [deleteLabel]: 'Delete',
    [addLabel]: 'Add',
    [selectPoolActionLabel]: 'Passthrough served by {0}',
};const moduleName = 'l4policy';
const componentName = 'l4rulemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleNew = `${prefix}.modalTitleNew`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const actionSectionTitle = `${prefix}.actionSectionTitle`;
export const matchSectionTitle = `${prefix}.matchSectionTitle`;
export const nameLabel = `${prefix}.nameLabel`;
export const enterNameLabel = `${prefix}.enterNameLabel`;
export const enableRuleLabel = `${prefix}.enableRuleLabel`;
export const clientIpLabel = `${prefix}.clientIpLabel`;
export const protocolLabel = `${prefix}.protocolLabel`;
export const servicePortsLabel = `${prefix}.servicePortsLabel`;

export const ENGLISH = {
    [modalTitleNew]: 'New L4 Rule: {0}',
    [modalTitleEdit]: 'Edit L4 Rule: {0}',
    [generalSectionTitle]: 'General',
    [actionSectionTitle]: 'Action',
    [matchSectionTitle]: 'Match',
    [enterNameLabel]: 'Enter Name',
    [enableRuleLabel]: 'Enable Rule',
    [clientIpLabel]: 'Client IP',
    [protocolLabel]: 'Protocol',
    [servicePortsLabel]: 'Service Ports',
};const moduleName = 'licensing';
const componentName = 'licensesummarycard';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;
export const usagePercentage = `${prefix}.usagePercentage`;
export const serviceCoreLicensesLabel = `${prefix}.serviceCoreLicensesLabel`;
export const cloudServicesAvailableLicensesLabel = `${prefix}.cloudServicesAvailableLicensesLabel`;
export const controllerMaxAllowedLabel = `${prefix}.controllerMaxAllowedLabel`;
export const reservedLicensesLabel = `${prefix}.reservedLicensesLabel`;

export const ENGLISH = {
    [title]: 'License',
    [controllerMaxAllowedLabel]: 'Controller Max Allowed',
    [reservedLicensesLabel]: 'Reserved Licenses',
};const moduleName = 'licensing';
const componentName = 'licensetierselectcard';
const prefix = `${moduleName}.${componentName}`;

export const tierHeader = `${prefix}.tierHeader`;
export const numberOfLicenses = `${prefix}.numberOfLicenses`;

export const ENGLISH = {
    [tierHeader]: '{0} Tier',
    [numberOfLicenses]: '{0} Service Core Licenses',
};const moduleName = 'licensing';
const componentName = 'licenseaddpanel';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;
export const applyKeyLabel = `${prefix}.applyKeyLabel`;
export const licenseKeyFieldLabel = `${prefix}.licenseKeyFieldLabel`;
export const licenseKeyLabel = `${prefix}.licenseKeyLabel`;
export const licenseKeyPlaceholder = `${prefix}.licenseKeyPlaceholder`;
export const uploadLicenseLabel = `${prefix}.uploadLicenseLabel`;
export const uploadLicenseFileFieldLabel = `${prefix}.uploadLicenseFileFieldLabel`;
export const licenseAddSuccessMessage = `${prefix}.licenseAddSuccessMessage`;

export const ENGLISH = {
    [title]: 'Add License',
    [applyKeyLabel]: 'Apply Key',
    [licenseKeyFieldLabel]: 'Enter a License Key',
    [licenseKeyLabel]: 'License Key',
    [licenseKeyPlaceholder]: 'XXXXXXXXXXXXXXXXXXXXXXXXX',
    [uploadLicenseLabel]: 'Upload License',
    [uploadLicenseFileFieldLabel]: 'Upload a License File (.lic)',
    [licenseAddSuccessMessage]: 'License key successfully applied.',
};const moduleName = 'l4policy';
const componentName = 'l4ruleportmatch';
const prefix = `${moduleName}.${componentName}`;

export const portsLabel = `${prefix}.portsLabel`;
export const portsInputPlaceholder = `${prefix}.portsInputPlaceholder`;
export const portsHelperText = `${prefix}.portsHelperText`;

export const ENGLISH = {
    [portsLabel]: 'Ports',
    [portsInputPlaceholder]: 'Enter Ports',
    [portsHelperText]: 'Accepts single value, comma separate, and ranges',
};const moduleName = 'login';
const componentName = 'alblogin';
const prefix = `${moduleName}.${componentName}`;

export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const forgotPassword = `${prefix}.forgotPassword`;
export const logIn = `${prefix}.logIn`;

export const ENGLISH = {
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [forgotPassword]: 'Forgot your password?',
    [logIn]: 'Log In',
};const moduleName = 'licensing';
const componentName = 'licensingpageheader';
const prefix = `${moduleName}.${componentName}`;

export const unlockMoreFeaturesMessage = `${prefix}.unlockMoreFeaturesMessage`;
export const licensingLabel = `${prefix}.licensingLabel`;
export const learnMoreBtnLabel = `${prefix}.learnMoreBtnLabel`;

export const ENGLISH = {
    [unlockMoreFeaturesMessage]: 'Unlock more features and possibilities with Enterprise edition.',
    [licensingLabel]: 'Licensing',
    [learnMoreBtnLabel]: 'Learn More',
};const moduleName = 'login';
const componentName = 'loginpage';
const prefix = `${moduleName}.${componentName}`;

export const recoveryInstructionSent = `${prefix}.recoveryInstructionSent`;

export const ENGLISH = {
    [recoveryInstructionSent]: 'Recovery instruction sent to email',
};const moduleName = 'login';
const componentName = 'adminusersetup';
const prefix = `${moduleName}.${componentName}`;

export const passwordFieldPlaceholder = `${prefix}.passwordFieldPlaceholder`;
export const confirmPasswordFieldPlaceholder = `${prefix}.confirmPasswordFieldPlaceholder`;
export const emailFieldPlaceholder = `${prefix}.emailFieldPlaceholder`;
export const createAccountButtonLabel = `${prefix}.createAccountButtonLabel`;
export const samePasswordUsernameErrorMessage = `${prefix}.samePasswordUsernameErrorMessage`;

export const ENGLISH = {
    [passwordFieldPlaceholder]: 'Password',
    [confirmPasswordFieldPlaceholder]: 'Confirm Password',
    [emailFieldPlaceholder]: 'Email Address (Optional)',
    [createAccountButtonLabel]: 'Create Account',
    [samePasswordUsernameErrorMessage]: 'Password should not be the same as username',
};const moduleName = 'licensing';
const componentName = 'licenseusagecard';
const prefix = `${moduleName}.${componentName}`;

export const serviceUnitsUsageHeader = `${prefix}.serviceUnitsUsageHeader`;
export const usedServiceUnitsLabel = `${prefix}.usedServiceUnitsLabel`;
export const unlicensedLabel = `${prefix}.unlicensedLabel`;

export const ENGLISH = {
    [serviceUnitsUsageHeader]: 'Service Units Usage',
    [usedServiceUnitsLabel]: 'Used Service Units',
    [unlicensedLabel]: 'Unlicensed',
};const moduleName = 'logs';
const componentName = 'recommendationdialog';
const prefix = `${moduleName}.${componentName}`;

export const recommendationHeader = `${prefix}.recommendationHeader`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const acceptRecommendationButtonLabel = `${prefix}.acceptRecommendationButtonLabel`;
export const alreadyAppliedAlertMessage = `${prefix}.alreadyAppliedAlertMessage`;
export const failedAlertMessage = `${prefix}.failedAlertMessage`;
export const logNotAvailableAlertMessage = `${prefix}.logNotAvailableAlertMessage`;
export const recommendationsMessage = `${prefix}.recommendationsMessage`;

export const ENGLISH = {
    [recommendationHeader]: 'Recommendation',
    [cancelButtonLabel]: 'Cancel',
    [acceptRecommendationButtonLabel]: 'Accept Recommendation',
    [alreadyAppliedAlertMessage]: 'All recommendations are already applied.',
    [failedAlertMessage]: 'Could not generate recommendations.',
    [logNotAvailableAlertMessage]: 'Could not find matching transaction, please refresh Logs page.',
    [recommendationsMessage]: 'The system has prepared these recommendations, in case the corresponding request is believed to be a false positive. Please review the proposed changes, the reasoning and the associated risk.',
};const moduleName = 'login';
const componentName = 'resetpassword';
const prefix = `${moduleName}.${componentName}`;

export const forgotPassword = `${prefix}.forgotPassword`;
export const enterEmailAddress = `${prefix}.enterEmailAddress`;
export const signIn = `${prefix}.signIn`;
export const sendInstructions = `${prefix}.sendInstructions`;

export const ENGLISH = {
    [forgotPassword]: 'Forgot your password?',
    [enterEmailAddress]: `Enter the email address on file for your account and
        we'll send you instructions on how to change your password.`,
    [signIn]: 'Sign in',
    [sendInstructions]: 'Send Recovery Instructions',
};const moduleName = 'match';
const componentName = 'authattributematch';
const prefix = `${moduleName}.${componentName}`;

export const attributeNameLabel = `${prefix}.attributeNameLabel`;
export const attributeNamePlaceholder = `${prefix}.attributeNamePlaceholder`;

export const ENGLISH = {
    [attributeNameLabel]: 'Attribute Name',
    [attributeNamePlaceholder]: 'Enter Attribute Name',
};const moduleName = 'match';
const componentName = 'generichdrmatch';
const prefix = `${moduleName}.${componentName}`;

export const criteriaLabel = `${prefix}.criteriaLabel`;
export const criteriaPlaceholder = `${prefix}.criteriaPlaceholder`;
export const selectIpGroupPlaceholder = `${prefix}.selectIpGroupPlaceholder`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const valuesInputPlaceholder = `${prefix}.valuesInputPlaceholder`;
export const valueInputPlaceholder = `${prefix}.valueInputPlaceholder`;

export const ENGLISH = {
    [criteriaLabel]: 'Criteria',
    [criteriaPlaceholder]: 'Select Criteria',
    [selectIpGroupPlaceholder]: 'Select IP Group',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [valuesInputPlaceholder]: 'Enter Values',
    [valueInputPlaceholder]: 'Enter Value',
};const moduleName = 'licensing';
const componentName = 'licensetierswitchmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitle = `${prefix}.modalTitle`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;
export const switchLicenseHeader = `${prefix}.switchLicenseHeader`;
export const controllerDeregistrationMessage = `${prefix}.controllerDeregistrationMessage`;
export const insufficientLicensesMessage = `${prefix}.insufficientLicensesMessage`;
export const unlockMoreFeaturesMessage = `${prefix}.unlockMoreFeaturesMessage`;
export const someFeaturesOnlyAvailableMessage = `${prefix}.someFeaturesOnlyAvailableMessage`;
export const reserveServiceUnitsLabel = `${prefix}.reserveServiceUnitsLabel`;
export const reserveServiceUnitsPlaceholder = `${prefix}.reserveServiceUnitsPlaceholder`;
export const maxServiceUnitsLabel = `${prefix}.maxServiceUnitsLabel`;
export const maxServiceUnitsPlaceholder = `${prefix}.maxServiceUnitsPlaceholder`;
export const learnMoreLabel = `${prefix}.learnMoreLabel`;

export const ENGLISH = {
    [modalTitle]: 'Licensing',
    [submitButtonLabel]: 'Save',
    [switchLicenseHeader]: 'Tier Switching',
    [controllerDeregistrationMessage]: 'In order to switch to {0} the controller will be deregistered from Cloud Services.',
    [insufficientLicensesMessage]: 'Insufficient Service Core Licenses to switch to {0} License',
    [unlockMoreFeaturesMessage]: 'Unlock more features and possibilities with {0} License',
    [someFeaturesOnlyAvailableMessage]: 'Some features are only available in {0}, switching to {1} will deactivate these features',
    [reserveServiceUnitsLabel]: 'Number of Reserved Licenses',
    [reserveServiceUnitsPlaceholder]: 'Enter Number of Reserved Licenses',
    [maxServiceUnitsLabel]: 'Maximum Allowed Licenses',
    [maxServiceUnitsPlaceholder]: 'Enter Maximum Allowed Licenses',
    [learnMoreLabel]: 'Learn More',
};const moduleName = 'match';
const componentName = 'botclassmatcher';
const prefix = `${moduleName}.${componentName}`;

export const classTypesLabel = `${prefix}.classTypesLabel`;
export const selectClientTypePlaceholder = `${prefix}.selectClassTypeLabel`;

export const ENGLISH = {
    [classTypesLabel]: 'Class Types',
    [selectClientTypePlaceholder]: 'Select Class Types',
};const moduleName = 'match';
const componentName = 'bottypematcher';
const prefix = `${moduleName}.${componentName}`;

export const clientTypesLabel = `${prefix}.clientTypesLabel`;
export const selectClientTypesPlaceholder = `${prefix}.selectClassTypeLabel`;

export const ENGLISH = {
    [clientTypesLabel]: 'Client Types',
    [selectClientTypesPlaceholder]: 'Select Client Types',
};const moduleName = 'logs';
const componentName = 'recommendationgrid';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleRecommendations = `${prefix}.columnTitleRecommendations`;
export const noRecommendationsPlaceholder = `${prefix}.noRecommendationsPlaceholder`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const reasoningLabel = `${prefix}.reasoningLabel`;
export const actionRiskAssesmentLabel = `${prefix}.actionRiskAssesmentLabel`;

export const ENGLISH = {
    [columnTitleRecommendations]: 'Recommendations',
    [noRecommendationsPlaceholder]: 'No recommendations found',
    [descriptionLabel]: 'Description',
    [reasoningLabel]: 'Reasoning',
    [actionRiskAssesmentLabel]: 'Action Risk Assesment',
};const moduleName = 'match';
const componentName = 'hosthdr';
const prefix = `${moduleName}.${componentName}`;

export const hostHeaderLabel = `${prefix}.hostHeaderLabel`;
export const criteriaLabel = `${prefix}.criteriaLabel`;
export const enterCriteriaLabel = `${prefix}.enterCriteriaLabel`;
export const valueLabel = `${prefix}.valueLabel`;
export const enterValuesLabel = `${prefix}.enterValuesLabel`;
export const addValueLabel = `${prefix}.addValueLabel`;

export const ENGLISH = {
    [hostHeaderLabel]: 'Host Header',
    [criteriaLabel]: 'Criteria',
    [enterCriteriaLabel]: 'Enter Criteria',
    [addValueLabel]: 'Add Value',
    [enterValuesLabel]: 'Enter Values',
};const moduleName = 'match';
const componentName = 'hdrmatch';
const prefix = `${moduleName}.${componentName}`;

export const criteriaLabel = `${prefix}.criteriaLabel`;
export const criteriaPlaceholder = `${prefix}.criteriaPlaceholder`;
export const selectIpGroupPlaceholder = `${prefix}.selectIpGroupPlaceholder`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const valueInputPlaceholder = `${prefix}.valueInputPlaceholder`;

export const ENGLISH = {
    [criteriaLabel]: 'Criteria',
    [criteriaPlaceholder]: 'Select Criteria',
    [selectIpGroupPlaceholder]: 'Select IP Group',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [valueInputPlaceholder]: 'Enter Values',
};const moduleName = 'match';
const componentName = 'httpheader';
const prefix = `${moduleName}.${componentName}`;

export const methodLabel = `${prefix}.methodLabel`;
export const methodPlaceholder = `${prefix}.methodPlaceholder`;

export const ENGLISH = {
    [methodLabel]: 'Method',
    [methodPlaceholder]: 'Select Method',
};const moduleName = 'match';
const componentName = 'ipaddrmatch';
const prefix = `${moduleName}.${componentName}`;

export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const addItemButtonLabel = `${prefix}.addItemButtonLabel`;

export const ENGLISH = {
    [ipAddressLabel]: 'IP Address',
    [addItemButtonLabel]: 'Add Item',
};const moduleName = 'match';
const componentName = 'httpversionmatch';
const prefix = `${moduleName}.${componentName}`;

export const acceptedVersionsLabel = `${prefix}.acceptedVersionsLabel`;
export const selectHttpVersionPlaceHolder = `${prefix}.selectHttpVersionPlaceHolder`;

export const ENGLISH = {
    [acceptedVersionsLabel]: 'Accepted Versions',
    [selectHttpVersionPlaceHolder]: 'Select HTTP Version',
};const moduleName = 'match';
const componentName = 'ipaddrmatchentry';
const prefix = `${moduleName}.${componentName}`;

export const selectFromAvailableLabel = `${prefix}.selectFromAvailableLabel`;
export const enterCustomValueLabel = `${prefix}.enterCustomValueLabel`;
export const selectIpGroupPlaceholder = `${prefix}.selectIpGroupPlaceholder`;

export const ENGLISH = {
    [selectFromAvailableLabel]: 'Select From Available',
    [enterCustomValueLabel]: 'Enter Custom Value',
    [selectIpGroupPlaceholder]: 'Select IP Group',
};const moduleName = 'match';
const componentName = 'matchadder';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const noEntriesLabel = `${prefix}.noEntriesLabel`;
export const noAvailableMatchesLabel = `${prefix}.noAvailableMatchesLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [noEntriesLabel]: 'No entries have been added',
    [noAvailableMatchesLabel]: 'No available matches to add',
};const moduleName = 'match';
const componentName = 'ipreputationtypematch';
const prefix = `${moduleName}.${componentName}`;

export const ipReputationTypeLabel = `${prefix}.ipReputationTypeLabel`;
export const ipReputationTypePlaceholder = `${prefix}.ipReputationTypePlaceholder`;

export const ENGLISH = {
    [ipReputationTypeLabel]: 'IP Reputation Type',
    [ipReputationTypePlaceholder]: 'Select IP Reputation Type',
};const moduleName = 'match';
const componentName = 'jwtclaimmatchconfig';
const prefix = `${moduleName}.${componentName}`;

export const claimNameLabel = `${prefix}.claimNameLabel`;
export const claimNamePlaceholder = `${prefix}.claimNamePlaceholder`;
export const claimValueLabel = `${prefix}.claimValueLabel`;
export const claimValueMatchLabel = `${prefix}.claimValueMatchLabel`;
export const integerPlaceholder = `${prefix}.integerPlaceholder`;
export const typeDropdownLabel = `${prefix}.typeDropdownLabel`;
export const mandatoryLabel = `${prefix}.mandatoryLabel`;
export const validateLabel = `${prefix}.validateLabel`;
export const trueLabel = `${prefix}.trueLabel`;
export const falseLabel = `${prefix}.falseLabel`;

export const ENGLISH = {
    [claimNameLabel]: 'Claim Name',
    [claimNamePlaceholder]: 'Enter Claim Name',
    [typeDropdownLabel]: 'Type',
    [mandatoryLabel]: 'Mandatory',
    [validateLabel]: 'Validate',
    [claimValueLabel]: 'Claim Value',
    [claimValueMatchLabel]: 'Claim Value Match',
    [integerPlaceholder]: 'Enter Integer',
    [trueLabel]: 'True',
    [falseLabel]: 'False',
};const moduleName = 'match';
const componentName = 'jwtmatch';
const prefix = `${moduleName}.${componentName}`;

export const tokenNameLabel = `${prefix}.tokenNameLabel`;
export const tokenNamePlaceholder = `${prefix}.tokenNamePlaceholder`;
export const addClaimNameButtonLabel = `${prefix}.addClaimNameButtonLabel`;

export const ENGLISH = {
    [tokenNameLabel]: 'Token Name',
    [tokenNamePlaceholder]: 'Enter Token Name',
    [addClaimNameButtonLabel]: 'Add Claim Name',
};const moduleName = 'match';
const componentName = 'bottypematcherreadonly';
const prefix = `${moduleName}.${componentName}`;

export const clientTypeLabel = `${prefix}.clientTypeLabel`;

export const ENGLISH = {
    [clientTypeLabel]: 'Client Type',
};const moduleName = 'match';
const componentName = 'botclassmatcherreadonly';
const prefix = `${moduleName}.${componentName}`;

export const clientClassLabel = `${prefix}.clientClassLabel`;

export const ENGLISH = {
    [clientClassLabel]: 'Client Class',
};const moduleName = 'match';
const componentName = 'matchandactionwrapper';
const prefix = `${moduleName}.${componentName}`;

export const matchSectionHeader = `${prefix}.matchSectionHeader`;
export const actionSectionHeader = `${prefix}.actionSectionHeader`;

export const ENGLISH = {
    [matchSectionHeader]: 'Match',
    [actionSectionHeader]: 'Action',
};const moduleName = 'match';
const componentName = 'hdrmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const hdrLabel = `${prefix}.hdrLabel`;

export const ENGLISH = {
    [hdrLabel]: 'Header',
};const moduleName = 'match';
const componentName = 'httpmethodmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const httpMethodLabel = `${prefix}.httpMethodLabel`;

export const ENGLISH = {
    [httpMethodLabel]: 'HTTP Method',
};const moduleName = 'match';
const componentName = 'jwtmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const jwtLabel = `${prefix}.jwtLabel`;

export const ENGLISH = {
    [jwtLabel]: 'JSON Web Tokens (JWT)',
};const moduleName = 'match';
const componentName = 'ipaddrmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;

export const ENGLISH = {
    [clientIpAddressLabel]: 'Client IP Address',
};const moduleName = 'match';
const componentName = 'hosthdrmatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const hostHdrLabel = `${prefix}.hostHdrLabel`;

export const ENGLISH = {
    [hostHdrLabel]: 'Host Header',
};const moduleName = 'match';
const componentName = 'authattributematchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const authAttributeMatchLabel = `${prefix}.authAttributeMatchLabel`;

export const ENGLISH = {
    [authAttributeMatchLabel]: 'Attribute',
};const moduleName = 'nat';
const componentName = 'natruleexpandercontent';
const prefix = `${moduleName}.${componentName}`;

export const matchLabel = `${prefix}.matchLabel`;
export const actionLabel = `${prefix}.actionLabel`;
export const actionTypeLabel = `${prefix}.actionTypeLabel`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;

export const ENGLISH = {
    [matchLabel]: 'Match ({0})',
    [actionLabel]: 'Action',
    [actionTypeLabel]: 'Type',
    [ipAddressLabel]: 'IP Address',
};const moduleName = 'match';
const componentName = 'pathorquerymatch';
const prefix = `${moduleName}.${componentName}`;

export const criteriaDropdownLabel = `${prefix}.criteriaDropdownLabel`;
export const selectMethodPlaceholder = `${prefix}.selectMethodPlaceholder`;
export const stringLabel = `${prefix}.stringLabel`;
export const addItemButtonLabel = `${prefix}.addItemButtonLabel`;
export const enableMatchCaseLabel = `${prefix}.enableMatchCaseLabel`;
export const enterCustomValueLabel = `${prefix}.enterCustomValueLabel`;

export const ENGLISH = {
    [criteriaDropdownLabel]: 'Criteria',
    [selectMethodPlaceholder]: 'Select Method',
    [stringLabel]: 'String',
    [addItemButtonLabel]: 'Add Item',
    [enableMatchCaseLabel]: 'Enable Match Case',
    [enterCustomValueLabel]: 'Enter Custom Value',
};const moduleName = 'network';
const componentName = 'configurednetworksubnetexpander';
const prefix = `${moduleName}.${componentName}`;

export const ipSubnetLabel = `${prefix}.ipSubnetLabel`;
export const staticIpPoolsLabel = `${prefix}.staticIpPoolsLabel`;

export const ENGLISH = {
    [ipSubnetLabel]: 'IP Subnet (Configured)',
    [staticIpPoolsLabel]: 'Static IP Pools (Type)',
};const moduleName = 'match';
const componentName = 'pathorquerymatchreadonly';
const prefix = `${moduleName}.${componentName}`;

export const pathLabel = `${prefix}.pathLabel`;
export const stringLabel = `${prefix}.stringLabel`;
export const queryLabel = `${prefix}.queryLabel`;

export const ENGLISH = {
    [pathLabel]: 'Path',
    [stringLabel]: 'String',
    [queryLabel]: 'Query',
};const moduleName = 'match';
const componentName = 'portmatch';
const prefix = `${moduleName}.${componentName}`;

export const portMatchLabel = `${prefix}.portMatchLabel`;
export const portMatchInputPlaceholder = `${prefix}.portMatchInputPlaceholder`;
export const portMatchHelperText = `${prefix}.portMatchHelperText`;

export const ENGLISH = {
    [portMatchLabel]: 'Ports',
    [portMatchInputPlaceholder]: 'Enter Port',
    [portMatchHelperText]: 'Accepts single value, comma separate, and ranges',
};const moduleName = 'match';
const componentName = 'stringmatchconfig';
const prefix = `${moduleName}.${componentName}`;

export const criteriaDropdownLabel = `${prefix}.criteriaDropdownLabel`;
export const stringLabel = `${prefix}.stringLabel`;
export const addItemButtonLabel = `${prefix}.addItemButtonLabel`;

export const ENGLISH = {
    [criteriaDropdownLabel]: 'Criteria',
    [stringLabel]: 'String',
    [addItemButtonLabel]: 'Add Item',
};const moduleName = 'network';
const componentName = 'networkprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editTcpUdpProfileHeader = `${prefix}.editTcpUdpProfileHeader`;
export const newTcpUdpProfileHeader = `${prefix}.newTcpUdpProfileHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionInputPlaceholder = `${prefix}.descriptionInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const rbacHeader = `${prefix}.rbacHeader`;
export const sectionTitleRbac = `${prefix}.sectionTitleRbac`;
export const tcpFastPathSettingsHeader = `${prefix}.tcpFastPathSettingsHeader`;
export const tcpProxySettingsHeader = `${prefix}.tcpProxySettingsHeader`;
export const sectionTitleDsr = `${prefix}.sectionTitleDsr`;
export const dsrProfileHeader = `${prefix}.dsrProfileHeader`;
export const protocolTypeInputPlaceholder = `${prefix}.protocolTypeInputPlaceholder`;
export const enableDsrInputLabel = `${prefix}.enableDsrInputLabel`;
export const udpProxySettingsHeader = `${prefix}.protocolTypeInputPlaceholder`;
export const udpFastPathSettingsHeader = `${prefix}.udpFastPathSettingsHeader`;
export const discardedCurrentValuesConfirmation = `${prefix}.discardedCurrentValuesConfirmation`;
export const resetToDefaultValuesHeader = `${prefix}.resetToDefaultValuesHeader`;

export const ENGLISH = {
    [editTcpUdpProfileHeader]: 'Edit TCPUDP Profile: {0}',
    [newTcpUdpProfileHeader]: 'New TCPUDP Profile: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [descriptionInputLabel]: 'Description',
    [descriptionInputPlaceholder]: 'Enter Description',
    [typeInputLabel]: 'Type',
    [protocolTypeInputPlaceholder]: 'Select Protocol Type',
    [sectionTitleGeneral]: 'General',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
    [sectionTitleRbac]: 'RBAC',
    [tcpFastPathSettingsHeader]: 'TCP Fast Path',
    [sectionTitleDsr]: 'DSR',
    [dsrProfileHeader]: 'Direct Server Return (DSR)',
    [tcpProxySettingsHeader]: 'TCP Proxy',
    [enableDsrInputLabel]: 'Enable DSR',
    [udpProxySettingsHeader]: 'UDP Proxy',
    [udpFastPathSettingsHeader]: 'UDP Fast Path',
    [discardedCurrentValuesConfirmation]: 'Switching type will reset any stored values to default.',
    [resetToDefaultValuesHeader]: 'Reset to Defaults',
};const moduleName = 'network';
const componentName = 'directserverreturnsettings';
const prefix = `${moduleName}.${componentName}`;

export const dsrTypeInputLabel = `${prefix}.dsrTypeInputLabel`;
export const dsrEncapsulationTypeInputLabel = `${prefix}.dsrEncapsulationTypeInputLabel`;
export const dsrTypeSelectPlaceholder = `${prefix}.dsrTypeSelectPlaceholder`;
export const dsrEncapsulationTypeSelectPlaceholder = `${prefix}.dsrEncapsulationTypeSelectPlaceholder`;

export const ENGLISH = {
    [dsrTypeInputLabel]: 'DSR Type',
    [dsrEncapsulationTypeInputLabel]: 'DSR Encapsulation Type',
    [dsrTypeSelectPlaceholder]: 'Select DSR Type',
    [dsrEncapsulationTypeSelectPlaceholder]: 'Select DSR Encapsulation Type',
};const moduleName = 'network';
const componentName = 'tcpproxy';
const prefix = `${moduleName}.${componentName}`;

export const autoLearnInputLabel = `${prefix}.autoLearnInputLabel`;
export const customInputLabel = `${prefix}.customInputLabel`;
export const naglesAlgorithmInputLabel = `${prefix}.naglesAlgorithmInputLabel`;
export const timeoutHeader = `${prefix}.timeoutHeader`;
export const idleConnectionInputLabel = `${prefix}.idleConnectionInputLabel`;
export const keepAliveRadioOption = `${prefix}.keepAliveRadioOption`;
export const ageOutIdleConnectonsRadioOption = `${prefix}.ageOutIdleConnectonsRadioOption`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const millisecondsHelperText = `${prefix}.millisecondsHelperText`;
export const idleDurationInputPlaceholder = `${prefix}.idleDurationInputPlaceholder`;
export const idleDurationInputLabel = `${prefix}.idleDurationInputLabel`;
export const ignoreTimeWaitInputLabel = `${prefix}.ignoreTimeWaitInputLabel`;
export const ignoreTimeWaitDurationInputPlaceholder = `${prefix}.ignoreTimeWaitDurationInputPlaceholder`;
export const ignoreTimeWaitDurationInputLabel = `${prefix}.ignoreTimeWaitDurationInputLabel`;
export const retransmissionBehaviorHeader = `${prefix}.retransmissionBehaviorHeader`;
export const maxRetransmissionInputLabel = `${prefix}.maxRetransmissionInputLabel`;
export const maxSynRetransmissionInputLabel = `${prefix}.maxSynRetransmissionInputLabel`;
export const maxCountInputPlaceholder = `${prefix}.maxCountInputPlaceholder`;
export const bufferManagementHeader = `${prefix}.bufferManagementHeader`;
export const receiveWindowInputLabel = `${prefix}.receiveWindowInputLabel`;
export const kilobytesHelperText = `${prefix}.kilobytesHelperText`;
export const maxSegmentSizeHeader = `${prefix}.maxSegmentSizeHeader`;
export const useInterfaceMtuInputLabel = `${prefix}.useInterfaceMtuInputLabel`;
export const bytesHelperText = `${prefix}.bytesHelperText`;
export const maxSegmentInputPlaceholder = `${prefix}.maxSegmentInputPlaceholder`;
export const maxSegmentInputLabel = `${prefix}.maxSegmentInputLabel`;
export const qosTrafficEngineeringHeader = `${prefix}.qosTrafficEngineeringHeader`;
export const passThroughInputLabel = `${prefix}.passThroughInputLabel`;
export const dscpValueInputLabel = `${prefix}.dscpValueInputLabel`;
export const dscpInputPlaceholder = `${prefix}.dscpInputPlaceholder`;

export const ENGLISH = {
    [autoLearnInputLabel]: 'Auto Learn',
    [customInputLabel]: 'Custom',
    [naglesAlgorithmInputLabel]: 'Enable Nagles Algorithm',
    [timeoutHeader]: 'Timeout',
    [idleConnectionInputLabel]: 'Idle Connections',
    [keepAliveRadioOption]: 'TCP keepalive',
    [ageOutIdleConnectonsRadioOption]: 'Age Out Idle Connections',
    [secondsHelperText]: 'Seconds',
    [millisecondsHelperText]: 'Milliseconds',
    [kilobytesHelperText]: 'Kilobytes',
    [bytesHelperText]: 'Bytes',
    [idleDurationInputPlaceholder]: 'Enter Idle Duration',
    [idleDurationInputLabel]: 'Idle Duration',
    [ignoreTimeWaitInputLabel]: 'Ignore Time Wait',
    [ignoreTimeWaitDurationInputLabel]: 'TCP Time Wait Duration',
    [ignoreTimeWaitDurationInputPlaceholder]: 'Enter Time Wait Duration',
    [retransmissionBehaviorHeader]: 'Retransmission Behavior',
    [maxRetransmissionInputLabel]: 'Maximum Retransmissions',
    [maxSynRetransmissionInputLabel]: 'Maximum SYN Retransmissions',
    [maxCountInputPlaceholder]: 'Maximum #',
    [bufferManagementHeader]: 'Buffer Management',
    [receiveWindowInputLabel]: 'Receive Window',
    [maxSegmentSizeHeader]: 'TCP Max Segment Size',
    [useInterfaceMtuInputLabel]: 'Use Network Interface MTU for Size',
    [maxSegmentInputPlaceholder]: 'Enter Max Segment Size',
    [maxSegmentInputLabel]: 'Max Segment Size',
    [qosTrafficEngineeringHeader]: 'QOS & Traffic Engineering',
    [passThroughInputLabel]: 'Enable DSCP Pass Through',
    [dscpValueInputLabel]: 'DSCP Value',
    [dscpInputPlaceholder]: 'Enter DSCP Value',
};const moduleName = 'notification';
const componentName = 'cloudstatus';
const prefix = `${moduleName}.${componentName}`;

export const clickHereForDetails = `${prefix}.clickHereForDetails`;

export const ENGLISH = {
    [clickHereForDetails]: 'Click here for ##0details##1.',
};const moduleName = 'network';
const componentName = 'tcpfastpath';
const prefix = `${moduleName}.${componentName}`;

export const enableSynProtectionInputLabel = `${prefix}.enableSynProtectionInputLabel`;
export const sessionIdleTimeoutInputLabel = `${prefix}.sessionIdleTimeoutInputLabel`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const idleTimeoutInputPlaceholder = `${prefix}.idleTimeoutInputPlaceholder`;

export const ENGLISH = {
    [enableSynProtectionInputLabel]: 'Enable SYN Protection',
    [sessionIdleTimeoutInputLabel]: 'Session Idle Timeout',
    [secondsHelperText]: 'Seconds',
    [idleTimeoutInputPlaceholder]: 'Enter Session Idle Timeout',
};const moduleName = 'notification';
const componentName = 'controllerfaults';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;

export const ENGLISH = {
    [title]: 'Controller Faults',
};const moduleName = 'network';
const componentName = 'tcpfastpath';
const prefix = `${moduleName}.${componentName}`;

export const sessionIdleTimeoutInputLabel = `${prefix}.sessionIdleTimeoutInputLabel`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const idleTimeoutInputPlaceholder = `${prefix}.idleTimeoutInputPlaceholder`;

export const ENGLISH = {
    [sessionIdleTimeoutInputLabel]: 'Session Idle Timeout',
    [secondsHelperText]: 'Seconds',
    [idleTimeoutInputPlaceholder]: 'Enter Session Idle Timeout',
};const moduleName = 'network';
const componentName = 'tcpfastpath';
const prefix = `${moduleName}.${componentName}`;

export const enableSnatInputLabel = `${prefix}.enableSnatInputLabel`;
export const enablePerPktLoadbalanceInputLabel = `${prefix}.enablePerPktLoadbalanceInputLabel`;
export const sessionIdleTimeoutInputLabel = `${prefix}.sessionIdleTimeoutInputLabel`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const idleTimeoutInputPlaceholder = `${prefix}.idleTimeoutInputPlaceholder`;

export const ENGLISH = {
    [enableSnatInputLabel]: 'NAT Client IP Address (SNAT)',
    [enablePerPktLoadbalanceInputLabel]: 'Per Packet Load Balancing',
    [sessionIdleTimeoutInputLabel]: 'Session Idle Timeout',
    [secondsHelperText]: 'Seconds',
    [idleTimeoutInputPlaceholder]: 'Enter Session Idle Timeout',
};const moduleName = 'notification';
const componentName = 'messageoftheday';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;

export const ENGLISH = {
    [title]: 'Message of the Day',
};const moduleName = 'notification';
const componentName = 'cloudtoken';
const prefix = `${moduleName}.${componentName}`;

export const tokenGeneratedMessage = `${prefix}.tokenGeneratedMessage`;
export const clusterUuid = `${prefix}.clusterUuid`;

export const ENGLISH = {
    [tokenGeneratedMessage]: 'This is a unique token generated for use with one Service Engine.' +
        'Use this token in the <strong>AVICNTRL_AUTHTOKEN<strong> field of metadata when creating the Service Engine.' +
        'The Service Engine created using this token will be a member of tenant <strong>{0}<strong> in cloud <strong>{1}<strong>.' +
        'Token expires after an hour.',
    [clusterUuid]: 'Cluster UUID: <strong>{0}<strong>',
};const moduleName = 'notification';
const componentName = 'vsfaults';
const prefix = `${moduleName}.${componentName}`;

export const virtualServiceFaultsTitle = `${prefix}.virtualServiceFaultsTitle`;
export const serverFaultsTitle = `${prefix}.serverFaultsTitle`;

export const ENGLISH = {
    [virtualServiceFaultsTitle]: 'Virtual Service Faults',
    [serverFaultsTitle]: 'Server Faults',
};const moduleName = 'notification';
const componentName = 'utcmismatchnotification';
const prefix = `${moduleName}.${componentName}`;

export const timeDiffSecondsTitle = `${prefix}.timeDiffSecondsTitle`;
export const systemClockBehindMessage = `${prefix}.systemClockBehindMessage`;
export const systemClockAheadMessage = `${prefix}.systemClockAheadMessage`;
export const controllerClock = `${prefix}.controllerClock`;
export const timeDiffImpactMessage = `${prefix}.timeDiffImpactMessage`;
export const checkNtpSettingsMessage = `${prefix}.checkNtpSettingsMessage`;
export const ntpSettings = `${prefix}.ntpSettings`;

export const ENGLISH = {
    [timeDiffSecondsTitle]: '{0} seconds',
    [systemClockBehindMessage]: 'Your System Clock is behind by <span title="{0}"> {1}.<span>',
    [systemClockAheadMessage]: 'Your System Clock is ahead by <span title="{0}"> {1}.<span>',
    [controllerClock]: 'Controller clock ({0} UTC)',
    [timeDiffImpactMessage]: 'The difference may degrade analytics.',
    [checkNtpSettingsMessage]: 'Please check ##0NTP Settings##1.',
    [ntpSettings]: 'NTP Settings.',
};const moduleName = 'policies';
const componentName = 'policyrulesummary';
const prefix = `${moduleName}.${componentName}`;

export const matchHeaderLabel = `${prefix}.matchHeaderLabel`;
export const actionHeaderLabel = `${prefix}.actionHeaderLabel`;

export const ENGLISH = {
    [matchHeaderLabel]: 'Match ({0})',
    [actionHeaderLabel]: 'Action ({0})',
};const moduleName = 'persistenceprofile';
const componentName = 'persistenceprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const serverHmDownRecoveryInputLabel = `${prefix}.serverHmDownRecoveryInputLabel`;
export const immediateOption = `${prefix}.immediateOption`;
export const neverOption = `${prefix}.neverOption`;
export const persistenceTypeInputLabel = `${prefix}.persistenceTypeInputLabel`;
export const ipPersistenceTimeoutInputLabel = `${prefix}.ipPersistenceTimeoutInputLabel`;
export const ipPersistenceTimeoutInputPlaceholder = `${prefix}.ipPersistenceTimeoutInputPlaceholder`;
export const ipMaskInputLabel = `${prefix}.ipMaskInputLabel`;
export const ipMaskInputPlaceholder = `${prefix}.ipMaskInputPlaceholder`;
export const persistenceHeaderNameInputLabel = `${prefix}.persistenceHeaderNameInputLabel`;
export const persistenceHeaderNameInputPlaceholder = `${prefix}.persistenceHeaderNameInputPlaceholder`;
export const cookieNameInputLabel = `${prefix}.cookieNameInputLabel`;
export const cookieNameInputPlaceholder = `${prefix}.cookieNameInputPlaceholder`;
export const timeoutInputLabel = `${prefix}.timeoutInputLabel`;
export const timeoutInputPlaceholder = `${prefix}.timeoutInputPlaceholder`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const alwaysSendCookieInputLabel = `${prefix}.alwaysSendCookieInputLabel`;
export const appCookieNameInputLabel = `${prefix}.appCookieNameInputLabel`;
export const appCookieNameInputPlaceholder = `${prefix}.appCookieNameInputPlaceholder`;
export const isFederatedInputLabel = `${prefix}.isFederatedInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const isPersistentCookieCheckboxLabel = `${prefix}.isPersistentCookieCheckboxLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Persistence Profile: {0}',
    [modalHeaderNew]: 'New Persistence Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [serverHmDownRecoveryInputLabel]: 'Select New Server When Persistent Server Down',
    [immediateOption]: 'Immediate',
    [neverOption]: 'Never',
    [persistenceTypeInputLabel]: 'Type',
    [ipPersistenceTimeoutInputLabel]: 'Persistence Timeout',
    [ipPersistenceTimeoutInputPlaceholder]: 'Use Session Persistence',
    [ipMaskInputLabel]: 'IP Mask',
    [ipMaskInputPlaceholder]: 'Enter IP Mask',
    [persistenceHeaderNameInputLabel]: 'Header Name',
    [persistenceHeaderNameInputPlaceholder]: 'Enter Header Name',
    [cookieNameInputLabel]: 'HTTP Cookie Name',
    [cookieNameInputPlaceholder]: 'Enter HTTP Cookie Name',
    [timeoutInputLabel]: 'Persistence Timeout',
    [timeoutInputPlaceholder]: 'Use Session Persistence',
    [minutesInnerText]: 'Minutes',
    [alwaysSendCookieInputLabel]: 'Always Send',
    [appCookieNameInputLabel]: 'Application Cookie Name',
    [appCookieNameInputPlaceholder]: 'Enter Application Cookie Name',
    [isFederatedInputLabel]: 'Is Federated',
    [descriptionInputLabel]: 'Description',
    [isPersistentCookieCheckboxLabel]: 'Is Persistent Cookie',
};const moduleName = 'shared';
const componentName = 'rbaclabelgrid';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const keyFieldPlaceholder = `${prefix}.keyFieldPlaceholder`;
export const valuesFieldPlaceholder = `${prefix}.valuesFieldPlaceholder`;
export const keyDuplicationErrorMsg = `${prefix}.keyDuplicationErrorMsg`;
export const duplicateValuesErrorMsg = `${prefix}.duplicateValuesErrorMsg`;
export const keyColumnLabel = `${prefix}.keyColumnLabel`;
export const valuesColumnLabel = `${prefix}.valuesColumnLabel`;
export const removeButtonLabel = `${prefix}.removeBtnLabel`;

export const ENGLISH = {
    [header]: 'RBAC Key & Value',
    [addButtonLabel]: 'Add',
    [keyFieldPlaceholder]: 'Enter Key',
    [valuesFieldPlaceholder]: 'Enter Values',
    [keyDuplicationErrorMsg]: 'System does not support duplicate Keys. Please update or delete.',
    [duplicateValuesErrorMsg]: 'Duplicate keys: {0}.',
    [keyColumnLabel]: 'Key',
    [valuesColumnLabel]: 'Value(s)',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'rbacmodule';
const componentName = 'rolefiltermatchlabel';
const prefix = `${moduleName}.${componentName}`;

export const keyAndValuesHeader = `${prefix}.keyAndValuesHeader`;

export const ENGLISH = {
    [keyAndValuesHeader]: 'Key & Values ({0})',
};const moduleName = 'pool';
const componentName = 'poolgroupdeploymentpolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const editDeploymentPolicyHeader = `${prefix}.editDeploymentPolicyHeader`;
export const newDeploymentPolicyHeader = `${prefix}.newDeploymentPolicyHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceHolder = `${prefix}.nameInputPlaceHolder`;
export const trafficRatioInputLabel = `${prefix}.trafficRatioInputLabel`;
export const trafficRatioInputPlaceholder = `${prefix}.trafficRatioInputPlaceholder`;
export const evaluationDurationInputLabel = `${prefix}.evaluationDurationInputLabel`;
export const evaluationDurationInputPlaceholder = `${prefix}.evaluationDurationInputPlaceholder`;
export const evaluationDurationUnitsLabel = `${prefix}.evaluationDurationUnitsLabel`;
export const trafficRatioRampupInputLabel = `${prefix}.trafficRatioRampupInputLabel`;
export const trafficRatioRampupInputPlaceholder = `${prefix}.trafficRatioRampupInputPlaceholder`;
export const rulesSectionHeader = `${prefix}.rulesSectionHeader`;
export const rulesDataGridTitle = `${prefix}.rulesDataGridTitle`;
export const emptyRuleMetricPlaceholder = `${prefix}.emptyRuleMetricPlaceholder`;
export const removeRuleButtonLabel = `${prefix}.removeRuleButtonLabel`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;
export const columnTitleMetric = `${prefix}.columnTitleMetric`;
export const columnTitleOperator = `${prefix}.columnTitleOperator`;
export const columnTitleThreshold = `${prefix}.columnTitleThreshold`;
export const removeActionLabel = `${prefix}.removeActionLabel`;

export const ENGLISH = {
    [editDeploymentPolicyHeader]: 'Edit Deployment Policy: {0}',
    [newDeploymentPolicyHeader]: 'New Deployment Policy: {0}',
    [generalSectionHeader]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceHolder]: 'Enter Name',
    [trafficRatioInputLabel]: 'Traffic Ratio',
    [trafficRatioInputPlaceholder]: 'Enter Ratio',
    [evaluationDurationInputLabel]: 'Evaluation Duration',
    [evaluationDurationInputPlaceholder]: 'Enter Duration',
    [evaluationDurationUnitsLabel]: 'Seconds',
    [trafficRatioRampupInputLabel]: 'Test Traffic Ratio Rampup',
    [trafficRatioRampupInputPlaceholder]: 'Enter Ratio',
    [rulesSectionHeader]: 'Rules',
    [rulesDataGridTitle]: 'Deployment Validation Rules ({0})',
    [emptyRuleMetricPlaceholder]: 'None',
    [removeRuleButtonLabel]: 'Remove Rule',
    [addRuleButtonLabel]: 'Add',
    [columnTitleMetric]: 'Metric ID',
    [columnTitleOperator]: 'Operator',
    [columnTitleThreshold]: 'Threshold',
    [removeActionLabel]: 'Remove',
};const moduleName = 'scripts';
const componentName = 'controlscriptsmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const controlScriptInputLabel = `${prefix}.controlScriptInputLabel`;
export const controlScriptInputPlaceholder = `${prefix}.controlScriptInputPlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Control Script: {0}',
    [modalTitleNew]: 'New Control Script: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [controlScriptInputLabel]: 'Import or Paste Control Script',
    [controlScriptInputPlaceholder]: 'Paste Control Script',
    [sectionTitleGeneral]: 'General',
};const moduleName = 'scripts';
const componentName = 'datascriptconfig';
const prefix = `${moduleName}.${componentName}`;

export const fileUploadInputPlaceholder = `${prefix}.fileUploadInputPlaceholder`;
export const fileUploadInputLabel = `${prefix}.fileUploadInputLabel`;

export const ENGLISH = {
    [fileUploadInputPlaceholder]: 'Enter your DataScript Here',
    [fileUploadInputLabel]: '{0} Event Script',
};const moduleName = 'scripts';
const componentName = 'dsratelimitersgrid';
const prefix = `${moduleName}.${componentName}`;

export const nameLabel = `${prefix}.nameLabel`;
export const namePlaceholder = `${prefix}.namePlaceholder`;
export const countLabel = `${prefix}.countLabel`;
export const countPlaceholder = `${prefix}.countPlaceholder`;
export const burstSizeLabel = `${prefix}.burstSizeLabel`;
export const burstSizePlaceholder = `${prefix}.burstSizePlaceholder`;
export const periodLabel = `${prefix}.periodLabel`;
export const periodPlaceholder = `${prefix}.periodPlaceholder`;
export const actionTitleRemove = `${prefix}.actionTitleRemove`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const maximumInnerText = `${prefix}.maximumInnerText`;
export const secondsInnerText = `${prefix}.secondsInnerText`;

export const ENGLISH = {
    [namePlaceholder]: 'Enter Name',
    [countLabel]: 'Count',
    [countPlaceholder]: 'Enter Count',
    [burstSizeLabel]: 'Burst Size',
    [burstSizePlaceholder]: 'Enter Size',
    [periodLabel]: 'Period',
    [periodPlaceholder]: 'Enter Duration',
    [actionTitleRemove]: 'Remove',
    [addButtonLabel]: 'Add',
    [maximumInnerText]: 'Maximum',
    [secondsInnerText]: 'Seconds',
};const moduleName = 'scripts';
const componentName = 'protocolparsermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const descriptionInputPlaceholder = `${prefix}.descriptionInputPlaceholder`;
export const parserCodeInputLabel = `${prefix}.parserCodeInputLabel`;
export const fileUploadInputPlaceholder = `${prefix}.fileUploadInputPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Protocol Parser Script: {0}',
    [modalTitleNew]: 'New Protocol Parser Script: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [descriptionInputLabel]: 'Description',
    [descriptionInputPlaceholder]: 'Enter Description',
    [parserCodeInputLabel]: 'Import or Paste Protocol Parser Script',
    [fileUploadInputPlaceholder]: 'Paste Protocol Parser Script',
};const moduleName = 'security';
const componentName = 'certificatemanagementcustomparamsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const columnTitleSensitive = `${prefix}.columnTitleSensitive`;
export const columnTitleDynamic = `${prefix}.columnTitleDynamic`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;
export const customScriptParamsLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleName]: 'Name',
    [columnTitleSensitive]: 'Sensitive',
    [columnTitleDynamic]: 'Dynamic',
    [removeActionLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
    [customScriptParamsLabel]: 'Custom Script Params ({0})',
};const moduleName = 'scripts';
const componentName = 'datascriptsetmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const l4EventsHeader = `${prefix}.l4EventsHeader`;
export const fileUploadInputPlaceholder = `${prefix}.fileUploadInputPlaceholder`;
export const dnsEventsHeader = `${prefix}.dnsEventsHeader`;
export const eventsHeader = `${prefix}.eventsHeader`;
export const sslEventsHeader = `${prefix}.sslEventsHeader`;
export const httpEventsHeader = `${prefix}.httpEventsHeader`;
export const poolsInputLabel = `${prefix}.poolsInputLabel`;
export const poolsInputPlaceholder = `${prefix}.poolsInputPlaceholder`;
export const poolGroupsInputLabel = `${prefix}.poolGroupsInputLabel`;
export const poolGroupsInputPlaceholder = `${prefix}.poolGroupsInputPlaceholder`;
export const ipGroupsInputLabel = `${prefix}.ipGroupsInputLabel`;
export const ipGroupsInputPlaceholder = `${prefix}.ipGroupsInputPlaceholder`;
export const stringGroupsInputLabel = `${prefix}.stringGroupsInputLabel`;
export const stringGroupsInputPlaceholder = `${prefix}.stringGroupsInputPlaceholder`;
export const protocolParserInputLabel = `${prefix}.protocolParserInputLabel`;
export const protocolParserInputPlaceholder = `${prefix}.protocolParserInputPlaceholder`;
export const createProtocolParserBtnLabel = `${prefix}.createProtocolParserBtnLabel`;
export const ipReputationDbInputLabel = `${prefix}.ipReputationDbInputLabel`;
export const ipReputationDbInputPlaceholder = `${prefix}.ipReputationDbInputPlaceholder`;
export const geoDbInputLabel = `${prefix}.geoDbInputLabel`;
export const geoDbInputPlaceholder = `${prefix}.geoDbInputPlaceholder`;
export const rateLimitersHeader = `${prefix}.rateLimitersHeader`;
export const fileUploadInputLabel = `${prefix}.fileUploadInputLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const sslProfileInputLabel = `${prefix}.sslProfileInputLabel`;
export const sslProfileInputPlaceholder = `${prefix}.sslProfileInputPlaceholder`;
export const sslKeyCertificateLabel = `${prefix}.sslKeyCertificateLabel`;
export const sslKeyCertificatePlaceholder = `${prefix}.sslKeyCertificatePlaceholder`;
export const pkiProfileInputLabel = `${prefix}.pkiProfileInputLabel`;
export const pkiProfileInputPlaceholder = `${prefix}.pkiProfileInputPlaceholder`;
export const btnLabelRootIntermediateCaCert = `${prefix}.btnLabelRootIntermediateCaCert`;
export const btnLabelApplicationCert = `${prefix}.btnLabelApplicationCert`;
export const btnLabelControllerCert = `${prefix}.btnLabelControllerCert`;
export const configureEventsWarning = `${prefix}.configureEventsWarning`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit DataScript Set: {0}',
    [modalTitleNew]: 'New DataScript Set: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [eventsHeader]: 'Events',
    [l4EventsHeader]: 'L4 Events',
    [dnsEventsHeader]: 'DNS Events',
    [sslEventsHeader]: 'SSL Events',
    [httpEventsHeader]: 'HTTP Events',
    [poolsInputLabel]: 'Pools',
    [poolsInputPlaceholder]: 'Select Pools',
    [poolGroupsInputLabel]: 'Pool Groups',
    [poolGroupsInputPlaceholder]: 'Select Pool Groups',
    [ipGroupsInputLabel]: 'IP Groups',
    [ipGroupsInputPlaceholder]: 'Select IP Groups',
    [stringGroupsInputLabel]: 'String Groups',
    [stringGroupsInputPlaceholder]: 'Select String Groups',
    [protocolParserInputLabel]: 'Protocol Parser',
    [protocolParserInputPlaceholder]: 'Select Protocol Parser',
    [createProtocolParserBtnLabel]: 'Create Protocol Parser',
    [ipReputationDbInputLabel]: 'IP Reputation DB',
    [ipReputationDbInputPlaceholder]: 'Select IP Reputation DB',
    [geoDbInputLabel]: 'Geo DB',
    [geoDbInputPlaceholder]: 'Select Geo DB',
    [rateLimitersHeader]: 'Rate Limiters',
    [addButtonLabel]: 'Add',
    [sslProfileInputLabel]: 'SSLTLS Profiles',
    [sslProfileInputPlaceholder]: 'Select SSLTLS Profiles',
    [sslKeyCertificateLabel]: 'SSLTLS Certificates',
    [sslKeyCertificatePlaceholder]: 'Select SSLTLS Certificates',
    [pkiProfileInputLabel]: 'PKI Profiles',
    [pkiProfileInputPlaceholder]: 'Select PKI Profiles',
    [btnLabelApplicationCert]: 'Create Application Certificate',
    [btnLabelControllerCert]: 'Create Controller Certificate',
    [btnLabelRootIntermediateCaCert]: 'Create RootIntermediate CA Certificate',
    [configureEventsWarning]: 'At least one event needs to be configured to continue.',
};const moduleName = 'security';
const componentName = 'certificatemanagementmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const customSectionLabel = `${prefix}.customSectionLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const namePlaceholder = `${prefix}.namePlaceholder`;
export const controlScriptInputLabel = `${prefix}.controlScriptInputLabel`;
export const controlScriptPlaceholder = `${prefix}.controlScriptPlaceholder`;
export const enableScriptParamsCheckboxLabel = `${prefix}.enableScriptParamsCheckboxLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Certificate Management: {0}',
    [modalTitleNew]: 'New Certificate Management: {0}',
    [sectionTitleGeneral]: 'General',
    [customSectionLabel]: 'Custom',
    [nameInputLabel]: 'Name',
    [namePlaceholder]: 'Enter Name',
    [controlScriptInputLabel]: 'Control Script',
    [controlScriptPlaceholder]: 'Select Script',
    [enableScriptParamsCheckboxLabel]: 'Enable Custom Script Parameters',
};const moduleName = 'security';
const componentName = 'geodbfilegrid';
const prefix = `${moduleName}.${componentName}`;

export const geoDbFileAddButtonLabel = `${prefix}.geoDbFileAddButtonLabel`;
export const geoDbFileColTitleName = `${prefix}.geoDbFileColTitleName`;
export const geoDbFileColTitleEnabled = `${prefix}.geoDbFileColTitleEnabled`;
export const geoDbFileColTitleVendor = `${prefix}.geoDbFileColTitleVendor`;
export const geoDbFileColTitleGeoDbFile = `${prefix}.geoDbFileColTitleGeoDbFile`;
export const geoDbFileRemoveButtonLabel = `${prefix}.geoDbFileRemoveButtonLabel`;
export const geoDbFileEditButtonLabel = `${prefix}.geoDbFileEditButtonLabel`;

export const ENGLISH = {
    [geoDbFileAddButtonLabel]: 'Add',
    [geoDbFileColTitleName]: 'Name',
    [geoDbFileColTitleEnabled]: 'Enabled',
    [geoDbFileColTitleVendor]: 'Vendor',
    [geoDbFileColTitleGeoDbFile]: 'GeoDB File',
    [geoDbFileRemoveButtonLabel]: 'Remove',
    [geoDbFileEditButtonLabel]: 'Edit',
};const moduleName = 'security';
const componentName = 'geodbfilemodal';
const prefix = `${moduleName}.${componentName}`;

export const geoDbFileModalTitle = `${prefix}.geoDbFileModalTitle`;
export const enabledFileLabel = `${prefix}.enabledFileLabel`;
export const vendorLabel = `${prefix}.vendorLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const geoDbFileLabel = `${prefix}.geoDbFileLabel`;
export const geoDbFilePlaceholder = `${prefix}.geoDbFilePlaceholder`;

export const ENGLISH = {
    [geoDbFileModalTitle]: 'Add GeoDB File: {0}',
    [enabledFileLabel]: 'Enabled File',
    [geoDbFileLabel]: 'GeoDb File',
    [geoDbFilePlaceholder]: 'Select File',
    [vendorLabel]: 'Vendor',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [sectionTitleGeneral]: 'General',
};const moduleName = 'security';
const componentName = 'geodbmappingelementgrid';
const prefix = `${moduleName}.${componentName}`;

export const geoDbMappingElementAddButtonLabel = `${prefix}.geoDbMappingElementAddButtonLabel`;
export const geoDbMappingElementColTitleAttribute = `${prefix}.geoDbMappingElementColTitleAttribute`;
export const geoDbMappingElementColTitleValues = `${prefix}.geoDbMappingElementColTitleValues`;
export const geoDbMappingElementRemoveButtonLabel = `${prefix}.geoDbMappingElementRemoveButtonLabel`;
export const geoDbMappingElementEditButtonLabel = `${prefix}.geoDbMappingElementEditButtonLabel`;

export const ENGLISH = {
    [geoDbMappingElementAddButtonLabel]: 'Add',
    [geoDbMappingElementColTitleAttribute]: 'Attribute',
    [geoDbMappingElementColTitleValues]: 'Mapped Values',
    [geoDbMappingElementRemoveButtonLabel]: 'Remove',
    [geoDbMappingElementEditButtonLabel]: 'Edit',
};const moduleName = 'security';
const componentName = 'customparamsmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const valueInputPlaceholder = `${prefix}.valueInputPlaceholder`;
export const sensitiveCheckboxLabel = `${prefix}.sensitiveCheckboxLabel`;
export const dynamicCheckboxLabel = `${prefix}.dynamicCheckboxLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Custom Param: {0}',
    [modalTitleNew]: 'New Custom Param: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputPlaceholder]: 'Enter Name',
    [valueInputPlaceholder]: 'Enter Value',
    [sensitiveCheckboxLabel]: 'Is Sensitive',
    [dynamicCheckboxLabel]: 'Is Dynamic',
};const moduleName = 'security';
const componentName = 'geodbmappinggrid';
const prefix = `${moduleName}.${componentName}`;

export const geoDbMappingAddButtonLabel = `${prefix}.geoDbMappingAddButtonLabel`;
export const geoDbMappingColTitleName = `${prefix}.geoDbMappingColTitleName`;
export const geoDbMappingColTitleElements = `${prefix}.geoDbMappingColTitleElements`;
export const geoDbMappingRemoveButtonLabel = `${prefix}.geoDbMappingRemoveButtonLabel`;
export const geoDbMappingEditButtonLabel = `${prefix}.geoDbMappingEditButtonLabel`;

export const ENGLISH = {
    [geoDbMappingAddButtonLabel]: 'Add',
    [geoDbMappingColTitleName]: 'Name',
    [geoDbMappingColTitleElements]: 'Elements',
    [geoDbMappingRemoveButtonLabel]: 'Remove',
    [geoDbMappingEditButtonLabel]: 'Edit',
};const moduleName = 'security';
const componentName = 'geodbmappingmodal';
const prefix = `${moduleName}.${componentName}`;

export const geoDbMappingElementModalTitle = `${prefix}.geoDbMappingElementModalTitle`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const attributeLabel = `${prefix}.attributeLabel`;
export const attributePlaceholder = `${prefix}.attributePlaceholder`;
export const valuesLabel = `${prefix}.valuesLabel`;
export const valuesPlaceholder = `${prefix}.valuesPlaceholder`;

export const ENGLISH = {
    [geoDbMappingElementModalTitle]: 'Add Element',
    [sectionTitleGeneral]: 'General',
    [attributeLabel]: 'Attribute',
    [attributePlaceholder]: 'Select Attribute',
    [valuesLabel]: 'Values',
    [valuesPlaceholder]: 'Enter Values',
};const moduleName = 'security';
const componentName = 'geodbmappingmodal';
const prefix = `${moduleName}.${componentName}`;

export const geoDbMappingModalTitle = `${prefix}.geoDbMappingModalTitle`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const geoDbElementsLabel = `${prefix}.geoDbElementsLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;

export const ENGLISH = {
    [geoDbMappingModalTitle]: 'Add GeoDB Mapping: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [descriptionInputLabel]: 'Description',
    [sectionTitleGeneral]: 'General',
    [geoDbElementsLabel]: 'Elements ({0})',
};const moduleName = 'security';
const componentName = 'cloudhsmhsmipgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const ipAddressPlaceholder = `${prefix}.ipAddressPlaceholder`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleIpAddress]: 'IP Address',
    [ipAddressPlaceholder]: 'Enter IP Address',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'geodbmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const sectionTitleFiles = `${prefix}.sectionTitleFiles`;
export const sectionTitleMapping = `${prefix}.sectionTitleMapping`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const isFederatedLabel = `${prefix}.isFederatedLabel`;
export const geoDbFilesLabel = `${prefix}.geoDbFilesLabel`;
export const geoDbMappingLabel = `${prefix}.geoDbMappingLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Geo DB: {0}',
    [sectionTitleGeneral]: 'General',
    [sectionTitleFiles]: 'Files',
    [sectionTitleMapping]: 'Mapping',
    [modalTitleNew]: 'Create Geo DB: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [descriptionLabel]: 'Description',
    [isFederatedLabel]: 'Is Federated',
    [geoDbFilesLabel]: 'GeoDB Files ({0})',
    [geoDbMappingLabel]: 'GeoDB Mapping ({0})',
};const moduleName = 'security';
const componentName = 'safenetclientinfogrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleClientIp = `${prefix}.columnTitleClientIp`;
export const clientIpPlaceholder = `${prefix}.clientIpPlaceholder`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleClientIp]: 'Client IP',
    [clientIpPlaceholder]: 'Enter Client IP',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};const moduleName = 'security';
const componentName = 'hsmgroupdownloadcertificatemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitle = `${prefix}.modalTitle`;
export const clientIpAddressesHeader = `${prefix}.clientIpAddressesHeader`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const downloadButtonLabel = `${prefix}.downloadButtonLabel`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;

export const ENGLISH = {
    [modalTitle]: 'HSM Group: {0}',
    [clientIpAddressesHeader]: 'Client IP Addresses',
    [columnTitleIpAddress]: 'IP Address',
    [downloadButtonLabel]: 'Download Certificate',
    [submitButtonLabel]: 'Done',
};const moduleName = 'security';
const componentName = 'safenetlunaservermodal';
const prefix = `${moduleName}.${componentName}`;

export const addModalTitle = `${prefix}.addModalTitle`;
export const editModalTitle = `${prefix}.editModalTitle`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const hsmAddressInputLabel = `${prefix}.hsmAddressInputLabel`;
export const hsmAddressPlaceholder = `${prefix}.hsmAddressPlaceholder`;
export const serialNumberInputLabel = `${prefix}.serialNumberInputLabel`;
export const serialNumberPlaceholder = `${prefix}.serialNumberPlaceholder`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const passwordPlaceholder = `${prefix}.passwordPlaceholder`;
export const serverCertificateInputLabel = `${prefix}.serverCertificateInputLabel`;
export const serverCertificatePlaceholder = `${prefix}.serverCertificatePlaceholder`;

export const ENGLISH = {
    [addModalTitle]: 'Add Safenet Luna Server',
    [editModalTitle]: 'Edit Safenet Luna Server',
    [generalSectionTitle]: 'General',
    [hsmAddressInputLabel]: 'HSM Address',
    [hsmAddressPlaceholder]: 'Enter HSM Address',
    [serialNumberInputLabel]: 'Serial Number',
    [serialNumberPlaceholder]: 'Enter Serial Number',
    [passwordInputLabel]: 'Password',
    [passwordPlaceholder]: 'Enter Password',
    [serverCertificateInputLabel]: 'Server Certificate',
    [serverCertificatePlaceholder]: 'Enter Server Certificate',
};const moduleName = 'security';
const componentName = 'hsmgroupmodal';
const prefix = `${moduleName}.${componentName}`;

export const editModalTitle = `${prefix}.editModalTitle`;
export const newModalTitle = `${prefix}.newModalTitle`;
export const generalSectionTitle = `${prefix}.generalSectionTitle`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeInputPlaceholder = `${prefix}.typeInputPlaceholder`;
export const safenetLunaSectionTitle = `${prefix}.safenetLunaSectionTitle`;
export const safenetLunaServersLabel = `${prefix}.safenetLunaServersLabel`;
export const enableHaCheckboxLabel = `${prefix}.enableHaCheckboxLabel`;
export const dedicatedInterfaceCheckboxLabel = `${prefix}.dedicatedInterfaceCheckboxLabel`;
export const hsmCommunicationWithInputLabel = `${prefix}.hsmCommunicationWithInputLabel`;
export const dedicatedNetworkRadioLabel = `${prefix}.dedicatedNetworkRadioLabel`;
export const managementNetworkRadioLabel = `${prefix}.managementNetworkRadioLabel`;
export const clientIpInputLabel = `${prefix}.clientIpInputLabel`;
export const awsCloudHsmSectionTitle = `${prefix}.awsCloudHsmSectionTitle`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const usernamePlaceholder = `${prefix}.usernamePlaceholder`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const passwordPlaceholder = `${prefix}.passwordPlaceholder`;
export const hsmClusterCertificateInputLabel = `${prefix}.hsmClusterCertificateInputLabel`;
export const hsmClusterCertificatePlaceholder = `${prefix}.hsmClusterCertificatePlaceholder`;
export const hsmIpAddressesInputLabel = `${prefix}.hsmIpAddressesInputLabel`;

export const ENGLISH = {
    [editModalTitle]: 'Edit HSM Group: {0}',
    [newModalTitle]: 'New HSM Group: {0}',
    [generalSectionTitle]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeInputPlaceholder]: 'Select Type',
    [safenetLunaSectionTitle]: 'Safenet Luna',
    [safenetLunaServersLabel]: 'Safenet Luna Servers ({0})',
    [enableHaCheckboxLabel]: 'Enable HA',
    [dedicatedInterfaceCheckboxLabel]: 'Dedicated Interface',
    [hsmCommunicationWithInputLabel]: 'HSM Communication with',
    [dedicatedNetworkRadioLabel]: 'Dedicated Network',
    [managementNetworkRadioLabel]: 'Management Network',
    [clientIpInputLabel]: 'Client IP ({0})',
    [awsCloudHsmSectionTitle]: 'AWS CloudHSM',
    [usernameInputLabel]: 'Username',
    [usernamePlaceholder]: 'Enter Username',
    [passwordInputLabel]: 'Password',
    [passwordPlaceholder]: 'Enter Password',
    [hsmClusterCertificateInputLabel]: 'Import or Paste HSM Cluster Certificate',
    [hsmClusterCertificatePlaceholder]: 'Paste HSM Cluster Certificate',
    [hsmIpAddressesInputLabel]: 'HSM IP Addresses',
};const moduleName = 'security';
const componentName = 'pingaccessagentmodal';
const prefix = `${moduleName}.${componentName}`;

export const newPingAccessAgentHeader = `${prefix}.newPingAccessAgentHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const propertiesFileDataLabel = `${prefix}.propertiesFileDataLabel`;
export const propertiesFileDataPlaceholder = `${prefix}.propertiesFileDataPlaceholder`;

export const ENGLISH = {
    [newPingAccessAgentHeader]: 'New PingAccess Agent',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [propertiesFileDataLabel]: 'Import or Paste PingAccess Agent Properties',
    [propertiesFileDataPlaceholder]: 'Paste PingAccess Agent Properties',
};const moduleName = 'security';
const componentName = 'safenetlunaservergrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleHsmAddress = `${prefix}.columnTitleHsmAddress`;
export const columnTitleSerialNo = `${prefix}.columnTitleSerialNo`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleHsmAddress]: 'HSM Address',
    [columnTitleSerialNo]: 'Serial No.',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'jwtserverprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const issuerInputLabel = `${prefix}.issuerInputLabel`;
export const issuerInputPlaceholder = `${prefix}.issuerInputPlaceholder`;
export const jwtFileInputLabel = `${prefix}.jwtFileInputLabel`;
export const jwtFileInputPlaceholder = `${prefix}.jwtFileInputPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit JWT Server Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [modalTitleNew]: 'New JWT Server Profile: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [issuerInputLabel]: 'Issuer',
    [issuerInputPlaceholder]: 'Enter Issuer',
    [jwtFileInputLabel]: 'Upload or Paste JWT File',
    [jwtFileInputPlaceholder]: 'Paste JWT contents',
};const moduleName = 'security';
const componentName = 'pkicertificateauthoritymodal';
const prefix = `${moduleName}.${componentName}`;

export const generalHeader = `${prefix}.generalHeader`;
export const modalTitleAddCa = `${prefix}.modalTitleAddCa`;
export const uploadCaFileInputLabel = `${prefix}.uploadCaFileInputLabel`;

export const ENGLISH = {
    [generalHeader]: 'General',
    [modalTitleAddCa]: 'Add CA',
    [uploadCaFileInputLabel]: 'Upload Certificate Authority File (CA)',
};const moduleName = 'security';
const componentName = 'pkiprofilecertificaterevocationlistgrid';
const prefix = `${moduleName}.${componentName}`;

export const certRevocationListAddButtonLabel = `${prefix}.certRevocationListAddButtonLabel`;
export const certRevocationListRemoveButtonLabel = `${prefix}.certRevocationListRemoveButtonLabel`;
export const certRevocationListColTitleName = `${prefix}.certRevocationListColTitleName`;
export const certRevocationListColTitleExpDate = `${prefix}.certRevocationListColTitleExpDate`;
export const certRevocationListColTitleRefresh = `${prefix}.certRevocationListColTitleRefresh`;
export const crlMinutesLabel = `${prefix}.crlMinutesLabel`;
export const crlRefreshEmptyLabel = `${prefix}.crlRefreshEmptyLabel`;

export const ENGLISH = {
    [certRevocationListAddButtonLabel]: 'Add',
    [certRevocationListRemoveButtonLabel]: 'Remove',
    [certRevocationListColTitleName]: 'Name',
    [certRevocationListColTitleExpDate]: 'Expiration Date',
    [certRevocationListColTitleRefresh]: 'Refresh',
    [crlMinutesLabel]: '{0} Minutes',
    [crlRefreshEmptyLabel]: 'None',
};const moduleName = 'security';
const componentName = 'pkicertificaterevocationlistmodal';
const prefix = `${moduleName}.${componentName}`;

export const crlModalTitle = `${prefix}.crlModalTitle`;
export const generalHeader = `${prefix}.generalHeader`;
export const addByServerUrlHeader = `${prefix}.addByServerUrlHeader`;
export const serverUrlInputLabel = `${prefix}.serverUrlInputLabel`;
export const serverUrlInputPlaceholderText = `${prefix}.serverUrlInputPlaceholderText`;
export const serverUrlButtonLabel = `${prefix}.serverUrlButtonLabel`;
export const refreshTimeInputLabel = `${prefix}.refreshTimeInputLabel`;
export const refreshTimeInputPlaceholderText = `${prefix}.refreshTimeInputPlaceholderText`;
export const refreshTimeMinutesText = `${prefix}.refreshTimeMinutesText`;
export const addByFileHeader = `${prefix}.addByFileHeader`;
export const uploadCrlInputLabel = `${prefix}.uploadCrlInputLabel`;

export const ENGLISH = {
    [generalHeader]: 'General',
    [crlModalTitle]: 'Add CRL',
    [addByServerUrlHeader]: 'Add by Server URL',
    [serverUrlInputLabel]: 'Server URL',
    [serverUrlInputPlaceholderText]: 'Enter Server URL',
    [serverUrlButtonLabel]: 'Lookup',
    [refreshTimeInputLabel]: 'Refresh Time',
    [refreshTimeInputPlaceholderText]: 'Enter Refresh Time',
    [refreshTimeMinutesText]: 'Minutes',
    [addByFileHeader]: 'Add by File',
    [uploadCrlInputLabel]: 'Upload Certificate Revocation List File (CRL)',
};const moduleName = 'security';
const componentName = 'pkiprofilecertificateauthoritygrid';
const prefix = `${moduleName}.${componentName}`;

export const certAuthorityAddButtonLabel = `${prefix}.certAuthorityAddButtonLabel`;
export const certAuthorityRemoveButtonLabel = `${prefix}.certAuthorityRemoveButtonLabel`;
export const certAuthColTitleName = `${prefix}.certAuthColTitleName`;
export const certAuthColTitleIssuedBy = `${prefix}.certAuthColTitleIssuedBy`;
export const certAuthColTitleExpirationDate = `${prefix}.certAuthColTitleExpirationDate`;

export const ENGLISH = {
    [certAuthorityAddButtonLabel]: 'Add',
    [certAuthorityRemoveButtonLabel]: 'Remove',
    [certAuthColTitleName]: 'Name',
    [certAuthColTitleIssuedBy]: 'Issued By',
    [certAuthColTitleExpirationDate]: 'Expiration Date',
};const moduleName = 'security';
const componentName = 'sslcertificatesigningrequest';
const prefix = `${moduleName}.${componentName}`;

export const certificateSigningRequestLabel = `${prefix}.certificateSigningRequestLabel`;
export const signingRequestPlaceholder = `${prefix}.signingRequestPlaceholder`;
export const copyButtonLabel = `${prefix}.copyButtonLabel`;
export const certificateInputLabel = `${prefix}.certificateInputLabel`;
export const certificateFileInputPlaceholder = `${prefix}.certificateFileInputPlaceholder`;

export const ENGLISH = {
    [certificateSigningRequestLabel]: 'Certificate Signing Request',
    [signingRequestPlaceholder]: 'Enter CSR',
    [copyButtonLabel]: 'Copy to Clipboard',
    [certificateFileInputPlaceholder]: 'Paste Certificate',
    [certificateInputLabel]: 'Upload or Paste Certificate File',
};const moduleName = 'security';
const componentName = 'sslcertificatecreateapplicationmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const selfSignedButtonLabel = `${prefix}.selfSignedButtonLabel`;
export const importButtonLabel = `${prefix}.importButtonLabel`;
export const certificateInformationHeader = `${prefix}.certificateInformationHeader`;
export const commonNameInputLabel = `${prefix}.commonNameInputLabel`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const emailInputPlaceholder = `${prefix}.emailInputPlaceholder`;
export const organizationUnitInputLabel = `${prefix}.organizationUnitInputLabel`;
export const organizationUnitInputPlaceholder = `${prefix}.organizationUnitInputPlaceholder`;
export const organizationInputLabel = `${prefix}.organizationInputLabel`;
export const organizationInputPlaceholder = `${prefix}.organizationInputPlaceholder`;
export const localityInputLabel = `${prefix}.localityInputLabel`;
export const localityInputPlaceholder = `${prefix}.localityInputPlaceholder`;
export const stateNameInputLabel = `${prefix}.stateNameInputLabel`;
export const stateNameInputPlaceholder = `${prefix}.stateNameInputPlaceholder`;
export const countryInputLabel = `${prefix}.countryInputLabel`;
export const countryInputPlaceholder = `${prefix}.countryInputPlaceholder`;
export const countryInputHelperText = `${prefix}.countryInputHelperText`;
export const subjectAlternateNameInputLabel = `${prefix}.subjectAlternateNameInputLabel`;
export const algorithmInputLabel = `${prefix}.algorithmInputLabel`;
export const keySizeInputLabel = `${prefix}.keySizeInputLabel`;
export const daysUntilExpirationInputLabel = `${prefix}.daysUntilExpirationInputLabel`;
export const certificateManagementProfileInputLabel = `${prefix}.certificateManagementProfileInputLabel`;
export const certificateManagementProfileInputPlaceholder = `${prefix}.certificateManagementProfileInputPlaceholder`;
export const certificateInputLabel = `${prefix}.certificateInputLabel`;
export const pasteTextRadioOption = `${prefix}.pasteTextRadioOption`;
export const uploadFileRadioOption = `${prefix}.uploadFileRadioOption`;
export const pasteCertificateInputPlaceholder = `${prefix}.pasteCertificateInputPlaceholder`;
export const keyPemInputLabel = `${prefix}.keyPemInputLabel`;
export const KeyInputPlaceholder = `${prefix}.KeyInputPlaceholder`;
export const keyPassphraseInputLabel = `${prefix}.keyPassphraseInputLabel`;
export const keyPassphraseInputPlaceholder = `${prefix}.keyPassphraseInputPlaceholder`;
export const hsmCertificateHeader = `${prefix}.hsmCertificateHeader`;
export const hsmGroupInputLabel = `${prefix}.hsmGroupInputLabel`;
export const hsmGroupInputPlaceholder = `${prefix}.hsmGroupInputPlaceholder`;
export const hsmGroupCreateLabel = `${prefix}.hsmGroupCreateLabel`;
export const encryptedPrivateKeyInputLabel = `${prefix}.encryptedPrivateKeyInputLabel`;
export const validateButtonLabel = `${prefix}.validateButtonLabel`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const typeSelectPlaceholder = `${prefix}.typeSelectPlaceholder`;
export const certificateSectionHeader = `${prefix}.certificateSectionHeader`;
export const commonNameInputPlaceholder = `${prefix}.commonNameInputPlaceholder`;
export const dynamicParamsLabel = `${prefix}.dynamicParamsLabel`;
export const certificateFileInputLabel = `${prefix}.certificateFileInputLabel`;
export const certificateFileInputPlaceholder = `${prefix}.certificateFileInputPlaceholder`;
export const sectionTitleOcspSampling = `${prefix}.sectionTitleOcspSampling`;
export const certificateCreateTypeSelfSignedLabel = `${prefix}.certificateCreateTypeSelfSignedLabel`;
export const certificateCreateTypeCsrLabel = `${prefix}.certificateCreateTypeCsrLabel`;
export const certificateCreateTypeImport = `${prefix}.certificateCreateTypeImport`;
export const keySizeSelectPlaceholder = `${prefix}.keySizeSelectPlaceholder`;
export const algorithmSelectPlaceholder = `${prefix}.algorithmSelectPlaceholder`;
export const subjectAltNamesGridColumnLabel = `${prefix}.subjectAltNamesGridColumnLabel`;
export const subjectAltNamesGridPlaceholder = `${prefix}.subjectAltNamesGridPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Certificate (SSLTLS): {0}',
    [modalTitleNew]: 'New Certificate (SSLTLS): {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeSelectPlaceholder]: 'Select Type',
    [certificateInformationHeader]: 'Certificate Information',
    [commonNameInputLabel]: 'Common Name',
    [emailInputLabel]: 'Email',
    [emailInputPlaceholder]: 'Enter Email',
    [organizationUnitInputLabel]: 'Organization Unit',
    [organizationUnitInputPlaceholder]: 'Enter Organization Unit',
    [organizationInputLabel]: 'Organization',
    [organizationInputPlaceholder]: 'Enter Organization',
    [localityInputLabel]: 'Locality or City',
    [localityInputPlaceholder]: 'Enter Locality or City',
    [stateNameInputLabel]: 'State Name or Province',
    [stateNameInputPlaceholder]: 'Enter State Name or Province',
    [countryInputLabel]: 'Country',
    [countryInputPlaceholder]: 'Enter Country',
    [countryInputHelperText]: 'Two letter country code',
    [subjectAlternateNameInputLabel]: 'Subject Alternate Name (SAN) ({0})',
    [algorithmInputLabel]: 'Algorithm',
    [keySizeInputLabel]: 'Key Size',
    [daysUntilExpirationInputLabel]: 'Days Until Expiration',
    [certificateManagementProfileInputLabel]: 'Certificate Management Profile',
    [certificateManagementProfileInputPlaceholder]: 'Select Certificate Management Profile',
    [certificateInputLabel]: 'Certificate',
    [pasteTextRadioOption]: 'Paste text',
    [uploadFileRadioOption]: 'Upload File',
    [pasteCertificateInputPlaceholder]: 'Paste Certificate',
    [keyPemInputLabel]: 'Upload or Paste Key (PEM) or PKCS12 File',
    [KeyInputPlaceholder]: 'Paste Key',
    [keyPassphraseInputLabel]: 'Key Passphrase',
    [keyPassphraseInputPlaceholder]: 'SSLTLS Passphrase',
    [hsmCertificateHeader]: 'HSM Certificate',
    [hsmGroupInputLabel]: 'HSM Group',
    [hsmGroupInputPlaceholder]: 'Select HSM Group',
    [hsmGroupCreateLabel]: 'Create HSM Group',
    [encryptedPrivateKeyInputLabel]: 'Encrypted Private Key',
    [validateButtonLabel]: 'Validate',
    [sectionTitleGeneral]: 'General',
    [certificateSectionHeader]: 'Certificate',
    [commonNameInputPlaceholder]: 'Enter Common Name',
    [dynamicParamsLabel]: 'Dynamic Parameters',
    [certificateFileInputLabel]: 'Upload or Paste Certificate File',
    [certificateFileInputPlaceholder]: 'Paste Certificate',
    [sectionTitleOcspSampling]: 'OCSP',
    [certificateCreateTypeSelfSignedLabel]: 'Self Signed',
    [certificateCreateTypeCsrLabel]: 'CSR',
    [certificateCreateTypeImport]: 'Import',
    [keySizeSelectPlaceholder]: 'Select Key Size',
    [algorithmSelectPlaceholder]: 'Select Algorithm',
    [subjectAltNamesGridColumnLabel]: 'Name',
    [subjectAltNamesGridPlaceholder]: 'Enter Subject Alternate Name',
};const moduleName = 'security';
const componentName = 'pkiprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const tabSectionGeneralLabel = `${prefix}.tabSectionGeneralLabel`;
export const ignorePeerChainCheckboxLabel = `${prefix}.ignorePeerChainCheckboxLabel`;
export const enableCrlCheckCheckboxLabel = `${prefix}.enableCrlCheckCheckboxLabel`;
export const isFederatedCheckboxLabel = `${prefix}.isFederatedCheckboxLabel`;
export const leafValidationCheckboxLabel = `${prefix}.leafValidationCheckboxLabel`;
export const certificateAuthorityHeader = `${prefix}.certificateAuthorityHeader`;
export const certificateAuthoritiesLabel = `${prefix}.certificateAuthoritiesLabel`;
export const certificateRevocationListHeader = `${prefix}.certificateRevocationListHeader`;
export const certificateRevocationListLabel = `${prefix}.certificateRevocationListLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit PKI Profile: {0}',
    [modalTitleNew]: 'New PKI Profile: {0}',
    [nameInputLabel]: 'Name',
    [tabSectionGeneralLabel]: 'General',
    [ignorePeerChainCheckboxLabel]: 'Ignore Peer Chain',
    [enableCrlCheckCheckboxLabel]: 'Enable CRL Check',
    [isFederatedCheckboxLabel]: 'Is Federated',
    [leafValidationCheckboxLabel]: 'Leaf Certificate CRL validation only',
    [certificateAuthorityHeader]: 'Certificate Authority (CA)',
    [certificateAuthoritiesLabel]: 'Certificate Authorities ({0})',
    [certificateRevocationListHeader]: 'Certificate Revocation List (CRL)',
    [certificateRevocationListLabel]: 'Certificate Revocation List ({0})',
};const moduleName = 'security';
const componentName = 'sslcertificatecreateroot';
const prefix = `${moduleName}.${componentName}`;

export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const validateButtonLabel = `${prefix}.validateButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const certificateFileInputPlaceholder = `${prefix}.certificateFileInputPlaceholder`;
export const certificateFileInputLabel = `${prefix}.certificateFileInputLabel`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const sectionTitleCertificate = `${prefix}.sectionTitleCertificate`;
export const sectionTitleOcspSampling = `${prefix}.sectionTitleOcspSampling`;

export const ENGLISH = {
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [validateButtonLabel]: 'Validate',
    [saveButtonLabel]: 'Save',
    [modalTitleEdit]: 'Edit Certificate (SSLTLS): {0}',
    [modalTitleNew]: 'New Certificate (SSLTLS): {0}',
    [certificateFileInputPlaceholder]: 'Paste Certificate',
    [certificateFileInputLabel]: 'Upload or Paste Certificate File',
    [sectionTitleGeneral]: 'General',
    [sectionTitleCertificate]: 'Certificate',
    [sectionTitleOcspSampling]: 'OCSP',
};const moduleName = 'security';
const componentName = 'sslcertificateexportmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitle = `${prefix}.modalTitle`;
export const configurationHeader = `${prefix}.configurationHeader`;
export const sslKeyInputLabel = `${prefix}.sslKeyInputLabel`;
export const copyToClipboardButtonLabel = `${prefix}.copyToClipboardButtonLabel`;
export const sslCertificateInputLabel = `${prefix}.sslCertificateInputLabel`;
export const submitBtnLabel = `${prefix}.submitBtnLabel`;

export const ENGLISH = {
    [modalTitle]: 'Export Certificate: {0}',
    [configurationHeader]: 'Configuration',
    [sslKeyInputLabel]: 'Key',
    [copyToClipboardButtonLabel]: 'Copy to clipboard',
    [sslCertificateInputLabel]: 'Certificate',
    [submitBtnLabel]: 'Done',
};const moduleName = 'security';
const componentName = 'sslcertificateimportedinformation';
const prefix = `${moduleName}.${componentName}`;

export const commonNameInputLabel = `${prefix}.commonNameInputLabel`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const organizationInputLabel = `${prefix}.organizationInputLabel`;
export const organizationUnitInputLabel = `${prefix}.organizationUnitInputLabel`;
export const algorithmInputLabel = `${prefix}.algorithmInputLabel`;
export const keySizeInputLabel = `${prefix}.keySizeInputLabel`;
export const validUntilInputLabel = `${prefix}.validUntilInputLabel`;
export const importedInformationHeader = `${prefix}.importedInformationHeader`;

export const ENGLISH = {
    [commonNameInputLabel]: 'Common Name',
    [emailInputLabel]: 'Email',
    [organizationInputLabel]: 'Organization',
    [organizationUnitInputLabel]: 'Organization Unit',
    [algorithmInputLabel]: 'Algorithm',
    [keySizeInputLabel]: 'Key Size',
    [validUntilInputLabel]: 'Valid Until',
    [importedInformationHeader]: 'Imported Information',
};const moduleName = 'security';
const componentName = 'sslciphersgrid';
const prefix = `${moduleName}.${componentName}`;

export const enabledLabel = `${prefix}.enabledLabel`;
export const cipherLabel = `${prefix}.cipherLabel`;
export const securityScoreLabel = `${prefix}.securityScoreLabel`;
export const pfsLabel = `${prefix}.pfsLabel`;
export const performanceLabel = `${prefix}.performanceLabel`;
export const compatibilityLabel = `${prefix}.compatibilityLabel`;

export const ENGLISH = {
    [enabledLabel]: 'Enabled',
    [cipherLabel]: 'Cipher',
    [securityScoreLabel]: 'Security Score',
    [pfsLabel]: 'PFS',
    [performanceLabel]: 'Performance',
    [compatibilityLabel]: 'Compatibility',
};const moduleName = 'security';
const componentName = 'ssltlscertificateocsp';
const prefix = `${moduleName}.${componentName}`;

export const ocspStaplingCheckboxLabel = `${prefix}.ocspStaplingCheckboxLabel`;
export const ocspResponderUrlFromCertificatesListLabel = `${prefix}.ocspResponderUrlFromCertificatesListLabel`;
export const frequencyIntervalInputLabel = `${prefix}.frequencyIntervalInputLabel`;
export const frequencyIntervalInputPlaceholder = `${prefix}.frequencyIntervalInputPlaceholder`;
export const responseTimeoutInputLabel = `${prefix}.responseTimeoutInputLabel`;
export const responseTimeoutInputPlaceholder = `${prefix}.responseTimeoutInputPlaceholder`;
export const failJobIntervalInputLabel = `${prefix}.failJobIntervalInputLabel`;
export const failJobIntervalInputPlaceholder = `${prefix}.failJobIntervalInputPlaceholder`;
export const maxTriesInputLabel = `${prefix}.maxTriesInputLabel`;
export const maxTriesInputPlaceholder = `${prefix}.maxTriesInputPlaceholder`;
export const ocspResponderUrlListLabel = `${prefix}.ocspResponderUrlListLabel`;
export const ocspResponderGridColumnLabel = `${prefix}.ocspResponderGridColumnLabel`;
export const ocspResponderGridPlaceholder = `${prefix}.ocspResponderGridPlaceholder`;
export const responderUrlActionInputLabel = `${prefix}.responderUrlActionInputLabel`;
export const columnTitleUrl = `${prefix}.columnTitleUrl`;
export const urlActionFailoverOptionLabel = `${prefix}.urlActionFailoverOptionLabel`;
export const urlActionOverrideOptionLabel = `${prefix}.urlActionOverrideOptionLabel`;
export const secondsInnerText = `${prefix}.secondsInnerText`;

export const ENGLISH = {
    [ocspStaplingCheckboxLabel]: 'Enable OCSP Stapling',
    [ocspResponderUrlFromCertificatesListLabel]: 'OCSP Responder URL from Certificates List ({0})',
    [frequencyIntervalInputLabel]: 'Frequency Interval',
    [frequencyIntervalInputPlaceholder]: 'Enter Frequency Interval',
    [responseTimeoutInputLabel]: 'Response Timeout',
    [responseTimeoutInputPlaceholder]: 'Enter Response Timeout',
    [failJobIntervalInputLabel]: 'Fail Job Interval',
    [failJobIntervalInputPlaceholder]: 'Enter Fail Job Interval',
    [maxTriesInputLabel]: 'Max Tries',
    [maxTriesInputPlaceholder]: 'Enter Max Tries',
    [ocspResponderUrlListLabel]: 'OCSP Responder URL List ({0})',
    [ocspResponderGridPlaceholder]: 'Enter URL',
    [ocspResponderGridColumnLabel]: 'URL',
    [responderUrlActionInputLabel]: 'Responder URL Action',
    [columnTitleUrl]: 'URL',
    [urlActionFailoverOptionLabel]: 'Failover',
    [urlActionOverrideOptionLabel]: 'Override',
    [secondsInnerText]: 'Seconds',
};const moduleName = 'security';
const componentName = 'ssltlsprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeSelectPlaceholder = `${prefix}.typeSelectPlaceholder`;
export const acceptedVersionsLabel = `${prefix}.acceptedVersionsLabel`;
export const acceptedVersionsPlaceholder = `${prefix}.acceptedVersionsPlaceholder`;
export const selectListRadioButtonLabel = `${prefix}.selectListRadioButtonLabel`;
export const enterStringRadioButtonLabel = `${prefix}.enterStringRadioButtonLabel`;
export const sendCloseNotifyCheckboxLabel = `${prefix}.sendCloseNotifyCheckboxLabel`;
export const preferClientCipherOrderingCheckboxLabel = `${prefix}.preferClientCipherOrderingCheckboxLabel`;
export const enableEarlyDataCheckboxLabel = `${prefix}.enableEarlyDataCheckboxLabel`;
export const enableSslSessionReuseCheckboxLabel = `${prefix}.enableSslSessionReuseCheckboxLabel`;
export const sslSessionExpirationInputLabel = `${prefix}.sslSessionExpirationInputLabel`;
export const sslSessionExpirationInputPlaceholder = `${prefix}.sslSessionExpirationInputPlaceholder`;
export const acceptedCiphersInputLabel = `${prefix}.acceptedCiphersInputLabel`;
export const acceptedCiphersInputPlaceholder = `${prefix}.acceptedCiphersInputPlaceholder`;
export const ciphersuitesInputLabel = `${prefix}.ciphersuitesInputLabel`;
export const ciphersuitesInputPlaceholder = `${prefix}.ciphersuitesInputPlaceholder`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const sectionTitleCiphers = `${prefix}.sectionTitleCiphers`;
export const sectionTitleRbac = `${prefix}.sectionTitleRbac`;
export const tabTitleRbac = `${prefix}.tabTitleRbac`;
export const changingCiphersMessage = `${prefix}.changingCiphersMessage`;
export const resetToDefaultValuesHeader = `${prefix}.resetToDefaultValuesHeader`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit SSLTLS Profile: {0}',
    [modalTitleNew]: 'New SSLTLS Profile: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeSelectPlaceholder]: 'Select Type',
    [acceptedVersionsLabel]: 'Accepted Versions',
    [acceptedVersionsPlaceholder]: 'Select Version',
    [sendCloseNotifyCheckboxLabel]: 'Send \'Close Notify\' Alert',
    [preferClientCipherOrderingCheckboxLabel]: 'Prefer Client Cipher Ordering',
    [enableEarlyDataCheckboxLabel]: 'Enable Early Data',
    [enableSslSessionReuseCheckboxLabel]: 'Enable SSL Session Reuse',
    [sslSessionExpirationInputLabel]: 'SSL Session Expiration',
    [sslSessionExpirationInputPlaceholder]: 'Enter SSL Session Expiration',
    [selectListRadioButtonLabel]: 'Select From List',
    [enterStringRadioButtonLabel]: 'Enter String',
    [acceptedCiphersInputLabel]: 'Accepted Ciphers',
    [acceptedCiphersInputPlaceholder]: 'Enter Accepted Ciphers',
    [ciphersuitesInputLabel]: 'Ciphersuites (TLSv1.3)',
    [ciphersuitesInputPlaceholder]: 'Enter Ciphersuites',
    [secondsHelperText]: 'Seconds',
    [sectionTitleCiphers]: 'Ciphers',
    [sectionTitleRbac]: 'RoleBased Access Control (RBAC)',
    [tabTitleRbac]: 'RBAC',
    [changingCiphersMessage]: 'Changing cipher type will reset settings to default values.',
    [resetToDefaultValuesHeader]: 'Reset to Default Values',
};const moduleName = 'security';
const componentName = 'sslratingpreview';
const prefix = `${moduleName}.${componentName}`;

export const sslRatingHeader = `${prefix}.sslRatingHeader`;
export const securityScoreLabel = `${prefix}.securityScoreLabel`;
export const performanceRatingLabel = `${prefix}.performanceRatingLabel`;
export const compatibilityRatingLabel = `${prefix}.compatibilityRatingLabel`;

export const ENGLISH = {
    [sslRatingHeader]: 'SSL Rating',
    [securityScoreLabel]: 'Security Score',
    [performanceRatingLabel]: 'Performance Rating',
    [compatibilityRatingLabel]: 'Compatibility Rating',
};const moduleName = 'security';
const componentName = 'hsmgroupdownloadcertificatemodalservice';
const prefix = `${moduleName}.${componentName}`;

export const hsmGroupModalName = `${prefix}.hsmGroupModalName`;

export const ENGLISH = {
    [hsmGroupModalName]: 'HSM Group',
};const moduleName = 'snmptrapprofile';
const componentName = 'snmptrapprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editSnmpTrapProfileHeader = `${prefix}.editSnmpTrapProfileHeader`;
export const newSnmpTrapProfileHeader = `${prefix}.newSnmpTrapProfileHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const generalLabel = `${prefix}.generalLabel`;
export const addLabel = `${prefix}.addLabel`;
export const editLabel = `${prefix}.editLabel`;
export const removeLabel = `${prefix}.removeLabel`;
export const snmpTrapServersLabel = `${prefix}.snmpTrapServersLabel`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const versionLabel = `${prefix}.versionLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [editSnmpTrapProfileHeader]: 'Edit SNMP Trap Profile: {0}',
    [newSnmpTrapProfileHeader]: 'New SNMP Trap Profile: {0}',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [generalLabel]: 'General',
    [addLabel]: 'Add',
    [editLabel]: 'Edit',
    [removeLabel]: 'Remove',
    [snmpTrapServersLabel]: 'SNMP Trap Servers ({0})',
    [ipAddressLabel]: 'IP Address',
    [versionLabel]: 'Version',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'snmptrap';
const componentName = 'snmptrapprofilelistmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeader = `${prefix}.modalHeader`;
export const trapServerIpAddressLabel = `${prefix}.trapServerIpAddressLabel`;
export const trapServerIpAddressPlaceholder = `${prefix}.trapServerIpAddressPlaceholder`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const snmpCommunityLabel = `${prefix}.snmpCommunityLabel`;
export const snmpCommunityPlaceholder = `${prefix}.snmpCommunityPlaceholder`;
export const snmpVersionLabel = `${prefix}.snmpVersionLabel`;
export const snmpVersionPlaceholder = `${prefix}.snmpVersionPlaceholder`;
export const generalLabel = `${prefix}.generalLabel`;
export const usernameLabel = `${prefix}.usernameLabel`;
export const usernamePlaceholder = `${prefix}.usernamePlaceholder`;
export const authPassphraseLabel = `${prefix}.authPassphraseLabel`;
export const authPassphrasePlaceholder = `${prefix}.authPassphrasePlaceholder`;
export const privacySettingsLabel = `${prefix}.privacySettingsLabel`;
export const privacySettingsPlaceholder = `${prefix}.privacySettingsPlaceholder`;
export const privacyPassphraseLabel = `${prefix}.privacyPassphraseLabel`;
export const privacyPassphrasePlaceholder = `${prefix}.privacyPassphrasePlaceholder`;
export const authTypeLabel = `${prefix}.authTypeLabel`;
export const authTypePlaceholder = `${prefix}.authTypePlaceholder`;

export const ENGLISH = {
    [modalHeader]: 'SNMP Trap Profile',
    [trapServerIpAddressLabel]: 'Trap Server IP Address',
    [trapServerIpAddressPlaceholder]: 'Enter Trap Server IP Address',
    [ipAddressLabel]: 'IP Address',
    [snmpCommunityLabel]: 'SNMP Community',
    [snmpCommunityPlaceholder]: 'Enter SNMP Community',
    [snmpVersionLabel]: 'SNMP Version',
    [snmpVersionPlaceholder]: 'Select SNMP Version',
    [generalLabel]: 'General',
    [usernameLabel]: 'Username',
    [usernamePlaceholder]: 'Enter Username',
    [authPassphraseLabel]: 'Auth Passphrase',
    [authPassphrasePlaceholder]: 'Enter Auth Passphrase',
    [privacySettingsLabel]: 'Privacy Settings',
    [privacySettingsPlaceholder]: 'Select Privacy Settings',
    [privacyPassphraseLabel]: 'Privacy Passphrase',
    [privacyPassphrasePlaceholder]: 'Enter Privacy Passphrase',
    [authTypeLabel]: 'Auth Type',
    [authTypePlaceholder]: 'Select Auth Type',
};const moduleName = 'ssopolicy';
const componentName = 'authenticationrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const modalTitle = `${prefix}.modalTitle`;
export const enableRuleLabel = `${prefix}.enableRuleLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeSelectPlaceholder = `${prefix}.typeSelectPlaceholder`;
export const sectionTitleMatch = `${prefix}.sectionTitleMatch`;
export const sectionTitleAction = `${prefix}.sectionTitleAction`;
export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;
export const hostHeaderLabel = `${prefix}.hostHeaderLabel`;
export const pathLabel = `${prefix}.pathLabel`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
    [modalTitle]: 'Authentication Rule',
    [enableRuleLabel]: 'Enable Rule',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeSelectPlaceholder]: 'Select Type',
    [sectionTitleMatch]: 'Match',
    [sectionTitleAction]: 'Action',
    [clientIpAddressLabel]: 'Client IP Address',
    [hostHeaderLabel]: 'Host Header',
    [pathLabel]: 'Path',
};const moduleName = 'ssopolicy';
const componentName = 'authorizationrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const modalTitle = `${prefix}.modalTitle`;
export const enableRuleLabel = `${prefix}.enableRuleLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeSelectPlaceholder = `${prefix}.typeSelectPlaceholder`;
export const sectionTitleMatch = `${prefix}.sectionTitleMatch`;
export const sectionTitleAction = `${prefix}.sectionTitleAction`;
export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;
export const hostHeaderLabel = `${prefix}.hostHeaderLabel`;
export const pathLabel = `${prefix}.pathLabel`;
export const attributeLabel = `${prefix}.attributeLabel`;
export const methodLabel = `${prefix}.methodLabel`;
export const typeLabel = `${prefix}.typeLabel`;
export const statusCodeLabel = `${prefix}.statusCodeLabel`;
export const jwtLabel = `${prefix}.jwtLabel`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
    [modalTitle]: 'Authorization Rule',
    [enableRuleLabel]: 'Enable Rule',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeSelectPlaceholder]: 'Select Type',
    [sectionTitleMatch]: 'Match',
    [sectionTitleAction]: 'Action',
    [clientIpAddressLabel]: 'Client IP Address',
    [hostHeaderLabel]: 'Host Header',
    [pathLabel]: 'Path',
    [attributeLabel]: 'Attribute',
    [methodLabel]: 'HTTP Method',
    [typeLabel]: 'Type',
    [statusCodeLabel]: 'Status Code',
    [jwtLabel]: 'JSON Web Tokens (JWT)',
};const moduleName = 'ssopolicy';
const componentName = 'ssopolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeSelectPlaceholder = `${prefix}.typeSelectPlaceholder`;
export const defaultAuthProfileDropdownLabel = `${prefix}.defaultAuthProfileDropdownLabel`;
export const defaultAuthProfileDropdownPlaceholder = `${prefix}.defaultAuthProfileDropdownPlaceholder`;
export const sectionTitleAuthentication = `${prefix}.sectionTitleAuthentication`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit SSO Policy: {0}',
    [modalTitleNew]: 'Create SSO Policy: {0}',
    [sectionTitleGeneral]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [typeInputLabel]: 'Type',
    [typeSelectPlaceholder]: 'Select Type',
    [defaultAuthProfileDropdownLabel]: 'Default Auth Profile',
    [defaultAuthProfileDropdownPlaceholder]: 'Select Default Auth Profile',
    [sectionTitleAuthentication]: 'Authentication',
};const moduleName = 'ssopolicy';
const componentName = 'authorizationrulegrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;
export const authorizationRulesLabel = `${prefix}.authorizationRulesLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleName]: 'Name',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
    [authorizationRulesLabel]: 'Authorization Rules ({0})',
};const moduleName = 'ssopolicy';
const componentName = 'authenticationrulegrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;
export const authenticationRulesLabel = `${prefix}.authenticationRulesLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleName]: 'Name',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
    [authenticationRulesLabel]: 'Authentication Rules ({0})',
};const moduleName = 'system';
const componentName = 'emailsmtppage';
const prefix = `${moduleName}.${componentName}`;

export const emailSmtpPageTitle = `${prefix}.emailSmtpPageTitle`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [emailSmtpPageTitle]: 'EmailSMTP',
    [editButtonLabel]: 'Edit',
};const moduleName = 'system';
const componentName = 'emailsmtpmodal';
const prefix = `${moduleName}.${componentName}`;

export const emailSmtpHeader = `${prefix}.emailSmtpHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const localHostSectionHeader = `${prefix}.localHostSectionHeader`;
export const anonymousSmtpServerSectionHeader = `${prefix}.anonymousSmtpServerSectionHeader`;
export const smtpSourceFieldLabel = `${prefix}.smtpSourceFieldLabel`;
export const smtpSourceFieldPlaceholder = `${prefix}.smtpSourceFieldPlaceholder`;
export const emailAddressInputLabel = `${prefix}.emailAddressInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const smtpServerLabel = `${prefix}.smtpServerLabel`;
export const doNotUseTlsLabel = `${prefix}.doNotUseTlsLabel`;
export const smtpPortInputLabel = `${prefix}.smtpPortInputLabel`;
export const smtpServerNamePlaceholder = `${prefix}.smtpServerNamePlaceholder`;
export const portNumberInputLabel = `${prefix}.portNumberInputLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [emailSmtpHeader]: 'EmailSMTP',
    [generalSectionHeader]: 'General',
    [localHostSectionHeader]: 'Local Host',
    [anonymousSmtpServerSectionHeader]: 'Anonymous SMTP Server',
    [smtpSourceFieldLabel]: 'SMTP Source',
    [smtpSourceFieldPlaceholder]: 'Select SMTP Source',
    [emailAddressInputLabel]: 'From Address',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [smtpServerLabel]: 'SMTP Server',
    [doNotUseTlsLabel]: 'Do not use TLS',
    [smtpPortInputLabel]: 'SMTP Port',
    [smtpServerNamePlaceholder]: 'domain.com or 123.123.123.123',
    [portNumberInputLabel]: 'Port Number',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
};const moduleName = 'system';
const componentName = 'emailsmtppagecard';
const prefix = `${moduleName}.${componentName}`;

export const emailSmtpSourceCardTitle = `${prefix}.emailSmtpSourceCardTitle`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const smtpSourceLabel = `${prefix}.smtpSourceLabel`;
export const fromAddressLabel = `${prefix}.fromAddressLabel`;
export const smtpServerLabel = `${prefix}.smtpServerLabel`;
export const userNameLabel = `${prefix}.userNameLabel`;
export const sendTestEmailBtnLabel = `${prefix}.sendTestEmailBtnLabel`;
export const localHostLabel = `${prefix}.localHostLabel`;
export const anonymousSmtpServerLabel = `${prefix}.anonymousSmtpServerLabel`;
export const portLabel = `${prefix}.portLabel`;

export const ENGLISH = {
    [emailSmtpSourceCardTitle]: 'email smtp source',
    [emptyDataLabel]: 'NA',
    [smtpSourceLabel]: 'SMTP Source',
    [fromAddressLabel]: 'From Address',
    [smtpServerLabel]: 'SMTP Server',
    [portLabel]: 'Port',
    [userNameLabel]: 'Username',
    [sendTestEmailBtnLabel]: 'Send Test Email',
    [anonymousSmtpServerLabel]: 'Anonymous SMTP Server',
    [localHostLabel]: 'Local Host',
};const moduleName = 'system';
const componentName = 'crashreportspage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleFilename = `${prefix}.columnTitleFilename`;
export const downloadBtnLabel = `${prefix}.downloadBtnLabel`;
export const deleteBtnLabel = `${prefix}.deleteBtnLabel`;
export const coreFilesHeader = `${prefix}.coreFilesHeader`;

export const ENGLISH = {
    [columnTitleFilename]: 'Filename',
    [downloadBtnLabel]: 'Download',
    [deleteBtnLabel]: 'Delete',
    [coreFilesHeader]: 'Core Files',
};const moduleName = 'system';
const componentName = 'schedulermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalHeader = `${prefix}.generalHeader`;
export const schedulerHeader = `${prefix}.schedulerHeader`;
export const backupDestinationHeader = `${prefix}.backupDestinationHeader`;
export const enableConfigurationBackupLabel = `${prefix}.enableConfigurationBackupLabel`;
export const frequencyLabel = `${prefix}.frequencyLabel`;
export const frequencyUnitLabel = `${prefix}.frequencyUnitLabel`;
export const enableLocalBackupLabel = `${prefix}.enableLocalBackupLabel`;
export const filePrefixLabel = `${prefix}.filePrefixLabel`;
export const numberOfBackupsLabel = `${prefix}.numberOfBackupsLabel`;
export const numberPlaceholderLabel = `${prefix}.numberPlaceholderLabel`;
export const enableRemoteServerLabel = `${prefix}.enableRemoteServerLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const frequencyUnitInputPlaceholder = `${prefix}.frequencyUnitInputPlaceholder`;
export const serverAddressInputLabel = `${prefix}.serverAddressInputLabel`;
export const serverAddressInputPlaceholder = `${prefix}.serverAddressInputPlaceholder`;
export const remoteDirectoryInputLabel = `${prefix}.remoteDirectoryInputLabel`;
export const remoteDirectoryInputPlaceholder = `${prefix}.remoteDirectoryInputPlaceholder`;
export const remoteDefaultDirectoryLabel = `${prefix}.remoteDefaultDirectoryLabel`;
export const userCredentialsInputLabel = `${prefix}.userCredentialsInputLabel`;
export const userCredentialsInputPlaceholder = `${prefix}.userCredentialsInputPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Configuration Backup: {0}',
    [modalTitleNew]: 'Create Configuration Backup: {0}',
    [generalHeader]: 'General',
    [schedulerHeader]: 'Scheduler',
    [backupDestinationHeader]: 'Backup Destination',
    [enableConfigurationBackupLabel]: 'Enable Configuration Backup',
    [frequencyLabel]: 'Frequency',
    [frequencyUnitLabel]: 'Frequency Unit',
    [frequencyUnitInputPlaceholder]: 'Select Units',
    [enableLocalBackupLabel]: 'Enable Local Backup (On Controller)',
    [filePrefixLabel]: 'File Prefix',
    [numberOfBackupsLabel]: 'Number of backups to store',
    [numberPlaceholderLabel]: 'Enter Number',
    [enableRemoteServerLabel]: 'Enable Remote Server Backup',
    [serverAddressInputLabel]: 'Server Address',
    [serverAddressInputPlaceholder]: 'Enter Server Address',
    [remoteDirectoryInputLabel]: 'Home Directory',
    [remoteDirectoryInputPlaceholder]: 'Enter Home Directory',
    [remoteDefaultDirectoryLabel]: 'Defaults to the home directory',
    [userCredentialsInputLabel]: 'User Credentials',
    [userCredentialsInputPlaceholder]: 'Select SSH User',
};const moduleName = 'update';
const componentName = 'compliancemodeconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const complianceModeHeader = `${prefix}.complianceModeHeader`;
export const changeWarningMessage = `${prefix}.changeWarningMessage`;
export const complianceModeMessage = `${prefix}.complianceModeMessage`;
export const enableFipsCheckboxLabel = `${prefix}.enableFipsCheckboxLabel`;
export const enableCommonCriteriaCheckboxLabel = `${prefix}.enableCommonCriteriaCheckboxLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const continueButtonLabel = `${prefix}.continueButtonLabel`;

export const ENGLISH = {
    [complianceModeHeader]: 'Compliance Mode',
    [changeWarningMessage]: 'This change is disruptive and will trigger warm start of Control ' +
        'and Data planes. Please confirm you would like to proceed.',
    [complianceModeMessage]: 'Enabling FIPS in Compliance mode will restrict SSH and TLS ciphers ' +
        'and protocol versions. Enabling Common Criteria in Compliance mode will disallow TLS ' +
        '1.0 and OCSP Stapling, in addition to FIPS mode restrictions.',
    [enableFipsCheckboxLabel]: 'Enable FIPS',
    [enableCommonCriteriaCheckboxLabel]: 'Enable Common Criteria',
    [cancelButtonLabel]: 'Cancel',
    [continueButtonLabel]: 'Yes, continue',
};const moduleName = 'update';
const componentName = 'recentupdateslist';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;
export const emptyListPlaceholderController = `${prefix}.emptyListPlaceholderController`;
export const emptyListPlaceholderSeg = `${prefix}.emptyListPlaceholderSeg`;

export const ENGLISH = {
    [title]: 'Recent',
    [emptyListPlaceholderController]: 'Controller has never been upgraded',
    [emptyListPlaceholderSeg]: 'Service Engine Group has never been upgraded',
};const moduleName = 'tenancymode';
const componentName = 'tenantmodepagecard';
const prefix = `${moduleName}.${componentName}`;

export const tenancyCardHeader = `${prefix}.tenancyCardHeader`;
export const ipRouteDomainLabel = `${prefix}.ipRouteDomainLabel`;
export const serviceEngineManagedWithinLabel = `${prefix}.serviceEngineManagedWithinLabel`;
export const tenantServiceEngineAccessLabel = `${prefix}.tenantServiceEngineAccessLabel`;

export const emptyDataLabel = `${prefix}.emptyDataLabel`;

export const ENGLISH = {
    [tenancyCardHeader]: 'Tenancy',
    [ipRouteDomainLabel]: 'IP Route Domain',
    [serviceEngineManagedWithinLabel]: 'Service Engine Managed Within',
    [tenantServiceEngineAccessLabel]: 'Tenant Service Engine Access',

    [emptyDataLabel]: 'NA',
};const moduleName = 'update';
const componentName = 'systemaboutcard';
const prefix = `${moduleName}.${componentName}`;

export const aboutHeader = `${prefix}.aboutHeader`;

export const ENGLISH = {
    [aboutHeader]: 'About',
};const moduleName = 'tenancymode';
const componentName = 'tenancymodepage';
const prefix = `${moduleName}.${componentName}`;

export const tenantModePageTitle = `${prefix}.tenantModePageTitle`;
export const editBtnLabel = `${prefix}.editBtnLabel`;

export const ENGLISH = {
    [tenantModePageTitle]: 'Tenancy Mode',
    [editBtnLabel]: 'Edit',
};const moduleName = 'update';
const componentName = 'systemaboutinfo';
const prefix = `${moduleName}.${componentName}`;

export const versionLabel = `${prefix}.versionLabel`;
export const patchLabel = `${prefix}.patchLabel`;
export const buildLabel = `${prefix}.buildLabel`;
export const dateLabel = `${prefix}.dateLabel`;

export const ENGLISH = {
    [versionLabel]: 'Version',
    [patchLabel]: 'Patch',
    [buildLabel]: 'Build',
    [dateLabel]: 'Date',
};const moduleName = 'vrfcontext';
const componentName = 'bgpcommunitystringsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const stringInputPlaceholder = `${prefix}.stringInputPlaceholder`;
export const columnTitleString = `${prefix}.columnTitleString`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [stringInputPlaceholder]: 'Enter String',
    [columnTitleString]: 'String',
    [removeButtonLabel]: 'Remove',
};const moduleName = 'update';
const componentName = 'updatenodestatuscard';
const prefix = `${moduleName}.${componentName}`;

export const updateOperationLabel = `${prefix}.updateOperationLabel`;
export const updateFromVersionLabel = `${prefix}.updateFromVersionLabel`;
export const updateOperationStartTimeLabel = `${prefix}.updateOperationStartTimeLabel`;
export const successfulLabel = `${prefix}.successfulLabel`;
export const failedLabel = `${prefix}.failedLabel`;
export const unknownLabel = `${prefix}.unknownLabel`;

export const ENGLISH = {
    [updateOperationLabel]: 'Operation',
    [updateFromVersionLabel]: 'From',
    [updateOperationStartTimeLabel]: 'Started',
    [successfulLabel]: 'Successful',
    [failedLabel]: 'Failed',
    [unknownLabel]: 'Unknown',
};const moduleName = 'update';
const componentName = 'systemupdateaboutcard';
const prefix = `${moduleName}.${componentName}`;

export const rollbackBtnLabel = `${prefix}.rollbackBtnLabel`;
export const fipsLabel = `${prefix}.fipsLabel`;
export const commonCriteriaLabel = `${prefix}.commonCriteriaLabel`;
export const complianceModeBtnLabel = `${prefix}.complianceModeBtnLabel`;
export const inProgressLabel = `${prefix}.inProgressLabel`;

export const ENGLISH = {
    [rollbackBtnLabel]: 'Rollback',
    [fipsLabel]: 'FIPS',
    [commonCriteriaLabel]: 'Common Criteria',
    [complianceModeBtnLabel]: 'Compliance Mode',
    [inProgressLabel]: 'In Progress',
};const moduleName = 'upgrade';
const componentName = 'upgradetranscriptmodal';
const prefix = `${moduleName}.${componentName}`;

export const upgradeLabel = `${prefix}.upgradeLabel`;
export const patchLabel = `${prefix}.patchLabel`;
export const rollbackLabel = `${prefix}.rollbackLabel`;
export const rollbackPatchLabel = `${prefix}.rollbackPatchLabel`;
export const headerLabel = `${prefix}.headerLabel`;
export const controllerLabel = `${prefix}.controllerLabel`;
export const successfulOperationMessage = `${prefix}.successfulOperationMessage`;
export const failedOperationMessage = `${prefix}.failedOperationMessage`;
export const nodeNameLabel = `${prefix}.nodeNameLabel`;
export const seGroupLabel = `${prefix}.seGroupLabel`;
export const transcriptLabel = `${prefix}.transcriptLabel`;
export const upgradeProgressBarDisplayValueLabel =
    `${prefix}.upgradeProgressBarDisplayValueLabel`;
export const upgradeProgressBarLabel = `${prefix}.upgradeProgressBarLabel`;
export const completedOnLabel = `${prefix}.completedOnLabel`;

export const ENGLISH = {
    [upgradeLabel]: 'Upgrade',
    [patchLabel]: 'Patch',
    [rollbackLabel]: 'Upgrade (Rollback)',
    [rollbackPatchLabel]: 'Patch (Rollback)',
    [headerLabel]: '{0} Transcript',
    [controllerLabel]: 'Controller',
    [upgradeProgressBarLabel]: '{0} Updating to {1}',
    [successfulOperationMessage]: 'completed successfully on {0}',
    [failedOperationMessage]: 'failed on {0}',
    [nodeNameLabel]: 'Source',
    [seGroupLabel]: 'Service Engine Group',
    [transcriptLabel]: 'Transcript',
    [upgradeProgressBarDisplayValueLabel]: 'Completed',
    [completedOnLabel]: 'Completed On',
};const moduleName = 'vrfcontext';
const componentName = 'bgppeergrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleIpv4Peer = `${prefix}.columnTitleIpv4Peer`;
export const columnTitleIpv6Peer = `${prefix}.columnTitleIpv6Peer`;
export const columnTitlePlacementNetwork = `${prefix}.columnTitlePlacementNetwork`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleIpv4Peer]: 'IPV4 Peer',
    [columnTitleIpv6Peer]: 'IPV6 Peer',
    [columnTitlePlacementNetwork]: 'Placement Network',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};const moduleName = 'vsvip';
const componentName = 'enablevip';
const prefix = `${moduleName}.${componentName}`;

export const enableVipCheckboxLabel = `${prefix}.enableVipCheckboxLabel`;

export const ENGLISH = {
    [enableVipCheckboxLabel]: 'Enable VIP',
};const moduleName = 'vrfcontext';
const componentName = 'bgppeermodal';
const prefix = `${moduleName}.${componentName}`;

export const peerHeader = `${prefix}.peerHeader`;
export const generalTabLabel = `${prefix}.generalTabLabel`;
export const generalHeader = `${prefix}.generalHeader`;
export const labelInputLabel = `${prefix}.labelInputLabel`;
export const labelInputPlaceholder = `${prefix}.labelInputPlaceholder`;
export const placementNetworkInputLabel = `${prefix}.placementNetworkInputLabel`;
export const placementNetworkInputPlaceholder = `${prefix}.placementNetworkInputPlaceholder`;
export const peerTabLabel = `${prefix}.peerTabLabel`;
export const peerSectionHeader = `${prefix}.peerSectionHeader`;
export const ipv4PrefixInputLabel = `${prefix}.ipv4PrefixInputLabel`;
export const prefixInputPlaceholder = `${prefix}.prefixInputPlaceholder`;
export const ipv4PeerInputLabel = `${prefix}.ipv4PeerInputLabel`;
export const peerInputPlaceholder = `${prefix}.peerInputPlaceholder`;
export const ipv6PrefixInputLabel = `${prefix}.ipv6PrefixInputLabel`;
export const ipv6PeerInputLabel = `${prefix}.ipv6PeerInputLabel`;
export const md5SecretInputLabel = `${prefix}.md5SecretInputLabel`;
export const md5SecretInputPlaceholder = `${prefix}.md5SecretInputPlaceholder`;
export const remoteAccessibleAutonomousSystemIdInputLabel = `${prefix}.remoteAccessibleAutonomousSystemIdInputLabel`;
export const remoteAccessibleAutonomousSystemIdInputPlaceholder = `${prefix}.remoteAccessibleAutonomousSystemIdInputPlaceholder`;
export const multihopIdInputLabel = `${prefix}.multihopIdInputLabel`;
export const multihopIdInputPlaceholder = `${prefix}.multihopIdInputPlaceholder`;
export const advertisementIntervalInputLabel = `${prefix}.advertisementIntervalInputLabel`;
export const advertisementIntervalInputPlaceholder = `${prefix}.advertisementIntervalInputPlaceholder`;
export const connectionTimerInputLabel = `${prefix}.connectionTimerInputLabel`;
export const connectionTimerInputPlaceholder = `${prefix}.connectionTimerInputPlaceholder`;
export const keepaliveIntervalInputLabel = `${prefix}.keepaliveIntervalInputLabel`;
export const keepaliveIntervalInputPlaceholder = `${prefix}.keepaliveIntervalInputPlaceholder`;
export const holdTimeInputLabel = `${prefix}.holdTimeInputLabel`;
export const holdTimeInputPlaceholder = `${prefix}.holdTimeInputPlaceholder`;
export const enableBfdCheckboxLabel = `${prefix}.enableBfdCheckboxLabel`;
export const advertiseVipToPeerCheckboxLabel = `${prefix}.advertiseVipToPeerCheckboxLabel`;
export const advertiseSnatToPeerCheckboxLabel = `${prefix}.advertiseSnatToPeerCheckboxLabel`;
export const ibgpLocalAsOverrideCheckBoxLabel = `${prefix}.ibgpLocalAsOverrideCheckBoxLabel`;
export const secondsInnerText = `${prefix}.secondsInnerText`;

export const ENGLISH = {
    [peerHeader]: 'Peer ({0})',
    [generalTabLabel]: 'General',
    [generalHeader]: 'General',
    [labelInputLabel]: 'Label',
    [labelInputPlaceholder]: 'Enter Label',
    [placementNetworkInputLabel]: 'Placement Network',
    [placementNetworkInputPlaceholder]: 'Select Placement Network',
    [peerTabLabel]: 'Peer',
    [peerSectionHeader]: 'Peer',
    [ipv4PrefixInputLabel]: 'IPV4 Prefix',
    [prefixInputPlaceholder]: 'Enter Prefix',
    [ipv4PeerInputLabel]: 'IPV4 Peer',
    [ipv6PrefixInputLabel]: 'IPV6 Prefix',
    [peerInputPlaceholder]: 'Enter Peer',
    [ipv6PeerInputLabel]: 'IPV6 Peer',
    [md5SecretInputLabel]: 'MD5 Secret',
    [md5SecretInputPlaceholder]: 'Enter Secret',
    [remoteAccessibleAutonomousSystemIdInputLabel]: 'Remote Accessible Autonomous System ID (AS)',
    [remoteAccessibleAutonomousSystemIdInputPlaceholder]: '1429967295',
    [multihopIdInputLabel]: 'Multihop',
    [multihopIdInputPlaceholder]: 'Enter TTL (0255)',
    [advertisementIntervalInputLabel]: 'Advertisement Interval',
    [advertisementIntervalInputPlaceholder]: 'Enter Advertisement Interval',
    [connectionTimerInputLabel]: 'Connection Timer',
    [connectionTimerInputPlaceholder]: 'Enter Connection Timer',
    [keepaliveIntervalInputLabel]: 'Keepalive Interval',
    [keepaliveIntervalInputPlaceholder]: 'Enter Keepalive Interval',
    [holdTimeInputLabel]: 'Hold Time',
    [holdTimeInputPlaceholder]: 'Enter Hold Time',
    [enableBfdCheckboxLabel]: 'Enable BiDirectional Forward Detection (BFD)',
    [advertiseVipToPeerCheckboxLabel]: 'Advertise VIP to Peer',
    [advertiseSnatToPeerCheckboxLabel]: 'Advertise SNAT to Peer',
    [ibgpLocalAsOverrideCheckBoxLabel]: 'Use iBGP as Local Override',
    [secondsInnerText]: 'Seconds',
};const moduleName = 'vrfcontext';
const componentName = 'bgpprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const warningHeaderText = `${prefix}.warningHeaderText`;
export const switchingTypeMessage = `${prefix}.switchingTypeMessage`;
export const confirmationText = `${prefix}.confirmationText`;
export const confirmButtonText = `${prefix}.confirmButtonText`;
export const bgpProfileHeader = `${prefix}.bgpProfileHeader`;
export const generalHeader = `${prefix}.generalHeader`;
export const bgpAutonomousSystemInputLabel = `${prefix}.bgpAutonomousSystemInputLabel`;
export const bgpAutonomousSystemInputPlaceholderLabel = `${prefix}.bgpAutonomousSystemInputPlaceholderLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const keepaliveIntervalInputLabel = `${prefix}.keepaliveIntervalInputLabel`;
export const holdTimeInputLabel = `${prefix}.holdTimeInputLabel`;
export const routingHeader = `${prefix}.routingHeader`;
export const peersTabLabel = `${prefix}.peersTabLabel`;
export const peersHeader = `${prefix}.peersHeader`;
export const communityTabLabel = `${prefix}.communityTabLabel`;
export const communityHeader = `${prefix}.communityHeader`;
export const sendCommunityAttributesCheckboxLabel = `${prefix}.sendCommunityAttributesCheckboxLabel`;
export const localPreferenceLabel = `${prefix}.localPreferenceLabel`;
export const localPreferencePlaceholder = `${prefix}.localPreferencePlaceholder`;
export const numberAsPathPrependLabel = `${prefix}.numberAsPathPrependLabel`;
export const numberAsPathPrependPlaceholder = `${prefix}.numberAsPathPrependPlaceholder`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const communityStringHeader = `${prefix}.communityStringHeader`;

export const ENGLISH = {
    [warningHeaderText]: 'Warning',
    [switchingTypeMessage]: 'Switching type will wipe out stored peers',
    [confirmationText]: 'Are you sure you want to continue?',
    [confirmButtonText]: 'Yes, continue',
    [bgpProfileHeader]: 'BGP Profile: {0}',
    [generalHeader]: 'General',
    [bgpAutonomousSystemInputLabel]: 'BGP Autonomous System (AS) ID',
    [bgpAutonomousSystemInputPlaceholderLabel]: 'Enter BGP Autonomous System (AS) ID',
    [typeInputLabel]: 'Type',
    [keepaliveIntervalInputLabel]: 'Keepalive Interval',
    [holdTimeInputLabel]: 'Hold Time',
    [routingHeader]: 'Routing Options',
    [peersTabLabel]: 'Peers',
    [peersHeader]: 'Peers',
    [communityTabLabel]: 'Community',
    [communityHeader]: 'Community',
    [sendCommunityAttributesCheckboxLabel]: 'Send Community Attributes to All Peers',
    [localPreferenceLabel]: 'Local Preference',
    [localPreferencePlaceholder]: 'Enter Local Preference',
    [numberAsPathPrependLabel]: 'Number of ASPath Prepend',
    [numberAsPathPrependPlaceholder]: 'Enter Number of ASPath Prepend',
    [secondsInnerText]: 'Seconds',
    [communityStringHeader]: 'Strings ({0})',
};const moduleName = 'vsvip';
const componentName = 'dnsinfomodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeader = `${prefix}.modalHeader`;
export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const ttlInputLabel = `${prefix}.ttlInputLabel`;
export const ttlInputPlaceholder = `${prefix}.ttlInputPlaceholder`;
export const secondsHelperText = `${prefix}.secondsHelperText`;
export const typeDropdownLabel = `${prefix}.typeDropdownLabel`;
export const typeDropdownPlaceholder = `${prefix}.typeDropdownPlaceholder`;
export const recordResponseNumberInputLabel = `${prefix}.recordResponseNumberInputLabel`;
export const recordResponseNumberInputPlaceholder = `${prefix}.recordResponseNumberInputPlaceholder`;
export const recordResponseNumberInputHelperText = `${prefix}.recordResponseNumberInputHelperText`;
export const recordResponseAlgorithmDropdownLabel = `${prefix}.recordResponseAlgorithmDropdownLabel`;
export const recordResponseAlgorithmDropdownPlaceholder = `${prefix}.recordResponseAlgorithmDropdownPlaceholder`;
export const canonicalNameInputLabel = `${prefix}.canonicalNameInputLabel`;
export const canonicalNameInputPlaceholder = `${prefix}.canonicalNameInputPlaceholder`;
export const metaDataTextAreaLabel = `${prefix}.metaDataTextAreaLabel`;
export const metaDataTextAreaPlaceholder = `${prefix}.metaDataTextAreaPlaceholder`;

export const ENGLISH = {
    [modalHeader]: 'DNS: {0}',
    [modalTitleEdit]: 'Edit DNS: {0}',
    [modalTitleNew]: 'Create DNS: {0}',
    [generalSectionHeader]: 'General',
    [ttlInputLabel]: 'TTL',
    [ttlInputPlaceholder]: 'Enter Time To Live',
    [secondsHelperText]: 'Seconds',
    [typeDropdownLabel]: 'Type',
    [typeDropdownPlaceholder]: 'Select Type',
    [recordResponseNumberInputLabel]: 'Number of Records in Response',
    [recordResponseNumberInputPlaceholder]: 'Enter Number of Records in Response',
    [recordResponseNumberInputHelperText]: '0: All Records',
    [recordResponseAlgorithmDropdownLabel]: 'Record Response Algorithm',
    [recordResponseAlgorithmDropdownPlaceholder]: 'Select Record Response Algorithm',
    [canonicalNameInputLabel]: 'Canonical Name',
    [canonicalNameInputPlaceholder]: 'Enter Canonical Name',
    [metaDataTextAreaLabel]: 'Metadata',
    [metaDataTextAreaPlaceholder]: 'Enter Metadata',
};const moduleName = 'vrfcontext';
const componentName = 'bgproutingoptionsmodal';
const prefix = `${moduleName}.${componentName}`;

export const routingOptionsHeader = `${prefix}.routingOptionsHeader`;
export const configLabelInputLabel = `${prefix}.configLabelInputLabel`;
export const configLabelInputPlaceholder = `${prefix}.configLabelInputPlaceholder`;
export const learnRoutesCheckboxLabel = `${prefix}.learnRoutesCheckboxLabel`;
export const advertiseDefaultRoutesCheckboxLabel = `${prefix}.advertiseDefaultRoutesCheckboxLabel`;
export const learnOnlyDefaultRoutesCheckboxLabel = `${prefix}.learnOnlyDefaultRoutesCheckboxLabel`;
export const advertiseRoutesCheckboxLabel = `${prefix}.advertiseRoutesCheckboxLabel`;
export const maxLearnedRoutesInputLabel = `${prefix}.maxLearnedRoutesInputLabel`;
export const maxLearnedRoutesInputPlaceholder = `${prefix}.maxLearnedRoutesInputPlaceholder`;

export const ENGLISH = {
    [routingOptionsHeader]: 'Routing Options: {0}',
    [configLabelInputLabel]: 'Label',
    [configLabelInputPlaceholder]: 'Enter Label',
    [learnRoutesCheckboxLabel]: 'Learn Routes',
    [advertiseDefaultRoutesCheckboxLabel]: 'Advertise Only Default Routes',
    [learnOnlyDefaultRoutesCheckboxLabel]: 'Learn Only Default Routes',
    [advertiseRoutesCheckboxLabel]: 'Advertise Routes',
    [maxLearnedRoutesInputLabel]: 'Max Learned Routes',
    [maxLearnedRoutesInputPlaceholder]: 'Enter Max Learned Routes',
};const moduleName = 'vrfcontext';
const componentName = 'bgproutingoptionsgrid';
const prefix = `${moduleName}.${componentName}`;

export const addButtonLabel = `${prefix}.addButtonLabel`;
export const columnTitleLabel = `${prefix}.columnTitleLabel`;
export const columnTitleLearnRoutes = `${prefix}.columnTitleLearnRoutes`;
export const columnTitleAdvertise = `${prefix}.columnTitleAdvertise`;
export const columnTitleMaxRoutes = `${prefix}.columnTitleMaxRoutes`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const editButtonLabel = `${prefix}.editButtonLabel`;

export const ENGLISH = {
    [addButtonLabel]: 'Add',
    [columnTitleLabel]: 'Label',
    [columnTitleLearnRoutes]: 'Learn Routes',
    [columnTitleAdvertise]: 'Advertise',
    [columnTitleMaxRoutes]: 'Max Routes',
    [removeButtonLabel]: 'Remove',
    [editButtonLabel]: 'Edit',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'azurevipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};const moduleName = 'vsvip';
const componentName = 'awsvipconfig';
const prefix = `${moduleName}.${componentName}`;

export const availabilityZoneLabel = `${prefix}.availabilityZoneLabel`;
export const availabilityZonePlaceholder = `${prefix}.availabilityZonePlaceholder`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [availabilityZoneLabel]: 'Availability Zone',
    [availabilityZonePlaceholder]: 'Select Availability Zone',
    [sectionTitleGeneral]: 'General',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'genericvipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'nsxtvipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'gcpvipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};const moduleName = 'vsvip';
const componentName = 'vipmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit VIP: {0}',
    [modalTitleNew]: 'Create VIP: {0}',
    [sectionTitleGeneral]: 'General',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'vcentervipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};undefined VsVipModule
 


  
  
  
 

const moduleName = 'vsvip';
const componentName = 'openstackvipconfig';
const prefix = `${moduleName}.${componentName}`;

export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;

export const ENGLISH = {
    [sectionTitleGeneral]: 'General',
};const moduleName = 'vsvip';
const componentName = 'dnsinfomodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const placementNetworkLabel = `${prefix}.placementNetworkLabel`;
export const placementNetworkPlaceholder = `${prefix}.placementNetworkPlaceholder`;
export const ipv4SubnetDropdownLabel = `${prefix}.ipv4SubnetDropdownLabel`;
export const ipv4SubnetDropdownPlaceholder = `${prefix}.ipv4SubnetDropdownPlaceholder`;
export const ipv6SubnetDropdownLabel = `${prefix}.ipv6SubnetDropdownLabel`;
export const ipv6SubnetDropdownPlaceholder = `${prefix}.ipv6SubnetDropdownPlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit Placement Network',
    [modalTitleNew]: 'Create Placement Network',
    [generalSectionHeader]: 'General',
    [placementNetworkLabel]: 'Placement Network',
    [placementNetworkPlaceholder]: 'Enter Placement Network',
    [ipv4SubnetDropdownLabel]: 'IPv4 Subnet',
    [ipv4SubnetDropdownPlaceholder]: 'Select IPv4 Subnet',
    [ipv6SubnetDropdownLabel]: 'IPv6 Subnet',
    [ipv6SubnetDropdownPlaceholder]: 'Select IPv6 Subnet',
};const moduleName = 'vsvip';
const componentName = 'dnsinfogrid';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleApplicationDomain = `${prefix}.columnTitleApplicationDomain`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const editActionLabel = `${prefix}.editActionLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const dnsHeader = `${prefix}.dnsHeader`;

export const ENGLISH = {
    [columnTitleApplicationDomain]: 'Application Domain',
    [columnTitleType]: 'Type',
    [removeActionLabel]: 'Remove',
    [editActionLabel]: 'Edit',
    [addButtonLabel]: 'Add',
    [dnsHeader]: 'DNS ({0})',
};const moduleName = 'vsvip';
const componentName = 'vipplacementsubnet';
const prefix = `${moduleName}.${componentName}`;

export const ipv4SubnetDropdownLabel = `${prefix}.ipv4SubnetDropdownLabel`;
export const ipv4SubnetDropdownPlaceholder = `${prefix}.ipv4SubnetDropdownPlaceholder`;
export const ipv6SubnetDropdownLabel = `${prefix}.ipv6SubnetDropdownLabel`;
export const ipv6SubnetDropdownPlaceholder = `${prefix}.ipv6SubnetDropdownPlaceholder`;

export const ENGLISH = {
    [ipv4SubnetDropdownLabel]: 'IPv4 Subnet',
    [ipv4SubnetDropdownPlaceholder]: 'Select IPv4 Subnet',
    [ipv6SubnetDropdownLabel]: 'IPv6 Subnet',
    [ipv6SubnetDropdownPlaceholder]: 'Select IPv6 Subnet',
};const moduleName = 'vsvip';
const componentName = 'vipprivateipconfig';
const prefix = `${moduleName}.${componentName}`;

export const privateIpLabel = `${prefix}.privateIpLabel`;
export const autoAllocateRadioButtonLabel = `${prefix}.autoAllocateRadioButtonLabel`;
export const staticRadioButtonLabel = `${prefix}.staticRadioButtonLabel`;
export const networkDropdownLabel = `${prefix}.networkDropdownLabel`;
export const networkDropdownPlaceholder = `${prefix}.networkDropdownPlaceholder`;
export const ipv4AddressInputLabel = `${prefix}.ipv4AddressInputLabel`;
export const ipv4AddressInputPlaceholder = `${prefix}.ipv4AddressInputPlaceholder`;
export const ipv6AddressInputLabel = `${prefix}.ipv6AddressInputLabel`;
export const ipv6AddressInputPlaceholder = `${prefix}.ipv6AddressInputPlaceholder`;
export const ipProtocolLabel = `${prefix}.ipProtocolLabel`;
export const v4RadioButtonLabel = `${prefix}.v4RadioButtonLabel`;
export const v6RadioButtonLabel = `${prefix}.v6RadioButtonLabel`;
export const bothRadioButtonLabel = `${prefix}.bothRadioButtonLabel`;
export const prefixLengthInputLabel = `${prefix}.prefixLengthInputLabel`;
export const prefixLengthInputPlaceholder = `${prefix}.prefixLengthInputPlaceholder`;
export const enablePrefixLengthCheckboxLabel = `${prefix}.enablePrefixLengthCheckboxLabel`;

export const ENGLISH = {
    [privateIpLabel]: 'Private IP',
    [autoAllocateRadioButtonLabel]: 'AutoAllocate',
    [staticRadioButtonLabel]: 'Static',
    [networkDropdownLabel]: 'VIP Address Allocation Network',
    [networkDropdownPlaceholder]: 'Select Network for VIP Address Allocation',
    [ipv4AddressInputLabel]: 'IPv4 Address',
    [ipv4AddressInputPlaceholder]: 'Enter IPv4 Address',
    [ipv6AddressInputLabel]: 'IPv6 Address',
    [ipv6AddressInputPlaceholder]: 'Enter IPv6 Address',
    [ipProtocolLabel]: 'IP Protocol',
    [v4RadioButtonLabel]: 'V4 Only',
    [v6RadioButtonLabel]: 'V6 Only',
    [bothRadioButtonLabel]: 'Both',
    [prefixLengthInputLabel]: 'Prefix Length',
    [prefixLengthInputPlaceholder]: 'Enter Prefix Length',
    [enablePrefixLengthCheckboxLabel]: 'Enable Prefix Length',
};const moduleName = 'vsvip';
const componentName = 'vipplacementnetworkgrid';
const prefix = `${moduleName}.${componentName}`;

export const placementNetworkHeader = `${prefix}.placementNetworkHeader`;
export const columnTitleNetwork = `${prefix}.columnTitleNetwork`;
export const columnTitleSubnet = `${prefix}.columnTitleSubnet`;
export const columnTitleSubnet6 = `${prefix}.columnTitleSubnet6`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const editActionLabel = `${prefix}.editActionLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;

export const ENGLISH = {
    [placementNetworkHeader]: 'Placement Network ({0})',
    [columnTitleNetwork]: 'Network',
    [columnTitleSubnet]: 'IPv4 Subnet',
    [columnTitleSubnet6]: 'IPv6 Subnet',
    [removeActionLabel]: 'Remove',
    [editActionLabel]: 'Edit',
    [addButtonLabel]: 'Add',
};const moduleName = 'vsvip';
const componentName = 'vippublicipconfig';
const prefix = `${moduleName}.${componentName}`;

export const publicIpLabel = `${prefix}.publicIpLabel`;
export const autoAllocateRadioButtonLabel = `${prefix}.autoAllocateRadioButtonLabel`;
export const staticRadioButtonLabel = `${prefix}.staticRadioButtonLabel`;
export const noneRadioButtonLabel = `${prefix}.noneRadioButtonLabel`;
export const ipv4AddressInputLabel = `${prefix}.ipv4AddressInputLabel`;
export const ipv4AddressInputPlaceholder = `${prefix}.ipv4AddressInputPlaceholder`;

export const ENGLISH = {
    [autoAllocateRadioButtonLabel]: 'AutoAllocate',
    [staticRadioButtonLabel]: 'Static',
    [publicIpLabel]: 'Public IP',
    [noneRadioButtonLabel]: 'None',
    [ipv4AddressInputLabel]: 'IPv4 Address',
    [ipv4AddressInputPlaceholder]: 'Enter IPv4 Address',
};const moduleName = 'vsvip';
const componentName = 'vipgrid';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleVipId = `${prefix}.columnTitleVipId`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const columnTitleIpv6Address = `${prefix}.columnTitleIpv6Address`;
export const columnTitlePrivateIpType = `${prefix}.columnTitlePrivateIpType`;
export const columnTitleEnabled = `${prefix}.columnTitleEnabled`;
export const columnTitlePublicIp = `${prefix}.columnTitlePublicIp`;
export const removeActionLabel = `${prefix}.removeActionLabel`;
export const editActionLabel = `${prefix}.editActionLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const vipsHeader = `${prefix}.vipsHeader`;
export const autoAllocateLabel = `${prefix}.autoAllocateLabel`;
export const staticLabel = `${prefix}.staticLabel`;

export const ENGLISH = {
    [columnTitleVipId]: 'VIP ID',
    [columnTitleIpAddress]: 'IP Address',
    [columnTitlePrivateIpType]: 'Private IP Type',
    [columnTitleIpv6Address]: 'IPv6 Address',
    [columnTitleEnabled]: 'Enabled',
    [columnTitlePublicIp]: 'Public IP',
    [removeActionLabel]: 'Remove',
    [editActionLabel]: 'Edit',
    [addButtonLabel]: 'Add',
    [vipsHeader]: 'VIPs ({0})',
    [autoAllocateLabel]: 'AutoAllocate',
    [staticLabel]: 'Static',
};const moduleName = 'vsvip';
const componentName = 'vsvipmodalpreview';
const prefix = `${moduleName}.${componentName}`;

export const tenantLabel = `${prefix}.tenantLabel`;
export const lastModifiedLabel = `${prefix}.lastModifiedLabel`;

export const ENGLISH = {
    [tenantLabel]: 'Tenant',
    [lastModifiedLabel]: 'Last Modified',
};const moduleName = 'vsvip';
const componentName = 'vsvipmodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const sectionTitleGeneral = `${prefix}.sectionTitleGeneral`;
export const tabTitleRbac = `${prefix}.tabTitleRbac`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const vrfContextLabel = `${prefix}.vrfContextLabel`;
export const rbacHeader = `${prefix}.rbacHeader`;
export const tier1LogicalRouterSelectLabel = `${prefix}.tier1LogicalRouterInputLabel`;
export const tier1LogicalRouterSelectPlaceholder = `${prefix}.tier1LogicalRouterInputPlaceholder`;
export const bgpPeerLabelSelectLabel = `${prefix}.bgpPeerLabelSelectLabel`;
export const bgpPeerLabelSelectPlaceholder = `${prefix}.bgpPeerLabelSelectPlaceholder`;
export const useStandardAlbCheckboxLabel = `${prefix}.useStandardAlbCheckboxLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit VS VIP: {0}',
    [modalTitleNew]: 'Create VS VIP: {0}',
    [sectionTitleGeneral]: 'General',
    [tabTitleRbac]: 'RBAC',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [cloudLabel]: 'Cloud',
    [vrfContextLabel]: 'VRF Context',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
    [tier1LogicalRouterSelectLabel]: 'Tier1 Logical Router',
    [tier1LogicalRouterSelectPlaceholder]: 'Select Tier1 Logical Router',
    [bgpPeerLabelSelectLabel]: 'BGP Peer Labels',
    [bgpPeerLabelSelectPlaceholder]: 'Select BGP Peer Labels',
    [useStandardAlbCheckboxLabel]: 'Use Standard ALB',
};const moduleName = 'vsvip';
const componentName = 'vsvipfqdn';
const prefix = `${moduleName}.${componentName}`;

export const applicationDomainInputLabel = `${prefix}.applicationDomainInputLabel`;
export const applicationDomainInputPlaceholder = `${prefix}.applicationDomainInputPlaceholder`;
export const domainNameSelectPlaceholder = `${prefix}.domainNameSelectPlaceholder`;

export const ENGLISH = {
    [applicationDomainInputLabel]: 'Application Domain',
    [applicationDomainInputPlaceholder]: 'Enter Hostname',
    [domainNameSelectPlaceholder]: 'Select Domain Name',
};const moduleName = 'waf';
const componentName = 'wafapplicationruleslistheader';
const prefix = `${moduleName}.${componentName}`;

export const applicationRulesTitle = `${prefix}.applicationRulesTitle`;
export const registerControllerMessage = `${prefix}.registerControllerMessage`;
export const registerControllerButtonLabel = `${prefix}.registerControllerButtonLabel`;
export const enableAppRulesOptInMessage = `${prefix}.enableAppRulesOptInMessage`;
export const editCloudServicesSettingsButtonLabel = `${prefix}.editCloudServicesSettingsButtonLabel`;

export const ENGLISH = {
    [applicationRulesTitle]: 'Application Rules',
    [registerControllerMessage]: 'Register your controller and easily stay current with Application Rules.',
    [registerControllerButtonLabel]: 'Register Controller',
    [enableAppRulesOptInMessage]: 'Keep Application Rules uptodate by enabling Application Signature optin in Cloud Services.',
    [editCloudServicesSettingsButtonLabel]: 'Edit Cloud Services Settings',
};const moduleName = 'waf';
const componentName = 'waflearninglink';
const prefix = `${moduleName}.${componentName}`;

export const title = `${prefix}.title`;
export const enabledLearningStatusLabel = `${prefix}.enabledLearningStatusLabel`;
export const disabledLearningStatusLabel = `${prefix}.disabledLearningStatusLabel`;
export const minUpdateIntervalText = `${prefix}.minUpdateIntervalText`;
export const emptyUpdateIntervalText = `${prefix}.emptyUpdateIntervalText`;
export const updateIntervalSettingLabel = `${prefix}.updateIntervalSettingLabel`;
export const samplingPercentageEmptyText = `${prefix}.samplingPercentageEmptyText`;
export const samplingPercentageSettingLabel = `${prefix}.samplingPercentageSettingLabel`;
export const enableWafLearningWarningText = `${prefix}.enableWafLearningWarningText`;
export const viewLearningDataButtonLabel = `${prefix}.viewLearningDataButtonLabel`;

export const ENGLISH = {
    [title]: 'WAF LEARNING',
    [enabledLearningStatusLabel]: 'Enabled',
    [disabledLearningStatusLabel]: 'Deactivated',
    [minUpdateIntervalText]: '{0} Min',
    [emptyUpdateIntervalText]: 'NA',
    [updateIntervalSettingLabel]: 'Update Intervals',
    [samplingPercentageEmptyText]: 'NA',
    [samplingPercentageSettingLabel]: 'Sampling',
    [enableWafLearningWarningText]: 'To use this feature enable WAF Learning in WAF Policy.',
    [viewLearningDataButtonLabel]: 'VIEW LEARNING DATA',
};const moduleName = 'waf';
const componentName = 'wafapplicationruleslist';
const prefix = `${moduleName}.${componentName}`;

export const applicationRulesDBHeader = `${prefix}.applicationRulesDBHeader`;
export const nameFieldLabel = `${prefix}.nameFieldLabel`;
export const applicationNameLabel = `${prefix}.applicationNameLabel`;
export const lastUpdateVersionLabel = `${prefix}.lastUpdateVersionLabel`;
export const numberOfRulesLabel = `${prefix}.numberOfRulesLabel`;

export const ENGLISH = {
    [applicationRulesDBHeader]: 'Application Rules DB',
    [nameFieldLabel]: 'Name',
    [applicationNameLabel]: 'Application Name',
    [lastUpdateVersionLabel]: 'Last Update Version',
    [numberOfRulesLabel]: '# of Rules',
};const moduleName = 'waf';
const componentName = 'wafpolicyallowlistrule';
const prefix = `${moduleName}.${componentName}`;

export const samplingValue = `${prefix}.samplingValue`;

export const ENGLISH = {
    [samplingValue]: 'Sampling: {0}%',
};const moduleName = 'waf';
const componentName = 'wafexcludelistentrymodal';
const prefix = `${moduleName}.${componentName}`;

export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const subnetInputLabel = `${prefix}.subnetInputLabel`;
export const subnetInputPlaceholder = `${prefix}.subnetInputPlaceholder`;
export const pathInputLabel = `${prefix}.pathInputLabel`;
export const pathInputPlaceholder = `${prefix}.pathInputPlaceholder`;
export const matchElementInputLabel = `${prefix}.matchElementInputLabel`;
export const matchElementInputPlaceholder = `${prefix}.matchElementInputPlaceholder`;
export const caseSensitiveLabel = `${prefix}.caseSensitiveLabel`;
export const regexMatchLabel = `${prefix}.regexMatchLabel`;

export const ENGLISH = {
    [generalSectionHeader]: 'General',
    [subnetInputLabel]: 'Subnet',
    [subnetInputPlaceholder]: 'Enter Subnet',
    [pathInputLabel]: 'Path',
    [pathInputPlaceholder]: 'Enter Path',
    [matchElementInputLabel]: 'Match Element',
    [matchElementInputPlaceholder]: 'Enter Match Element',
    [caseSensitiveLabel]: 'Case Sensitive',
    [regexMatchLabel]: 'Regex Match',
};const moduleName = 'waf';
const componentName = 'wafpolicyallowlistruleexpander';
const prefix = `${moduleName}.${componentName}`;

export const matchCellHeader = `${prefix}.matchCellHeader`;
export const actionCellHeader = `${prefix}.actionCellHeader`;
export const actionCellLabel = `${prefix}.actionCellLabel`;

export const ENGLISH = {
    [matchCellHeader]: 'MATCH ({0})',
    [actionCellHeader]: 'ACTION',
    [actionCellLabel]: 'Action',
};const moduleName = 'waf';
const componentName = 'wafpolicyallowlistrulemodal';
const prefix = `${moduleName}.${componentName}`;


  TODO Remove protocolLabel, ipReputationLabel, servicePortLabel when converted to full modal as this rule is not supported.
 
export const clientIpAddressLabel = `${prefix}.clientIpAddressLabel`;
export const cookieLabel = `${prefix}.cookieLabel`;
export const headerLabel = `${prefix}.headerLabel`;
export const hostHeaderLabel = `${prefix}.hostHeaderLabel`;
export const protocolLabel = `${prefix}.protocolLabel`;
export const ipReputationLabel = `${prefix}.ipReputationLabel`;
export const pathLabel = `${prefix}.pathLabel`;
export const httpMethodLabel = `${prefix}.httpMethodLabel`;
export const queryLabel = `${prefix}.queryLabel`;
export const querySubLabel = `${prefix}.querySubLabel`;
export const servicePortLabel = `${prefix}.servicePortLabel`;

export const ENGLISH = {
    [clientIpAddressLabel]: 'Client IP Address',
    [cookieLabel]: 'Cookie',
    [headerLabel]: 'Header',
    [hostHeaderLabel]: 'Host Header',
    [protocolLabel]: 'Protocol Type',
    [ipReputationLabel]: 'IP Reputation',
    [pathLabel]: 'Path',
    [httpMethodLabel]: 'HTTP Method',
    [queryLabel]: 'Query',
    [querySubLabel]: '(Contains)',
    [servicePortLabel]: 'Service Port',
};const moduleName = 'waf';
const componentName = 'wafcrsexpanderopener';
const prefix = `${moduleName}.${componentName}`;

export const editIconTitle = `${prefix}.editIconTitle`;
export const removeIconTitle = `${prefix}.removeIconTitle`;

export const ENGLISH = {
    [editIconTitle]: 'Edit',
    [removeIconTitle]: 'Remove',
};const moduleName = 'waf';
const componentName = 'wafcrsrule';
const prefix = `${moduleName}.${componentName}`;

export const ruleWithCustomModeAndExceptionsConfiguredMessage = `${prefix}.ruleWithCustomModeAndExceptionsConfiguredMessage`;
export const ruleWithExceptionsConfiguredMessage = `${prefix}.ruleWithExceptionsConfiguredMessage`;
export const ruleWithCustomModeConfiguredMessage = `${prefix}.ruleWithCustomModeConfiguredMessage`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const showRuleButtonLabel = `${prefix}.showRuleButtonLabel`;
export const hideRuleButtonLabel = `${prefix}.hideRuleButtonLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const deactivatedLabel = `${prefix}.deactivatedLabel`;
export const statusLabel = `${prefix}.statusLabel`;
export const ruleModeLabel = `${prefix}.ruleModeLabel`;
export const ruleLabel = `${prefix}.ruleLabel`;
export const userOverridesHeader = `${prefix}.userOverridesHeader`;
export const originalHeader = `${prefix}.originalHeader`;
export const removeIconTitle = `${prefix}.removeIconTitle`;
export const hideOriginalButtonLabel = `${prefix}.hideOriginalButtonLabel`;
export const showOriginalButtonLabel = `${prefix}.showOriginalButtonLabel`;

export const ENGLISH = {
    [ruleWithCustomModeAndExceptionsConfiguredMessage]: 'This rule has a custom mode and exceptions configured.',
    [ruleWithExceptionsConfiguredMessage]: 'This rule has exceptions configured.',
    [ruleWithCustomModeConfiguredMessage]: 'This rule has a custom mode configured.',
    [emptyDataLabel]: 'NA',
    [showRuleButtonLabel]: 'Show Rule',
    [hideRuleButtonLabel]: 'Hide Rule',
    [enabledLabel]: 'Enabled',
    [deactivatedLabel]: 'Deactivated',
    [statusLabel]: 'Status',
    [ruleModeLabel]: 'Rule Mode',
    [ruleLabel]: 'Rule',
    [userOverridesHeader]: 'User Overrides',
    [originalHeader]: 'Original',
    [removeIconTitle]: 'Remove Override',
    [hideOriginalButtonLabel]: 'Hide Original',
    [showOriginalButtonLabel]: 'Show Original',
};const moduleName = 'waf';
const componentName = 'wafexcludelistentry';
const prefix = `${moduleName}.${componentName}`;

export const subnetLabel = `${prefix}.subnetLabel`;
export const pathLabel = `${prefix}.pathLabel`;
export const matchElementLabel = `${prefix}.matchElementLabel`;
export const caseSensitiveLabel = `${prefix}.caseSensitiveLabel`;
export const caseInsensitiveLabel = `${prefix}.caseInsensitiveLabel`;
export const regexMatchLabel = `${prefix}.regexMatchLabel`;
export const exactMatchLabel = `${prefix}.exactMatchLabel`;

export const ENGLISH = {
    [subnetLabel]: 'Subnet',
    [pathLabel]: 'Path',
    [matchElementLabel]: 'Match Element',
    [caseSensitiveLabel]: 'Case Sensitive',
    [caseInsensitiveLabel]: 'Case Insensitive',
    [regexMatchLabel]: 'Regex Match',
    [exactMatchLabel]: 'Exact Match',
};const moduleName = 'waf';
const componentName = 'wafcrsrulegroup';
const prefix = `${moduleName}.${componentName}`;

export const groupLabel = `${prefix}.groupLabel`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;
export const createRuleButtonLabel = `${prefix}.createRuleButtonLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const deactivatedLabel = `${prefix}.deactivatedLabel`;
export const mixedEnabledLabel = `${prefix}.mixedEnabledLabel`;
export const statusLabel = `${prefix}.statusLabel`;
export const removeIconTitle = `${prefix}.removeIconTitle`;
export const userOverridesHeader = `${prefix}.userOverridesHeader`;

export const ENGLISH = {
    [groupLabel]: 'Group',
    [addRuleButtonLabel]: 'Add Rule',
    [createRuleButtonLabel]: 'Create Rule',
    [enabledLabel]: 'Enabled',
    [deactivatedLabel]: 'Deactivated',
    [mixedEnabledLabel]: 'Mixed (Enabled & Deactivated Rules)',
    [statusLabel]: 'Status',
    [removeIconTitle]: 'Remove Override',
    [userOverridesHeader]: 'User Overrides',
};const moduleName = 'waf';
const componentName = 'wafexcludelist';
const prefix = `${moduleName}.${componentName}`;

export const exceptionsHeader = `${prefix}.exceptionsHeader`;

export const ENGLISH = {
    [exceptionsHeader]: 'Exceptions ({0})',
};const moduleName = 'waf';
const componentName = 'wafmode';
const prefix = `${moduleName}.${componentName}`;

export const useParentModeValueLabel = `${prefix}.useParentModeValueLabel`;

export const ENGLISH = {
    [useParentModeValueLabel]: 'Policy mode ({0})',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmgroupexpandercontent';
const prefix = `${moduleName}.${componentName}`;

export const hitActionLabel = `${prefix}.hitActionLabel`;
export const missActionLabel = `${prefix}.missActionLabel`;

export const ENGLISH = {
    [hitActionLabel]: 'Hit Action',
    [missActionLabel]: 'Miss Action',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmlocationexpandercontent';
const prefix = `${moduleName}.${componentName}`;

export const matchLabel = `${prefix}.matchLabel`;
export const argumentRulesLabel = `${prefix}.argumentRulesLabel`;

export const ENGLISH = {
    [matchLabel]: 'MATCH ({0})',
    [argumentRulesLabel]: 'ARGUMENT RULES ({0})',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmlocationsconfig';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const nameLabel = `${prefix}.nameLabel`;
export const matchesLabel = `${prefix}.matchesLabel`;
export const addLocationButtonLabel = `${prefix}.addLocationButtonLabel`;
export const psmGroupBreadcrumb = `${prefix}.psmGroupBreadcrumb`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
    [matchesLabel]: 'Matches',
    [addLocationButtonLabel]: 'Add Location',
    [psmGroupBreadcrumb]: 'Positive Security Group: {0}',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmgroupsconfig';
const prefix = `${moduleName}.${componentName}`;

export const addPsmGroupLabel = `${prefix}.addPsmGroupLabel`;
export const createLabel = `${prefix}.createLabel`;
export const wafPolicyLabel = `${prefix}.wafPolicyLabel`;

export const ENGLISH = {
    [addPsmGroupLabel]: 'Add Positive Security Group',
    [wafPolicyLabel]: 'WAF Policy: {0}',
};const moduleName = 'waf';
const componentName = 'wafprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const headerLabel = `${prefix}.headerLabel`;
export const gridPlaceholder = `${prefix}.gridPlaceholder`;
export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [headerLabel]: 'Waf Profile',
    [gridPlaceholder]: 'No Items Found',
    [columnTitleName]: 'Name',
};const moduleName = 'waf';
const componentName = 'wafpolicyapplicationrules';
const prefix = `${moduleName}.${componentName}`;

export const addLabel = `${prefix}.addLabel`;
export const applicationRulesHeader = `${prefix}.applicationRulesHeader`;
export const applicationNameLabel = `${prefix}.applicationNameLabel`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const lastUpdateVersionLabel = `${prefix}.lastUpdateVersionLabel`;
export const numberOfRulesLabel = `${prefix}.numberOfRulesLabel`;
export const emptyGridPlaceholder = `${prefix}.emptyGridPlaceholder`;

export const ENGLISH = {
    [addLabel]: 'Add',
    [applicationRulesHeader]: 'Application Rules ({0})',
    [applicationNameLabel]: 'Application Name',
    [removeButtonLabel]: 'Remove',
    [lastUpdateVersionLabel]: 'Last Update Version',
    [numberOfRulesLabel]: '# of Rules',
    [emptyGridPlaceholder]: 'No Application Selected!',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmrulesconfig';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const nameLabel = `${prefix}.nameLabel`;
export const matchesLabel = `${prefix}.matchesLabel`;
export const evaluatedLabel = `${prefix}.evaluatedLabel`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;
export const locationBreadcrumb = `${prefix}.locationBreadcrumb`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
    [matchesLabel]: 'Matches',
    [evaluatedLabel]: 'Evaluated',
    [addRuleButtonLabel]: 'Add Rule',
    [locationBreadcrumb]: 'Location: {0}',
};const moduleName = 'waf';
const componentName = 'wafpolicypsmruleexpandercontent';
const prefix = `${moduleName}.${componentName}`;

export const modeLabel = `${prefix}.modeLabel`;
export const useGroupModeLabel = `${prefix}.useGroupModeLabel`;
export const caseSensitiveLabel = `${prefix}.caseSensitiveLabel`;
export const trueLabel = `${prefix}.trueLabel`;
export const falseLabel = `${prefix}.falseLabel`;
export const matchElementsLabel = `${prefix}.matchElementsLabel`;
export const matchValuePatternLabel = `${prefix}.matchValuePatternLabel`;
export const valueMaxLengthLabel = `${prefix}.valueMaxLengthLabel`;
export const emptyMaxLengthValueLabel = `${prefix}.emptyMaxLengthValueLabel`;
export const valuePatternStringGroupLabel = `${prefix}.valuePatternStringGroupLabel`;
export const emptyStringGroupValue = `${prefix}.emptyStringGroupValue`;
export const valuePatternStringGroupKeyLabel = `${prefix}.valuePatternStringGroupKeyLabel`;

export const ENGLISH = {
    [modeLabel]: 'Mode',
    [useGroupModeLabel]: 'Use Group Mode',
    [caseSensitiveLabel]: 'Case Sensitive',
    [trueLabel]: 'True',
    [falseLabel]: 'False',
    [matchElementsLabel]: 'Match Elements',
    [matchValuePatternLabel]: 'Match Value Pattern',
    [valueMaxLengthLabel]: 'Value Max Length',
    [emptyMaxLengthValueLabel]: 'NA',
    [valuePatternStringGroupLabel]: 'Value Pattern String Group',
    [emptyStringGroupValue]: 'NA',
    [valuePatternStringGroupKeyLabel]: 'Value Pattern String Group Key',
};const moduleName = 'waf';
const componentName = 'wafrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const enableRuleCheckboxLabel = `${prefix}.enableRuleCheckboxLabel`;
export const columnTitleSubnet = `${prefix}.columnTitleSubnet`;
export const columnTitlePath = `${prefix}.columnTitlePath`;
export const columnTitleMatchElement = `${prefix}.columnTitleMatchElement`;
export const actionLabelRemove = `${prefix}.actionLabelRemove`;
export const actionLabelEdit = `${prefix}.actionLabelEdit`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const exceptionsHeader = `${prefix}.exceptionsHeader`;
export const ruleFieldLabel = `${prefix}.ruleFieldLabel`;
export const ruleFieldPlaceholder = `${prefix}.ruleFieldPlaceholder`;
export const ruleModeLabel = `${prefix}.ruleModeLabel`;
export const usePolicyModeLabel = `${prefix}.usePolicyModeLabel`;
export const detectionLabel = `${prefix}.detectionLabel`;
export const enforcementLabel = `${prefix}.enforcementLabel`;

export const ENGLISH = {
    [generalSectionHeader]: 'General',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Enter Name',
    [enableRuleCheckboxLabel]: 'Enable Rule',
    [columnTitleSubnet]: 'Subnet',
    [columnTitlePath]: 'Path',
    [columnTitleMatchElement]: 'Match Element',
    [actionLabelRemove]: 'Remove',
    [actionLabelEdit]: 'Edit',
    [addButtonLabel]: 'Add',
    [exceptionsHeader]: 'Exceptions ({0})',
    [ruleFieldLabel]: 'Rule',
    [ruleFieldPlaceholder]: 'Enter Rule',
    [ruleModeLabel]: 'Rule Mode',
    [usePolicyModeLabel]: 'Use Policy Mode ({0})',
    [detectionLabel]: 'Detection',
    [enforcementLabel]: 'Enforcement',
};const moduleName = 'waf';
const componentName = 'wafpolicyconfirmchangecrsversion';
const prefix = `${moduleName}.${componentName}`;

export const crsVersionUpdateHeader = `${prefix}.crsVersionUpdateHeader`;
export const changeLogHeader = `${prefix}.changeLogHeader`;
export const newRulesLabel = `${prefix}.newRulesLabel`;
export const updatedRulesLabel = `${prefix}.updatedRulesLabel`;
export const removedRulesLabel = `${prefix}.removedRulesLabel`;
export const updateVersionWarning = `${prefix}.updateVersionWarning`;
export const updateVersionConfirmation = `${prefix}.updateVersionConfirmation`;
export const saveUncommittedLabel = `${prefix}.saveUncommittedLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const okButtonLabel = `${prefix}.okButtonLabel`;

export const ENGLISH = {
    [crsVersionUpdateHeader]: 'CRS Version Update: {0}',
    [changeLogHeader]: 'Change Log',
    [newRulesLabel]: 'New Rules',
    [updatedRulesLabel]: 'Updated Rules',
    [removedRulesLabel]: 'Removed Rules',
    [updateVersionWarning]: 'As a precautionary all new rules mode will be set as detection. ' +
        'Updated rules will maintain currently set mode. Exceptions and Policy Overrides on any ' +
        'removed rules will be lost.',
    [updateVersionConfirmation]: 'Would you like to continue?',
    [saveUncommittedLabel]: 'Save uncommitted WAF Policy settings before updating',
    [cancelButtonLabel]: 'Cancel',
    [okButtonLabel]: 'OK',
};const moduleName = 'waf';
const componentName = 'wafuseroverridesbadge';
const prefix = `${moduleName}.${componentName}`;

export const userOverridesLabel = `${prefix}.userOverridesLabel`;

export const ENGLISH = {
    [userOverridesLabel]: 'User Overrides',
};const moduleName = 'welcome';
const componentName = 'welcomeemaillocalhostsettings';
const prefix = `${moduleName}.${componentName}`;

export const fromAddressLabel = `${prefix}.fromAddressLabel`;

export const ENGLISH = {
    [fromAddressLabel]: 'From Address',
};const moduleName = 'welcome';
const componentName = 'welcomeemailsettings';
const prefix = `${moduleName}.${componentName}`;

export const noneLabel = `${prefix}.noneLabel`;
export const localHostLabel = `${prefix}.localHostLabel`;
export const smtpServerLabel = `${prefix}.smtpServerLabel`;
export const anonymousServerLabel = `${prefix}.anonymousServerLabel`;

export const ENGLISH = {
    [noneLabel]: 'None',
    [localHostLabel]: 'Local Host',
    [smtpServerLabel]: 'SMTP Server',
    [anonymousServerLabel]: 'Anonymous Server',
};const moduleName = 'welcome';
const componentName = 'welcomeemailsmtpserversettings';
const prefix = `${moduleName}.${componentName}`;

export const userNameLabel = `${prefix}.userNameLabel`;
export const passwordLabel = `${prefix}.passwordLabel`;
export const fromAddressLabel = `${prefix}.fromAddressLabel`;
export const smtpServerLabel = `${prefix}.smtpServerLabel`;
export const portLabel = `${prefix}.portLabel`;
export const disableTlsLabel = `${prefix}.disableTlsLabel`;

export const ENGLISH = {
    [userNameLabel]: 'Username',
    [passwordLabel]: 'Password',
    [fromAddressLabel]: 'From Address',
    [smtpServerLabel]: 'SMTP Server',
    [portLabel]: 'Port',
    [disableTlsLabel]: 'Do not use TLS',
};const moduleName = 'waf';
const componentName = 'wafrulegroupmodal';
const prefix = `${moduleName}.${componentName}`;

export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const namePlaceholderLabel = `${prefix}.namePlaceholderLabel`;
export const enableGroupCheckboxLabel = `${prefix}.enableGroupCheckboxLabel`;
export const columnTitleSubnet = `${prefix}.columnTitleSubnet`;
export const columnTitlePath = `${prefix}.columnTitlePath`;
export const columnTitleMatchElement = `${prefix}.columnTitleMatchElement`;
export const actionTitleRemove = `${prefix}.actionTitleRemove`;
export const actionTitleEdit = `${prefix}.actionTitleEdit`;
export const addButtonLabel = `${prefix}.addButtonLabel`;
export const exceptionsHeader = `${prefix}.exceptionsHeader`;

export const ENGLISH = {
    [generalSectionHeader]: 'General',
    [nameInputLabel]: 'Name',
    [namePlaceholderLabel]: 'Enter Name',
    [enableGroupCheckboxLabel]: 'Enable Group',
    [columnTitleSubnet]: 'Subnet',
    [columnTitlePath]: 'Path',
    [columnTitleMatchElement]: 'Match Element',
    [actionTitleRemove]: 'Remove',
    [actionTitleEdit]: 'Edit',
    [addButtonLabel]: 'Add',
    [exceptionsHeader]: 'Exceptions ({0})',
};const moduleName = 'welcome';
const componentName = 'welcomeemailanonymousserversettings';
const prefix = `${moduleName}.${componentName}`;

export const fromAddressLabel = `${prefix}.fromAddressLabel`;
export const smtpServerLabel = `${prefix}.smtpServerLabel`;
export const portLabel = `${prefix}.portLabel`;
export const disableTlsLabel = `${prefix}.disableTlsLabel`;

export const ENGLISH = {
    [fromAddressLabel]: 'From Address',
    [smtpServerLabel]: 'SMTP Server',
    [portLabel]: 'Port',
    [disableTlsLabel]: 'Do not use TLS',
};const moduleName = 'welcome';
const componentName = 'welcomeservice';
const prefix = `${moduleName}.${componentName}`;

export const welcomeLabel = `${prefix}.welcomeLabel`;

export const ENGLISH = {
    [welcomeLabel]: 'Welcome',
};const moduleName = 'welcome';
const componentName = 'welcomesystemsettings';
const prefix = `${moduleName}.${componentName}`;

export const dnsResolverLabel = `${prefix}.dnsResolverLabel`;
export const dnsSearchDomainLabel = `${prefix}.dnsSearchDomainLabel`;
export const dnsSearchDomainFieldPlaceholder = `${prefix}.dnsSearchDomainFieldPlaceholder`;

export const ENGLISH = {
    [dnsResolverLabel]: 'DNS Resolver(s)',
    [dnsSearchDomainLabel]: 'DNS Search Domain',
    [dnsSearchDomainFieldPlaceholder]: 'Enter Domain (ex abc.com)',
};const moduleName = 'welcome';
const componentName = 'welcomemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitle = `${prefix}.modalTitle`;
export const systemSettingsTabHeader = `${prefix}.systemSettingsTabHeader`;
export const systemSettingsTabDescription = `${prefix}.systemSettingsTabDescription`;
export const emailSettingsTabHeader = `${prefix}.emailSettingsTabHeader`;
export const tenantSettingsTabHeader = `${prefix}.tenantSettingsTabHeader`;
export const setupCloudAfterCheckboxLabel = `${prefix}.setupCloudAfterCheckboxLabel`;
export const nextButtonLabel = `${prefix}.nextButtonLabel`;

export const ENGLISH = {
    [modalTitle]: 'Welcome admin',
    [systemSettingsTabHeader]: 'System Settings',
    [systemSettingsTabDescription]: 'Let\'s get started with some basic questions',
    [emailSettingsTabHeader]: 'EmailSMTP',
    [tenantSettingsTabHeader]: 'MultiTenant',
    [setupCloudAfterCheckboxLabel]: 'Setup Cloud After',
    [nextButtonLabel]: 'Next',
};const moduleName = 'shared';
const componentName = 'asyncfileupload';
const prefix = `${moduleName}.${componentName}`;

export const browseBtnLabel = `${prefix}.browseBtnLabel`;
export const uploadBtnLabel = `${prefix}.uploadBtnLabel`;

export const ENGLISH = {
    [browseBtnLabel]: 'Browse',
    [uploadBtnLabel]: 'Upload',
};const moduleName = 'shared';
const componentName = 'aviautocomplete';
const prefix = `${moduleName}.${componentName}`;

export const placeholderLabel = `${prefix}.placeholderLabel`;

export const ENGLISH = {
    [placeholderLabel]: 'EnterSelect Value',
};const moduleName = 'shared';
const componentName = 'aviapplevelalert';
const prefix = `${moduleName}.${componentName}`;

export const defaultActionBtnLabel = `${prefix}.defaultActionBtnLabel`;

export const ENGLISH = {
    [defaultActionBtnLabel]: 'Click',
};const moduleName = 'welcome';
const componentName = 'welcometenantsettings';
const prefix = `${moduleName}.${componentName}`;

export const ipRouteDomainLabel = `${prefix}.ipRouteDomainLabel`;
export const perTenantIpRouteDomainLabel = `${prefix}.perTenantIpRouteDomainLabel`;
export const shareIpRouteAcrossTenantsLabel = `${prefix}.shareIpRouteAcrossTenantsLabel`;
export const serviceEnginesAreManagedWithinTheLabel =
    `${prefix}.serviceEnginesAreManagedWithinTheLabel`;
export const notSharedAcrossTenantsLabel = `${prefix}.notSharedAcrossTenantsLabel`;
export const sharedAcrossTenantsLabel = `${prefix}.sharedAcrossTenantsLabel`;
export const tenantAccessToServiceEngineLabel = `${prefix}.tenantAccessToServiceEngineLabel`;
export const readAccessLabel = `${prefix}.readAccessLabel`;
export const noAccessLabel = `${prefix}.noAccessLabel`;

export const ENGLISH = {
    [ipRouteDomainLabel]: 'IP Route Domain',
    [perTenantIpRouteDomainLabel]: 'Per tenant IP route domain',
    [shareIpRouteAcrossTenantsLabel]: 'Share IP route domain across tenants',
    [serviceEnginesAreManagedWithinTheLabel]: 'Service Engines are managed within the',
    [notSharedAcrossTenantsLabel]: 'Tenant (Not shared across tenants)',
    [sharedAcrossTenantsLabel]: 'Provider (Shared across tenants)',
    [tenantAccessToServiceEngineLabel]: 'Tenant Access to Service Engine',
    [readAccessLabel]: 'Read Access',
    [noAccessLabel]: 'No Access',
};const moduleName = 'shared';
const componentName = 'avidropdownmenu';
const prefix = `${moduleName}.${componentName}`;

export const searchPlaceholderLabel = `${prefix}.searchPlaceholderLabel`;

export const ENGLISH = {
    [searchPlaceholderLabel]: 'Search',
};const moduleName = 'shared';
const componentName = 'avidropdownoptions';
const prefix = `${moduleName}.${componentName}`;

export const noValidEntriesLabel = `${prefix}.noValidEntriesLabel`;

export const ENGLISH = {
    [noValidEntriesLabel]: ' no valid entries ',
};const moduleName = 'shared';
const componentName = 'avicustomcollectiondropdown';
const prefix = `${moduleName}.${componentName}`;

export const selectFromAvailableLabel = `${prefix}.selectFromAvailableLabel`;
export const enterCustomValueLabel = `${prefix}.enterCustomValueLabel`;
export const collectionDropdownDefaultPlaceholder = `${prefix}.collectionDropdownDefaultPlaceholder`;
export const customInputPlaceholder = `${prefix}.customInputPlaceholder`;

export const ENGLISH = {
    [selectFromAvailableLabel]: 'Select From Available',
    [enterCustomValueLabel]: 'Enter Custom Value',
    [collectionDropdownDefaultPlaceholder]: 'Select',
    [customInputPlaceholder]: 'Enter Value',
};const moduleName = 'shared';
const componentName = 'asyncfileuploadservice';
const prefix = `${moduleName}.${componentName}`;

export const uploadCompleteStatusLabel = `${prefix}.uploadCompleteStatusLabel`;
export const processingStatusLabel = `${prefix}.processingStatusLabel`;

export const ENGLISH = {
    [uploadCompleteStatusLabel]: 'Upload Complete',
    [processingStatusLabel]: 'Processing...',
};const moduleName = 'shared';
const componentName = 'avidropdown';
const prefix = `${moduleName}.${componentName}`;

export const selectPlaceholder = `${prefix}.selectPlaceholder`;
export const clearAllLabel = `${prefix}.clearAllLabel`;

export const ENGLISH = {
    [selectPlaceholder]: 'Select',
    [clearAllLabel]: 'Clear all',
};const moduleName = 'shared';
const componentName = 'avislider';
const prefix = `${moduleName}.${componentName}`;

export const placeholderLabel = `${prefix}.placeholderLabel`;

export const ENGLISH = {
    [placeholderLabel]: 'Enter Value',
};const moduleName = 'shared';
const componentName = 'avipageheader';
const prefix = `${moduleName}.${componentName}`;

export const buttonLabelText = `${prefix}.buttonLabelText`;

export const ENGLISH = {
    [buttonLabelText]: 'edit',
};const moduleName = 'shared';
const componentName = 'avirepeatedstrings';
const prefix = `${moduleName}.${componentName}`;

export const placeholderLabel = `${prefix}.placeholderLabel`;

export const ENGLISH = {
    [placeholderLabel]: 'Enter Value(s)',
};const moduleName = 'shared';
const componentName = 'expanderactionconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;

export const ENGLISH = {
    [cancelButtonLabel]: 'Cancel',
};const moduleName = 'shared';
const componentName = 'aviinputcontainererror';
const prefix = `${moduleName}.${componentName}`;

export const requiredError = `${prefix}.requiredError`;
export const regexPatternError = `${prefix}.regexPatternError`;
export const rangeError = `${prefix}.rangeError`;
export const uniquenessError = `${prefix}.uniquenessError`;
export const configFieldInputValidationError = `${prefix}.configFieldInputValidationError`;
export const portValidateError = `${prefix}.portValid`;

export const ENGLISH = {
    [requiredError]: 'This field is required.',
    [regexPatternError]: 'The value entered is invalid.',
    [rangeError]: 'The value entered is outside of the valid range.',
    [uniquenessError]: 'This field does not allow duplicate values.',
    [configFieldInputValidationError]: 'The value entered is outside of the valid range.',
    [portValidateError]: 'The Port value entered is invalid.',
};const moduleName = 'shared';
const componentName = 'avidatagridbase';
const prefix = `${moduleName}.${componentName}`;

export const numberOfItemsLabel = `${prefix}.numberOfItemsLabel`;
export const itemsPerPageLabel = `${prefix}.itemsPerPageLabel`;
export const defaultEmptyListPlaceholderMessage = `${prefix}.defaultEmptyListPlaceholderMessage`;
export const defaultSearchInputPlaceholder = `${prefix}.defaultSearchInputPlaceholder`;
export const columnSelectAllButton = `${prefix}.columnSelectAllButton`;
export const showColumnsHeader = `${prefix}.showColumnsHeader`;

export const ENGLISH = {
    [numberOfItemsLabel]: '{0}  {1} of {2} items',
    [itemsPerPageLabel]: 'Items per page',
    [defaultEmptyListPlaceholderMessage]: 'We couldn’t find any objects!',
    [defaultSearchInputPlaceholder]: 'Search',
    [columnSelectAllButton]: 'Select All',
    [showColumnsHeader]: 'Show Columns',
};const moduleName = 'shared';
const componentName = 'avidatagridcolumnselection';
const prefix = `${moduleName}.${componentName}`;

export const columnSelectAllButton = `${prefix}.columnSelectAllButton`;
export const showColumnsHeader = `${prefix}.showColumnsHeader`;

export const ENGLISH = {
    [columnSelectAllButton]: 'Select All',
    [showColumnsHeader]: 'Show Columns',
};const moduleName = 'shared';
const componentName = 'fullmodalconfig';
const prefix = `${moduleName}.${componentName}`;

export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const viewAsJson = `${prefix}.viewAsJson`;

export const ENGLISH = {
    [cancelBtnLabel]: 'Cancel',
    [saveBtnLabel]: 'Save',
    [viewAsJson]: 'View as JSON',
};const moduleName = 'shared';
const componentName = 'helpertexttooltipicon';
const prefix = `${moduleName}.${componentName}`;

export const rangeLabel = `${prefix}.rangeLabel`;
export const specialValuesLabel = `${prefix}.specialValuesLabel`;
export const immutableFieldMessage = `${prefix}.immutableFieldMessage`;

export const ENGLISH = {
    [rangeLabel]: 'Range',
    [specialValuesLabel]: 'Special Values',
    [immutableFieldMessage]: 'This field is immutable.',
};const moduleName = 'shared';
const componentName = 'copyright';
const prefix = `${moduleName}.${componentName}`;

export const message = `${prefix}.message`;

export const ENGLISH = {
    [message]: 'VMware, Inc. 3401 Hillview Avenue Palo Alto CA 94304 USA Tel 8774869273' +
    ' Fax 6504275001 http:www.vmware.com. Copyright © 2021 VMware, Inc. All rights reserved.' +
    ' This product is protected by U.S. and international copyright and intellectual property laws.' +
    ' VMware products are covered by one or more patents listed at http:vmware.comgopatents.' +
    ' VMware is a registered trademark or trademark of VMware, Inc.' +
    ' and its subsidiaries in the United States and other jurisdictions.' +
    ' All other marks and names mentioned herein may be trademarks of their respective companies.',
};const moduleName = 'shared';
const componentName = 'customparamsgrid';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleValue = `${prefix}.columnTitleValue`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const columntitleSensitive = `${prefix}.columntitleSensitive`;
export const columntitleDynamic = `${prefix}.columntitleDynamic`;
export const removeActionLabel = `${prefix}.removeActionLabel`;

export const ENGLISH = {
    [nameInputPlaceholder]: 'Enter Name',
    [valueInputLabel]: 'Enter Value',
    [columntitleSensitive]: 'Sensitive',
    [columntitleDynamic]: 'Dynamic',
    [removeActionLabel]: 'Remove',
};const moduleName = 'expanderwithactions';
const componentName = 'fileupload';
const prefix = `${moduleName}.${componentName}`;

export const selectFileInputLabel = `${prefix}.selectFileInputLabel`;
export const maxSizeExceededAlertMessage = `${prefix}.maxSizeExceededAlertMessage`;
export const importFileInputLabel = `${prefix}.importFileInputLabel`;

export const ENGLISH = {
    [selectFileInputLabel]: 'Select a file',
    [maxSizeExceededAlertMessage]: 'File size should be under {0} MB',
    [importFileInputLabel]: 'Import File',
};const moduleName = 'shared';
const componentName = 'itempreviewdefaults';
const prefix = `${moduleName}.${componentName}`;

export const tenantLabel = `${prefix}.tenantLabel`;
export const lastModifiedLabel = `${prefix}.lastModifiedLabel`;

export const ENGLISH = {
    [tenantLabel]: 'Tenant',
    [lastModifiedLabel]: 'Last Modified',
};const moduleName = 'ajslegacy';
const componentName = 'booleanlabelpipe';
const prefix = `${moduleName}.${componentName}`;

export const yesLabel = `${prefix}.yesLabel`;
export const noLabel = `${prefix}.noLabel`;
export const activeLabel = `${prefix}.activeLabel`;
export const suspendedLabel = `${prefix}.suspendedLabel`;
export const disableLabel = `${prefix}.disableLabel`;
export const enableLabel = `${prefix}.enableLabel`;
export const allowedLabel = `${prefix}.allowedLabel`;
export const disallowedLabel = `${prefix}.disallowedLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const notEnabledLabel = `${prefix}.notEnabledLabel`;
export const trueLabel = `${prefix}.trueLabel`;
export const falseLabel = `${prefix}.falseLabel`;

export const ENGLISH = {
    [yesLabel]: 'Yes',
    [noLabel]: 'No',
    [activeLabel]: 'Active',
    [suspendedLabel]: 'Suspended',
    [disableLabel]: 'Deactivate',
    [enableLabel]: 'Enable',
    [allowedLabel]: 'Allowed',
    [disallowedLabel]: 'Disallowed',
    [enabledLabel]: 'Enabled',
    [notEnabledLabel]: 'Not Enabled',
    [trueLabel]: 'True',
    [falseLabel]: 'False',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'authenticationcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columntTitleAuthorization = `${prefix}.columntTitleAuthorization`;
export const columntTitleAssignment = `${prefix}.columntTitleAssignment`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const memberOfPrefixLabel = `${prefix}.memberOfPrefixLabel`;
export const notMemberOfPrefixLabel = `${prefix}.notMemberOfPrefixLabel`;
export const localAuthType = `${prefix}.localAuthType`;
export const remoteAuthType = `${prefix}.remoteAuthType`;
export const authenticationAuthorizationTypeLabel = `${prefix}.authenticationAuthorizationTypeLabel`;
export const profileLabel = `${prefix}.profileLabel`;
export const tenantAndRoleMappingLabel = `${prefix}.tenantAndRoleMappingLabel`;
export const newMappingButtonLabel = `${prefix}.newMappingButtonLabel`;
export const superUserHeader = `${prefix}.superUserHeader`;
export const tenantHeader = `${prefix}.tenantHeader`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const roleHeader = `${prefix}.roleHeader`;
export const groupHeader = `${prefix}.groupHeader`;
export const anyDataLabel = `${prefix}.anyDataLabel`;
export const attributeHeader = `${prefix}.attributeHeader`;

export const ENGLISH = {
    [columntTitleAuthorization]: 'Authorization',
    [columntTitleAssignment]: 'Assignment',
    [actionBtnEdit]: 'Edit',
    [actionBtnDelete]: 'Delete',
    [memberOfPrefixLabel]: 'Member of ',
    [notMemberOfPrefixLabel]: 'Not a member of ',
    [localAuthType]: 'Local',
    [remoteAuthType]: 'Remote',
    [authenticationAuthorizationTypeLabel]: 'AuthenticationAuthorization: <strong>{0}<strong>',
    [profileLabel]: 'Profile: <strong>{0}<strong>',
    [tenantAndRoleMappingLabel]: 'Tenant and Role Mapping',
    [newMappingButtonLabel]: 'New Mapping',
    [superUserHeader]: 'Super User',
    [tenantHeader]: 'Tenant',
    [emptyDataLabel]: 'None',
    [roleHeader]: 'Role',
    [groupHeader]: 'Group',
    [anyDataLabel]: 'Any',
    [attributeHeader]: 'Attribute',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'techsupportgenerationmodal';
const prefix = `${moduleName}.${componentName}`;

export const controllerRegistrationError = `${prefix}.controllerRegistrationError`;
export const pulseConnectionError = `${prefix}.pulseConnectionError`;
export const generateTechSupportModalHeader = `${prefix}.generateTechSupportModalHeader`;
export const generateBtnLabel = `${prefix}.generateBtnLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const cloudSelectionInputLabel = `${prefix}.cloudSelectionInputLabel`;
export const gslbInstanceInputLabel = `${prefix}.gslbInstanceInputLabel`;
export const poolInstanceInputLabel = `${prefix}.poolInstanceInputLabel`;
export const serviceEngineInstanceInputLabel = `${prefix}.serviceEngineInstanceInputLabel`;
export const virtualServiceInstanceInputLabel = `${prefix}.virtualServiceInstanceInputLabel`;
export const attachToSupportCaseTooltipLabel = `${prefix}.attachToSupportCaseTooltipLabel`;
export const attachToSupportCaseInputLabel = `${prefix}.attachToSupportCaseInputLabel`;
export const caseInputLabel = `${prefix}.caseInputLabel`;

export const ENGLISH = {
    [controllerRegistrationError]: 'Controller must be registered with Pulse to use this feature.',
    [pulseConnectionError]: 'Pulse must be connected to use this feature.',
    [generateTechSupportModalHeader]: 'Generate Tech Support',
    [generateBtnLabel]: 'Generate',
    [typeInputLabel]: 'Type',
    [cloudSelectionInputLabel]: 'Cloud Selection',
    [gslbInstanceInputLabel]: 'GSLB Instance',
    [poolInstanceInputLabel]: 'Pool Instance',
    [serviceEngineInstanceInputLabel]: 'Service Engine Instance',
    [virtualServiceInstanceInputLabel]: 'Virtual Service Instance',
    [attachToSupportCaseTooltipLabel]: 'Generated Techsupport logs will be attached to Support Case upon completion.',
    [attachToSupportCaseInputLabel]: 'Attach to Support Case on Completion',
    [caseInputLabel]: 'Case',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'techsupport';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleCreationDate = `${prefix}.columnTitleCreationDate`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleResourceName = `${prefix}.columnTitleResourceName`;
export const columnTitleDuration = `${prefix}.columnTitleDuration`;
export const columnTitleSize = `${prefix}.columnTitleSize`;
export const columnTitleResults = `${prefix}.columnTitleResults`;
export const columnTitleSupportCase = `${prefix}.columnTitleSupportCase`;
export const deleteBtnLabel = `${prefix}.deleteBtnLabel`;
export const downloadBtnLabel = `${prefix}.downloadBtnLabel`;
export const fileNameLabel = `${prefix}.fileNameLabel`;
export const errorLogLabel = `${prefix}.errorLogLabel`;
export const generateTechSupportBtnLabel = `${prefix}.generateTechSupportBtnLabel`;
export const generatingTechSupportStatusMessage = `${prefix}.generatingTechSupportStatusMessage`;
export const generatingTechSupportStatusWithTypeMessage = `${prefix}.generatingTechSupportStatusWithTypeMessage`;
export const generatingTechSupportStatusWithResourceMessage = `${prefix}.generatingTechSupportStatusWithResourceMessage`;
export const pleaseWaitStatusMessage = `${prefix}.pleaseWaitStatusMessage`;
export const techSupportCollectionCompleteLabel = `${prefix}.techSupportCollectionCompleteLabel`;
export const errorOccuredDuringTechSupportGenerationLabel = `${prefix}.errorOccuredDuringTechSupportGenerationLabel`;
export const insufficeintPermissionsHeader = `${prefix}.insufficeintPermissionsHeader`;
export const insufficeintPermissionsMessageLabel = `${prefix}.insufficeintPermissionsMessageLabel`;

export const ENGLISH = {
    [columnTitleCreationDate]: 'Creation Date',
    [columnTitleType]: 'Type',
    [columnTitleResourceName]: 'Resource Name',
    [columnTitleDuration]: 'Duration',
    [columnTitleSize]: 'Size',
    [columnTitleResults]: 'Results',
    [columnTitleSupportCase]: 'Support Case',
    [deleteBtnLabel]: 'Delete',
    [downloadBtnLabel]: 'Download',
    [fileNameLabel]: '<strong class="techsupportexpander__filenamelabel">File Name<strong><span>{0}<span>',
    [errorLogLabel]: 'Error Log',
    [generateTechSupportBtnLabel]: 'Generate Tech Support',
    [generatingTechSupportStatusMessage]: 'Generating Tech Support',
    [generatingTechSupportStatusWithTypeMessage]: 'Generating {0} Tech Support',
    [generatingTechSupportStatusWithResourceMessage]: 'Generating {0} Tech Support for {1}',
    [pleaseWaitStatusMessage]: 'Please wait for completion before initiating new Tech Support collection.',
    [techSupportCollectionCompleteLabel]: '<span class="techsupport__capturesectioncompletemessage"><span>{0}<span> <span>Tech Support Collection Complete<span><span><div>{1}<div>',
    [errorOccuredDuringTechSupportGenerationLabel]: 'An error has occurred while generating {0} Tech Support logs, please try again.',
    [insufficeintPermissionsHeader]: 'Insufficient Permissions',
    [insufficeintPermissionsMessageLabel]: 'You do not have permission to view Tech Support files.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poolhealthmonitorsselector';
const prefix = `${moduleName}.${componentName}`;

export const selectHealthMonitorPlaceholder = `${prefix}.selectHealthMonitorPlaceholder`;
export const addActiveMonitorButton = `${prefix}.addActiveMonitorButton`;

export const ENGLISH = {
    [selectHealthMonitorPlaceholder]: 'Select a Health Monitor',
    [addActiveMonitorButton]: 'Add Active Monitor',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'hsinsights';
const prefix = `${moduleName}.${componentName}`;

export const topFactorsAffectingHealthScoreMessage = `${prefix}.topFactorsAffectingHealthScoreMessage`;

export const ENGLISH = {
    [topFactorsAffectingHealthScoreMessage]: 'Top Factors Affecting Health Score',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poollistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleHealth = `${prefix}.columnTitleHealth`;
export const columnTitleVirtualService = `${prefix}.columnTitleVirtualService`;
export const columnTitleServersUpTotal = `${prefix}.columnTitleServersUpTotal`;
export const columnTitlePoolGroups = `${prefix}.columnTitlePoolGroups`;
export const columnTitleCloud = `${prefix}.columnTitleCloud`;
export const columnTitleVrfContext = `${prefix}.columnTitleVrfContext`;
export const columnTitleVirtualServices = `${prefix}.columnTitleVirtualServices`;
export const gridTitleAlerts = `${prefix}.gridTitleAlerts`;
export const gridTitleEnable = `${prefix}.gridTitleEnable`;
export const gridTitleDisable = `${prefix}.gridTitleDisable`;
export const emptyPoolsLabel = `${prefix}.emptyPoolsLabel`;
export const noPoolsMatchSearchCriteriaLabel = `${prefix}.noPoolsMatchSearchCriteriaLabel`;
export const createPoolBtnLabel = `${prefix}.createPoolBtnLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleHealth]: 'Health',
    [columnTitleVirtualService]: 'Virtual Service',
    [columnTitleServersUpTotal]: 'Servers (UpTotal)',
    [columnTitlePoolGroups]: 'Pool Groups',
    [columnTitleCloud]: 'Cloud',
    [columnTitleVrfContext]: 'VRF Context',
    [columnTitleVirtualServices]: '# Virtual Services',
    [gridTitleAlerts]: 'Alerts',
    [gridTitleEnable]: 'Enable',
    [gridTitleDisable]: 'Disable',
    [emptyPoolsLabel]: 'No Pools found.',
    [noPoolsMatchSearchCriteriaLabel]: 'No Pools match your search criteria.',
    [createPoolBtnLabel]: 'Create Pool',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poolfailactionsetter';
const prefix = `${moduleName}.${componentName}`;

export const failActionLabel = `${prefix}.failActionLabel`;
export const selectFailActionPlaceholder = `${prefix}.selectFailActionPlaceholder`;
export const statusCodeLabel = `${prefix}.statusCodeLabel`;
export const selectStatusCodePlaceholder = `${prefix}.selectStatusCodePlaceholder`;
export const uploadFileLabel = `${prefix}.uploadFileLabel`;

export const ENGLISH = {
    [failActionLabel]: 'Fail Action',
    [selectFailActionPlaceholder]: 'Select fail action',
    [statusCodeLabel]: 'Status Code',
    [selectStatusCodePlaceholder]: 'Select status code',
    [uploadFileLabel]: 'Upload File',
};const moduleName = 'ajslegacy';
const componentName = 'eventslistsidebar';
const prefix = `${moduleName}.${componentName}`;

export const eventsAnalyticsLabel = `${prefix}.eventsAnalyticsLabel`;
export const objectTypePopoverLabel = `${prefix}.objectTypePopoverLabel`;
export const topObjectTypesPopoverHeaderLabel = `${prefix}.topObjectTypesPopoverHeaderLabel`;
export const objectNamePopoverLabel = `${prefix}.objectNamePopoverLabel`;
export const topNamesPopoverHeaderLabel = `${prefix}.topNamesPopoverHeaderLabel`;
export const eventIdPopoverLabel = `${prefix}.eventIdPopoverLabel`;
export const topEventIdsPopoverHeaderLabel = `${prefix}.topEventIdsPopoverHeaderLabel`;
export const modulePopoverLabel = `${prefix}.modulePopoverLabel`;
export const topModulesPopoverHeaderLabel = `${prefix}.topModulesPopoverHeaderLabel`;

export const ENGLISH = {
    [eventsAnalyticsLabel]: 'Events Analytics',
    [objectTypePopoverLabel]: 'Object Type',
    [topObjectTypesPopoverHeaderLabel]: 'Top Object Types',
    [objectNamePopoverLabel]: 'Object Name',
    [topNamesPopoverHeaderLabel]: 'Top Object Names',
    [eventIdPopoverLabel]: 'Event Id',
    [topEventIdsPopoverHeaderLabel]: 'Top Event Ids',
    [modulePopoverLabel]: 'Module',
    [topModulesPopoverHeaderLabel]: 'Top Modules',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poolgroupunitcards';
const prefix = `${moduleName}.${componentName}`;

export const poolGroupNameHeader = `${prefix}.poolGroupNameHeader`;
export const poolGroupPriorityHeader = `${prefix}.poolGroupPriorityHeader`;
export const emptyPoolListMessage = `${prefix}.emptyPoolListMessage`;

export const ENGLISH = {
    [poolGroupNameHeader]: 'Pool Group: <strong>{0}<strong>',
    [poolGroupPriorityHeader]: 'Priority: <strong>{0}<strong>',
    [emptyPoolListMessage]: 'No Pools configured.',
};const moduleName = 'ajslegacy';
const componentName = 'policygridexpander';
const prefix = `${moduleName}.${componentName}`;

export const matchInformationHeader = `${prefix}.matchInformationHeader`;
export const anyLabel = `${prefix}.anyLabel`;
export const actionInformationHeader = `${prefix}.actionInformationHeader`;

export const ENGLISH = {
    [matchInformationHeader]: 'Match Information',
    [anyLabel]: 'Any',
    [actionInformationHeader]: 'Action Information',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poolgrouplistexpander';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnTitleRatio = `${prefix}.columnTitleRatio`;
export const columnTitleDeploymentState = `${prefix}.columnTitleDeploymentState`;
export const columnTitlePriority = `${prefix}.columnTitlePriority`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleStatus]: 'Status',
    [columnTitleRatio]: 'Ratio',
    [columnTitleDeploymentState]: 'Deployment State',
    [columnTitlePriority]: 'Priority',
};.
  


const moduleName = 'policies';
const componentName = 'dnspolicymatch';
const prefix = `${moduleName}.${componentName}`;

export const geographicalLocationHeader = `${prefix}.geographicalLocationHeader`;
export const isLabel = `${prefix}.isLabel`;
export const isNotLabel = `${prefix}.isNotLabel`;
export const useEndsClientIpLabel = `${prefix}.useEndsClientIpLabel`;
export const geolocationNameLabel = `${prefix}.geolocationNameLabel`;
export const geolocationTagLabel = `${prefix}.geolocationTagLabel`;
export const clientIpAddressHeader = `${prefix}.clientIpAddressHeader`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const transportProtocolHeader = `${prefix}.transportProtocolHeader`;
export const protocolLabel = `${prefix}.protocolLabel`;
export const selectProtocolPlaceholder = `${prefix}.selectProtocolPlaceholder`;
export const dnsOverUdpOptionLabel = `${prefix}.dnsOverUdpOptionLabel`;
export const dnsOverTcpOptionLabel = `${prefix}.dnsOverTcpOptionLabel`;
export const queryNameHeader = `${prefix}.queryNameHeader`;
export const criteriaLabel = `${prefix}.criteriaLabel`;
export const selectCriteriaPlaceholder = `${prefix}.selectCriteriaPlaceholder`;
export const domainNamesLabel = `${prefix}.domainNamesLabel`;
export const stringGroupsLabel = `${prefix}.stringGroupsLabel`;
export const selectStringGroupsPlaceholder = `${prefix}.selectStringGroupsPlaceholder`;
export const queryTypeHeader = `${prefix}.queryTypeHeader`;
export const dnsQueryTypesLabel = `${prefix}.dnsQueryTypesLabel`;
export const dnsQueryTypesPlaceholder = `${prefix}.dnsQueryTypesPlaceholder`;

export const ENGLISH = {
    [geographicalLocationHeader]: 'Geographical Location',
    [isLabel]: 'is',
    [isNotLabel]: 'is not',
    [useEndsClientIpLabel]: 'Use EDNS Client IP',
    [geolocationNameLabel]: 'Geolocation Name',
    [geolocationTagLabel]: 'Geolocation Tag',
    [clientIpAddressHeader]: 'Client IP Address',
    [ipAddressLabel]: 'IP Address',
    [transportProtocolHeader]: 'Transport Protocol',
    [protocolLabel]: 'Protocol',
    [selectProtocolPlaceholder]: 'Select Protocol',
    [dnsOverUdpOptionLabel]: 'DNS over UDP',
    [dnsOverTcpOptionLabel]: 'DNS over TCP',
    [queryNameHeader]: 'Query Name',
    [criteriaLabel]: 'Criteria',
    [selectCriteriaPlaceholder]: 'Select Criteria',
    [domainNamesLabel]: 'Domain Names',
    [stringGroupsLabel]: 'String Groups',
    [selectStringGroupsPlaceholder]: 'Select String Groups',
    [queryTypeHeader]: 'Query Type',
    [dnsQueryTypesLabel]: 'DNS Query Types',
    [dnsQueryTypesPlaceholder]: 'Add DNS Query Type',
};const moduleName = 'ajslegacy';
const componentName = 'serveranalyticscontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleHealthMonitor = `${prefix}.columnTitleHealthMonitor`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnTitleCurrentResponseTime = `${prefix}.columnTitleCurrentResponseTime`;
export const columnTitleAverageResponseTime = `${prefix}.columnTitleAverageResponseTime`;
export const columnTitleSuccess = `${prefix}.columnTitleSuccess`;
export const msInnerText = `${prefix}.msInnerText`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const requestStringLabel = `${prefix}.requestStringLabel`;
export const responseCodeLabel = `${prefix}.responseCodeLabel`;
export const responseStringLabel = `${prefix}.responseStringLabel`;
export const lastSeenBadResponseStringLabel = `${prefix}.lastSeenBadResponseStringLabel`;
export const reasonLabel = `${prefix}.reasonLabel`;
export const sslErrorLabel = `${prefix}.sslErrorLabel`;
export const analyticsLinkLabel = `${prefix}.analyticsLinkLabel`;
export const cpuStatsHeader = `${prefix}.cpuStatsHeader`;
export const serverLabel = `${prefix}.serverLabel`;
export const poolAvgLabel = `${prefix}.poolAvgLabel`;
export const hostLabel = `${prefix}.hostLabel`;
export const memoryStatsHeader = `${prefix}.memoryStatsHeader`;
export const poolLabel = `${prefix}.poolLabel`;
export const selectServerInputPlaceholder = `${prefix}.selectServerInputPlaceholder`;
export const serverMetricsHeader = `${prefix}.serverMetricsHeader`;

export const ENGLISH = {
    [columnTitleHealthMonitor]: 'Health Monitor',
    [columnTitleType]: 'Type',
    [columnTitleStatus]: 'Status',
    [columnTitleCurrentResponseTime]: 'Current Response Time',
    [columnTitleAverageResponseTime]: 'Average Response Time',
    [columnTitleSuccess]: 'Success',
    [msInnerText]: '{0}ms',
    [emptyDataLabel]: 'NA',
    [requestStringLabel]: 'Request String:',
    [responseCodeLabel]: '<b>Response Code:<b>&nbsp {0}',
    [responseStringLabel]: 'Response String:',
    [lastSeenBadResponseStringLabel]: 'Last Seen Bad Response String:',
    [reasonLabel]: '<b>Reason:<b>&nbsp {0}',
    [sslErrorLabel]: '<b>SSL Error:<b>&nbsp {0}',
    [analyticsLinkLabel]: 'Analytics',
    [cpuStatsHeader]: 'CPU Stats',
    [serverLabel]: 'Server',
    [poolAvgLabel]: 'Pool Avg',
    [hostLabel]: 'Host',
    [memoryStatsHeader]: 'Memory Stats',
    [poolLabel]: 'Pool',
    [selectServerInputPlaceholder]: 'Select Server',
    [serverMetricsHeader]: 'Server Metrics',
};.
  


const moduleName = 'policies';
const componentName = 'dnspolicyrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const clientIpAddressOptLabel = `${prefix}.clientIpAddressOptLabel`;
export const protocolOptLabel = `${prefix}.protocolOptLabel`;
export const queryNameOptLabel = `${prefix}.queryNameOptLabel`;
export const queryTypeOptLabel = `${prefix}.queryTypeOptLabel`;
export const geographicalLocationOptLabel = `${prefix}.geographicalLocationOptLabel`;
export const gslbSiteAction = `${prefix}.gslbSiteAction`;
export const allowDropQueryAction = `${prefix}.allowDropQueryAction`;
export const queryResponseAction = `${prefix}.queryResponseAction`;
export const poolSwitchingAction = `${prefix}.poolSwitchingAction`;
export const rateLimitAction = `${prefix}.rateLimitAction`;
export const editDnsPolicyRuleHeader = `${prefix}.editDnsPolicyRuleHeader`;
export const newDnsPolicyRuleHeader = `${prefix}.newDnsPolicyRuleHeader`;
export const nameLabel = `${prefix}.nameLabel`;
export const clickRuleTitle = `${prefix}.clickRuleTitle`;
export const matchesHeader = `${prefix}.matchesHeader`;
export const addNewMatchInputPlaceholder = `${prefix}.addNewMatchInputPlaceholder`;
export const actionsHeader = `${prefix}.actionsHeader`;
export const addNewActionInputPlaceholder = `${prefix}.addNewActionInputPlaceholder`;
export const submitBtnLabel = `${prefix}.submitBtnLabel`;

export const ENGLISH = {
    [clientIpAddressOptLabel]: 'Client IP Address',
    [protocolOptLabel]: 'Protocol',
    [queryNameOptLabel]: 'Query Name',
    [queryTypeOptLabel]: 'Query Type',
    [geographicalLocationOptLabel]: 'Geographical Location',
    [gslbSiteAction]: 'GSLB Site',
    [allowDropQueryAction]: 'AllowDrop Query',
    [queryResponseAction]: 'Query Response',
    [poolSwitchingAction]: 'Pool Switching',
    [rateLimitAction]: 'Rate Limit',
    [editDnsPolicyRuleHeader]: 'Edit DNS Policy Rule: {0}',
    [newDnsPolicyRuleHeader]: 'New DNS Policy Rule: {0}',
    [nameLabel]: 'Name',
    [clickRuleTitle]: 'Click to {0} this rule',
    [matchesHeader]: 'Matches',
    [addNewMatchInputPlaceholder]: 'Add New Match',
    [actionsHeader]: 'Actions',
    [addNewActionInputPlaceholder]: 'Add New Action',
    [submitBtnLabel]: 'Submit',
};const moduleName = 'ajslegacy';
const componentName = 'policygridpromptindex';
const prefix = `${moduleName}.${componentName}`;

export const moveRuleHeader = `${prefix}.moveRuleHeader`;
export const createNewRuleHeader = `${prefix}.createNewRuleHeader`;
export const endListRadioLabel = `${prefix}.endListRadioLabel`;
export const specifiedIndexRadioLabel = `${prefix}.specifiedIndexRadioLabel`;
export const placementLabel = `${prefix}.placementLabel`;
export const aboveLabel = `${prefix}.aboveLabel`;
export const belowLabel = `${prefix}.belowLabel`;
export const actualIndexLabel = `${prefix}.actualIndexLabel`;
export const indexLabel = `${prefix}.indexLabel`;
export const createBtnLabel = `${prefix}.createBtnLabel`;
export const moveBtnLabel = `${prefix}.moveBtnLabel`;
export const indexInputPlaceholder = `${prefix}.indexInputPlaceholder`;

export const ENGLISH = {
    [moveRuleHeader]: 'Move rule "{0}"',
    [createNewRuleHeader]: 'Create new rule',
    [endListRadioLabel]: 'at the end of the list.',
    [specifiedIndexRadioLabel]: 'at a specified index.',
    [placementLabel]: 'Placement',
    [aboveLabel]: 'Above',
    [belowLabel]: 'Below',
    [actualIndexLabel]: 'Actual index of the rule, not the position within the list.',
    [indexLabel]: 'Index',
    [moveBtnLabel]: 'Move',
    [indexInputPlaceholder]: 'Select Index',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicelistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const btnLabelBasicSetup = `${prefix}.btnLabelBasicSetup`;
export const btnLabelAdvancedSetup = `${prefix}.btnLabelAdvancedSetup`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleHealth = `${prefix}.columnTitleHealth`;
export const columnTitleAddress = `${prefix}.columnTitleAddress`;
export const columnTitleAppDomainName = `${prefix}.columnTitleAppDomainName`;
export const columnTitleServicePorts = `${prefix}.columnTitleServicePorts`;
export const columnTitlePools = `${prefix}.columnTitlePools`;
export const columnTitlePoolGroup = `${prefix}.columnTitlePoolGroup`;
export const columnTitleServiceEngineGroup = `${prefix}.columnTitleServiceEngineGroup`;
export const columnTitleServiceEngines = `${prefix}.columnTitleServiceEngines`;
export const columnTitleCloud = `${prefix}.columnTitleCloud`;
export const columnTitleVirtualHosting = `${prefix}.columnTitleVirtualHosting`;
export const columnTitleVrfContext = `${prefix}.columnTitleVrfContext`;
export const columnTitleTotalServiceEngines = `${prefix}.columnTitleTotalServiceEngines`;
export const columnTitleAlerts = `${prefix}.columnTitleAlerts`;
export const actionBtnDisable = `${prefix}.actionBtnDisable`;
export const actionBtnEnable = `${prefix}.actionBtnEnable`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const emptySearchMatchLabel = `${prefix}.emptySearchMatchLabel`;
export const emptySearchLabel = `${prefix}.emptySearchLabel`;
export const createVirtualServiceButtonLabel = `${prefix}.createVirtualServiceButtonLabel`;
export const notAvailableDataLabel = `${prefix}.notAvailableDataLabel`;
export const requestPerSecColumnTitle = `${prefix}.requestPerSecColumnTitle`;
export const connectionsPerSecColumnTitle = `${prefix}.connectionsPerSecColumnTitle`;

export const ENGLISH = {
    [btnLabelBasicSetup]: 'Basic Setup',
    [btnLabelAdvancedSetup]: 'Advanced Setup',
    [columnTitleName]: 'Name',
    [columnTitleHealth]: 'Health',
    [columnTitleAddress]: 'Address',
    [columnTitleAppDomainName]: 'App Domain Name',
    [columnTitleServicePorts]: 'Service Ports',
    [columnTitlePools]: 'Pools',
    [columnTitlePoolGroup]: 'Pool Group',
    [columnTitleServiceEngineGroup]: 'Service Engine Group',
    [columnTitleServiceEngines]: 'Service Engines',
    [columnTitleCloud]: 'Cloud',
    [columnTitleVirtualHosting]: 'Virtual Hosting',
    [columnTitleVrfContext]: 'VRF Context',
    [columnTitleTotalServiceEngines]: 'Total Service Engines',
    [columnTitleAlerts]: 'Alerts',
    [actionBtnDisable]: 'Disable',
    [actionBtnEnable]: 'Enable',
    [actionBtnDelete]: 'Delete',
    [emptyDataLabel]: 'None',
    [emptySearchMatchLabel]: 'No Virtual Services match your search criteria.',
    [emptySearchLabel]: 'No Virtual Services found.',
    [createVirtualServiceButtonLabel]: 'Create Virtual Service',
    [notAvailableDataLabel]: 'NA',
    [requestPerSecColumnTitle]: 'Requests per second',
    [connectionsPerSecColumnTitle]: 'Connections per second',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicefaults';
const prefix = `${moduleName}.${componentName}`;

export const virtualServiceFaultDetectedPlural = `${prefix}.virtualServiceFaultDetectedPlural`;
export const serverFaultsLabel = `${prefix}.serverFaultsLabel`;

export const ENGLISH = {
    [virtualServiceFaultDetectedPlural]: '{0, plural, one{# Virtual Service fault detected} other{# Virtual Service faults detected}}',
    [serverFaultsLabel]: 'Server Faults',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafapprulelogslist';
const prefix = `${moduleName}.${componentName}`;

export const applicationRulesHeader = `${prefix}.applicationRulesHeader`;
export const multipleRulesLabel = `${prefix}.multipleRulesLabel`;
export const singleRuleLabel = `${prefix}.singleRuleLabel`;
export const collapseAllLabel = `${prefix}.collapseAllLabel`;
export const expandAllLabel = `${prefix}.expandAllLabel`;

export const ENGLISH = {
    [applicationRulesHeader]: 'Application Rules',
    [multipleRulesLabel]: 'Rules',
    [singleRuleLabel]: 'Rule',
    [collapseAllLabel]: 'Collapse All',
    [expandAllLabel]: 'Expand All',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafapprulelog';
const prefix = `${moduleName}.${componentName}`;

export const applicationGroupLabel = `${prefix}.applicationGroupLabel`;
export const ruleLabel = `${prefix}.ruleLabel`;
export const messageLabel = `${prefix}.messageLabel`;
export const matchLabel = `${prefix}.matchLabel`;
export const phaseLabel = `${prefix}.phaseLabel`;
export const tagsLabel = `${prefix}.tagsLabel`;
export const naLabel = `${prefix}.naLabel`;

export const ENGLISH = {
    [applicationGroupLabel]: 'Application Group',
    [ruleLabel]: 'Rule',
    [messageLabel]: 'Message',
    [matchLabel]: 'Match',
    [phaseLabel]: 'Phase',
    [tagsLabel]: 'Tags',
    [naLabel]: 'NA',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicemigrate';
const prefix = `${moduleName}.${componentName}`;

export const migrateHeader = `${prefix}.migrateHeader`;
export const selectVipAddressToMigrateInputLabel = `${prefix}.selectVipAddressToMigrateInputLabel`;
export const selectVipAddressToMigrateInputPlaceholder = `${prefix}.selectVipAddressToMigrateInputPlaceholder`;
export const selectServiceEngineToMigrateInputLabel = `${prefix}.selectServiceEngineToMigrateInputLabel`;
export const selectServiceEngineToMigrateInputPlaceholder = `${prefix}.selectServiceEngineToMigrateInputPlaceholder`;
export const primaryDataLabel = `${prefix}.primaryDataLabel`;
export const selectWhereToMigrateServiceEngineInputLabel = `${prefix}.selectWhereToMigrateServiceEngineInputLabel`;
export const selectAutomaticallyInputPlaceholder = `${prefix}.selectAutomaticallyInputPlaceholder`;
export const recommendedDataLabel = `${prefix}.recommendedDataLabel`;
export const createServiceEngineInputLabel = `${prefix}.createServiceEngineInputLabel`;
export const selectServiceEngineHostInputLabel = `${prefix}.selectServiceEngineHostInputLabel`;
export const migrateBtnLabel = `${prefix}.migrateBtnLabel`;

export const ENGLISH = {
    [migrateHeader]: 'Migrate: {0}',
    [selectVipAddressToMigrateInputLabel]: 'Select VIP Address to migrate',
    [selectVipAddressToMigrateInputPlaceholder]: 'Select VIP Address',
    [selectServiceEngineToMigrateInputLabel]: 'Select a Service Engine to migrate',
    [selectServiceEngineToMigrateInputPlaceholder]: 'Select a Service Engine',
    [primaryDataLabel]: '{0} (Primary)',
    [selectWhereToMigrateServiceEngineInputLabel]: 'Select where to migrate Service Engine',
    [selectAutomaticallyInputPlaceholder]: '(Select Automatically)',
    [recommendedDataLabel]: '{0} (Recommended)',
    [createServiceEngineInputLabel]: 'Create Service Engine',
    [selectServiceEngineHostInputLabel]: 'Select a Service Engine Host',
    [migrateBtnLabel]: 'Migrate',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicedelete';
const prefix = `${moduleName}.${componentName}`;

export const deleteConfirmMessage = `${prefix}.deleteConfirmMessage`;
export const deleteVsOnlyBtnLabel = `${prefix}.deleteVsOnlyBtnLabel`;
export const deleteVsObjectsBtnLabel = `${prefix}.deleteVsObjectsBtnLabel`;

export const ENGLISH = {
    [deleteConfirmMessage]: 'Do you want to keep referenced objects or delete them as well?',
    [deleteVsOnlyBtnLabel]: 'Delete Virtual Service Only',
    [deleteVsObjectsBtnLabel]: 'Delete Virtual Service and referenced objects',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicescaleout';
const prefix = `${moduleName}.${componentName}`;

export const scaleOutHeader = `${prefix}.scaleOutHeader`;
export const selectVipAddressToScaleOutInputLabel = `${prefix}.selectVipAddressToScaleOutInputLabel`;
export const selectVipAddressToScaleOutInputPlaceholder = `${prefix}.selectVipAddressToScaleOutInputPlaceholder`;
export const selectServiceEngineToScaleOutInputLabel = `${prefix}.selectServiceEngineToScaleOutInputLabel`;
export const selectAutomaicallyInputPlaceholder = `${prefix}.selectAutomaicallyInputPlaceholder`;
export const recommendedDataLabel = `${prefix}.recommendedDataLabel`;
export const createServiceEngineInputLabel = `${prefix}.createServiceEngineInputLabel`;
export const selectServiceEngineHostInputLabel = `${prefix}.selectServiceEngineHostInputLabel`;
export const scaleOutBtnLabel = `${prefix}.scaleOutBtnLabel`;

export const ENGLISH = {
    [scaleOutHeader]: 'Scale Out: {0}',
    [selectVipAddressToScaleOutInputLabel]: 'Select VIP Address to scale out',
    [selectVipAddressToScaleOutInputPlaceholder]: 'Select VIP Address',
    [selectServiceEngineToScaleOutInputLabel]: 'Please select a Service Engine to scale out',
    [selectAutomaicallyInputPlaceholder]: '(Select Automatically)',
    [recommendedDataLabel]: '{0} (Recommended)',
    [createServiceEngineInputLabel]: 'Create Service Engine',
    [selectServiceEngineHostInputLabel]: 'Select a Service Engine Host',
    [scaleOutBtnLabel]: 'Scale out',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicescalein';
const prefix = `${moduleName}.${componentName}`;

export const scaleInHeader = `${prefix}.scaleInHeader`;
export const selectVipAddressToScaleInInputLabel = `${prefix}.selectVipAddressToScaleInInputLabel`;
export const selectVipAddressToScaleInInputPlaceholder = `${prefix}.selectVipAddressToScaleInInputPlaceholder`;
export const selectServiceEngineToScaleInInputHint = `${prefix}.selectServiceEngineToScaleInInputHint`;
export const selectServiceEngineToScaleInInputLabel = `${prefix}.selectServiceEngineToScaleInInputLabel`;
export const selectAutomaticallyInputPlaceholder = `${prefix}.selectAutomaticallyInputPlaceholder`;
export const primaryDataLabel = `${prefix}.primaryDataLabel`;
export const scaleInBtnLabel = `${prefix}.scaleInBtnLabel`;

export const ENGLISH = {
    [scaleInHeader]: 'Scale In: {0}',
    [selectVipAddressToScaleInInputLabel]: 'Select VIP Address to scale in',
    [selectVipAddressToScaleInInputPlaceholder]: 'Select VIP Address',
    [selectServiceEngineToScaleInInputHint]: 'This VIP address will be removed from the selected Service Engine. If Primary is selected, one of the existing Secondaries will become the new Primary.',
    [selectServiceEngineToScaleInInputLabel]: 'Please select a Service Engine to scale in',
    [selectAutomaticallyInputPlaceholder]: '(Select Automatically)',
    [primaryDataLabel]: '{0} (Primary)',
    [scaleInBtnLabel]: 'Scale In',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualserviceunitinfo';
const prefix = `${moduleName}.${componentName}`;

export const viewProgressLabel = `${prefix}.viewProgressLabel`;
export const currentlyLabel = `${prefix}.currentlyLabel`;
export const scalingOutLabel = `${prefix}.scalingOutLabel`;
export const scalingInLabel = `${prefix}.scalingInLabel`;
export const migratingLabel = `${prefix}.migratingLabel`;
export const scaleOutButtonLabel = `${prefix}.scaleOutButtonLabel`;
export const scaleInButtonLabel = `${prefix}.scaleInButtonLabel`;
export const migrateButtonLabel = `${prefix}.migrateButtonLabel`;
export const servicePortPluralLabel = `${prefix}.servicePortPluralLabel`;
export const appDomainNameLabel = `${prefix}.appDomainNameLabel`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const floatingIpLabel = `${prefix}.floatingIpLabel`;
export const vipStatusLabel = `${prefix}.vipStatusLabel`;
export const serviceEngineLabel = `${prefix}.serviceEngineLabel`;
export const availabilityZoneLabel = `${prefix}.availabilityZoneLabel`;
export const noneLabel = `${prefix}.noneLabel`;
export const trafficLabel = `${prefix}.trafficLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const parentLabel = `${prefix}.parentLabel`;
export const applicationProfileLabel = `${prefix}.applicationProfileLabel`;
export const networkProfileLabel = `${prefix}.networkProfileLabel`;
export const wafPolicyLabel = `${prefix}.wafPolicyLabel`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const vrfLabel = `${prefix}.vrfLabel`;
export const tenantLabel = `${prefix}.tenantLabel`;
export const sslCertificatesLabel = `${prefix}.sslCertificatesLabel`;
export const rulesLabel = `${prefix}.rulesLabel`;
export const networkSecurityPolicyLabel = `${prefix}.networkSecurityPolicyLabel`;
export const httpSecurityPolicyLabel = `${prefix}.httpSecurityPolicyLabel`;
export const httpRequestPolicyLabel = `${prefix}.httpRequestPolicyLabel`;
export const httpResponsePolicyLabel = `${prefix}.httpResponsePolicyLabel`;
export const dataScriptsLabel = `${prefix}.dataScriptsLabel`;
export const nonSignificantLogsLabel = `${prefix}.nonSignificantLogsLabel`;
export const clientLogFiltersLabel = `${prefix}.clientLogFiltersLabel`;
export const realTimeMetricsLabel = `${prefix}.realTimeMetricsLabel`;
export const clientInsightsLabel = `${prefix}.clientInsightsLabel`;
export const clientInsightsActiveLabel = `${prefix}.clientInsightsActiveLabel`;
export const clientInsightsPassiveLabel = `${prefix}.clientInsightsPassiveLabel`;
export const virtualServiceHeader = `${prefix}.virtualServiceHeader`;

export const ENGLISH = {
    [viewProgressLabel]: 'Click to view progress',
    [currentlyLabel]: 'Currently {0}',
    [scalingOutLabel]: 'scaling out',
    [scalingInLabel]: 'scaling in',
    [migratingLabel]: 'migrating',
    [scaleOutButtonLabel]: 'Scale Out',
    [scaleInButtonLabel]: 'Scale In',
    [migrateButtonLabel]: 'Migrate',
    [servicePortPluralLabel]: '{0, plural, one{Service Port} other{Service Ports}}',
    [appDomainNameLabel]: 'App Domain Name',
    [ipAddressLabel]: 'Address',
    [floatingIpLabel]: 'Floating IP',
    [vipStatusLabel]: 'VIP Status',
    [serviceEngineLabel]: 'Service Engine',
    [availabilityZoneLabel]: 'Availability Zone: {0}',
    [noneLabel]: 'None',
    [trafficLabel]: 'Traffic',
    [enabledLabel]: 'Enabled',
    [disabledLabel]: 'Disabled',
    [parentLabel]: 'Parent',
    [applicationProfileLabel]: 'Application Profile',
    [networkProfileLabel]: 'TCPUDP Profile',
    [wafPolicyLabel]: 'WAF Policy',
    [cloudLabel]: 'Cloud',
    [vrfLabel]: 'VRF',
    [tenantLabel]: 'Tenant',
    [sslCertificatesLabel]: 'SSL Certificates',
    [rulesLabel]: 'Rules',
    [networkSecurityPolicyLabel]: 'Network Security Policy:',
    [httpSecurityPolicyLabel]: 'HTTP Security Policy:',
    [httpRequestPolicyLabel]: 'HTTP Request Policy:',
    [httpResponsePolicyLabel]: 'HTTP Response Policy:',
    [dataScriptsLabel]: 'DataScripts:',
    [nonSignificantLogsLabel]: 'NonSignificant Logs',
    [clientLogFiltersLabel]: 'Client Log Filters',
    [realTimeMetricsLabel]: 'Real Time Metrics',
    [clientInsightsLabel]: 'Client Insights',
    [clientInsightsActiveLabel]: 'Active',
    [clientInsightsPassiveLabel]: 'Passive',
    [virtualServiceHeader]: 'Virtual Service: <span class="selsubnavname unitinfovirtualservice__name">{0}<span>',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicesecuritydashboard';
const prefix = `${moduleName}.${componentName}`;

export const certificateTitle = `${prefix}.certificateTitle`;
export const nonPfsTitle = `${prefix}.nonPfsTitle`;
export const tlsVersionTitle = `${prefix}.tlsVersionTitle`;
export const emptyValueLabel = `${prefix}.emptyValueLabel`;
export const networkHeader = `${prefix}.networkHeader`;
export const applicationHeader = `${prefix}.applicationHeader`;
export const viewOpenSslPatchesLinkLabel = `${prefix}.viewOpenSslPatchesLinkLabel`;
export const failedTransactionsLabel = `${prefix}.failedTransactionsLabel`;
export const sslTimeoutsLabel = `${prefix}.sslTimeoutsLabel`;
export const sslNetworkErrorsLabel = `${prefix}.sslNetworkErrorsLabel`;
export const sslProtocolErrorsLabel = `${prefix}.sslProtocolErrorsLabel`;

export const ENGLISH = {
    [certificateTitle]: 'Certificate',
    [nonPfsTitle]: 'NonPFS',
    [tlsVersionTitle]: 'TLS Version',
    [emptyValueLabel]: 'NA',
    [networkHeader]: 'Network',
    [applicationHeader]: 'Application',
    [viewOpenSslPatchesLinkLabel]: 'View OpenSSL Patches',
    [failedTransactionsLabel]: 'Failed Transactions',
    [sslTimeoutsLabel]: '<strong>SSL Timeouts:<strong> {0}',
    [sslNetworkErrorsLabel]: '<strong>SSL Network Errors:<strong> {0}',
    [sslProtocolErrorsLabel]: '<strong>SSL Protocol Errors:<strong> {0}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'samlpolicysettings';
const prefix = `${moduleName}.${componentName}`;

export const ssoPolicyInputLabel = `${prefix}.ssoPolicyInputLabel`;
export const ssoPolicyInputPlaceholder = `${prefix}.ssoPolicyInputPlaceholder`;
export const createSsoPolicyButtonLabel = `${prefix}.createSsoPolicyButtonLabel`;
export const sessionCookieNameInputLabel = `${prefix}.sessionCookieNameInputLabel`;
export const entityIdInputLabel = `${prefix}.entityIdInputLabel`;
export const sessionCookieTimeoutInputLabel = `${prefix}.sessionCookieTimeoutInputLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const sslKeyInputLabel = `${prefix}.sslKeyInputLabel`;
export const sslKeyInputPlaceholder = `${prefix}.sslKeyInputPlaceholder`;
export const createSslKeyButtonLabel = `${prefix}.createSslKeyButtonLabel`;

export const ENGLISH = {
    [ssoPolicyInputLabel]: 'SSO Policy',
    [ssoPolicyInputPlaceholder]: 'Select SSO Policy',
    [createSsoPolicyButtonLabel]: 'Create SSO Policy',
    [sessionCookieNameInputLabel]: 'Session Cookie Name',
    [entityIdInputLabel]: 'Entity ID',
    [sessionCookieTimeoutInputLabel]: 'Session Cookie Timeout',
    [minutesInnerText]: 'Minutes',
    [sslKeyInputLabel]: 'SSL Key',
    [sslKeyInputPlaceholder]: 'Select SSL Key',
    [createSslKeyButtonLabel]: 'Create SSL Key',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'pingaccesspolicysettings';
const prefix = `${moduleName}.${componentName}`;

export const ssoPolicyInputLabel = `${prefix}.ssoPolicyInputLabel`;
export const ssoPolicyInputPlaceholder = `${prefix}.ssoPolicyInputPlaceholder`;
export const createSsoPolicyButtonLabel = `${prefix}.createSsoPolicyButtonLabel`;

export const ENGLISH = {
    [ssoPolicyInputLabel]: 'SSO Policy',
    [ssoPolicyInputPlaceholder]: 'Select SSO Policy',
    [createSsoPolicyButtonLabel]: 'Create SSO Policy',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'vsaccesspolicysettings';
const prefix = `${moduleName}.${componentName}`;

export const accessPolicyHeader = `${prefix}.accessPolicyHeader`;
export const noAccessPolicyRadioInputLabel = `${prefix}.noAccessPolicyRadioInputLabel`;
export const pingAccessRadioInputLabel = `${prefix}.pingAccessRadioInputLabel`;
export const samlAccessRadioInputLabel = `${prefix}.samlAccessRadioInputLabel`;
export const jwtAccessRadioInputLabel = `${prefix}.jwtAccessRadioInputLabel`;
export const ldapAccessRadioInputLabel = `${prefix}.ldapAccessRadioInputLabel`;

export const ENGLISH = {
    [accessPolicyHeader]: 'Access Policy',
    [noAccessPolicyRadioInputLabel]: 'None',
    [pingAccessRadioInputLabel]: 'PingAccess',
    [samlAccessRadioInputLabel]: 'SAML',
    [jwtAccessRadioInputLabel]: 'JWT',
    [ldapAccessRadioInputLabel]: 'LDAP',
};const moduleName = 'ajslegacy';
const componentName = 'vssecurityddostoplistgridcellrate';
const prefix = `${moduleName}.${componentName}`;

export const emptyDataLabel = `${prefix}.emptyDataLabel`;

export const ENGLISH = {
    [emptyDataLabel]: 'NA',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'tenantselector';
const prefix = `${moduleName}.${componentName}`;

export const allTenantsLabel = `${prefix}.allTenantsLabel`;

export const ENGLISH = {
    [allTenantsLabel]: 'All Tenants',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'sslbarchart';
const prefix = `${moduleName}.${componentName}`;

export const symmetricEncryptionCipherStrengthNameLabel = `${prefix}.symmetricEncryptionCipherStrengthNameLabel`;
export const emptyValueLabel = `${prefix}.emptyValueLabel`;
export const pfsSupportNameLabel = `${prefix}.pfsSupportNameLabel`;
export const sslProtocolStrengthNameLabel = `${prefix}.sslProtocolStrengthNameLabel`;
export const weakestEncryptionAlgorithmNameLabel = `${prefix}.weakestEncryptionAlgorithmNameLabel`;
export const certificateExpirationTimeNameLabel = `${prefix}.certificateExpirationTimeNameLabel`;
export const signatureAlgorithmNameLabel = `${prefix}.signatureAlgorithmNameLabel`;
export const deactivateClientRenegotiationNameLabel = `${prefix}.deactivateClientRenegotiationNameLabel`;
export const trustedCaCertificateNameLabel = `${prefix}.trustedCaCertificateNameLabel`;
export const hstsEnabledNameLabel = `${prefix}.hstsEnabledNameLabel`;
export const sslScoreHeader = `${prefix}.sslScoreHeader`;
export const notApplicableLabel = `${prefix}.notApplicableLabel`;

export const ENGLISH = {
    [symmetricEncryptionCipherStrengthNameLabel]: 'Symmetric Encryption Cipher Strength',
    [emptyValueLabel]: 'NA',
    [pfsSupportNameLabel]: 'PFS Support',
    [sslProtocolStrengthNameLabel]: 'SSL Protocol Strength',
    [weakestEncryptionAlgorithmNameLabel]: 'Weakest Encryption Algorithm',
    [certificateExpirationTimeNameLabel]: 'Certificate Expiration Time',
    [signatureAlgorithmNameLabel]: 'Signature Algorithm',
    [deactivateClientRenegotiationNameLabel]: 'Deactivate Client Renegotiation',
    [trustedCaCertificateNameLabel]: 'Trusted CA Certificate',
    [hstsEnabledNameLabel]: 'HSTS Enabled',
    [sslScoreHeader]: 'SSL Score',
    [notApplicableLabel]: 'Not Applicable',
};const moduleName = 'ajslegacy';
const componentName = 'cloudsetter';
const prefix = `${moduleName}.${componentName}`;

export const cloudTitleLabel = `${prefix}.cloudTitleLabel`;
export const selectCloudHeader = `${prefix}.selectCloudHeader`;
export const nextBtnLabel = `${prefix}.nextBtnLabel`;

export const ENGLISH = {
    [cloudTitleLabel]: 'Clouds',
    [selectCloudHeader]: 'Select Cloud',
    [nextBtnLabel]: 'Next',
};const moduleName = 'ajslegacy';
const componentName = 'credentialverification';
const prefix = `${moduleName}.${componentName}`;

export const credentialsHeader = `${prefix}.credentialsHeader`;
export const credentialsInvalidMessage = `${prefix}.credentialsInvalidMessage`;
export const credentialsUpdatedMessage = `${prefix}.credentialsUpdatedMessage`;
export const connectBtnLabel = `${prefix}.connectBtnLabel`;
export const changeCredentialsBtnLabel = `${prefix}.changeCredentialsBtnLabel`;

export const ENGLISH = {
    [credentialsHeader]: 'Credentials',
    [credentialsInvalidMessage]: 'Credentials invalid. {0}',
    [credentialsUpdatedMessage]: 'Credentials updated. {0}',
    [connectBtnLabel]: 'Connect',
    [changeCredentialsBtnLabel]: 'Change Credentials',
};const moduleName = 'ajslegacy';
const componentName = 'vssecurityddostoplists';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleDuration = `${prefix}.columnTitleDuration`;
export const columnTitleRate = `${prefix}.columnTitleRate`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const columnTitleAsName = `${prefix}.columnTitleAsName`;
export const actionTitleBlock = `${prefix}.actionTitleBlock`;
export const columnTitleAsNumber = `${prefix}.columnTitleAsNumber`;
export const actionTitleUnblock = `${prefix}.actionTitleUnblock`;
export const attackTypesTitle = `${prefix}.attackTypesTitle`;
export const attackingClientIpsTitle = `${prefix}.attackingClientIpsTitle`;
export const attackingUrlsTitle = `${prefix}.attackingUrlsTitle`;
export const attackingAsnsTitle = `${prefix}.attackingAsnsTitle`;
export const activeClientsBlockedTitle = `${prefix}.activeClientsBlockedTitle`;
export const attackTypeHeader = `${prefix}.attackTypeHeader`;
export const clientIpHeader = `${prefix}.clientIpHeader`;
export const activeClientsBlockedHeader = `${prefix}.activeClientsBlockedHeader`;
export const viewFullListLabel = `${prefix}.viewFullListLabel`;
export const emptyAttacksDisplayMessage = `${prefix}.emptyAttacksDisplayMessage`;
export const emptyClientIpAddressesMessage = `${prefix}.emptyClientIpAddressesMessage`;
export const emptyUrlsDisplayMessage = `${prefix}.emptyUrlsDisplayMessage`;
export const emptyAsnsDisplayMessage = `${prefix}.emptyAsnsDisplayMessage`;
export const emptyBlockedAddressesMessage = `${prefix}.emptyBlockedAddressesMessage`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleDuration]: 'Duration (sec)',
    [columnTitleRate]: 'Rate (sec)',
    [columnTitleIpAddress]: 'IP Address',
    [columnTitleAsName]: 'AS Name',
    [actionTitleBlock]: 'Block',
    [columnTitleAsNumber]: 'AS Number',
    [actionTitleUnblock]: 'Unblock',
    [attackTypesTitle]: 'Attack Types',
    [attackingClientIpsTitle]: 'Attacking Client IPs',
    [attackingUrlsTitle]: 'Attacking URLs',
    [attackingAsnsTitle]: 'Attacking ASNs',
    [activeClientsBlockedTitle]: 'Active Clients Blocked',
    [attackTypeHeader]: 'Attack Type',
    [clientIpHeader]: 'Client IP',
    [activeClientsBlockedHeader]: 'Active Clients Blocked',
    [viewFullListLabel]: 'View Full List',
    [emptyAttacksDisplayMessage]: 'No attacks to display.',
    [emptyClientIpAddressesMessage]: 'No client IP addresses to display.',
    [emptyUrlsDisplayMessage]: 'No URLs to display.',
    [emptyAsnsDisplayMessage]: 'No ASNs to display.',
    [emptyBlockedAddressesMessage]: 'No blocked addresses to display.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'grid';
const prefix = `${moduleName}.${componentName}`;

export const emptyListMessage = `${prefix}.emptyListMessage`;
export const noItemsMatchMsg = `${prefix}.noItemsMatchMsg`;
export const displayItemsPlural = `${prefix}.displayItemsPlural`;
export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;

export const ENGLISH = {
    [emptyListMessage]: 'No items found',
    [noItemsMatchMsg]: 'No items match your search criteria',
    [displayItemsPlural]: '{0, plural, one{Displaying # item} other{Displaying # items}}',
    [searchInputPlaceholder]: 'Search',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'itemalertpopover';
const prefix = `${moduleName}.${componentName}`;

export const viewAllAlertsListLabel = `${prefix}.viewAllAlertsListLabel`;
export const goToAlertsPageListLabel = `${prefix}.goToAlertsPageListLabel`;
export const alertsHeader = `${prefix}.alertsHeader`;
export const currentlyNoAlertsLabel = `${prefix}.currentlyNoAlertsLabel`;
export const onLabel = `${prefix}.onLabel`;

export const ENGLISH = {
    [viewAllAlertsListLabel]: 'View All Alerts',
    [goToAlertsPageListLabel]: 'Go to Alerts Page',
    [alertsHeader]: 'alerts',
    [currentlyNoAlertsLabel]: 'Currently no Alerts',
    [onLabel]: 'on',
};const moduleName = 'ajslegacy';
const componentName = 'httpstatusmatch';
const prefix = `${moduleName}.${componentName}`;

export const isInputLabel = `${prefix}.isInputLabel`;
export const notInputLabel = `${prefix}.notInputLabel`;
export const statusCodeInputLabel = `${prefix}.statusCodeInputLabel`;
export const statusCodeRangesInputLabel = `${prefix}.statusCodeRangesInputLabel`;

export const ENGLISH = {
    [isInputLabel]: 'Is',
    [notInputLabel]: 'Not',
    [statusCodeInputLabel]: 'Status Codes',
    [statusCodeRangesInputLabel]: 'Status Code Ranges',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'metricvalueselector';
const prefix = `${moduleName}.${componentName}`;

export const averageValuesOptionLabel = `${prefix}.averageValuesOptionLabel`;
export const currentValuesOptionLabel = `${prefix}.currentValuesOptionLabel`;
export const peakValuesOptionLabel = `${prefix}.peakValuesOptionLabel`;
export const totalValuesOptionLabel = `${prefix}.totalValuesOptionLabel`;

export const ENGLISH = {
    [averageValuesOptionLabel]: 'Average Values',
    [currentValuesOptionLabel]: 'Current Values',
    [peakValuesOptionLabel]: 'Peak Values',
    [totalValuesOptionLabel]: 'Total Values',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'uploadstatus';
const prefix = `${moduleName}.${componentName}`;

export const errorLabel = `${prefix}.errorLabel`;
export const inProgressLabel = `${prefix}.inProgressLabel`;
export const processingLabel = `${prefix}.processingLabel`;
export const progressBytesPercentage = `${prefix}.progressBytesPercentage`;
export const uploadAbortedLabel = `${prefix}.uploadAbortedLabel`;
export const uploadCompleteLabel = `${prefix}.uploadCompleteLabel`;

export const ENGLISH = {
    [errorLabel]: 'Error: {0}',
    [inProgressLabel]: 'Uploading {0}',
    [processingLabel]: 'Processing...',
    [progressBytesPercentage]: '{0} of {1}',
    [uploadAbortedLabel]: 'Upload Aborted',
    [uploadCompleteLabel]: 'Upload Complete',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'networkandsubnet';
const prefix = `${moduleName}.${componentName}`;

export const networkInputLabel = `${prefix}.networkInputLabel`;
export const networkInputPlaceholder = `${prefix}.networkInputPlaceholder`;
export const subnetInputLabel = `${prefix}.subnetInputLabel`;

export const ENGLISH = {
    [networkInputLabel]: 'Network',
    [networkInputPlaceholder]: 'Select Network',
    [subnetInputLabel]: 'Subnet',
};const moduleName = 'ajslegacy';
const componentName = 'orderedgrid';
const prefix = `${moduleName}.${componentName}`;

export const addRuleBtnLabel = `${prefix}.addRuleBtnLabel`;
export const emptyItemsFoundMessage = `${prefix}.emptyItemsFoundMessage`;

export const ENGLISH = {
    [addRuleBtnLabel]: 'Add rule',
    [emptyItemsFoundMessage]: 'No items found.',
};const moduleName = 'ajslegacy';
const componentName = 'analyticshttprespcodes';
const prefix = `${moduleName}.${componentName}`;

export const excludeHttpStatusCodesFromErrorClassificationInputLabel = `${prefix}.excludeHttpStatusCodesFromErrorClassificationInputLabel`;

export const ENGLISH = {
    [excludeHttpStatusCodesFromErrorClassificationInputLabel]: 'Exclude HTTP Status codes from Error Classification',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'addpoolservers';
const prefix = `${moduleName}.${componentName}`;

export const serverIpAddressLabel = `${prefix}.serverIpAddressLabel`;
export const addServerBtnLabel = `${prefix}.addServerBtnLabel`;
export const manyIpAddressMessage = `${prefix}.manyIpAddressMessage`;
export const reachTheLimitMessage = `${prefix}.reachTheLimitMessage`;

export const ENGLISH = {
    [serverIpAddressLabel]: 'Server IP Address',
    [addServerBtnLabel]: 'Add Server',
    [manyIpAddressMessage]: 'Too many ({0}) IP addresses. Can add up to {1} addresses. Up to {2} in total.',
    [reachTheLimitMessage]: 'Reached the limit ({0}) of Servers in a Pool',
};const moduleName = 'welcome';
const componentName = 'fileuploadtextarea';
const prefix = `${moduleName}.${componentName}`;

export const enterTextRadioLabel = `${prefix}.enterTextRadioLabel`;
export const uploadFileRadioLabel = `${prefix}.uploadFileRadioLabel`;

export const ENGLISH = {
    [enterTextRadioLabel]: 'Enter Text',
    [uploadFileRadioLabel]: 'Upload File',
};const moduleName = 'ajslegacy';
const componentName = 'orderedgridcontrols';
const prefix = `${moduleName}.${componentName}`;

export const createTitle = `${prefix}.createTitle`;
export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
};const moduleName = 'ajslegacy';
const componentName = 'clientipmatch';
const prefix = `${moduleName}.${componentName}`;

export const isRadioOption = `${prefix}.isRadioOption`;
export const isNotRadioOption = `${prefix}.isNotRadioOption`;
export const valueInputLabel = `${prefix}.valueInputLabel`;

export const ENGLISH = {
    [isRadioOption]: 'Is',
    [isNotRadioOption]: 'Is not',
};const moduleName = 'ajslegacy';
const componentName = 'matchconfig';
const prefix = `${moduleName}.${componentName}`;

export const matchTypeInputLabel = `${prefix}.matchTypeInputLabel`;
export const matchTypeInputPlaceholder = `${prefix}.matchTypeInputPlaceholder`;

export const ENGLISH = {
    [matchTypeInputLabel]: 'Add Match Type',
    [matchTypeInputPlaceholder]: 'Select Match',
};const moduleName = 'ajslegacy';
const componentName = 'fileupload';
const prefix = `${moduleName}.${componentName}`;

export const uploadBtnLabel = `${prefix}.uploadBtnLabel`;
export const chooseFileInputPlaceholder = `${prefix}.chooseFileInputPlaceholder`;
export const fileAttachedLabel = `${prefix}.fileAttachedLabel`;

export const ENGLISH = {
    [uploadBtnLabel]: 'Upload File',
    [chooseFileInputPlaceholder]: 'choose file',
    [fileAttachedLabel]: 'file attached',
};const moduleName = 'ajslegacy';
const componentName = 'newlineconvertedtextarea';
const prefix = `${moduleName}.${componentName}`;

export const userInputHeader = `${prefix}.userInputHeader`;
export const enterStringInputPlaceholder = `${prefix}.enterStringInputPlaceholder`;
export const convertedValuePreviewHeader = `${prefix}.convertedValuePreviewHeader`;
export const wordwrapBtnLabel = `${prefix}.wordwrapBtnLabel`;

export const ENGLISH = {
    [userInputHeader]: 'USER INPUT',
    [enterStringInputPlaceholder]: 'Enter string',
    [convertedValuePreviewHeader]: 'CONVERTED VALUE PREVIEW',
    [wordwrapBtnLabel]: 'Wordwrap',
};const moduleName = 'ajslegacy';
const componentName = 'hosthdrmatch';
const prefix = `${moduleName}.${componentName}`;

export const criteriaInputLabel = `${prefix}.criteriaInputLabel`;
export const criteriaInputPlaceholder = `${prefix}.criteriaInputPlaceholder`;
export const valueInputLabel = `${prefix}.valueInputLabel`;

export const ENGLISH = {
    [criteriaInputLabel]: 'Criteria',
    [criteriaInputPlaceholder]: 'Select Criteria',
};const moduleName = 'ajslegacy';
const componentName = 'methodmatch';
const prefix = `${moduleName}.${componentName}`;

export const isRadioOption = `${prefix}.isRadioOption`;
export const isNotRadioOption = `${prefix}.isNotRadioOption`;
export const methodInputLabel = `${prefix}.methodInputLabel`;
export const methodInputPlaceholder = `${prefix}.methodInputPlaceholder`;

export const ENGLISH = {
    [isRadioOption]: 'Is',
    [isNotRadioOption]: 'Is not',
    [methodInputLabel]: 'Method',
    [methodInputPlaceholder]: 'Select Method',
};const moduleName = 'ajslegacy';
const componentName = 'pathmatchconfig';
const prefix = `${moduleName}.${componentName}`;

export const criteriaInputLabel = `${prefix}.criteriaInputLabel`;
export const criteriaInputPlaceholder = `${prefix}.criteriaInputPlaceholder`;
export const stringGroupInputLabel = `${prefix}.stringGroupInputLabel`;
export const customStringInputLabel = `${prefix}.customStringInputLabel`;
export const matchCaseInputLabel = `${prefix}.matchCaseInputLabel`;

export const ENGLISH = {
    [criteriaInputLabel]: 'Criteria',
    [criteriaInputPlaceholder]: 'Select Criteria',
    [stringGroupInputLabel]: 'String Group or Custom String',
    [customStringInputLabel]: 'Custom String',
    [matchCaseInputLabel]: 'Match Case',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'licenseselector';
const prefix = `${moduleName}.${componentName}`;

export const licenseTypeInputLabel = `${prefix}.licenseTypeInputLabel`;

export const ENGLISH = {
    [licenseTypeInputLabel]: 'License Type',
};const moduleName = 'ajslegacy';
const componentName = 'portmatch';
const prefix = `${moduleName}.${componentName}`;

export const isLabel = `${prefix}.isLabel`;
export const isNotLabel = `${prefix}.isNotLabel`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const portInputPlaceholder = `${prefix}.portInputPlaceholder`;

export const ENGLISH = {
    [isLabel]: 'Is',
    [isNotLabel]: 'Is not',
    [portInputLabel]: 'Ports',
    [portInputPlaceholder]: 'Port',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'cloudlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleHost = `${prefix}.columnTitleHost`;
export const columnTitleHostState = `${prefix}.columnTitleHostState`;
export const columnTitleServiceEngineState = `${prefix}.columnTitleServiceEngineState`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const convertToCloudNone = `${prefix}.convertToCloudNone`;
export const convertToNoAccessTooltip = `${prefix}.convertToNoAccessTooltip`;
export const downloadSeImageTooltip = `${prefix}.downloadSeImageTooltip`;
export const installLbaasPluginTooltip = `${prefix}.installLbaasPluginTooltip`;
export const generateTokenTooltip = `${prefix}.generateTokenTooltip`;
export const rediscoverTooltip = `${prefix}.rediscoverTooltip`;
export const creatingSeImageForDownloadMessage = `${prefix}.creatingSeImageForDownloadMessage`;
export const vcenterHostnameHeader = `${prefix}.vcenterHostnameHeader`;
export const dataCenterHeader = `${prefix}.dataCenterHeader`;
export const usernameHeader = `${prefix}.usernameHeader`;
export const accessPermissionHeader = `${prefix}.accessPermissionHeader`;
export const ipAddressManagementHeader = `${prefix}.ipAddressManagementHeader`;
export const staticIpAddressLabel = `${prefix}.staticIpAddressLabel`;
export const managementNetworkHeader = `${prefix}.managementNetworkHeader`;
export const subnetLabel = `${prefix}.subnetLabel`;
export const defaultGatewayHeader = `${prefix}.defaultGatewayHeader`;
export const adminTenantHeader = `${prefix}.adminTenantHeader`;
export const domainHeader = `${prefix}.domainHeader`;
export const deploymentHeader = `${prefix}.deploymentHeader`;
export const regionHeader = `${prefix}.regionHeader`;
export const managementNetworksHeader = `${prefix}.managementNetworksHeader`;
export const availabilityZoneLabel = `${prefix}.availabilityZoneLabel`;
export const networkLabel = `${prefix}.networkLabel`;
export const keystoneAuthUrlHeader = `${prefix}.keystoneAuthUrlHeader`;
export const authenticationHeader = `${prefix}.authenticationHeader`;
export const hypervisorTypeHeader = `${prefix}.hypervisorTypeHeader`;
export const projectIdHeader = `${prefix}.projectIdHeader`;
export const vpcNetworkNameHeader = `${prefix}.vpcNetworkNameHeader`;
export const zonesHeader = `${prefix}.zonesHeader`;
export const vipStaticRoutesHeader = `${prefix}.vipStaticRoutesHeader`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const routePlacementPreferenceHeader = `${prefix}.routePlacementPreferenceHeader`;
export const staticRoutesLabel = `${prefix}.staticRoutesLabel`;
export const interfaceRoutesLabel = `${prefix}.interfaceRoutesLabel`;
export const statusLabel = `${prefix}.statusLabel`;
export const reasonLabel = `${prefix}.reasonLabel`;
export const convertCloudTypeTooltip = `${prefix}.convertCloudTypeTooltip`;

export const ENGLISH = {
    [columnTitleHost]: 'Host',
    [columnTitleHostState]: 'Host State',
    [columnTitleServiceEngineState]: 'Service Engine State',
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [columnTitleStatus]: 'Status',
    [convertToCloudNone]:
        `Converting Cloud {0} to no access will limit your ability to modify Service Engine
        properties requiring an administrator to manually perform changes through the orchestrator.`,
    [convertToNoAccessTooltip]: 'Convert to NoAccess',
    [downloadSeImageTooltip]: 'Download Service Engine Image',
    [installLbaasPluginTooltip]: 'Install LBaaS Plugin',
    [generateTokenTooltip]: 'Generate Token',
    [rediscoverTooltip]: 'Rediscover',
    [creatingSeImageForDownloadMessage]: 'Creating Service Engine Image for Download.',
    [vcenterHostnameHeader]: 'vCenter Hostname',
    [dataCenterHeader]: 'Data Center',
    [usernameHeader]: 'Username',
    [accessPermissionHeader]: 'Access Permission',
    [ipAddressManagementHeader]: 'IP Address Management',
    [staticIpAddressLabel]: 'Static IP Address',
    [managementNetworkHeader]: 'Management Network',
    [subnetLabel]: 'Subnet:',
    [defaultGatewayHeader]: 'Default Gateway:',
    [adminTenantHeader]: 'Admin Tenant',
    [domainHeader]: 'Domain',
    [deploymentHeader]: 'Deployment',
    [regionHeader]: 'Region',
    [managementNetworksHeader]: 'Management Networks',
    [availabilityZoneLabel]: '<b>Availability Zone:<b> {0}',
    [networkLabel]: '<b>Network:<b> {0}',
    [keystoneAuthUrlHeader]: 'Keystone Auth URL',
    [authenticationHeader]: 'Authentication',
    [hypervisorTypeHeader]: 'Hypervisor Type',
    [projectIdHeader]: 'Project Id',
    [vpcNetworkNameHeader]: 'VPC Network Name',
    [zonesHeader]: 'Zones',
    [vipStaticRoutesHeader]: 'VIP Static Routes',
    [enabledLabel]: 'Enabled',
    [disabledLabel]: 'Disabled',
    [routePlacementPreferenceHeader]: 'Route Placement Preference',
    [staticRoutesLabel]: 'Static Routes',
    [interfaceRoutesLabel]: 'Interface Routes',
    [statusLabel]: '<strong>Status:<strong> {0}',
    [reasonLabel]: '<strong>Reason:<strong> {0}',
    [convertCloudTypeTooltip]: 'Convert Cloud Type',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'geolocselect';
const prefix = `${moduleName}.${componentName}`;

export const geoLocationSourceInputLabel = `${prefix}.geoLocationSourceInputLabel`;
export const selectGeoLocationSourceInputPlaceholder = `${prefix}.selectGeoLocationSourceInputPlaceholder`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const tagInputLabel = `${prefix}.tagInputLabel`;
export const latitudeInputLabel = `${prefix}.latitudeInputLabel`;
export const longitudeInputLabel = `${prefix}.longitudeInputLabel`;

export const ENGLISH = {
    [geoLocationSourceInputLabel]: 'Geo Location Source',
    [selectGeoLocationSourceInputPlaceholder]: 'Select Geo Location Source',
    [nameInputLabel]: 'Name',
    [tagInputLabel]: 'Tag',
    [latitudeInputLabel]: 'Latitude',
    [longitudeInputLabel]: 'Longitude',
};const moduleName = 'ajslegacy';
const componentName = 'sipprofile';
const prefix = `${moduleName}.${componentName}`;

export const sipProfileHeader = `${prefix}.sipProfileHeader`;
export const sipLogDepthInputLabel = `${prefix}.sipLogDepthInputLabel`;
export const excludeSipStatusCodesFromErrorClassificationInputLabel = `${prefix}.excludeSipStatusCodesFromErrorClassificationInputLabel`;

export const ENGLISH = {
    [sipProfileHeader]: 'SIP Profile',
    [sipLogDepthInputLabel]: 'SIP log depth',
    [excludeSipStatusCodesFromErrorClassificationInputLabel]: 'Exclude SIP Status codes from Error Classification',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segrouplicenseselector';
const prefix = `${moduleName}.${componentName}`;

export const licenseSettings = `${prefix}.licenseSettings`;
export const enablePerappSeModeCheckboxLabel = `${prefix}.enablePerappSeModeCheckboxLabel`;
export const seBandwidthTypeInputLabel = `${prefix}.seBandwidthTypeInputLabel`;
export const virtualServicePerSeInputLabel = `${prefix}.virtualServicePerSeInputLabel`;
export const setNumberInputPlaceholder = `${prefix}.setNumberInputPlaceholder`;
export const maximumInnerText = `${prefix}.maximumInnerText`;
export const numberSeDataPathsInputLabel = `${prefix}.numberSeDataPathsInputLabel`;
export const useHyperThreadingCheckboxLabel = `${prefix}.useHyperThreadingCheckboxLabel`;
export const instanceFlavorInputLabel = `${prefix}.instanceFlavorInputLabel`;
export const azurePricingInfoInputLabel = `${prefix}.azurePricingInfoInputLabel`;
export const autoSelectInputPlaceholder = `${prefix}.autoSelectInputPlaceholder`;
export const showAllFlavorsCheckboxLabel = `${prefix}.showAllFlavorsCheckboxLabel`;

export const ENGLISH = {
    [licenseSettings]: 'License',
    [enablePerappSeModeCheckboxLabel]: 'Enable Perapp Service Engine Mode',
    [seBandwidthTypeInputLabel]: 'Service Engine Bandwidth Type',
    [virtualServicePerSeInputLabel]: 'Virtual Service per Service Engine',
    [setNumberInputPlaceholder]: 'Set number',
    [maximumInnerText]: 'Maximum',
    [numberSeDataPathsInputLabel]: 'Number of Service Engine Data Paths',
    [useHyperThreadingCheckboxLabel]: 'Use Hyperthreading',
    [instanceFlavorInputLabel]: 'Instance Flavor',
    [azurePricingInfoInputLabel]: 'Azure Pricing Info',
    [autoSelectInputPlaceholder]: 'Auto select (default)',
    [showAllFlavorsCheckboxLabel]: 'Show all flavors',
};const moduleName = 'ajslegacy';
const componentName = 'gslbnonavimodal';
const prefix = `${moduleName}.${componentName}`;

export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const advancedSettingsHeader = `${prefix}.advancedSettingsHeader`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const newGslb3rdPartySiteHeader = `${prefix}.newGslb3rdPartySiteHeader`;
export const EditGslb3rdPartySiteHeader = `${prefix}.EditGslb3rdPartySiteHeader`;

export const ENGLISH = {
    [saveBtnLabel]: 'Save',
    [advancedSettingsHeader]: 'Advanced Settings',
    [enabledLabel]: 'Enabled',
    [nameInputLabel]: 'Name',
    [newGslb3rdPartySiteHeader]: 'New GSLB Thirdparty Site: {0}',
    [EditGslb3rdPartySiteHeader]: 'Edit GSLB Thirdparty Site: {0}',
};const moduleName = 'ajslegacy';
const componentName = 'geoprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const editGeoProfileHeader = `${prefix}.editGeoProfileHeader`;
export const newGeoProfileHeader = `${prefix}.newGeoProfileHeader`;
export const entriesHeader = `${prefix}.entriesHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const filenameInputLabel = `${prefix}.filenameInputLabel`;
export const filenameInputPlaceholder = `${prefix}.filenameInputPlaceholder`;
export const priorityInputLabel = `${prefix}.priorityInputLabel`;
export const formatInputLabel = `${prefix}.formatInputLabel`;
export const formatInputPlaceholder = `${prefix}.formatInputPlaceholder`;
export const removeFileTitle = `${prefix}.removeFileTitle`;
export const addEntryBtnLabel = `${prefix}.addEntryBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;

export const ENGLISH = {
    [editGeoProfileHeader]: 'Edit Geo Profile: {0}',
    [newGeoProfileHeader]: 'New Geo Profile: {0}',
    [entriesHeader]: 'Entries',
    [nameInputLabel]: 'Name',
    [filenameInputLabel]: 'Filename',
    [filenameInputPlaceholder]: 'Select File',
    [priorityInputLabel]: 'Priority',
    [formatInputLabel]: 'Format',
    [formatInputPlaceholder]: 'Select Format',
    [removeFileTitle]: 'Remove File',
    [addEntryBtnLabel]: '+ Add Entry',
    [saveBtnLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'hmselect';
const prefix = `${moduleName}.${componentName}`;

export const healthMonitorProxyInputLabel = `${prefix}.healthMonitorProxyInputLabel`;
export const removeHealthMonitorProxyButtonTitle = `${prefix}.removeHealthMonitorProxyButtonTitle`;
export const HealthMonitorProxyLink = `${prefix}.HealthMonitorProxyLink`;

export const ENGLISH = {
    [healthMonitorProxyInputLabel]: 'Health Monitor Proxy',
    [removeHealthMonitorProxyButtonTitle]: 'Remove Health Monitor Proxy',
    [HealthMonitorProxyLink]: '+ Health Monitor Proxy',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'usermodaldefaulttenantsettings';
const prefix = `${moduleName}.${componentName}`;

export const defaultTenantInputPlaceholder = `${prefix}.defaultTenantInputPlaceholder`;
export const selectDefaultTenantInputPlaceholder = `${prefix}.selectDefaultTenantInputPlaceholder`;

export const ENGLISH = {
    [defaultTenantInputPlaceholder]: 'Select',
    [selectDefaultTenantInputPlaceholder]: 'Select Default Tenant',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'usermodalalltenantssettings';
const prefix = `${moduleName}.${componentName}`;

export const rolesForAllTenantsHeader = `${prefix}.rolesForAllTenantsHeader`;
export const allTenantRolesSelectPlaceholder = `${prefix}.allTenantRolesSelectPlaceholder`;
export const addRoleButtonLabel = `${prefix}.addRoleButtonLabel`;

export const ENGLISH = {
    [rolesForAllTenantsHeader]: 'Roles for All Tenants',
    [allTenantRolesSelectPlaceholder]: 'Select Role',
    [addRoleButtonLabel]: 'Add Role',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'usermodalpasswordsettings';
const prefix = `${moduleName}.${componentName}`;

export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const useMyAccountToChangePasswordMessage = `${prefix}.useMyAccountToChangePasswordMessage`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const confirmPasswordInputLabel = `${prefix}.confirmPasswordInputLabel`;
export const generateBtnLabel = `${prefix}.generateBtnLabel`;

export const ENGLISH = {
    [passwordInputLabel]: 'Password',
    [useMyAccountToChangePasswordMessage]: 'Please use My Account to change Password',
    [passwordInputPlaceholder]: 'Password',
    [confirmPasswordInputLabel]: 'Confirm Password',
    [generateBtnLabel]: 'Generate',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'serviceengineconfigurationcontroller';
const prefix = `${moduleName}.${componentName}`;

export const vlanInterfacesHeader = `${prefix}.vlanInterfacesHeader`;
export const editServiceEngineHeader = `${prefix}.editServiceEngineHeader`;
export const serviceEngineGroupHeader = `${prefix}.serviceEngineGroupHeader`;
export const seGroupInputLabel = `${prefix}.seGroupInputLabel`;
export const managementNetworkHeader = `${prefix}.managementNetworkHeader`;
export const dataNetworksHeader = `${prefix}.dataNetworksHeader`;
export const networksHeader = `${prefix}.networksHeader`;
export const createVlanInterfaceBtnLabel = `${prefix}.createVlanInterfaceBtnLabel`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const columnTitleInterface = `${prefix}.columnTitleInterface`;
export const columnTitleNetworkName = `${prefix}.columnTitleNetworkName`;
export const columnTitleMacAddress = `${prefix}.columnTitleMacAddress`;
export const columnTitleIPAddress = `${prefix}.columnTitleIPAddress`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleParentInterface = `${prefix}.columnTitleParentInterface`;
export const editBtnLabel = `${prefix}.editBtnLabel`;
export const deleteBtnLabel = `${prefix}.deleteBtnLabel`;
export const staticIpv6InputLabel = `${prefix}.staticIpv6InputLabel`;
export const staticIpv6InputPlaceholder = `${prefix}.staticIpv6InputPlaceholder`;
export const staticIpv4InputLabel = `${prefix}.staticIpv4InputLabel`;
export const staticIpv4InputPlaceholder = `${prefix}.staticIpv4InputPlaceholder`;

export const ENGLISH = {
    [vlanInterfacesHeader]: 'VLAN Interfaces',
    [editServiceEngineHeader]: 'Edit Service Engine: <strong>{0}<strong>',
    [serviceEngineGroupHeader]: 'Service Engine Group',
    [seGroupInputLabel]: 'Service Engine Group',
    [managementNetworkHeader]: 'Management Network',
    [dataNetworksHeader]: 'Data Networks',
    [networksHeader]: 'Networks',
    [createVlanInterfaceBtnLabel]: 'Create VLAN Interface',
    [cancelBtnLabel]: 'Cancel',
    [saveBtnLabel]: 'Save',
    [columnTitleInterface]: 'Interface',
    [columnTitleNetworkName]: 'Network Name',
    [columnTitleMacAddress]: 'Mac Address',
    [columnTitleIPAddress]: 'IP Address',
    [columnTitleName]: 'Name',
    [columnTitleParentInterface]: 'Parent Interface',
    [editBtnLabel]: 'Edit',
    [deleteBtnLabel]: 'Delete',
    [staticIpv6InputLabel]: 'STATIC IPv6:',
    [staticIpv6InputPlaceholder]: 'Commaseparated IPv6 Prefixes',
    [staticIpv4InputLabel]: 'STATIC IPv4:',
    [staticIpv4InputPlaceholder]: 'Commaseparated IPv4 Prefixes',
};========================================================================
  
  ========================================================================


const moduleName = 'aviaccounts';
const componentName = 'usermodal';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const userInformationTitle = `${prefix}.userInformationTitle`;
export const userStatusLabel = `${prefix}.userStatusLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const usernameLabel = `${prefix}.usernameLabel`;
export const emailLabel = `${prefix}.emailLabel`;
export const superUserLabel = `${prefix}.superUserLabel`;
export const userProfileSelectLabel = `${prefix}.userProfileSelectLabel`;
export const userProfilePlaceholder = `${prefix}.userProfilePlaceholder`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit User: {0}',
    [modalTitleNew]: 'New User: {0}',
    [userInformationTitle]: 'User Information',
    [userStatusLabel]: 'User Status',
    [nameLabel]: 'Name',
    [usernameLabel]: 'Username',
    [emailLabel]: 'Email',
    [superUserLabel]: 'Super User',
    [userProfileSelectLabel]: 'User Profile',
    [userProfilePlaceholder]: 'Use default User Profile',
};========================================================================
  
  ========================================================================


const moduleName = 'aviaccounts';
const componentName = 'usermodaltenantsettings';
const prefix = `${moduleName}.${componentName}`;

export const tenantSettingsHeader = `${prefix}.tenantSettingsHeader`;
export const individualTenantsTableHeader = `${prefix}.individualTenantsTableHeader`;
export const selectTenantLabel = `${prefix}.selectTenantLabel`;
export const selectTenantPlaceholder = `${prefix}.selectTenantPlaceholder`;
export const selectRoleLabel = `${prefix}.selectRoleLabel`;
export const selectRolePlaceholder = `${prefix}.selectRolePlaceholder`;
export const addTenantLabel = `${prefix}.addTenantLabel`;
export const noTenantAddedLabel = `${prefix}.noTenantAddedLabel`;
export const defaultTenantLabel = `${prefix}.defaultTenantLabel`;

export const ENGLISH = {
    [tenantSettingsHeader]: 'Tenant & Role',
    [individualTenantsTableHeader]: 'Individual Tenants and Role',
    [selectTenantLabel]: 'Tenant',
    [selectTenantPlaceholder]: 'Select Tenant',
    [selectRoleLabel]: 'Role',
    [selectRolePlaceholder]: 'Select Role',
    [addTenantLabel]: 'Add Tenant',
    [noTenantAddedLabel]: 'No tenants have been added.',
    [defaultTenantLabel]: 'Default Tenant',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsrecordconfigmodal';
const prefix = `${moduleName}.${componentName}`;

export const editStaticDnsRecordHeader = `${prefix}.editStaticDnsRecordHeader`;
export const newStaticDnsRecordHeader = `${prefix}.newStaticDnsRecordHeader`;
export const doneSubmitModalLabel = `${prefix}.doneSubmitModalLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeInputPlaceholder = `${prefix}.typeInputPlaceholder`;
export const aaaaTypeDnsRecordHeader = `${prefix}.aaaaTypeDnsRecordHeader`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const removeARecordButtonLabel = `${prefix}.removeARecordButtonLabel`;
export const addARecordButtonLabel = `${prefix}.addARecordButtonLabel`;
export const ipv6AddressInputLabel = `${prefix}.ipv6AddressInputLabel`;
export const removeAaaaRecordButtonLabel = `${prefix}.removeAaaaRecordButtonLabel`;
export const addAaaaRecordButtonLabel = `${prefix}.addAaaaRecordButtonLabel`;
export const srvTypeDnsRecordHeader = `${prefix}.srvTypeDnsRecordHeader`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const targetInputLabel = `${prefix}.targetInputLabel`;
export const priorityInputLabel = `${prefix}.priorityInputLabel`;
export const weightInputLabel = `${prefix}.weightInputLabel`;
export const removeServiceLocatorButtonLabel = `${prefix}.removeServiceLocatorButtonLabel`;
export const addServiceLocatorButtonLabel = `${prefix}.addServiceLocatorButtonLabel`;
export const cnameTypeDnsRecordHeader = `${prefix}.cnameTypeDnsRecordHeader`;
export const nameServerDnsRecordHeader = `${prefix}.nameServerDnsRecordHeader`;
export const nameServerNameInputLabel = `${prefix}.nameServerNameInputLabel`;
export const nameServerIpAddressInputLabel = `${prefix}.nameServerIpAddressInputLabel`;
export const removeNameServerButtonLabel = `${prefix}.removeNameServerButtonLabel`;
export const addNameServerButtonLabel = `${prefix}.addNameServerButtonLabel`;
export const advancedSettingsHeader = `${prefix}.advancedSettingsHeader`;
export const numberOfRecordsInResponseInputLabel = `${prefix}.numberOfRecordsInResponseInputLabel`;
export const numberOfRecordsInResponseInputPlaceholder = `${prefix}.numberOfRecordsInResponseInputPlaceholder`;
export const algorithmInputLabel = `${prefix}.algorithmInputLabel`;
export const algorithmInputPlaceholder = `${prefix}.algorithmInputPlaceholder`;
export const enableWildcardMatchCheckboxLabel = `${prefix}.enableWildcardMatchCheckboxLabel`;
export const delegatedDomainsCheckboxLabel = `${prefix}.delegatedDomainsCheckboxLabel`;

export const ENGLISH = {
    [editStaticDnsRecordHeader]: 'Edit Static DNS Record',
    [newStaticDnsRecordHeader]: 'New Static DNS Record',
    [doneSubmitModalLabel]: 'Done',
    [typeInputLabel]: 'Type',
    [typeInputPlaceholder]: 'Select Type',
    [aaaaTypeDnsRecordHeader]: 'AAAAA Record',
    [ipAddressInputLabel]: 'IPv4 Address',
    [removeARecordButtonLabel]: 'Remove A record IPv4 Address',
    [addARecordButtonLabel]: '+ Add A Record IP Address',
    [ipv6AddressInputLabel]: 'IPv6 Address',
    [removeAaaaRecordButtonLabel]: 'Remove AAAA Record IP Address',
    [addAaaaRecordButtonLabel]: '+ Add AAAA Record IP Address',
    [srvTypeDnsRecordHeader]: 'SRV Record',
    [portInputLabel]: 'Port',
    [targetInputLabel]: 'Target',
    [priorityInputLabel]: 'Priority',
    [weightInputLabel]: 'Weight',
    [removeServiceLocatorButtonLabel]: 'Remove Service Locator',
    [addServiceLocatorButtonLabel]: '+ Add Service Locator',
    [cnameTypeDnsRecordHeader]: 'CNAME Record',
    [nameServerDnsRecordHeader]: 'NS Record',
    [nameServerNameInputLabel]: 'Name Server Name',
    [nameServerIpAddressInputLabel]: 'Name Server IP Address',
    [removeNameServerButtonLabel]: 'Remove Name Server',
    [addNameServerButtonLabel]: '+ Add Name Server',
    [advancedSettingsHeader]: 'Advanced Settings',
    [numberOfRecordsInResponseInputLabel]: 'Number of records in response',
    [numberOfRecordsInResponseInputPlaceholder]: 'Number of Records',
    [algorithmInputLabel]: 'Algorithm',
    [algorithmInputPlaceholder]: 'Select Algorithm',
    [enableWildcardMatchCheckboxLabel]: 'Enable wildcard match',
    [delegatedDomainsCheckboxLabel]: 'Delegated domains',
};========================================================================
  
  ========================================================================


const moduleName = 'legacyajs';
const componentName = 'userprofilecreate';
const prefix = `${moduleName}.${componentName}`;

export const modalTitleEdit = `${prefix}.modalTitleEdit`;
export const modalTitleNew = `${prefix}.modalTitleNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const maxPasswordHistoryCountInputLabel = `${prefix}.maxPasswordHistoryCountInputLabel`;
export const maxLoginFailureCountInputLabel = `${prefix}.maxLoginFailureCountInputLabel`;
export const accountLockTimeoutInputLabel = `${prefix}.accountLockTimeoutInputLabel`;
export const inputFieldInnerTextMinutes = `${prefix}.inputFieldInnerTextMinutes`;
export const maxConcurrentSessionsInputLabel = `${prefix}.maxConcurrentSessionsInputLabel`;
export const credentialsTimeoutThresholdInputLabel = `${prefix}.credentialsTimeoutThresholdInputLabel`;
export const inputFieldInnerTextDays = `${prefix}.inputFieldInnerTextDays`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [modalTitleEdit]: 'Edit User Profile: {0}',
    [modalTitleNew]: 'New User Profile: {0}',
    [nameInputLabel]: 'Name',
    [maxPasswordHistoryCountInputLabel]: 'Max Password History Count',
    [maxLoginFailureCountInputLabel]: 'Max Login Failure Count',
    [accountLockTimeoutInputLabel]: 'Account Lock Timeout',
    [inputFieldInnerTextMinutes]: 'minutes',
    [maxConcurrentSessionsInputLabel]: 'Max Concurrent Sessions',
    [credentialsTimeoutThresholdInputLabel]: 'Credentials Timeout Threshold',
    [inputFieldInnerTextDays]: 'days',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicesecurityddosfulllist';
const prefix = `${moduleName}.${componentName}`;

export const noAttacksToDisplayMessage = `${prefix}.noAttacksToDisplayMessage`;
export const doneButtonLabel = `${prefix}.doneButtonLabel`;

export const ENGLISH = {
    [noAttacksToDisplayMessage]: 'No attacks to display.',
    [doneButtonLabel]: 'Done',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'poolgroupcreate';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleRatio = `${prefix}.columnTitleRatio`;
export const columnTitlePriority = `${prefix}.columnTitlePriority`;
export const columnTitleDeploymentState = `${prefix}.columnTitleDeploymentState`;
export const removeActionTitle = `${prefix}.removeActionTitle`;
export const editActionTitle = `${prefix}.editActionTitle`;
export const editPoolGroupHeader = `${prefix}.editPoolGroupHeader`;
export const newPoolGroupHeader = `${prefix}.newPoolGroupHeader`;
export const selectVrfContextHeader = `${prefix}.selectVrfContextHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const poolGroupMembersHeader = `${prefix}.poolGroupMembersHeader`;
export const poolInputLabel = `${prefix}.poolInputLabel`;
export const poolInputPlaceholder = `${prefix}.poolInputPlaceholder`;
export const createPoolButtonLabel = `${prefix}.createPoolButtonLabel`;
export const ratioInputLabel = `${prefix}.ratioInputLabel`;
export const priorityInputLabel = `${prefix}.priorityInputLabel`;
export const deploymentStateInputLabel = `${prefix}.deploymentStateInputLabel`;
export const deploymentStateInputPlaceholder = `${prefix}.deploymentStateInputPlaceholder`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const confirmButtonLabel = `${prefix}.confirmButtonLabel`;
export const addMemberButtonLabel = `${prefix}.addMemberButtonLabel`;
export const addPoolGroupMemberButtonLabel = `${prefix}.addPoolGroupMemberButtonLabel`;
export const poolServersHeader = `${prefix}.poolServersHeader`;
export const enableHttp2CheckboxLabel = `${prefix}.enableHttp2CheckboxLabel`;
export const minimumNumberOfServersInputLabel = `${prefix}.minimumNumberOfServersInputLabel`;
export const poolGroupFailureSettingsHeader = `${prefix}.poolGroupFailureSettingsHeader`;
export const deploymentPolicyInputLabel = `${prefix}.deploymentPolicyInputLabel`;
export const deploymentPolicyInputPlaceholder = `${prefix}.deploymentPolicyInputPlaceholder`;
export const createDeploymentPolicyButtonLabel = `${prefix}.createDeploymentPolicyButtonLabel`;
export const nextButtonLabel = `${prefix}.nextButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const rbacHeader = `${prefix}.rbacHeader`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleRatio]: 'Ratio',
    [columnTitlePriority]: 'Priority',
    [columnTitleDeploymentState]: 'Deployment State',
    [removeActionTitle]: 'Remove',
    [editActionTitle]: 'Edit',
    [editPoolGroupHeader]: 'Edit Pool Group: {0}',
    [newPoolGroupHeader]: 'New Pool Group: {0}',
    [selectVrfContextHeader]: 'Select VRF Context',
    [nameInputLabel]: 'Name',
    [poolGroupMembersHeader]: 'Pool Group Members',
    [poolInputLabel]: 'Pool',
    [poolInputPlaceholder]: 'Select Pool',
    [createPoolButtonLabel]: 'Create Pool',
    [ratioInputLabel]: 'Ratio',
    [priorityInputLabel]: 'Priority',
    [deploymentStateInputLabel]: 'Deployment State',
    [deploymentStateInputPlaceholder]: 'Select Deployment State',
    [cancelButtonLabel]: 'Cancel',
    [confirmButtonLabel]: 'Confirm',
    [addMemberButtonLabel]: 'Add Member',
    [addPoolGroupMemberButtonLabel]: '+ Add Pool Group Member',
    [poolServersHeader]: 'Pool Servers',
    [enableHttp2CheckboxLabel]: 'Enable HTTP2',
    [minimumNumberOfServersInputLabel]: 'Minimum number of servers',
    [poolGroupFailureSettingsHeader]: 'Pool Group Failure Settings',
    [deploymentPolicyInputLabel]: 'Pool Group Deployment Policy',
    [deploymentPolicyInputPlaceholder]: 'Select a Policy',
    [createDeploymentPolicyButtonLabel]: 'Create Policy',
    [nextButtonLabel]: 'Next',
    [saveButtonLabel]: 'Save',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
};const moduleName = 'welcome';
const componentName = 'modalcontainer';
const prefix = `${moduleName}.${componentName}`;

export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;

export const ENGLISH = {
    [cancelBtnLabel]: 'Cancel',
    [saveBtnLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicesecuritysslpatches';
const prefix = `${moduleName}.${componentName}`;

export const openSSLPatchesHeader = `${prefix}.openSSLPatchesHeader`;
export const doneBtnLabel = `${prefix}.doneBtnLabel`;

export const ENGLISH = {
    [openSSLPatchesHeader]: 'OpenSSL Patches',
    [doneBtnLabel]: 'Done',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsappprofilednszones';
const prefix = `${moduleName}.${componentName}`;

export const domainNameInputLabel = `${prefix}.domainNameInputLabel`;
export const nameServerInputLabel = `${prefix}.nameServerInputLabel`;
export const adminEmailInputLabel = `${prefix}.adminEmailInputLabel`;
export const adminEmailInputPlaceholder = `${prefix}.adminEmailInputPlaceholder`;
export const addDomainButtonLabel = `${prefix}.addDomainButtonLabel`;
export const noAddedDomainsMessage = `${prefix}.noAddedDomainsMessage`;

export const ENGLISH = {
    [domainNameInputLabel]: 'Domain Name',
    [nameServerInputLabel]: 'Name Server',
    [adminEmailInputLabel]: 'Admin Email',
    [adminEmailInputPlaceholder]: 'hostmaster',
    [addDomainButtonLabel]: 'Add Domain',
    [noAddedDomainsMessage]: 'No domains have been added.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafexceptionsmodal';
const prefix = `${moduleName}.${componentName}`;

export const groupNameLabel = `${prefix}.groupNameLabel`;
export const ruleNameLabel = `${prefix}.ruleNameLabel`;
export const existingExceptionsLabel = `${prefix}.existingExceptionsLabel`;
export const anySubnetInputLabel = `${prefix}.anySubnetInputLabel`;
export const anyPathInputLabel = `${prefix}.anyPathInputLabel`;
export const anyMatchInputLabel = `${prefix}.anyMatchInputLabel`;
export const newExceptionsLabel = `${prefix}.newExceptionsLabel`;
export const noNewExceptionsCanBeAddedMessage = `${prefix}.noNewExceptionsCanBeAddedMessage`;
export const subnetInputPlaceholder = `${prefix}.subnetInputPlaceholder`;
export const andSeparatorLabel = `${prefix}.andSeparatorLabel`;
export const uriPathInputPlaceholder = `${prefix}.uriPathInputPlaceholder`;
export const matchElementInputPlaceholder = `${prefix}.matchElementInputPlaceholder`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const addExceptionHeader = `${prefix}.addExceptionHeader`;

export const ENGLISH = {
    [groupNameLabel]: 'Group Name',
    [ruleNameLabel]: 'Rule Name',
    [existingExceptionsLabel]: 'Existing Exceptions',
    [anySubnetInputLabel]: 'ANY SUBNET',
    [anyPathInputLabel]: 'ANY PATH',
    [anyMatchInputLabel]: 'ANY MATCH ELEMENT',
    [newExceptionsLabel]: 'New Exceptions',
    [noNewExceptionsCanBeAddedMessage]: 'No new exceptions can be added',
    [subnetInputPlaceholder]: 'Any Subnet',
    [andSeparatorLabel]: 'and',
    [uriPathInputPlaceholder]: 'Any Path',
    [matchElementInputPlaceholder]: 'Any Match Element',
    [saveButtonLabel]: 'Save',
    [cancelButtonLabel]: 'Cancel',
    [addExceptionHeader]: 'Add Exception',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'vrfcontextmodal';
const prefix = `${moduleName}.${componentName}`;

export const editVrfContextLabel = `${prefix}.editVrfContextLabel`;
export const newVrfContextLabel = `${prefix}.newVrfContextLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const bfdParametersHeader = `${prefix}.bfdParametersHeader`;
export const detectionMultiplierInputLabel = `${prefix}.detectionMultiplierInputLabel`;
export const minimumTransmitIntervalInputLabel = `${prefix}.minimumTransmitIntervalInputLabel`;
export const minimumReceiveIntervalInputLabel = `${prefix}.minimumReceiveIntervalInputLabel`;
export const msInnerText = `${prefix}.msInnerText`;

export const ENGLISH = {
    [editVrfContextLabel]: 'Edit VRF Context: {0}',
    [newVrfContextLabel]: 'New VRF Context: {0}',
    [nameInputLabel]: 'Name',
    [bfdParametersHeader]: 'BFD Parameters',
    [detectionMultiplierInputLabel]: 'Detection Multiplier',
    [minimumTransmitIntervalInputLabel]: 'Minimum Transmit Interval',
    [minimumReceiveIntervalInputLabel]: 'Minimum Receive Interval',
    [msInnerText]: 'ms',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsappprofiledomainnames';
const prefix = `${moduleName}.${componentName}`;

export const domainNamesHeader = `${prefix}.domainNamesHeader`;
export const domainNamesInputLabel = `${prefix}.domainNamesInputLabel`;
export const authoritativeDomainNamesHeader = `${prefix}.authoritativeDomainNamesHeader`;
export const serverInputLabel = `${prefix}.serverInputLabel`;
export const adminEmailInputLabel = `${prefix}.adminEmailInputLabel`;
export const adminEmailInputPlaceholder = `${prefix}.adminEmailInputPlaceholder`;

export const ENGLISH = {
    [domainNamesHeader]: 'Domain NamesSubdomains',
    [domainNamesInputLabel]: 'Valid subdomains',
    [authoritativeDomainNamesHeader]: 'Authoritative Domain Names',
    [serverInputLabel]: 'Default Server',
    [adminEmailInputLabel]: 'Default Admin Email',
    [adminEmailInputPlaceholder]: 'hostmaster',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicychildmodesetter';
const prefix = `${moduleName}.${componentName}`;

export const wafPolicyModeLabel = `${prefix}.wafPolicyModeLabel`;
export const modeDelegationMessage = `${prefix}.modeDelegationMessage`;
export const useParentModeValueLabel = `${prefix}.useParentModeValueLabel`;
export const modeUsedByMessage = `${prefix}.modeUsedByMessage`;

export const ENGLISH = {
    [wafPolicyModeLabel]: '{0} mode',
    [modeDelegationMessage]: 'Mode delegation is disabled for the policy.',
    [useParentModeValueLabel]: 'Use policy mode ({0})',
    [modeUsedByMessage]: 'mode is used by the {0}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const editWafPolicyHeader = `${prefix}.editWafPolicyHeader`;
export const newWafPolicyHeader = `${prefix}.newWafPolicyHeader`;
export const settingsTabTitle = `${prefix}.settingsTabTitle`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const wafProfileInputLabel = `${prefix}.wafProfileInputLabel`;
export const wafProfileInputPlaceholder = `${prefix}.wafProfileInputPlaceholder`;
export const policyModeLabel = `${prefix}.policyModeLabel`;
export const allowModeDelegationCheckboxLabel = `${prefix}.allowModeDelegationCheckboxLabel`;
export const paranoiaLevelInputLabel = `${prefix}.paranoiaLevelInputLabel`;
export const paranoiaLevelInputPlaceholder = `${prefix}.paranoiaLevelInputPlaceholder`;
export const geoDbInputLabel = `${prefix}.geoDbInputLabel`;
export const geoDbInputPlaceholder = `${prefix}.geoDbInputPlaceholder`;
export const learningTabTitle = `${prefix}.learningTabTitle`;
export const applicationLearningSectionHeader = `${prefix}.applicationLearningSectionHeader`;
export const allowlistTabTitle = `${prefix}.allowlistTabTitle`;
export const allowlistRulesLabel = `${prefix}.allowlistRulesLabel`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;
export const positiveSecurityTabTitle = `${prefix}.positiveSecurityTabTitle`;
export const applicationRulesTabTitle = `${prefix}.applicationRulesTabTitle`;
export const positiveSecuritySectionHeader = `${prefix}.positiveSecuritySectionHeader`;
export const signaturesTabTitle = `${prefix}.signaturesTabTitle`;
export const preCrsRulesLabel = `${prefix}.preCrsRulesLabel`;
export const preCrsRulesPlaceholder = `${prefix}.preCrsRulesPlaceholder`;
export const crsRulesLabel = `${prefix}.crsRulesLabel`;
export const newReleaseLabel = `${prefix}.newReleaseLabel`;
export const newCrsInfoLabel = `${prefix}.newCrsInfoLabel`;
export const applyLatestCrsLabel = `${prefix}.applyLatestCrsLabel`;
export const downloadButtonLabel = `${prefix}.downloadButtonLabel`;
export const crsVersionInputLabel = `${prefix}.crsVersionInputLabel`;
export const resetModeOverrideButtonLabel = `${prefix}.resetModeOverrideButtonLabel`;
export const crsRulesPlaceholder = `${prefix}.crsRulesPlaceholder`;
export const postCrsRulesLabel = `${prefix}.postCrsRulesLabel`;
export const postCrsRulesPlaceholder = `${prefix}.postCrsRulesPlaceholder`;

export const ENGLISH = {
    [editWafPolicyHeader]: 'Edit WAF Policy: {0}',
    [newWafPolicyHeader]: 'New WAF Policy: {0}',
    [settingsTabTitle]: 'Settings',
    [generalSectionHeader]: 'General',
    [nameInputLabel]: 'Name',
    [wafProfileInputLabel]: 'WAF Profile',
    [wafProfileInputPlaceholder]: 'Select WAF Profile',
    [policyModeLabel]: 'Policy Mode',
    [allowModeDelegationCheckboxLabel]: 'Allow Mode Delegation',
    [paranoiaLevelInputLabel]: 'Paranoia Level',
    [paranoiaLevelInputPlaceholder]: 'Select Paranoia Level',
    [geoDbInputLabel]: 'Geo DB',
    [geoDbInputPlaceholder]: 'Select Geo DB',
    [learningTabTitle]: 'Learning',
    [applicationLearningSectionHeader]: 'Application Learning',
    [allowlistTabTitle]: 'Allowlist',
    [allowlistRulesLabel]: 'ALLOWLIST RULES ({0})',
    [addRuleButtonLabel]: 'Add Rule',
    [positiveSecurityTabTitle]: 'Positive Security',
    [applicationRulesTabTitle]: 'Application Rules',
    [positiveSecuritySectionHeader]: 'POSITIVE SECURITY',
    [signaturesTabTitle]: 'Signatures',
    [preCrsRulesLabel]: 'PRECRS RULES',
    [preCrsRulesPlaceholder]: 'No PreCRS Groups Have Been Created',
    [crsRulesLabel]: 'CRS RULES',
    [newReleaseLabel]: 'New Release!',
    [newCrsInfoLabel]: '{0} Available.',
    [applyLatestCrsLabel]: 'Please apply the latest CRS.',
    [downloadButtonLabel]: 'Download Now',
    [crsVersionInputLabel]: 'CRS Version',
    [resetModeOverrideButtonLabel]: 'Reset Mode Overrides',
    [crsRulesPlaceholder]: 'CRS Version Contains No Rules',
    [postCrsRulesLabel]: 'POSTCRS RULES',
    [postCrsRulesPlaceholder]: 'No PostCRS Groups Have Been Created',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicetrafficcaptureconfig';
const prefix = `${moduleName}.${componentName}`;

export const trafficCaptureHeader = `${prefix}.trafficCaptureHeader`;
export const virtualServiceInputLabel = `${prefix}.virtualServiceInputLabel`;
export const createVirtualServiceButtonLabel = `${prefix}.createVirtualServiceButtonLabel`;
export const virtualServiceInputPlaceholder = `${prefix}.virtualServiceInputPlaceholder`;
export const filterToCaptureHeader = `${prefix}.filterToCaptureHeader`;
export const allTrafficRadioInputLabel = `${prefix}.allTrafficRadioInputLabel`;
export const clientIpRangeSubnetMaskRadioInputLabel = `${prefix}.clientIpRangeSubnetMaskRadioInputLabel`;
export const debugIpPlaceholder = `${prefix}.debugIpPlaceholder`;
export const numberPacketsPerCoreInputLabel = `${prefix}.numberPacketsPerCoreInputLabel`;
export const durationInputLabel = `${prefix}.durationInputLabel`;
export const packetsInputInnerText = `${prefix}.packetsInputInnerText`;
export const minutesInputInnerText = `${prefix}.minutesInputInnerText`;
export const packetsSizeInputLabel = `${prefix}.packetsSizeInputLabel`;
export const packetsSizeInputPlaceholder = `${prefix}.packetsSizeInputPlaceholder`;
export const bytesInputInnerText = `${prefix}.bytesInputInnerText`;
export const advancedSettingsHeader = `${prefix}.advancedSettingsHeader`;
export const packetFlowsToCaptureLabel = `${prefix}.packetFlowsToCaptureLabel`;
export const healthMonitorAndDataRadioInputLabel = `${prefix}.healthMonitorAndDataRadioInputLabel`;
export const healthMonitorOnlyRadioInputLabel = `${prefix}.healthMonitorOnlyRadioInputLabel`;
export const dataOnlyRadioInputLabel = `${prefix}.dataOnlyRadioInputLabel`;
export const captureSessionKeyCheckboxLabel = `${prefix}.captureSessionKeyCheckboxLabel`;
export const startCaptureButtonLabel = `${prefix}.startCaptureButtonLabel`;

export const ENGLISH = {
    [trafficCaptureHeader]: 'Traffic Capture: {0}',
    [virtualServiceInputLabel]: 'Select Virtual Service',
    [createVirtualServiceButtonLabel]: 'Create Virtual Service',
    [virtualServiceInputPlaceholder]: 'Select a Virtual Service',
    [filterToCaptureHeader]: 'Filter to Capture',
    [allTrafficRadioInputLabel]: 'All Traffic',
    [clientIpRangeSubnetMaskRadioInputLabel]: 'Choose Client IP, IP Range, Subnet Mask',
    [debugIpPlaceholder]: 'IP Address, IP Range, Subnet Mask',
    [numberPacketsPerCoreInputLabel]: 'Number of Packets per Core',
    [durationInputLabel]: 'Duration',
    [packetsInputInnerText]: 'Packets',
    [minutesInputInnerText]: 'Minutes',
    [packetsSizeInputLabel]: 'Size of Packets',
    [packetsSizeInputPlaceholder]: 'Packet Size',
    [bytesInputInnerText]: 'Bytes',
    [advancedSettingsHeader]: 'Advanced Settings',
    [packetFlowsToCaptureLabel]: 'Packet flows to capture',
    [healthMonitorAndDataRadioInputLabel]: 'Health monitor and data',
    [healthMonitorOnlyRadioInputLabel]: 'Health monitor only',
    [dataOnlyRadioInputLabel]: 'Data only',
    [captureSessionKeyCheckboxLabel]: 'Capture Session Key',
    [startCaptureButtonLabel]: 'Start Capture',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicyallowlistrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const editAllowlistRuleHeader = `${prefix}.editAllowlistRuleHeader`;
export const newAllowlistRuleHeader = `${prefix}.newAllowlistRuleHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const ruleEnableInputLabel = `${prefix}.ruleEnableInputLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const samplingPercentInputLabel = `${prefix}.samplingPercentInputLabel`;
export const matchRequiredInputLabel = `${prefix}.matchRequiredInputLabel`;
export const matchInputLabel = `${prefix}.matchInputLabel`;
export const actionHeader = `${prefix}.actionHeader`;
export const actionInputLabel = `${prefix}.actionInputLabel`;
export const actionInputPlaceholder = `${prefix}.actionInputPlaceholder`;

export const ENGLISH = {
    [editAllowlistRuleHeader]: 'Edit Allowlist Rule: {0}',
    [newAllowlistRuleHeader]: 'New Allowlist Rule: {0}',
    [generalSectionHeader]: 'General',
    [ruleEnableInputLabel]: 'Rule {0}',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [samplingPercentInputLabel]: 'Sampling',
    [matchRequiredInputLabel]: 'At least one match is required.',
    [matchInputLabel]: 'Match ({0})',
    [actionHeader]: 'Action',
    [actionInputLabel]: 'Action',
    [actionInputPlaceholder]: 'Select Action',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicypsmgroupmodal';
const prefix = `${moduleName}.${componentName}`;

export const editPositiveSecurityGroupHeader = `${prefix}.editPositiveSecurityGroupHeader`;
export const newPositiveSecurityGroupHeader = `${prefix}.newPositiveSecurityGroupHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const groupEnableLabel = `${prefix}.groupEnableLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const learningGroupCheckboxLabel = `${prefix}.learningGroupCheckboxLabel`;
export const hitActionInputLabel = `${prefix}.hitActionInputLabel`;
export const hitActionInputPlaceholder = `${prefix}.hitActionInputPlaceholder`;
export const missActionInputLabel = `${prefix}.missActionInputLabel`;
export const missActionInputPlaceholder = `${prefix}.missActionInputPlaceholder`;
export const locationsSectionHeader = `${prefix}.locationsSectionHeader`;

export const ENGLISH = {
    [editPositiveSecurityGroupHeader]: 'Edit Positive Security Group: {0}',
    [newPositiveSecurityGroupHeader]: 'New Positive Security Group: {0}',
    [generalSectionHeader]: 'General',
    [groupEnableLabel]: 'Group {0}',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [learningGroupCheckboxLabel]: 'Learning Group',
    [hitActionInputLabel]: 'Hit Action',
    [hitActionInputPlaceholder]: 'Select Hit Action',
    [missActionInputLabel]: 'Miss Action',
    [missActionInputPlaceholder]: 'Select Miss Action',
    [locationsSectionHeader]: 'Locations',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafrulegroups';
const prefix = `${moduleName}.${componentName}`;

export const addGroupButtonLabel = `${prefix}.addGroupButtonLabel`;
export const createGroupButtonLabel = `${prefix}.createGroupButtonLabel`;

export const ENGLISH = {
    [addGroupButtonLabel]: 'Add Group',
    [createGroupButtonLabel]: 'Create Group',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafrulegroup';
const prefix = `${moduleName}.${componentName}`;

export const groupLabel = `${prefix}.groupLabel`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;
export const createRuleButtonLabel = `${prefix}.createRuleButtonLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const deactivatedLabel = `${prefix}.deactivatedLabel`;
export const mixedEnabledLabel = `${prefix}.mixedEnabledLabel`;
export const statusLabel = `${prefix}.statusLabel`;

export const ENGLISH = {
    [groupLabel]: 'Group',
    [addRuleButtonLabel]: 'Add Rule',
    [createRuleButtonLabel]: 'Create Rule',
    [enabledLabel]: 'Enabled',
    [deactivatedLabel]: 'Deactivated',
    [mixedEnabledLabel]: 'Mixed (Enabled & Deactivated Rules)',
    [statusLabel]: 'Status',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafrule';
const prefix = `${moduleName}.${componentName}`;

export const ruleWithCustomModeAndExceptionsConfiguredMessage = `${prefix}.ruleWithCustomModeAndExceptionsConfiguredMessage`;
export const ruleWithExceptionsConfiguredMessage = `${prefix}.ruleWithExceptionsConfiguredMessage`;
export const ruleWithCustomModeConfiguredMessage = `${prefix}.ruleWithCustomModeConfiguredMessage`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const showRuleButtonLabel = `${prefix}.showRuleButtonLabel`;
export const hideRuleButtonLabel = `${prefix}.hideRuleButtonLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const deactivatedLabel = `${prefix}.deactivatedLabel`;
export const statusLabel = `${prefix}.statusLabel`;
export const ruleModeLabel = `${prefix}.ruleModeLabel`;
export const ruleLabel = `${prefix}.ruleLabel`;

export const ENGLISH = {
    [ruleWithCustomModeAndExceptionsConfiguredMessage]: 'This rule has a custom mode and exceptions configured.',
    [ruleWithExceptionsConfiguredMessage]: 'This rule has exceptions configured.',
    [ruleWithCustomModeConfiguredMessage]: 'This rule has a custom mode configured.',
    [emptyDataLabel]: 'NA',
    [showRuleButtonLabel]: 'Show Rule',
    [hideRuleButtonLabel]: 'Hide Rule',
    [enabledLabel]: 'Enabled',
    [deactivatedLabel]: 'Deactivated',
    [statusLabel]: 'Status',
    [ruleModeLabel]: 'Rule Mode',
    [ruleLabel]: 'Rule',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicypsmrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const wafModeOptionLabel = `${prefix}.wafModeOptionLabel`;
export const wafModeOptionDescription = `${prefix}.wafModeOptionDescription`;
export const editArgumentRuleHeader = `${prefix}.editArgumentRuleHeader`;
export const newArgumentRuleHeader = `${prefix}.newArgumentRuleHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const ruleEnableInputLabel = `${prefix}.ruleEnableInputLabel`;
export const ruleIdInputLabel = `${prefix}.ruleIdInputLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const paranoiaLevelInputLabel = `${prefix}.paranoiaLevelInputLabel`;
export const paranoiaLevelInputPlaceholder = `${prefix}.paranoiaLevelInputPlaceholder`;
export const matchElementsHeader = `${prefix}.matchElementsHeader`;
export const argumentsCaseSensitiveCheckboxLabel = `${prefix}.argumentsCaseSensitiveCheckboxLabel`;
export const matchValueMaxLengthInputLabel = `${prefix}.matchValueMaxLengthInputLabel`;
export const valueLabel = `${prefix}.valueLabel`;
export const patternRadioInputLabel = `${prefix}.patternRadioInputLabel`;
export const stringGroupKeyRadioInputLabel = `${prefix}.stringGroupKeyRadioInputLabel`;
export const patternInputLabel = `${prefix}.patternInputLabel`;
export const stringGroupInputLabel = `${prefix}.stringGroupInputLabel`;
export const stringGroupInputPlaceholder = `${prefix}.stringGroupInputPlaceholder`;
export const keyInputLabel = `${prefix}.keyInputLabel`;

export const ENGLISH = {
    [wafModeOptionLabel]: 'Use Policy Mode',
    [wafModeOptionDescription]: 'Use the policy mode.',
    [editArgumentRuleHeader]: 'Edit Argument Rule: {0}',
    [newArgumentRuleHeader]: 'New Argument Rule: {0}',
    [generalSectionHeader]: 'General',
    [ruleEnableInputLabel]: 'Rule {0}',
    [ruleIdInputLabel]: 'Rule ID',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [paranoiaLevelInputLabel]: 'Filter Rule Paranoia Level',
    [paranoiaLevelInputPlaceholder]: 'Select Paranoia Level',
    [matchElementsHeader]: 'Match Elements',
    [argumentsCaseSensitiveCheckboxLabel]: 'Arguments Case Sensitive',
    [matchValueMaxLengthInputLabel]: 'Value Max Length',
    [patternRadioInputLabel]: 'Pattern',
    [stringGroupKeyRadioInputLabel]: 'String GroupKey',
    [patternInputLabel]: 'Pattern',
    [stringGroupInputLabel]: 'String Group',
    [stringGroupInputPlaceholder]: 'Select String Group',
    [keyInputLabel]: 'Key',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpolicypsmlocationmodal';
const prefix = `${moduleName}.${componentName}`;

export const editLocationHeader = `${prefix}.editLocationHeader`;
export const newLocationHeader = `${prefix}.newLocationHeader`;
export const generalSectionHeader = `${prefix}.generalSectionHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const matchHeader = `${prefix}.matchHeader`;
export const argumentRulesHeader = `${prefix}.argumentRulesHeader`;

export const ENGLISH = {
    [editLocationHeader]: 'Edit Location: {0}',
    [newLocationHeader]: 'New Location: {0}',
    [generalSectionHeader]: 'General',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [matchHeader]: 'Match ({0})',
    [argumentRulesHeader]: 'Argument Rules ({0})',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpsmmatchelementconfigform';
const prefix = `${moduleName}.${componentName}`;

export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const criteriaInputLabel = `${prefix}.criteriaInputLabel`;
export const criteriaInputPlaceholder = `${prefix}.criteriaInputPlaceholder`;
export const subElementInputLabel = `${prefix}.subElementInputLabel`;
export const excludedCheckboxLabel = `${prefix}.excludedCheckboxLabel`;
export const caseSensitiveCheckboxLabel = `${prefix}.caseSensitiveCheckboxLabel`;

export const ENGLISH = {
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Select Name',
    [criteriaInputLabel]: 'Criteria',
    [criteriaInputPlaceholder]: 'Select Criteria',
    [subElementInputLabel]: 'Sub Element',
    [excludedCheckboxLabel]: 'Excluded',
    [caseSensitiveCheckboxLabel]: 'Case Sensitive',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafpsmmatchelementconfig';
const prefix = `${moduleName}.${componentName}`;

export const addMatchElementButtonLabel = `${prefix}.addMatchElementButtonLabel`;

export const ENGLISH = {
    [addMatchElementButtonLabel]: 'Add Match Element',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicetrafficcapturestatus';
const prefix = `${moduleName}.${componentName}`;

export const virtualServiceHeader = `${prefix}.virtualServiceHeader`;
export const noVirtualServiceSelectedHeader = `${prefix}.noVirtualServiceSelectedHeader`;
export const filterToCaptureInputLabel = `${prefix}.filterToCaptureInputLabel`;
export const packetsCaptureInputLabel = `${prefix}.packetsCaptureInputLabel`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const captureSettingsHeader = `${prefix}.captureSettingsHeader`;
export const durationInputLabel = `${prefix}.durationInputLabel`;
export const numberOfPacketsPerCoreInputLabel = `${prefix}.numberOfPacketsPerCoreInputLabel`;
export const durationInMinutesHeader = `${prefix}.durationInMinutesHeader`;
export const bytesPerPacketInputLabel = `${prefix}.bytesPerPacketInputLabel`;
export const emptyLabel = `${prefix}.emptyLabel`;

export const ENGLISH = {
    [virtualServiceHeader]: 'Virtual Service',
    [noVirtualServiceSelectedHeader]: 'No Virtual Service Selected',
    [filterToCaptureInputLabel]: 'Filter to capture',
    [packetsCaptureInputLabel]: 'Packets Captured',
    [emptyDataLabel]: 'None',
    [captureSettingsHeader]: 'Capture Settings',
    [durationInputLabel]: 'Duration',
    [numberOfPacketsPerCoreInputLabel]: 'Number of Packets per Core',
    [durationInMinutesHeader]: '{0} minute(s)',
    [bytesPerPacketInputLabel]: 'Bytes per packet',
    [emptyLabel]: 'NA',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'userlist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitileUsername = `${prefix}.columnTitileUsername`;
export const columnTitileSuperUser = `${prefix}.columnTitileSuperUser`;
export const columnTitileStatus = `${prefix}.columnTitileStatus`;
export const columnTitileFullName = `${prefix}.columnTitileFullName`;
export const columnTitileEmail = `${prefix}.columnTitileEmail`;
export const columnTitileTenant = `${prefix}.columnTitileTenant`;
export const columnTitileLastSignedIn = `${prefix}.columnTitileLastSignedIn`;
export const gridMultiActionDeleteLabel = `${prefix}.gridMultiActionDeleteLabel`;
export const gridMultiActionActivateLabel = `${prefix}.gridMultiActionActivateLabel`;
export const gridMultiActionSuspendLabel = `${prefix}.gridMultiActionSuspendLabel`;
export const onlineSincePrefix = `${prefix}.onlineSincePrefix`;
export const lastLoginPrefix = `${prefix}.lastLoginPrefix`;

export const ENGLISH = {
    [columnTitileUsername]: 'Username',
    [columnTitileSuperUser]: 'Super User',
    [columnTitileStatus]: 'Status',
    [columnTitileFullName]: 'Full Name',
    [columnTitileEmail]: 'Email',
    [columnTitileTenant]: 'Tenant (Role)',
    [columnTitileLastSignedIn]: 'Last Signed In',
    [gridMultiActionDeleteLabel]: 'Delete',
    [gridMultiActionActivateLabel]: 'Activate',
    [gridMultiActionSuspendLabel]: 'Suspend',
    [onlineSincePrefix]: 'Online since ',
    [lastLoginPrefix]: 'Last login ',
};const moduleName = 'ajslegacy';
const componentName = 'alertconfiggridexpander';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleEvents = `${prefix}.columnTitleEvents`;
export const columnTitleMetrics = `${prefix}.columnTitleMetrics`;

export const ENGLISH = {
    [columnTitleType]: 'Type',
    [columnTitleEvents]: 'Event(s)',
    [columnTitleMetrics]: 'Metric(s)',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsntppage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleKeyNumber = `${prefix}.columnTitleKeyNumber`;
export const columnTitleAlgorithm = `${prefix}.columnTitleAlgorithm`;
export const columnTitleKey = `${prefix}.columnTitleKey`;
export const columnTitleServer = `${prefix}.columnTitleServer`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const dnsResolverLabel = `${prefix}.dnsResolverLabel`;
export const dnsSearchDomainLabel = `${prefix}.dnsSearchDomainLabel`;
export const ntpAuthenticationKeysLabel = `${prefix}.ntpAuthenticationKeysLabel`;
export const emptyObjectLabel = `${prefix}.emptyObjectLabel`;
export const ntpServersLabel = `${prefix}.ntpServersLabel`;

export const ENGLISH = {
    [columnTitleKeyNumber]: 'Key Number',
    [columnTitleAlgorithm]: 'Algorithm',
    [columnTitleKey]: 'Key',
    [columnTitleServer]: 'Server',
    [emptyDataLabel]: 'NA',
    [dnsResolverLabel]: 'DNS Resolver(s)',
    [dnsSearchDomainLabel]: 'DNS Search Domain',
    [ntpAuthenticationKeysLabel]: 'NTP Authentication Keys',
    [emptyObjectLabel]: 'None',
    [ntpServersLabel]: 'NTP Servers',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'licensingpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleDescription = `${prefix}.columnTitleDescription`;
export const columnTitleLicenseId = `${prefix}.columnTitleLicenseId`;
export const columnTitleTier = `${prefix}.columnTitleTier`;
export const columnTitleServiceCores = `${prefix}.columnTitleServiceCores`;
export const columnTitleSeSockets = `${prefix}.columnTitleSeSockets`;
export const columnTitleExpiry = `${prefix}.columnTitleExpiry`;
export const expiredLabel = `${prefix}.expiredLabel`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const licensesHeader = `${prefix}.licensesHeader`;

export const ENGLISH = {
    [columnTitleDescription]: 'Description',
    [columnTitleLicenseId]: 'License ID',
    [columnTitleTier]: 'Tier',
    [columnTitleServiceCores]: 'Service Cores',
    [columnTitleSeSockets]: 'Service Engine Sockets',
    [columnTitleExpiry]: 'Expiry',
    [expiredLabel]: 'Expired',
    [actionTitleDelete]: 'Delete',
    [licensesHeader]: 'Licenses',
};const moduleName = 'ajslegacy';
const componentName = 'gslbservicelist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAppDomainName = `${prefix}.columnTitleAppDomainName`;
export const columnTitleEnableState = `${prefix}.columnTitleEnableState`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnSitePersistenceStatus = `${prefix}.columnSitePersistenceStatus`;
export const actionTitleBasicSetup = `${prefix}.actionTitleBasicSetup`;
export const actionTitleAdvancedSetup = `${prefix}.actionTitleAdvancedSetup`;
export const gslbSiteLeaderMessage = `${prefix}.gslbSiteLeaderMessage`;
export const gslbConfigPermissionsMessage = `${prefix}.gslbConfigPermissionsMessage`;
export const enableTitle = `${prefix}.enableTitle`;
export const disableTitle = `${prefix}.disableTitle`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAppDomainName]: 'App Domain Name',
    [columnTitleEnableState]: 'Enable State',
    [columnTitleStatus]: 'Status',
    [columnSitePersistenceStatus]: 'Site Persistence Status',
    [actionTitleBasicSetup]: 'Basic Setup',
    [actionTitleAdvancedSetup]: 'Advanced Setup',
    [gslbSiteLeaderMessage]: 'GSLB Site "{0}" is the leader',
    [gslbConfigPermissionsMessage]: 'GSLB Config permissions must be set to read or write to create a GSLB Service',
    [enableTitle]: 'Enable',
    [disableTitle]: 'Deactivate',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'licensesummary';
const prefix = `${moduleName}.${componentName}`;

export const unlockMoreFeaturesMessage = `${prefix}.unlockMoreFeaturesMessage`;
export const licensingLabel = `${prefix}.licensingLabel`;
export const learnMoreBtnLabel = `${prefix}.learnMoreBtnLabel`;

export const ENGLISH = {
    [unlockMoreFeaturesMessage]: 'Unlock more features and possibilities with Enterprise edition.',
    [licensingLabel]: 'Licensing',
    [learnMoreBtnLabel]: 'Learn More',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'infrastructuredetail';
const prefix = `${moduleName}.${componentName}`;

export const defaultCloudHeader = `${prefix}.defaultCloudHeader`;
export const selectCloudDropdownLabel = `${prefix}.selectCloudDropdownLabel`;
export const selectCloudDropdownPlaceholder = `${prefix}.selectCloudDropdownPlaceholder`;

export const ENGLISH = {
    [defaultCloudHeader]: 'DefaultCloud',
    [selectCloudDropdownLabel]: 'Select Cloud:',
    [selectCloudDropdownPlaceholder]: 'Select Cloud',
};const moduleName = 'ajslegacy';
const componentName = 'uploadgeofilespage';
const prefix = `${moduleName}.${componentName}`;

export const uploadGeoFileMessage = `${prefix}.uploadGeoFileMessage`;
export const selectFileBtnLabel = `${prefix}.selectFileBtnLabel`;
export const selectFormatInputPlaceholder = `${prefix}.selectFormatInputPlaceholder`;
export const uploadFileBtnLabel = `${prefix}.uploadFileBtnLabel`;
export const cancelUploadBtnLabel = `${prefix}.cancelUploadBtnLabel`;

export const ENGLISH = {
    [uploadGeoFileMessage]: 'Please select the Geo file to upload.',
    [selectFileBtnLabel]: 'Select File',
    [selectFormatInputPlaceholder]: 'Select Format',
    [uploadFileBtnLabel]: 'Upload File',
    [cancelUploadBtnLabel]: 'Cancel Upload',
};const moduleName = 'ajslegacy';
const componentName = 'geoprofilepage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleEntries = `${prefix}.columnTitleEntries`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleEntries]: 'Entries (priority)',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'gatewaymonitorlist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const vrfContextHeader = `${prefix}.vrfContextHeader`;

export const ENGLISH = {
    [columnTitleIpAddress]: 'IP Address',
    [vrfContextHeader]: 'VRF Context: {0}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'serviceenginegrouplistexpander';
const prefix = `${moduleName}.${componentName}`;

export const serviceEnginesHeader = `${prefix}.serviceEnginesHeader`;
export const virtualServicesHeader = `${prefix}.virtualServicesHeader`;
export const emptyListMessage = `${prefix}.emptyListMessage`;

export const ENGLISH = {
    [serviceEnginesHeader]: 'Service Engines',
    [virtualServicesHeader]: 'Virtual Services',
    [emptyListMessage]: 'None',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'serviceenginegrouplist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const columnTitleServiceEnginesNumber = `${prefix}.columnTitleServiceEnginesNumber`;
export const columnTitleServiceEnginesMaxNumber = `${prefix}.columnTitleServiceEnginesMaxNumber`;
export const columnTitleVirtualServicesNumber = `${prefix}.columnTitleVirtualServicesNumber`;
export const columnTitleVsPerSeMaxNumber = `${prefix}.columnTitleVsPerSeMaxNumber`;
export const columnTitleHaMode = `${prefix}.columnTitleHaMode`;
export const editBtnTitle = `${prefix}.editBtnTitle`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleVersion]: 'Version',
    [columnTitleServiceEnginesNumber]: '# Service Engines',
    [columnTitleServiceEnginesMaxNumber]: 'Maximum Number of Service Engines',
    [columnTitleVirtualServicesNumber]: '# Virtual Services',
    [columnTitleVsPerSeMaxNumber]: 'Maximum Number of Virtual Services per Service Engine',
    [columnTitleHaMode]: 'HA Mode',
    [editBtnTitle]: 'edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'serviceenginelist';
const prefix = `${moduleName}.${componentName}`;

export const rebootBtnLabel = `${prefix}.rebootBtnLabel`;
export const rebootConfirmMessage = `${prefix}.rebootConfirmMessage`;
export const enableBtnLabel = `${prefix}.enableBtnLabel`;
export const disableBtnLabel = `${prefix}.disableBtnLabel`;
export const disabelForVsPlacementBtnLabel = `${prefix}.disabelForVsPlacementBtnLabel`;
export const deleteBtnLabel = `${prefix}.deleteBtnLabel`;
export const columnTitleEnableState = `${prefix}.columnTitleEnableState`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleHealth = `${prefix}.columnTitleHealth`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnTitleUptime = `${prefix}.columnTitleUptime`;
export const columnTitleSeGroup = `${prefix}.columnTitleSeGroup`;
export const columnTitleManagementIp = `${prefix}.columnTitleManagementIp`;
export const columnTitleVirtualServices = `${prefix}.columnTitleVirtualServices`;
export const columnTitleAvailabilityZone = `${prefix}.columnTitleAvailabilityZone`;
export const columnTitleHost = `${prefix}.columnTitleHost`;
export const columnTitleAlerts = `${prefix}.columnTitleAlerts`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const tryForceDeleteConfirmMessage = `${prefix}.tryForceDeleteConfirmMessage`;
export const naLabel = `${prefix}.naLabel`;
export const virtualServicesHeader = `${prefix}.virtualServicesHeader`;
export const emptyListMessage = `${prefix}.emptyListMessage`;

export const ENGLISH = {
    [rebootBtnLabel]: 'Reboot',
    [rebootConfirmMessage]: 'Reboot selected Service Engine(s)?',
    [enableBtnLabel]: 'Enable',
    [disableBtnLabel]: 'Disable',
    [disabelForVsPlacementBtnLabel]: 'Disable for VS Placement',
    [deleteBtnLabel]: 'delete',
    [columnTitleEnableState]: 'Enable State',
    [columnTitleName]: 'Name',
    [columnTitleHealth]: 'Health',
    [columnTitleStatus]: 'Status',
    [columnTitleUptime]: 'Uptime',
    [columnTitleSeGroup]: 'Service Engine Group',
    [columnTitleManagementIp]: 'Management IP',
    [columnTitleVirtualServices]: '# Virtual Services',
    [columnTitleAvailabilityZone]: 'Availability Zone',
    [columnTitleHost]: 'Host',
    [columnTitleAlerts]: 'Alerts',
    [columnTitleVersion]: 'Version',
    [tryForceDeleteConfirmMessage]: '{0}. Try force delete?',
    [naLabel]: 'NA',
    [virtualServicesHeader]: 'Virtual Services',
    [emptyListMessage]: 'None',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'protocolparserscriptslist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'staticroutelist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitlePrefix = `${prefix}.columnTitlePrefix`;
export const columnTitleNextHop = `${prefix}.columnTitleNextHop`;
export const defaultGatewayLabel = `${prefix}.defaultGatewayLabel`;
export const editBtnTooltip = `${prefix}.editBtnTooltip`;
export const deleteBtnTooltip = `${prefix}.deleteBtnTooltip`;
export const vrfContextHeader = `${prefix}.vrfContextHeader`;

export const ENGLISH = {
    [columnTitlePrefix]: 'Prefix',
    [columnTitleNextHop]: 'Next Hop',
    [defaultGatewayLabel]: 'Default Gateway',
    [editBtnTooltip]: 'Edit',
    [deleteBtnTooltip]: 'Delete',
    [vrfContextHeader]: 'VRF Context: {0}',
};const moduleName = 'ajslegacy';
const componentName = 'errorpageprofile';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleErrorPages = `${prefix}.columnTitleErrorPages`;
export const totalPagesLabel = `${prefix}.totalPagesLabel`;
export const statusCodesLabel = `${prefix}.statusCodesLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleErrorPages]: 'Error Pages',
    [totalPagesLabel]: 'Total Pages: {0}',
    [statusCodesLabel]: 'Status Codes: {0}',
};const moduleName = 'ajslegacy';
const componentName = 'natpolicylist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleRulesCount = `${prefix}.columnTitleRulesCount`;
export const descriptonDataLabel = `${prefix}.descriptonDataLabel`;
export const emptyObjectDataLabel = `${prefix}.emptyObjectDataLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleRulesCount]: '# Rules',
    [descriptonDataLabel]: 'Description',
    [emptyObjectDataLabel]: 'NA',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'vrfcontextlist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'applicationprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [actionBtnEdit]: 'Edit',
};const moduleName = 'ajslegacy';
const componentName = 'authprofileverifysaml';
const prefix = `${moduleName}.${componentName}`;

export const serviceProviderSettingsHeader = `${prefix}.serviceProviderSettingsHeader`;
export const serviceProviderNodeHeader = `${prefix}.serviceProviderNodeHeader`;
export const entityIdInputLabel = `${prefix}.entityIdInputLabel`;
export const singleSignonUrlInputLabel = `${prefix}.singleSignonUrlInputLabel`;

export const ENGLISH = {
    [serviceProviderSettingsHeader]: 'Service Provider Settings',
    [serviceProviderNodeHeader]: 'Service Provider Node',
    [entityIdInputLabel]: 'Entity ID',
    [singleSignonUrlInputLabel]: 'Single Sign on URL',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'customipam';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleScript = `${prefix}.columnTitleScript`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleScript]: 'Script',
};const moduleName = 'ajslegacy';
const componentName = 'authprofilepage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const actionBtnVerify = `${prefix}.actionBtnVerify`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [actionBtnVerify]: 'Verify',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'persistenceprofilelistpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [actionBtnEdit]: 'Edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'ipamdnsprofilesexpander';
const prefix = `${moduleName}.${componentName}`;

export const usableNetworkHeader = `${prefix}.usableNetworkHeader`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const usableSubnetHeader = `${prefix}.usableSubnetHeader`;
export const usableDomainHeader = `${prefix}.usableDomainHeader`;

export const ENGLISH = {
    [usableNetworkHeader]: 'Usable Network',
    [emptyDataLabel]: 'None',
    [usableSubnetHeader]: 'Usable Subnet',
    [usableDomainHeader]: 'Usable Domain',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'ipamdnsprofilespage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const btnLabelIpamProfile = `${prefix}.btnLabelIpamProfile`;
export const btnLabelDnsProfile = `${prefix}.btnLabelDnsProfile`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [btnLabelIpamProfile]: 'IPAM Profile',
    [btnLabelDnsProfile]: 'DNS Profile',
};const moduleName = 'ajslegacy';
const componentName = 'wafpolicylist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'trafficcloneprofilepage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleCloud = `${prefix}.columnTitleCloud`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleCloud]: 'Cloud',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'waftophitslogslistmodal';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleClientIp = `${prefix}.columnTitleClientIp`;
export const columnTitlePath = `${prefix}.columnTitlePath`;
export const columnTitleRequest = `${prefix}.columnTitleRequest`;
export const columnTitleResponse = `${prefix}.columnTitleResponse`;
export const columnTitleLength = `${prefix}.columnTitleLength`;
export const columnTitleDuration = `${prefix}.columnTitleDuration`;
export const columnTitleTotalTime = `${prefix}.columnTitleTotalTime`;
export const modalHeader = `${prefix}.modalHeader`;
export const openLogsPageButtonLabel = `${prefix}.openLogsPageButtonLabel`;

export const ENGLISH = {
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleClientIp]: 'Client IP',
    [columnTitlePath]: 'Path',
    [columnTitleRequest]: 'Request',
    [columnTitleResponse]: 'Response',
    [columnTitleLength]: 'Length',
    [columnTitleDuration]: 'Duration',
    [columnTitleTotalTime]: 'Total Time',
    [modalHeader]: 'Displaying {0} logs',
    [openLogsPageButtonLabel]: 'Open in Logs',
};const moduleName = 'ajslegacy';
const componentName = 'pingaccessagentprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitlePool = `${prefix}.columnTitlePool`;

export const ENGLISH = {
    [actionBtnDelete]: 'Delete',
    [columnTitleName]: 'Name',
    [columnTitlePool]: 'Pool',
};const moduleName = 'ajslegacy';
const componentName = 'ssopolicylist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAuthProfile = `${prefix}.columnTitleAuthProfile`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAuthProfile]: 'Auth Profile',
};const moduleName = 'ajslegacy';
const componentName = 'wafprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};const moduleName = 'ajslegacy';
const componentName = 'poolgroupdeploymentpolicypage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleTargetTrafficRatio = `${prefix}.columnTitleTargetTrafficRatio`;
export const columnTitleDuration = `${prefix}.columnTitleDuration`;
export const columnTitleRamupRatio = `${prefix}.columnTitleRamupRatio`;
export const columnTitleRules = `${prefix}.columnTitleRules`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleTargetTrafficRatio]: 'Target Traffic Ratio',
    [columnTitleDuration]: 'Duration',
    [columnTitleRamupRatio]: 'Ramup Ratio',
    [columnTitleRules]: 'Rules',
};const moduleName = 'ajslegacy';
const componentName = 'wafpolicypsmgrouplistpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleFlagged = `${prefix}.columnTitleFlagged`;
export const columnTitleEvaluated = `${prefix}.columnTitleEvaluated`;
export const actionTitleEdit = `${prefix}.actionTitleEdit`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleFlagged]: 'Flagged',
    [columnTitleEvaluated]: 'Evaluated',
    [actionTitleEdit]: 'Edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wafcrslist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleReleaseDate = `${prefix}.columnTitleReleaseDate`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const newReleaseLabel = `${prefix}.newReleaseLabel`;
export const downloadButtonLabel = `${prefix}.downloadButtonLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleReleaseDate]: 'Release Date',
    [actionTitleDelete]: 'Delete',
    [newReleaseLabel]: 'New Release! {0} Available.',
    [downloadButtonLabel]: 'Download Now',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsntpmodal';
const prefix = `${moduleName}.${componentName}`;

export const updateSystemSettingsHeader = `${prefix}.updateSystemSettingsHeader`;
export const dnsNtpSettingsHeader = `${prefix}.dnsNtpSettingsHeader`;
export const dnsResolverInputLabel = `${prefix}.dnsResolverInputLabel`;
export const dnsSearchDomainInputLabel = `${prefix}.dnsSearchDomainInputLabel`;
export const ntpAuthenticationKeysHeader = `${prefix}.ntpAuthenticationKeysHeader`;
export const keyNumberInputLabel = `${prefix}.keyNumberInputLabel`;
export const algorithmInputLabel = `${prefix}.algorithmInputLabel`;
export const keyInputLabel = `${prefix}.keyInputLabel`;
export const removeNtpAuthenticationKeyBtnLabel = `${prefix}.removeNtpAuthenticationKeyBtnLabel`;
export const addNtpAuthenticationKeyLinkLabel = `${prefix}.addNtpAuthenticationKeyLinkLabel`;
export const ntpServersHeader = `${prefix}.ntpServersHeader`;
export const keyNumberInputPlaceholder = `${prefix}.keyNumberInputPlaceholder`;
export const serverInputLabel = `${prefix}.serverInputLabel`;
export const removeNtpServerBtnLabel = `${prefix}.removeNtpServerBtnLabel`;
export const addNtpServerLinkLabel = `${prefix}.addNtpServerLinkLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;

export const ENGLISH = {
    [updateSystemSettingsHeader]: 'Update System Settings',
    [dnsNtpSettingsHeader]: 'DNS  NTP Settings',
    [dnsResolverInputLabel]: 'DNS Resolver(s)',
    [dnsSearchDomainInputLabel]: 'DNS Search Domain',
    [ntpAuthenticationKeysHeader]: 'NTP Authentication Keys',
    [keyNumberInputLabel]: 'Key Number',
    [algorithmInputLabel]: 'Algorithm',
    [keyInputLabel]: 'Key',
    [removeNtpAuthenticationKeyBtnLabel]: 'Remove NTP Authentication Key',
    [addNtpAuthenticationKeyLinkLabel]: '+ Add NTP Authentication Key',
    [ntpServersHeader]: 'NTP Servers',
    [keyNumberInputPlaceholder]: 'Select Key Number for NTP Authentication',
    [serverInputLabel]: 'Server',
    [removeNtpServerBtnLabel]: 'Remove NTP Server',
    [addNtpServerLinkLabel]: '+ Add NTP Server',
    [saveBtnLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'sensitivefieldrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const ruleToggleSwitchTooltip = `${prefix}.ruleToggleSwitchTooltip`;
export const matchHeader = `${prefix}.matchHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const enableActionInputLabel = `${prefix}.enableActionInputLabel`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Sensitive Field Rule: {0}',
    [modalHeaderNew]: 'New Sensitive Field Rule: {0}',
    [nameInputLabel]: 'Name',
    [ruleToggleSwitchTooltip]: 'Click to {0} this rule',
    [matchHeader]: 'Match',
    [actionHeader]: 'Action',
    [enableActionInputLabel]: 'Enable Action',
    [submitButtonLabel]: 'Submit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'analyticsprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const gatherAnalyticsInputLabel = `${prefix}.gatherAnalyticsInputLabel`;
export const filedNameInputPlaceholder = `${prefix}.filedNameInputPlaceholder`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const httpAnalyticsHeader = `${prefix}.httpAnalyticsHeader`;
export const apdexResponseThresholdHeader = `${prefix}.apdexResponseThresholdHeader`;
export const satisfactoryLatencyThresholdInputLabel = `${prefix}.satisfactoryLatencyThresholdInputLabel`;
export const msInnerText = `${prefix}.msInnerText`;
export const toleratedLatencyFactorInputLabel = `${prefix}.toleratedLatencyFactorInputLabel`;
export const multiplierPlaceholder = `${prefix}.multiplierPlaceholder`;
export const apdexClientPageloadHeader = `${prefix}.apdexClientPageloadHeader`;
export const apdexServerResponseHeader = `${prefix}.apdexServerResponseHeader`;
export const networkAnalyticsHeader = `${prefix}.networkAnalyticsHeader`;
export const clientConnectionApdexLossyConnectionThresholdHeader = `${prefix}.clientConnectionApdexLossyConnectionThresholdHeader`;
export const connLossyTotalRetransmitThersholdInputLabel = `${prefix}.connLossyTotalRetransmitThersholdInputLabel`;
export const connServerLossyTotalRetransmitThersholdInputLabel = `${prefix}.connServerLossyTotalRetransmitThersholdInputLabel`;
export const connLossyTimeoutRetransmitThresholdInputLabel = `${prefix}.connLossyTimeoutRetransmitThresholdInputLabel`;
export const connServerLossyTimeoutRetransmitThresholdInputLabel = `${prefix}.connServerLossyTimeoutRetransmitThresholdInputLabel`;
export const connLossyOutOfOrderThresholdInputLabel = `${prefix}.connLossyOutOfOrderThresholdInputLabel`;
export const connServerLossyOutOfOrderThresholdInputLabel = `${prefix}.connServerLossyOutOfOrderThresholdInputLabel`;
export const connLossyZeroWindowSizeEventThresholdInputLabel = `${prefix}.connLossyZeroWindowSizeEventThresholdInputLabel`;
export const connServerLossyZeroWindowSizeEventThresholdInputLabel = `${prefix}.connServerLossyZeroWindowSizeEventThresholdInputLabel`;
export const serverConnectionApdexLossyConnectionThresholdHeader = `${prefix}.serverConnectionApdexLossyConnectionThresholdHeader`;
export const excludeNetworkErrorsHeader = `${prefix}.excludeNetworkErrorsHeader`;
export const excludeTcpResetAsErrorInputLabel = `${prefix}.excludeTcpResetAsErrorInputLabel`;
export const excludePersistenceChangeAsErrorInputLabel = `${prefix}.excludePersistenceChangeAsErrorInputLabel`;
export const excludeClientCloseBeforeRequestAsErrorInputLabel = `${prefix}.excludeClientCloseBeforeRequestAsErrorInputLabel`;
export const excludeServerTcpResetAsErrorInputLabel = `${prefix}.excludeServerTcpResetAsErrorInputLabel`;
export const excludeDnsErrorsHeader = `${prefix}.excludeDnsErrorsHeader`;
export const excludeInvalidDnsQueryAsErrorInputLabel = `${prefix}.excludeInvalidDnsQueryAsErrorInputLabel`;
export const excludeInvalidDnsDomainAsErrorInputLabel = `${prefix}.excludeInvalidDnsDomainAsErrorInputLabel`;
export const excludeNoDnsRecordAsErrorInputLabel = `${prefix}.excludeNoDnsRecordAsErrorInputLabel`;
export const excludeGslbDownAsErrorInputLabel = `${prefix}.excludeGslbDownAsErrorInputLabel`;
export const excludeNoValidGslbMemberAsErrorInputLabel = `${prefix}.excludeNoValidGslbMemberAsErrorInputLabel`;
export const excludeUnsupportedDnsQueryAsErrorInputLabel = `${prefix}.excludeUnsupportedDnsQueryAsErrorInputLabel`;
export const excludeServerDnsErrorAsErrorInputLabel = `${prefix}.excludeServerDnsErrorAsErrorInputLabel`;
export const excludeDnsPolicyDropAsSignificantInputLabel = `${prefix}.excludeDnsPolicyDropAsSignificantInputLabel`;
export const sslOcspResponseHeader = `${prefix}.sslOcspResponseHeader`;
export const excludeStaleOcspResponsesAsErrorInputLabel = `${prefix}.excludeStaleOcspResponsesAsErrorInputLabel`;
export const excludeRevokedOcspResponsesAsErrorInputLabel = `${prefix}.excludeRevokedOcspResponsesAsErrorInputLabel`;
export const excludeIssuerRevokedOcspResponsesAsErrorInputLabel = `${prefix}.excludeIssuerRevokedOcspResponsesAsErrorInputLabel`;
export const excludeUnavailableOcspResponsesAsErrorInputLabel = `${prefix}.excludeUnavailableOcspResponsesAsErrorInputLabel`;
export const clientLogProcessingHeader = `${prefix}.clientLogProcessingHeader`;
export const enableSignificantLogCollectionInputLabel = `${prefix}.enableSignificantLogCollectionInputLabel`;
export const significantLogProcessingInputLabel = `${prefix}.significantLogProcessingInputLabel`;
export const filteredLogProcessingInputLabel = `${prefix}.filteredLogProcessingInputLabel`;
export const nonSignificantLogProcessingInputLabel = `${prefix}.nonSignificantLogProcessingInputLabel`;
export const clientLogStreamingHeader = `${prefix}.clientLogStreamingHeader`;
export const streamLogsToExternalServerInputLabel = `${prefix}.streamLogsToExternalServerInputLabel`;
export const externalServerPortInputLabel = `${prefix}.externalServerPortInputLabel`;
export const logTypesToSendInputLabel = `${prefix}.logTypesToSendInputLabel`;
export const maxLogsPerSecondInputLabel = `${prefix}.maxLogsPerSecondInputLabel`;
export const perSecInnerText = `${prefix}.perSecInnerText`;
export const protocolInputLabel = `${prefix}.protocolInputLabel`;
export const significantLogSeverityInputLabel = `${prefix}.significantLogSeverityInputLabel`;
export const nonSignificantLogSeverityInputLabel = `${prefix}.nonSignificantLogSeverityInputLabel`;
export const filteredLogSeverityInputLabel = `${prefix}.filteredLogSeverityInputLabel`;
export const hostnameInputLabel = `${prefix}.hostnameInputLabel`;
export const facilityInputLabel = `${prefix}.facilityInputLabel`;
export const externalServerInputLabel = `${prefix}.externalServerInputLabel`;
export const externalServerPortExternalServerPortInputLabel = `${prefix}.externalServerPortExternalServerPortInputLabel`;
export const removeServerButtonLabel = `${prefix}.removeServerButtonLabel`;
export const addServerButtonLabel = `${prefix}.addServerButtonLabel`;
export const sensitiveLogProfileHeader = `${prefix}.sensitiveLogProfileHeader`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const healthScoreAnalyticsHeader = `${prefix}.healthScoreAnalyticsHeader`;
export const healthScorePerformanceBoostInputLabel = `${prefix}.healthScorePerformanceBoostInputLabel`;
export const healthScoreMaxAnomalyPenaltyInputLabel = `${prefix}.healthScoreMaxAnomalyPenaltyInputLabel`;
export const healthScoreMaxResourcesPenaltyInputLabel = `${prefix}.healthScoreMaxResourcesPenaltyInputLabel`;
export const healthScoreMaxSecurityPenaltyInputLabel = `${prefix}.healthScoreMaxSecurityPenaltyInputLabel`;
export const healthScoreSecurityChainInvalidityPenaltyInputLabel = `${prefix}.healthScoreSecurityChainInvalidityPenaltyInputLabel`;
export const healthScoreSecurityHstsPenaltyInputLabel = `${prefix}.healthScoreSecurityHstsPenaltyInputLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Analytics Profile: {0}',
    [modalHeaderNew]: 'New Analytics Profile: {0}',
    [nameInputLabel]: 'Name',
    [gatherAnalyticsInputLabel]: 'Gather Analytics for',
    [filedNameInputPlaceholder]: 'Select',
    [descriptionInputLabel]: 'Description',
    [httpAnalyticsHeader]: 'HTTP Analytics',
    [apdexResponseThresholdHeader]: 'Client Response Apdex',
    [satisfactoryLatencyThresholdInputLabel]: 'Satisfactory Latency Threshold',
    [msInnerText]: 'ms',
    [toleratedLatencyFactorInputLabel]: 'Tolerated Latency Factor',
    [multiplierPlaceholder]: 'Multiplier',
    [apdexClientPageloadHeader]: 'Client PageLoad Apdex',
    [apdexServerResponseHeader]: 'Server Response Apdex',
    [networkAnalyticsHeader]: 'Network Analytics',
    [clientConnectionApdexLossyConnectionThresholdHeader]: 'Client Connection Apdex  Lossy Connection Threshold',
    [connLossyTotalRetransmitThersholdInputLabel]: 'TCP Retransmit Threshold',
    [connServerLossyTotalRetransmitThersholdInputLabel]: 'TCP Retransmit Threshold',
    [connLossyTimeoutRetransmitThresholdInputLabel]: 'TCP Timeout Threshold',
    [connServerLossyTimeoutRetransmitThresholdInputLabel]: 'TCP Timeout Threshold',
    [connLossyOutOfOrderThresholdInputLabel]: 'TCP OutOfOrder Threshold',
    [connServerLossyOutOfOrderThresholdInputLabel]: 'TCP OutOfOrder Threshold',
    [connLossyZeroWindowSizeEventThresholdInputLabel]: 'TCP Zero Window Threshold',
    [connServerLossyZeroWindowSizeEventThresholdInputLabel]: 'TCP Zero Window Threshold',
    [serverConnectionApdexLossyConnectionThresholdHeader]: 'Server Connection Apdex  Lossy Connection Threshold',
    [excludeNetworkErrorsHeader]: 'Exclude Network Errors',
    [excludeTcpResetAsErrorInputLabel]: 'Client Connection RST',
    [excludePersistenceChangeAsErrorInputLabel]: 'Client Connection Persistence Changed',
    [excludeClientCloseBeforeRequestAsErrorInputLabel]: 'Client Connection Closed before HTTP Request',
    [excludeServerTcpResetAsErrorInputLabel]: 'Server Connection RST',
    [excludeDnsErrorsHeader]: 'Exclude DNS Errors',
    [excludeInvalidDnsQueryAsErrorInputLabel]: 'Invalid DNS Query',
    [excludeInvalidDnsDomainAsErrorInputLabel]: 'Invalid DNS Domain',
    [excludeNoDnsRecordAsErrorInputLabel]: 'No DNS Record',
    [excludeGslbDownAsErrorInputLabel]: 'GSLB Service Down',
    [excludeNoValidGslbMemberAsErrorInputLabel]: 'No Valid GSLB Service Member',
    [excludeUnsupportedDnsQueryAsErrorInputLabel]: 'Unsupported DNS Query',
    [excludeServerDnsErrorAsErrorInputLabel]: 'Server DNS Error',
    [excludeDnsPolicyDropAsSignificantInputLabel]: 'DNS Policy Drop as Significant',
    [sslOcspResponseHeader]: 'SSL OCSP Response',
    [excludeStaleOcspResponsesAsErrorInputLabel]: 'Exclude Stale as Error',
    [excludeRevokedOcspResponsesAsErrorInputLabel]: 'Exclude Revoked as Error',
    [excludeIssuerRevokedOcspResponsesAsErrorInputLabel]: 'Exclude Issuer Revoked as Error',
    [excludeUnavailableOcspResponsesAsErrorInputLabel]: 'Exclude Unavailable as Error',
    [clientLogProcessingHeader]: 'Client Log Processing',
    [enableSignificantLogCollectionInputLabel]: 'Enable Significant Logs',
    [significantLogProcessingInputLabel]: 'Significant Log Processing Type',
    [filteredLogProcessingInputLabel]: 'Filtered Log Processing Type',
    [nonSignificantLogProcessingInputLabel]: 'Nonsignificant Log Processing Type',
    [clientLogStreamingHeader]: 'Client Log Streaming',
    [streamLogsToExternalServerInputLabel]: 'Stream Logs to an External Server',
    [externalServerPortInputLabel]: 'Default Port',
    [logTypesToSendInputLabel]: 'Types of Logs to Stream',
    [maxLogsPerSecondInputLabel]: 'Max Logs',
    [perSecInnerText]: 'sec',
    [protocolInputLabel]: 'Log Streaming Protocol',
    [significantLogSeverityInputLabel]: 'Log Severity',
    [nonSignificantLogSeverityInputLabel]: 'NonSignificant Log Severity',
    [filteredLogSeverityInputLabel]: 'Filtered Log Severity',
    [hostnameInputLabel]: 'Hostname',
    [facilityInputLabel]: 'Facility',
    [externalServerInputLabel]: 'Server',
    [externalServerPortExternalServerPortInputLabel]: 'Port',
    [removeServerButtonLabel]: 'Remove Server',
    [addServerButtonLabel]: '+ Add Server',
    [sensitiveLogProfileHeader]: 'Sensitive Log Profile',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [healthScoreAnalyticsHeader]: 'Health Score Analytics',
    [healthScorePerformanceBoostInputLabel]: 'Performance Boost',
    [healthScoreMaxAnomalyPenaltyInputLabel]: 'Anomaly Penalties',
    [healthScoreMaxResourcesPenaltyInputLabel]: 'Resource Penalties',
    [healthScoreMaxSecurityPenaltyInputLabel]: 'Security Penalties',
    [healthScoreSecurityChainInvalidityPenaltyInputLabel]: 'Penalty For Invalid Chain',
    [healthScoreSecurityHstsPenaltyInputLabel]: 'Penalty For No HSTS',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'sensitivelogprofile';
const prefix = `${moduleName}.${componentName}`;

export const indexColumnTitle = `${prefix}.indexColumnTitle`;
export const enableColumnTitle = `${prefix}.enableColumnTitle`;
export const nameColumnTitle = `${prefix}.nameColumnTitle`;
export const matchingRuleColumnTitle = `${prefix}.matchingRuleColumnTitle`;
export const actionColumnTitle = `${prefix}.actionColumnTitle`;
export const createRuleControlTitle = `${prefix}.createRuleControlTitle`;
export const deleteActionTitle = `${prefix}.deleteActionTitle`;
export const menuActionTitle = `${prefix}.menuActionTitle`;

export const ENGLISH = {
    [indexColumnTitle]: 'Index',
    [enableColumnTitle]: 'Enable',
    [nameColumnTitle]: 'Name',
    [matchingRuleColumnTitle]: 'Matching Rule',
    [actionColumnTitle]: 'Action',
    [createRuleControlTitle]: 'Create rule',
    [deleteActionTitle]: 'Delete',
    [menuActionTitle]: 'Menu',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'stringmatch';
const prefix = `${moduleName}.${componentName}`;

export const stringHeader = `${prefix}.stringHeader`;
export const criteriaInputLabel = `${prefix}.criteriaInputLabel`;
export const groupInputLabel = `${prefix}.groupInputLabel`;
export const removeMatchButtonLabel = `${prefix}.removeMatchButtonLabel`;

export const ENGLISH = {
    [stringHeader]: 'String',
    [criteriaInputLabel]: 'Criteria',
    [groupInputLabel]: 'Group',
    [removeMatchButtonLabel]: 'Remove Match',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'clientsslcertificatevalidation';
const prefix = `${moduleName}.${componentName}`;

export const clientSSLCertificateValidationHeader = `${prefix}.clientSSLCertificateValidationHeader`;
export const clientCertificateLabel = `${prefix}.clientCertificateLabel`;
export const noneButtonLabel = `${prefix}.noneButtonLabel`;
export const requestButtonLabel = `${prefix}.requestButtonLabel`;
export const requireButtonLabel = `${prefix}.requireButtonLabel`;
export const pkiProfileInputLabel = `${prefix}.pkiProfileInputLabel`;
export const createPKIProfileLabel = `${prefix}.createPKIProfileLabel`;
export const selectPKIProfilePlaceholder = `${prefix}.selectPKIProfilePlaceholder`;
export const addHTTPHeaderFormLabel = `${prefix}.addHTTPHeaderFormLabel`;
export const addHTTPRequestHeaderInputLabel = `${prefix}.addHTTPRequestHeaderInputLabel`;
export const httpHeaderNameInputLabel = `${prefix}.httpHeaderNameInputLabel`;
export const httpHeaderNamePlaceholder = `${prefix}.httpHeaderNamePlaceholder`;
export const httpHeaderValueInputLabel = `${prefix}.httpHeaderValueInputLabel`;
export const httpHeaderValuePlaceholder = `${prefix}.httpHeaderValuePlaceholder`;
export const closeConnectionClientRequestHasHeaderName = `${prefix}.closeConnectionClientRequestHasHeaderName`;

export const ENGLISH = {
    [clientSSLCertificateValidationHeader]: 'Client SSL Certificate Validation',
    [clientCertificateLabel]: 'Client Certificate',
    [noneButtonLabel]: 'None',
    [requestButtonLabel]: 'Request',
    [requireButtonLabel]: 'Require',
    [pkiProfileInputLabel]: 'PKI Profile',
    [createPKIProfileLabel]: 'Create PKI Profile',
    [selectPKIProfilePlaceholder]: 'Select PKI Profile',
    [addHTTPHeaderFormLabel]: `Add an HTTP header to the client's request prior to sending the request
                                    to the server. For instance, terminate SSL and send the server information about the
                                    client's SSL certificate.`,
    [addHTTPRequestHeaderInputLabel]: 'Add HTTP Request Headers',
    [httpHeaderNameInputLabel]: 'HTTP Header Name',
    [httpHeaderNamePlaceholder]: 'Header Name',
    [httpHeaderValueInputLabel]: 'HTTP Header Value',
    [httpHeaderValuePlaceholder]: 'Header Value',
    [closeConnectionClientRequestHasHeaderName]: 'Close connection if HTTP client request has header name',
};const moduleName = 'ajslegacy';
const componentName = 'rateprofile';
const prefix = `${moduleName}.${componentName}`;

export const thresholdInputLabel = `${prefix}.thresholdInputLabel`;
export const timePeriodInputLabel = `${prefix}.timePeriodInputLabel`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const actionInputLabel = `${prefix}.actionInputLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const cookieRadioOptionLabel = `${prefix}.cookieRadioOptionLabel`;
export const headerRadioOptionLabel = `${prefix}.headerRadioOptionLabel`;
export const statusCodeInputLabel = `${prefix}.statusCodeInputLabel`;
export const statusCodeInputPlaceholder = `${prefix}.statusCodeInputPlaceholder`;
export const fileInputLabel = `${prefix}.fileInputLabel`;
export const protocolInputLabel = `${prefix}.protocolInputLabel`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const portInputPlaceholder = `${prefix}.portInputPlaceholder`;
export const keepQueryInputLabel = `${prefix}.keepQueryInputLabel`;
export const hostInputLabel = `${prefix}.hostInputLabel`;
export const pathInputLabel = `${prefix}.pathInputLabel`;
export const pathInputPlaceholder = `${prefix}.pathInputPlaceholder`;

export const ENGLISH = {
    [thresholdInputLabel]: 'Threshold',
    [timePeriodInputLabel]: 'Time Period',
    [secondsInnerText]: 'Seconds',
    [actionInputLabel]: 'Action',
    [nameInputLabel]: 'Name',
    [cookieRadioOptionLabel]: 'Cookie',
    [headerRadioOptionLabel]: 'Header',
    [statusCodeInputLabel]: 'Status Code:',
    [statusCodeInputPlaceholder]: 'Status Code',
    [fileInputLabel]: 'File:',
    [protocolInputLabel]: 'Protocol:',
    [portInputLabel]: 'Port:',
    [portInputPlaceholder]: 'Port',
    [keepQueryInputLabel]: 'Keep query',
    [hostInputLabel]: 'Host:',
    [pathInputLabel]: 'Path:',
    [pathInputPlaceholder]: 'Keep Existing Path',
};const moduleName = 'ajslegacy';
const componentName = 'applicationprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const discardCompressionFilterChangesPrompt = `${prefix}.discardCompressionFilterChangesPrompt`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const generalTabLabel = `${prefix}.generalTabLabel`;
export const securityTabLabel = `${prefix}.securityTabLabel`;
export const compressionTabLabel = `${prefix}.compressionTabLabel`;
export const cachingTabLabel = `${prefix}.cachingTabLabel`;
export const ddosTabLabel = `${prefix}.ddosTabLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const tcpSettingsHeader = `${prefix}.tcpSettingsHeader`;
export const enableProxyProtocolInputLabel = `${prefix}.enableProxyProtocolInputLabel`;
export const version1RadioOption = `${prefix}.version1RadioOption`;
export const version2RadioOption = `${prefix}.version2RadioOption`;
export const sipSettingsHeader = `${prefix}.sipSettingsHeader`;
export const transactionTimeoutInputLabel = `${prefix}.transactionTimeoutInputLabel`;
export const httpSettingsHeader = `${prefix}.httpSettingsHeader`;
export const connectionMultiplexInputLabel = `${prefix}.connectionMultiplexInputLabel`;
export const detectNTLMappInputLabel = `${prefix}.detectNTLMappInputLabel`;
export const xForwardedForInputLabel = `${prefix}.xForwardedForInputLabel`;
export const xffAlternateNameInputLabel = `${prefix}.xffAlternateNameInputLabel`;
export const enableChunkMergeInputLabel = `${prefix}.enableChunkMergeInputLabel`;
export const preserveClientIPAddressInputLabel = `${prefix}.preserveClientIPAddressInputLabel`;
export const websocketsInputLabel = `${prefix}.websocketsInputLabel`;
export const uncheckToAllowFullDuplexLabel = `${prefix}.uncheckToAllowFullDuplexLabel`;
export const proxyExpectHeaderInputLabel = `${prefix}.proxyExpectHeaderInputLabel`;
export const tcpConnectionRateLimiterSettingsHeader = `${prefix}.tcpConnectionRateLimiterSettingsHeader`;
export const advancedSettingsHeader = `${prefix}.advancedSettingsHeader`;
export const securityInformationHeader = `${prefix}.securityInformationHeader`;
export const resetConnectionOnRequestForSSLPortInputLabel = `${prefix}.resetConnectionOnRequestForSSLPortInputLabel`;
export const sslEverywhereInputLabel = `${prefix}.sslEverywhereInputLabel`;
export const httpToHttpsRedirectInputLabel = `${prefix}.httpToHttpsRedirectInputLabel`;
export const httpOnlyCookiesInputLabel = `${prefix}.httpOnlyCookiesInputLabel`;
export const secureCookiesInputLabel = `${prefix}.secureCookiesInputLabel`;
export const rewriteServerRedirectsToHttpsInputLabel = `${prefix}.rewriteServerRedirectsToHttpsInputLabel`;
export const httpStrictTransportSecurityInputLabel = `${prefix}.httpStrictTransportSecurityInputLabel`;
export const durationInputLabel = `${prefix}.durationInputLabel`;
export const daysInputLabel = `${prefix}.daysInputLabel`;
export const includeSubdomainsInputLabel = `${prefix}.includeSubdomainsInputLabel`;
export const xForwardedProtoInputLabel = `${prefix}.xForwardedProtoInputLabel`;
export const compressionHeader = `${prefix}.compressionHeader`;
export const enableCompressionInputLabel = `${prefix}.enableCompressionInputLabel`;
export const compressionModeInputLabel = `${prefix}.compressionModeInputLabel`;
export const autoButtonLabel = `${prefix}.autoButtonLabel`;
export const customButtonLabel = `${prefix}.customButtonLabel`;
export const compressionContentTypesInputLabel = `${prefix}.compressionContentTypesInputLabel`;
export const selectStringGroupPlaceholder = `${prefix}.selectStringGroupPlaceholder`;
export const createStringGroupPlaceholder = `${prefix}.createStringGroupPlaceholder`;
export const createStringGroupLabel = `${prefix}.createStringGroupLabel`;
export const removeAcceptEncodingHeaderInputLabel = `${prefix}.removeAcceptEncodingHeaderInputLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveFilterButtonLabel = `${prefix}.saveFilterButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const cachingHeader = `${prefix}.cachingHeader`;
export const enableCachingInputLabel = `${prefix}.enableCachingInputLabel`;
export const xCacheInputLabel = `${prefix}.xCacheInputLabel`;
export const ageHeaderInputLabel = `${prefix}.ageHeaderInputLabel`;
export const dateHeaderInputLabel = `${prefix}.dateHeaderInputLabel`;
export const aggressiveInputLabel = `${prefix}.aggressiveInputLabel`;
export const minMaxSizeOfObjectToStoreInCacheLabel = `${prefix}.minMaxSizeOfObjectToStoreInCacheLabel`;
export const cacheableObjectSizeInputLabel = `${prefix}.cacheableObjectSizeInputLabel`;
export const minSizeInputLabel = `${prefix}.minSizeInputLabel`;
export const minBytesInnerText = `${prefix}.minBytesInnerText`;
export const maxSizeInputLabel = `${prefix}.maxSizeInputLabel`;
export const maxBytesInnerText = `${prefix}.maxBytesInnerText`;
export const cacheExpireTimeInputLabel = `${prefix}.cacheExpireTimeInputLabel`;
export const timeInputLabel = `${prefix}.timeInputLabel`;
export const secInnerText = `${prefix}.secInnerText`;
export const heuristicExpireInputLabel = `${prefix}.heuristicExpireInputLabel`;
export const cacheURIwithQueryArgumentsInputLabel = `${prefix}.cacheURIwithQueryArgumentsInputLabel`;
export const cacheableMIMETypesInputLabel = `${prefix}.cacheableMIMETypesInputLabel`;
export const nonCacheableMIMETypesInputLabel = `${prefix}.nonCacheableMIMETypesInputLabel`;
export const nonCacheableURIInputLabel = `${prefix}.nonCacheableURIInputLabel`;
export const dnsSettingsHeader = `${prefix}.dnsSettingsHeader`;
export const ipsReturnedByDNSInputLabel = `${prefix}.ipsReturnedByDNSInputLabel`;
export const ttlInputLabel = `${prefix}.ttlInputLabel`;
export const subnetPrefixLengthInputLabel = `${prefix}.subnetPrefixLengthInputLabel`;
export const processEDNSExtensionsInputLabel = `${prefix}.processEDNSExtensionsInputLabel`;
export const negativeTTLInputLabel = `${prefix}.negativeTTLInputLabel`;
export const invalidDNSQueryProcessingInputLabel = `${prefix}.invalidDNSQueryProcessingInputLabel`;
export const errorResponsePlaceholder = `${prefix}.errorResponsePlaceholder`;
export const httpHeaderValueLabel = `${prefix}.httpHeaderValueLabel`;
export const dnsRequestRateLimiterSettingsHeader = `${prefix}.dnsRequestRateLimiterSettingsHeader`;
export const httpLimitSettingsHeader = `${prefix}.httpLimitSettingsHeader`;
export const httpTimeoutSettingsHeader = `${prefix}.httpTimeoutSettingsHeader`;
export const clientHeaderInputLabel = `${prefix}.clientHeaderInputLabel`;
export const msInnerText = `${prefix}.msInnerText`;
export const clientBodyTimeoutInputLabel = `${prefix}.clientBodyTimeoutInputLabel`;
export const httpKeepAliveTimeoutInputLabel = `${prefix}.httpKeepAliveTimeoutInputLabel`;
export const postAcceptTimeoutInputLabel = `${prefix}.postAcceptTimeoutInputLabel`;
export const httpSizeSettingsHeader = `${prefix}.httpSizeSettingsHeader`;
export const clientMaxBodySizeInputLabel = `${prefix}.clientMaxBodySizeInputLabel`;
export const kbInnerText = `${prefix}.kbInnerText`;
export const clientMaxHeaderFieldSizeInputLabel = `${prefix}.clientMaxHeaderFieldSizeInputLabel`;
export const clientMaxCompleteHeaderSizeInputLabel = `${prefix}.clientMaxCompleteHeaderSizeInputLabel`;
export const sendKeepAliveHeaderInputLabel = `${prefix}.sendKeepAliveHeaderInputLabel`;
export const allowHeaderNamesWithDotInputLabel = `${prefix}.allowHeaderNamesWithDotInputLabel`;
export const useAppKeepAliveTimeoutInputLabel = `${prefix}.useAppKeepAliveTimeoutInputLabel`;
export const enableRequestBodyBufferingInputLabel = `${prefix}.enableRequestBodyBufferingInputLabel`;
export const rateLimitHttpTcpSettingsHeader = `${prefix}.rateLimitHttpTcpSettingsHeader`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const rbacHeader = `${prefix}.rbacHeader`;
export const bufferNumberLabel = `${prefix}.bufferNumberLabel`;
export const bufferNumberPlaceholder = `${prefix}.bufferNumberPlaceholder`;
export const bufferSizeLabel = `${prefix}.bufferSizeLabel`;
export const bufferSizePlaceholder = `${prefix}.bufferSizePlaceholder`;
export const bytesDataLabel = `${prefix}.bytesDataLabel`;
export const normalLevelLabel = `${prefix}.normalLevelLabel`;
export const normalLevelPlaceholder = `${prefix}.normalLevelPlaceholder`;
export const aggressiveLevelLabel = `${prefix}.aggressiveLevelLabel`;
export const aggressiveLevelPlaceholder = `${prefix}.aggressiveLevelPlaceholder`;
export const windowSizeLabel = `${prefix}.windowSizeLabel`;
export const windowSizePlaceholder = `${prefix}.windowSizePlaceholder`;
export const hashSizeLabel = `${prefix}.hashSizeLabel`;
export const hashSizePlaceholder = `${prefix}.hashSizePlaceholder`;
export const responseContentRefLabel = `${prefix}.responseContentRefLabel`;
export const responseContentRefPlaceholder = `${prefix}.responseContentRefPlaceholder`;
export const minimumLabel = `${prefix}.minimumLabel`;
export const maxLowRttLabel = `${prefix}.maxLowRttLabel`;
export const maxLowRttPlaceholder = `${prefix}.maxLowRttPlaceholder`;
export const minHighRttLabel = `${prefix}.minHighRttLabel`;
export const minHighRttPlaceholder = `${prefix}.minHighRttPlaceholder`;
export const millisecondsLabel = `${prefix}.millisecondsLabel`;
export const mobileBrowserIdentifierLabel = `${prefix}.mobileBrowserIdentifierLabel`;
export const appServiceTypeLabel = `${prefix}.appServiceTypeLabel`;
export const appServiceTypeSelectPlaceholder = `${prefix}.appServiceTypeSelectPlaceholder`;
export const enableTrueClientIpLabel = `${prefix}.enableTrueClientIpLabel`;

export const ENGLISH = {
    [discardCompressionFilterChangesPrompt]: 'Discard Compression Filter changes ?',
    [modalHeaderEdit]: 'Edit Application Profile: {0}',
    [modalHeaderNew]: 'New Application Profile: {0}',
    [generalTabLabel]: 'General',
    [securityTabLabel]: 'Security',
    [compressionTabLabel]: 'Compression',
    [cachingTabLabel]: 'Caching',
    [ddosTabLabel]: 'DDoS',
    [nameInputLabel]: 'Name',
    [typeInputLabel]: 'Type',
    [descriptionInputLabel]: 'Description',
    [tcpSettingsHeader]: 'TCP Settings',
    [enableProxyProtocolInputLabel]: 'Enable PROXY Protocol',
    [version1RadioOption]: 'Version 1',
    [version2RadioOption]: 'Version 2',
    [sipSettingsHeader]: 'SIP Settings',
    [transactionTimeoutInputLabel]: 'Transaction Timeout',
    [httpSettingsHeader]: 'HTTP Settings',
    [connectionMultiplexInputLabel]: 'Connection Multiplex',
    [detectNTLMappInputLabel]: 'Detect NTLM App',
    [xForwardedForInputLabel]: 'XForwardedFor',
    [xffAlternateNameInputLabel]: 'XFF Alternate Name',
    [enableChunkMergeInputLabel]: 'Enable Chunk Merge',
    [preserveClientIPAddressInputLabel]: 'Preserve Client IP Address',
    [websocketsInputLabel]: 'WebSockets Proxy',
    [uncheckToAllowFullDuplexLabel]: 'Uncheck to allow fullduplex communication between client and server via the VS',
    [proxyExpectHeaderInputLabel]: 'Proxy Expect Header',
    [tcpConnectionRateLimiterSettingsHeader]: 'TCP Connection Rate Limiter Settings',
    [advancedSettingsHeader]: 'Advanced Settings',
    [securityInformationHeader]: 'Security Information',
    [resetConnectionOnRequestForSSLPortInputLabel]: 'Reset connection on HTTP request for SSL port',
    [sslEverywhereInputLabel]: 'SSL Everywhere',
    [httpToHttpsRedirectInputLabel]: 'HTTPtoHTTPS Redirect',
    [httpOnlyCookiesInputLabel]: 'HTTPonly Cookies',
    [secureCookiesInputLabel]: 'Secure Cookies',
    [rewriteServerRedirectsToHttpsInputLabel]: 'Rewrite Server Redirects to HTTPS',
    [httpStrictTransportSecurityInputLabel]: 'HTTP Strict Transport Security (HSTS)',
    [durationInputLabel]: 'Duration',
    [daysInputLabel]: 'days',
    [includeSubdomainsInputLabel]: 'includeSubdomains',
    [xForwardedProtoInputLabel]: 'XForwardedProto',
    [compressionHeader]: 'Compression',
    [enableCompressionInputLabel]: 'Enable Compression',
    [compressionModeInputLabel]: 'Compression Mode',
    [autoButtonLabel]: 'Auto',
    [customButtonLabel]: 'Custom',
    [compressionContentTypesInputLabel]: 'Compressible Content Types',
    [selectStringGroupPlaceholder]: 'Select a string group',
    [createStringGroupPlaceholder]: 'Create String Group',
    [createStringGroupLabel]: 'Create String Group',
    [removeAcceptEncodingHeaderInputLabel]: 'Remove Accept Encoding Header',
    [cancelButtonLabel]: 'Cancel',
    [saveFilterButtonLabel]: 'Save Filter',
    [saveButtonLabel]: 'Save',
    [cachingHeader]: 'Caching',
    [enableCachingInputLabel]: 'Enable Caching',
    [xCacheInputLabel]: 'XCache',
    [ageHeaderInputLabel]: 'Age Header',
    [dateHeaderInputLabel]: 'Date Header',
    [aggressiveInputLabel]: 'Aggressive',
    [minMaxSizeOfObjectToStoreInCacheLabel]: 'Minimum and maximum size of an object to store in the cache',
    [cacheableObjectSizeInputLabel]: 'Cacheable Object Size',
    [minSizeInputLabel]: 'Min Size',
    [minBytesInnerText]: 'Min. bytes',
    [maxSizeInputLabel]: 'Max Size',
    [maxBytesInnerText]: 'Max. bytes',
    [cacheExpireTimeInputLabel]: 'Cache Expire Time',
    [timeInputLabel]: 'Time',
    [secInnerText]: 'Sec',
    [heuristicExpireInputLabel]: 'Heuristic Expire',
    [cacheURIwithQueryArgumentsInputLabel]: 'Cache URI with Query Arguments',
    [cacheableMIMETypesInputLabel]: 'Cacheable MIME Types',
    [nonCacheableMIMETypesInputLabel]: 'NonCacheable MIME Types',
    [nonCacheableURIInputLabel]: 'NonCacheable URI',
    [dnsSettingsHeader]: 'DNS Settings',
    [ipsReturnedByDNSInputLabel]: 'Number of IPs returned by DNS server',
    [ttlInputLabel]: 'TTL',
    [subnetPrefixLengthInputLabel]: 'Subnet prefix length',
    [processEDNSExtensionsInputLabel]: 'Process EDNS Extensions',
    [negativeTTLInputLabel]: 'Negative TTL',
    [invalidDNSQueryProcessingInputLabel]: '(Options for) Invalid DNS Query processing',
    [errorResponsePlaceholder]: 'Error Response',
    [httpHeaderValueLabel]: 'HTTP Header Value',
    [dnsRequestRateLimiterSettingsHeader]: 'DNS Request Rate Limiter Settings',
    [httpLimitSettingsHeader]: 'HTTP Limit Settings',
    [httpTimeoutSettingsHeader]: 'HTTP Timeout Settings',
    [clientHeaderInputLabel]: 'Client Header Timeout',
    [msInnerText]: 'ms',
    [clientBodyTimeoutInputLabel]: 'Client Body Timeout',
    [httpKeepAliveTimeoutInputLabel]: 'HTTP KeepAlive Timeout',
    [postAcceptTimeoutInputLabel]: 'Post Accept Timeout',
    [httpSizeSettingsHeader]: 'HTTP Size Settings',
    [clientMaxBodySizeInputLabel]: 'Client Max Body Size',
    [kbInnerText]: 'KB',
    [clientMaxHeaderFieldSizeInputLabel]: 'Client Max Header Field Size',
    [clientMaxCompleteHeaderSizeInputLabel]: 'Client Max Complete Header Size',
    [sendKeepAliveHeaderInputLabel]: 'Send KeepAlive header',
    [allowHeaderNamesWithDotInputLabel]: 'Allow Header Names with DotPeriod',
    [useAppKeepAliveTimeoutInputLabel]: 'Use App KeepAlive Timeout',
    [enableRequestBodyBufferingInputLabel]: 'Enable Request Body Buffering',
    [rateLimitHttpTcpSettingsHeader]: 'Rate Limit HTTP and TCP Settings',
    [secondsInnerText]: 'Seconds',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
    [bufferNumberLabel]: 'Number of Buffers',
    [bufferNumberPlaceholder]: 'Enter Number of Buffers',
    [bufferSizeLabel]: 'Buffer Size',
    [bufferSizePlaceholder]: 'Enter Buffer Size',
    [bytesDataLabel]: 'bytes',
    [normalLevelLabel]: 'Normal Level',
    [normalLevelPlaceholder]: 'Enter Normal Level',
    [aggressiveLevelLabel]: 'Aggressive Level',
    [aggressiveLevelPlaceholder]: 'Enter Aggressive Level',
    [windowSizeLabel]: 'Window Size',
    [windowSizePlaceholder]: 'Enter Window Size',
    [hashSizeLabel]: 'Hash Size',
    [hashSizePlaceholder]: 'Enter Hash Size',
    [responseContentRefLabel]: 'Response Content Length',
    [responseContentRefPlaceholder]: 'Enter Response Content Length',
    [minimumLabel]: 'Minimum',
    [maxLowRttLabel]: 'Max Low RTT',
    [maxLowRttPlaceholder]: 'Enter Max Low RTT',
    [minHighRttLabel]: 'Min High RTT',
    [minHighRttPlaceholder]: 'Enter Min High RTT',
    [millisecondsLabel]: 'Milliseconds',
    [mobileBrowserIdentifierLabel]: 'Mobile Browser Identifier',
    [appServiceTypeLabel]: 'App Service Type',
    [appServiceTypeSelectPlaceholder]: 'Select App Service Type',
    [enableTrueClientIpLabel]: 'Enable True Client IP',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'trafficcloneprofilemodal';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const preserveClientIpInputLabel = `${prefix}.preserveClientIpInputLabel`;
export const subnetInputLabel = `${prefix}.subnetInputLabel`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const ipAddressInputPlaceholder = `${prefix}.ipAddressInputPlaceholder`;
export const macAddressInputLabel = `${prefix}.macAddressInputLabel`;
export const macAddressInputPlaceholder = `${prefix}.macAddressInputPlaceholder`;
export const removeCloneServerButtonLabel = `${prefix}.removeCloneServerButtonLabel`;
export const addCloneServerButtonLabel = `${prefix}.addCloneServerButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Traffic Clone Profile: {0}',
    [modalHeaderNew]: 'New Traffic Clone Profile: {0}',
    [nameInputLabel]: 'Name',
    [preserveClientIpInputLabel]: 'Preserve Client IP',
    [subnetInputLabel]: 'Subnet',
    [ipAddressInputLabel]: 'Server Address',
    [ipAddressInputPlaceholder]: 'IP Address',
    [macAddressInputLabel]: 'Server MAC Address',
    [macAddressInputPlaceholder]: 'MAC Address',
    [removeCloneServerButtonLabel]: 'Remove Clone Server',
    [addCloneServerButtonLabel]: 'Add Clone Server',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dsrprofilesetting';
const prefix = `${moduleName}.${componentName}`;

export const directServerReturnHeader = `${prefix}.directServerReturnHeader`;
export const enableDsrInputLabel = `${prefix}.enableDsrInputLabel`;
export const dsrTypeInputLabel = `${prefix}.dsrTypeInputLabel`;
export const dsrEncapsulationTypeInputLabel = `${prefix}.dsrEncapsulationTypeInputLabel`;

export const ENGLISH = {
    [directServerReturnHeader]: 'Direct Server Return',
    [enableDsrInputLabel]: 'Enable DSR',
    [dsrTypeInputLabel]: 'DSR Type',
    [dsrEncapsulationTypeInputLabel]: 'DSR Encapsulation Type',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'customparamslist';
const prefix = `${moduleName}.${componentName}`;

export const nameInputLabel = `${prefix}.nameInputLabel`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const isSensitiveInputLabel = `${prefix}.isSensitiveInputLabel`;
export const isDynamicInputLabel = `${prefix}.isDynamicInputLabel`;
export const removeScriptParamButtonLabel = `${prefix}.removeScriptParamButtonLabel`;
export const addCustomParamsButtonLabel = `${prefix}.addCustomParamsButtonLabel`;

export const ENGLISH = {
    [isSensitiveInputLabel]: 'Sensitive',
    [isDynamicInputLabel]: 'Dynamic',
    [removeScriptParamButtonLabel]: 'Remove Script Param',
    [addCustomParamsButtonLabel]: 'Add Custom Params',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'certificatelistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const btnLabelRootIntermediateCaCert = `${prefix}.btnLabelRootIntermediateCaCert`;
export const btnLabelApplicationCert = `${prefix}.btnLabelApplicationCert`;
export const btnLabelControllerCert = `${prefix}.btnLabelControllerCert`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnTitleCommonName = `${prefix}.columnTitleCommonName`;
export const columnTitleIssuerName = `${prefix}.columnTitleIssuerName`;
export const columnTitleAlgorithm = `${prefix}.columnTitleAlgorithm`;
export const columnTitleSelfSigned = `${prefix}.columnTitleSelfSigned`;
export const columnTitleValidUntil = `${prefix}.columnTitleValidUntil`;
export const columnTitleSanDomainNames = `${prefix}.columnTitleSanDomainNames`;
export const actionBtnExport = `${prefix}.actionBtnExport`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const sslTlsCertificatesHeader = `${prefix}.sslTlsCertificatesHeader`;
export const rootIntermediateCaHeader = `${prefix}.rootIntermediateCaHeader`;
export const yesValue = `${prefix}.yesValue`;
export const noValue = `${prefix}.noValue`;
export const awaitingCertificateValue = `${prefix}.awaitingCertificateValue`;

export const ENGLISH = {
    [btnLabelRootIntermediateCaCert]: 'RootIntermediate CA Certificate',
    [btnLabelApplicationCert]: 'Application Certificate',
    [btnLabelControllerCert]: 'Controller Certificate',
    [columnTitleName]: 'Name',
    [columnTitleStatus]: 'Status',
    [columnTitleCommonName]: 'Common Name',
    [columnTitleIssuerName]: 'Issuer Name',
    [columnTitleAlgorithm]: 'Algorithm',
    [columnTitleSelfSigned]: 'Self Signed',
    [columnTitleValidUntil]: 'Valid Until',
    [columnTitleSanDomainNames]: 'SAN Domain Names',
    [actionBtnExport]: 'Export',
    [actionBtnEdit]: 'Edit',
    [sslTlsCertificatesHeader]: 'SSLTLS Certificates',
    [rootIntermediateCaHeader]: 'RootIntermediate CA',
    [yesValue]: 'Yes',
    [noValue]: 'No',
    [awaitingCertificateValue]: 'Awaiting Certificate',
};const moduleName = 'ajslegacy';
const componentName = 'sslprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAcceptedVersions = `${prefix}.columnTitleAcceptedVersions`;
export const applicationProfileButtonLabel = `${prefix}.applicationProfileButtonLabel`;
export const systemProfileButtonLabel = `${prefix}.systemProfileButtonLabel`;
export const editActionTitle = `${prefix}.editActionTitle`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAcceptedVersions]: 'Accepted Versions',
    [applicationProfileButtonLabel]: 'Application Profile',
    [systemProfileButtonLabel]: 'System Profile',
    [editActionTitle]: 'Edit',
};const moduleName = 'ajslegacy';
const componentName = 'sslcertificategridstatuscolumn';
const prefix = `${moduleName}.${componentName}`;

export const certificateStatusTooltipLabel = `${prefix}.certificateStatusTooltipLabel`;
export const certificateExpiringOnTooltipLabel = `${prefix}.certificateExpiringOnTooltipLabel`;

export const ENGLISH = {
    [certificateStatusTooltipLabel]: 'Status',
    [certificateExpiringOnTooltipLabel]: '(Expiring on<span class="statusexpiring ml5">{0}<span>)',
};const moduleName = 'global';
const componentName = 'globalcomponent';
const prefix = `${moduleName}.${componentName}`;

export const nameLabel = `${prefix}.nameLabel`;
export const valueLabel = `${prefix}.valueLabel`;
export const editLabel = `${prefix}.editLabel`;
export const createLabel = `${prefix}.createLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;

export const ENGLISH = {
    [nameLabel]: 'Name_Global',
    [valueLabel]: 'Value_Global',
    [editLabel]: 'Edit_Global',
    [createLabel]: 'Create_Global',
    [nameInputPlaceholder]: 'Enter Name_Global',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'backupcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleLocalFile = `${prefix}.columnTitleLocalFile`;
export const emptyDataObject = `${prefix}.emptyDataObject`;
export const columnTitleRemoteFile = `${prefix}.columnTitleRemoteFile`;
export const backupFrequencyLabel = `${prefix}.backupFrequencyLabel`;
export const serverAddressNameLabel = `${prefix}.serverAddressNameLabel`;
export const userNameLabel = `${prefix}.userNameLabel`;
export const directoryNameLabel = `${prefix}.directoryNameLabel`;
export const configurationBackupLabel = `${prefix}.configurationBackupLabel`;
export const enabledDataLabel = `${prefix}.enabledDataLabel`;
export const deactivatedDataLabel = `${prefix}.deactivatedDataLabel`;
export const localBackupLabel = `${prefix}.localBackupLabel`;
export const remoteBackupLabel = `${prefix}.remoteBackupLabel`;

export const ENGLISH = {
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleLocalFile]: 'Local File',
    [emptyDataObject]: 'NA',
    [columnTitleRemoteFile]: 'Remote File',
    [backupFrequencyLabel]: 'Back up every {0} {1}(s), {2} maximum backups stored',
    [serverAddressNameLabel]: 'Server address: {0}',
    [userNameLabel]: 'User: {0}',
    [directoryNameLabel]: 'Directory: {0}',
    [configurationBackupLabel]: 'Configuration Backup:',
    [enabledDataLabel]: 'Enabled',
    [deactivatedDataLabel]: 'Deactivated',
    [localBackupLabel]: 'Local Backup:',
    [remoteBackupLabel]: 'Remote Backup:',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'clusterlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleManagementHostnames = `${prefix}.columnTitleManagementHostnames`;
export const columnTitleClusterIp = `${prefix}.columnTitleClusterIp`;
export const columnTitleRole = `${prefix}.columnTitleRole`;
export const columnTitleState = `${prefix}.columnTitleState`;
export const editBtnLabel = `${prefix}.editBtnLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleManagementHostnames]: 'Management Hostnames',
    [columnTitleClusterIp]: 'Cluster IP',
    [columnTitleRole]: 'Role',
    [columnTitleState]: 'State',
    [editBtnLabel]: 'Edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dnsservicecontroller';
const prefix = `${moduleName}.${componentName}`;

export const discardConfirmMessage = `${prefix}.discardConfirmMessage`;
export const dnsVirtualServicesLabel = `${prefix}.dnsVirtualServicesLabel`;
export const virtualServiceInputLabel = `${prefix}.virtualServiceInputLabel`;
export const virtualServiceInputPlaceholder = `${prefix}.virtualServiceInputPlaceholder`;
export const createVirtualServiceBtnLabel = `${prefix}.createVirtualServiceBtnLabel`;
export const removeConfigurationTitle = `${prefix}.removeConfigurationTitle`;
export const addVirtualServiceBtnLabel = `${prefix}.addVirtualServiceBtnLabel`;

export const ENGLISH = {
    [discardConfirmMessage]: 'Are you sure you want to discard?',
    [dnsVirtualServicesLabel]: 'DNS Virtual Services',
    [virtualServiceInputLabel]: 'Virtual Service',
    [virtualServiceInputPlaceholder]: 'Select Virtual Service',
    [createVirtualServiceBtnLabel]: 'Create Virtual Service',
    [removeConfigurationTitle]: 'Remove Configuration',
    [addVirtualServiceBtnLabel]: '+ Add Virtual Service',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'emailcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleToAddress = `${prefix}.columnTitleToAddress`;
export const columnTitleCCAddress = `${prefix}.columnTitleCCAddress`;
export const columnTitleValidateSettings = `${prefix}.columnTitleValidateSettings`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const emailInformationHeader = `${prefix}.emailInformationHeader`;
export const toAddressInputLabel = `${prefix}.toAddressInputLabel`;
export const ccAddressInputLabel = `${prefix}.ccAddressInputLabel`;
export const emailExamplePlaceholder = `${prefix}.emailExamplePlaceholder`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleToAddress]: 'To Address',
    [columnTitleCCAddress]: 'CC Address',
    [columnTitleValidateSettings]: 'Validate Settings',
    [modalHeaderEdit]: 'Edit Email Notification: {0}',
    [modalHeaderNew]: 'New Email Notification: {0}',
    [nameInputLabel]: 'Name',
    [emailInformationHeader]: 'Email Information',
    [toAddressInputLabel]: 'To Address',
    [ccAddressInputLabel]: 'CC Address',
    [emailExamplePlaceholder]: 'ex. john@doe.com, jane@doe.com',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'emailcontroller';
const prefix = `${moduleName}.${componentName}`;

export const smtpTitle = `${prefix}.smtpTitle`;
export const smtpTextLabel = `${prefix}.smtpTextLabel`;
export const emailTitle = `${prefix}.emailTitle`;
export const emailTextLabel = `${prefix}.emailTextLabel`;
export const snmpTitle = `${prefix}.snmpTitle`;
export const snmpTextLabel = `${prefix}.snmpTextLabel`;
export const syslogTitle = `${prefix}.syslogTitle`;
export const syslogTextLabel = `${prefix}.syslogTextLabel`;
export const toInputLabel = `${prefix}.toInputLabel`;
export const ccInputLabel = `${prefix}.ccInputLabel`;
export const subjectInputLabel = `${prefix}.subjectInputLabel`;
export const submitButtonLabel = `${prefix}.submitButtonLabel`;

export const ENGLISH = {
    [smtpTitle]: 'Validate Email SMTP Settings',
    [smtpTextLabel]: 'Body',
    [emailTitle]: 'Validate Email Settings',
    [emailTextLabel]: 'Body',
    [snmpTitle]: 'Validate SNMP Trap Settings',
    [snmpTextLabel]: 'Trap Description',
    [syslogTitle]: 'Validate Syslog Settings',
    [syslogTextLabel]: 'Message',
    [toInputLabel]: 'To',
    [ccInputLabel]: 'Cc',
    [subjectInputLabel]: 'Subject',
    [submitButtonLabel]: 'Submit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'userprofilecontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'tenantlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const gridConfigNameFieldTitle = `${prefix}.gridConfigNameFieldTitle`;
export const gridConfigNumUsersFieldTitle = `${prefix}.gridConfigNumUsersFieldTitle`;
export const gridConfigAdminUsersFieldTitle = `${prefix}.gridConfigAdminUsersFieldTitle`;
export const gridConfigOtherUsersFieldTitle = `${prefix}.gridConfigOtherUsersFieldTitle`;

export const ENGLISH = {
    [gridConfigNameFieldTitle]: 'Name',
    [gridConfigNumUsersFieldTitle]: 'Num Users',
    [gridConfigAdminUsersFieldTitle]: 'Admin Users',
    [gridConfigOtherUsersFieldTitle]: 'Other Users',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'AppDashboardController';
const prefix = `${moduleName}.${componentName}`;

export const basicVsCreateActionLabel = `${prefix}.basicVsCreateActionLabel`;
export const advancedVsCreateActionLabel = `${prefix}.advancedVsCreateActionLabel`;
export const viewTypeSelectorLabel = `${prefix}.viewTypeSelectorLabel`;
export const viewTypeVsList = `${prefix}.viewTypeVsList`;
export const viewTypeVsTree = `${prefix}.viewTypeVsTree`;
export const viewTypeGslbServicesLabel = `${prefix}.viewTypeGslbServicesLabel`;
export const sortBySelectorLabel = `${prefix}.sortBySelectorLabel`;
export const sortByHealthScoreLabel = `${prefix}.sortByHealthScoreLabel`;
export const sortByNameLabel = `${prefix}.sortByNameLabel`;
export const searchPlaceholder = `${prefix}.searchPlaceholder`;
export const createVirtualServiceLabel = `${prefix}.createVirtualServiceLabel`;
export const numberOfVirtualServices = `${prefix}.numberOfVirtualServices`;
export const emptyVSListNoSearchMatchMessage = `${prefix}.emptyVSListNoSearchMatchMessage`;
export const collapseAllRows = `${prefix}.collapseAllRows`;
export const expandAllRows = `${prefix}.expandAllRows`;
export const vsListLegendHealthScore = `${prefix}.vsListLegendHealthScore`;
export const vsListLegendPools = `${prefix}.vsListLegendPools`;
export const vsListLegendServers = `${prefix}.vsListLegendServers`;
export const vsListLegendAlerts = `${prefix}.vsListLegendAlerts`;
export const emptyVSListMessage = `${prefix}.emptyVSListMessage`;
export const numberOfGlobalServices = `${prefix}.numberOfGlobalServices`;
export const emptyGslbServiceListNoSearchMatchMessage = `${prefix}.emptyGslbServiceListNoSearchMatchMessage`;
export const emptyGslbServiceListMessage = `${prefix}.emptyGslbServiceListMessage`;
export const insufficientPermissionsAlertMessage = `${prefix}.insufficientPermissionsAlertMessage`;
export const showHideLegendTitle = `${prefix}.showHideLegendTitle`;

export const ENGLISH = {
    [basicVsCreateActionLabel]: 'Basic Setup',
    [advancedVsCreateActionLabel]: 'Advanced Setup',
    [viewTypeSelectorLabel]: 'View',
    [viewTypeVsList]: 'VS List',
    [viewTypeVsTree]: 'VS Tree',
    [viewTypeGslbServicesLabel]: 'GSLB Services',
    [sortBySelectorLabel]: 'Sort By',
    [sortByHealthScoreLabel]: 'Health Score',
    [sortByNameLabel]: 'Name',
    [searchPlaceholder]: 'Search',
    [createVirtualServiceLabel]: 'Create Virtual Service',
    [numberOfVirtualServices]: 'Virtual Services ({0})',
    [emptyVSListNoSearchMatchMessage]: 'No Virtual Services match your search criteria.',
    [collapseAllRows]: 'Collapse All',
    [expandAllRows]: 'Expand All',
    [vsListLegendHealthScore]: 'Health Score',
    [vsListLegendPools]: 'Pools',
    [vsListLegendServers]: 'Servers',
    [vsListLegendAlerts]: 'Alerts',
    [emptyVSListMessage]: 'No Virtual Services have been created.',
    [numberOfGlobalServices]: 'Global Services ({0})',
    [emptyGslbServiceListNoSearchMatchMessage]: 'No GSLB Services match your search criteria.',
    [emptyGslbServiceListMessage]: 'No GSLB Services have been created.',
    [insufficientPermissionsAlertMessage]: 'User does not have sufficient permissions for VirtualService or GslbService, so dashboard is empty.',
    [showHideLegendTitle]: 'ShowHide Legend',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'clientinsightscontroller';
const prefix = `${moduleName}.${componentName}`;

export const navigationTimingHeader = `${prefix}.navigationTimingHeader`;
export const clientDimensionsHeader = `${prefix}.clientDimensionsHeader`;
export const clearFiltersButtonLabel = `${prefix}.clearFiltersButtonLabel`;
export const hideTableButtonLabel = `${prefix}.hideTableButtonLabel`;
export const locationLabel = `${prefix}.locationLabel`;
export const deviceLabel = `${prefix}.deviceLabel`;
export const browserLabel = `${prefix}.browserLabel`;
export const operatingSystemLabel = `${prefix}.operatingSystemLabel`;
export const topUrlsLabel = `${prefix}.topUrlsLabel`;

export const ENGLISH = {
    [navigationTimingHeader]: 'Navigation Timing',
    [clientDimensionsHeader]: 'Client Dimensions',
    [clearFiltersButtonLabel]: 'Clear Filters',
    [hideTableButtonLabel]: 'Hide table',
    [locationLabel]: 'Location',
    [deviceLabel]: 'Device',
    [browserLabel]: 'Browser',
    [operatingSystemLabel]: 'Operating System',
    [topUrlsLabel]: 'Top URLs',
};const moduleName = 'ajslegacy';
const componentName = 'clientipaddresscontroller';
const prefix = `${moduleName}.${componentName}`;

export const clientIpAddressHeader = `${prefix}.clientIpAddressHeader`;
export const isRadioLabel = `${prefix}.isRadioLabel`;
export const isNotRadioLabel = `${prefix}.isNotRadioLabel`;
export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const removeMatchTitle = `${prefix}.removeMatchTitle`;
export const sourceIpAddressHeader = `${prefix}.sourceIpAddressHeader`;

export const ENGLISH = {
    [clientIpAddressHeader]: 'Client IP Address',
    [isRadioLabel]: 'Is',
    [isNotRadioLabel]: 'Is not',
    [ipAddressInputLabel]: 'IP Address',
    [removeMatchTitle]: 'Remove Match',
    [sourceIpAddressHeader]: 'Source IP Address',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'uploadpackagescontroller';
const prefix = `${moduleName}.${componentName}`;

export const selectHsmPackageUploadMessage = `${prefix}.selectHsmPackageUploadMessage`;
export const selectFileBtnLabel = `${prefix}.selectFileBtnLabel`;
export const uploadFileBtnLabel = `${prefix}.uploadFileBtnLabel`;
export const cancelUploadBtnLabel = `${prefix}.cancelUploadBtnLabel`;
export const errorLabel = `${prefix}.errorLabel`;

export const ENGLISH = {
    [selectHsmPackageUploadMessage]: 'Please select the HSM package to upload.',
    [selectFileBtnLabel]: 'Select File',
    [uploadFileBtnLabel]: 'Upload File',
    [cancelUploadBtnLabel]: 'Cancel Upload',
    [errorLabel]: 'Error: {0}',
};const moduleName = 'ajslegacy';
const componentName = 'ipreputationtypematchcontroller';
const prefix = `${moduleName}.${componentName}`;

export const andText = `${prefix}.andText`;
export const ipReputationLabel = `${prefix}.ipReputationLabel`;
export const isRadioLabel = `${prefix}.isRadioLabel`;
export const isNotRadioLabel = `${prefix}.isNotRadioLabel`;
export const ipReputationTypeInputLabel = `${prefix}.ipReputationTypeInputLabel`;
export const ipReputationTypeInputPlaceholder = `${prefix}.ipReputationTypeInputPlaceholder`;
export const removeMatchTitle = `${prefix}.removeMatchTitle`;

export const ENGLISH = {
    [andText]: 'and',
    [ipReputationLabel]: 'IP Reputation',
    [isRadioLabel]: 'Is',
    [isNotRadioLabel]: 'Is not',
    [ipReputationTypeInputLabel]: 'IP Reputation Type',
    [ipReputationTypeInputPlaceholder]: 'Select IP Reputation Type',
    [removeMatchTitle]: 'Remove Match',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'vstrafficcapturecontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleDate = `${prefix}.columnTitleDate`;
export const columnTitleVirtualServiceName = `${prefix}.columnTitleVirtualServiceName`;
export const columnTitleSize = `${prefix}.columnTitleSize`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const actionBtnDownload = `${prefix}.actionBtnDownload`;
export const captureConfigurationHeader = `${prefix}.captureConfigurationHeader`;
export const stopTrafficCaptureButtonLabel = `${prefix}.stopTrafficCaptureButtonLabel`;
export const captureStoppedDataLabel = `${prefix}.captureStoppedDataLabel`;
export const captureRunningDataLabel = `${prefix}.captureRunningDataLabel`;
export const captureFilePreparingDataLabel = `${prefix}.captureFilePreparingDataLabel`;
export const completedCapturesHeader = `${prefix}.completedCapturesHeader`;

export const ENGLISH = {
    [columnTitleDate]: 'Date',
    [columnTitleVirtualServiceName]: 'Virtual Service Name',
    [columnTitleSize]: 'Size',
    [actionBtnDelete]: 'Delete',
    [actionBtnDownload]: 'Download',
    [captureConfigurationHeader]: 'Capture Configuration',
    [stopTrafficCaptureButtonLabel]: 'Click to stop traffic capture.',
    [captureStoppedDataLabel]: 'Capture is Stopped',
    [captureRunningDataLabel]: 'Capture is Running',
    [captureFilePreparingDataLabel]: 'Capture file is being prepared',
    [completedCapturesHeader]: 'Completed Captures',
};const moduleName = 'ajslegacy';
const componentName = 'gslbserviceeditcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitlePriority = `${prefix}.columnTitlePriority`;
export const columnTitleAlgorithm = `${prefix}.columnTitleAlgorithm`;
export const columnTitleDescription = `${prefix}.columnTitleDescription`;
export const actionTitleEdit = `${prefix}.actionTitleEdit`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const editGslbServiceTitle = `${prefix}.editGslbServiceTitle`;
export const newGslbServiceTitle = `${prefix}.newGslbServiceTitle`;
export const newGslbPoolTitle = `${prefix}.newGslbPoolTitle`;
export const editGslbPoolTitle = `${prefix}.editGslbPoolTitle`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const applicationNameTooltipLabel = `${prefix}.applicationNameTooltipLabel`;
export const applicationNameInputLabel = `${prefix}.applicationNameInputLabel`;
export const subdomainInputLabel = `${prefix}.subdomainInputLabel`;
export const removeDomainNameTitle = `${prefix}.removeDomainNameTitle`;
export const addApplicationNameLinkLabel = `${prefix}.addApplicationNameLinkLabel`;
export const healthMonitorLabel = `${prefix}.healthMonitorLabel`;
export const healthMonitorScopeLabel = `${prefix}.healthMonitorScopeLabel`;
export const controllerHealthStatusLabel = `${prefix}.controllerHealthStatusLabel`;
export const selectGroupTypeLabel = `${prefix}.selectGroupTypeLabel`;
export const activeActiveLabel = `${prefix}.activeActiveLabel`;
export const activeStandbyLabel = `${prefix}.activeStandbyLabel`;
export const groupsLoadBalancingAlgorithmLabel = `${prefix}.groupsLoadBalancingAlgorithmLabel`;
export const selectInputPlaceholder = `${prefix}.selectInputPlaceholder`;
export const sitePersistenceCheckboxLabel = `${prefix}.sitePersistenceCheckboxLabel`;
export const siteCookieApplicationLabel = `${prefix}.siteCookieApplicationLabel`;
export const minimumServersLabel = `${prefix}.minimumServersLabel`;
export const minimumServersInputPlaceholder = `${prefix}.minimumServersInputPlaceholder`;
export const gslbPoolPlural = `${prefix}.gslbPoolPlural`;
export const addPoolLinkLabel = `${prefix}.addPoolLinkLabel`;
export const numberOfIpsLabel = `${prefix}.numberOfIpsLabel`;
export const downResponseLabel = `${prefix}.downResponseLabel`;
export const ttlServedByDnsServiceLabel = `${prefix}.ttlServedByDnsServiceLabel`;
export const defaultDnsServiceInputPlaceholder = `${prefix}.defaultDnsServiceInputPlaceholder`;
export const secInnerText = `${prefix}.secInnerText`;
export const resolveCnameCheckboxLabel = `${prefix}.resolveCnameCheckboxLabel`;
export const poolHeader = `${prefix}.poolHeader`;
export const poolMembersLoadBalancingAlgorithmLabel = `${prefix}.poolMembersLoadBalancingAlgorithmLabel`;
export const poolMembersFallbackLoadBalancingAlgorithmLabel = `${prefix}.poolMembersFallbackLoadBalancingAlgorithmLabel`;
export const poolMembersFallbackMessage = `${prefix}.poolMembersFallbackMessage`;
export const poolMembersLoadMessage = `${prefix}.poolMembersLoadMessage`;
export const minHealthMonitorsLabel = `${prefix}.minHealthMonitorsLabel`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const doneBtnLabel = `${prefix}.doneBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitlePriority]: 'Priority',
    [columnTitleAlgorithm]: 'Algorithm',
    [columnTitleDescription]: 'Description',
    [actionTitleEdit]: 'Edit',
    [actionTitleDelete]: 'Delete',
    [editGslbServiceTitle]: 'Edit GSLB Service',
    [newGslbServiceTitle]: 'New GSLB Service',
    [newGslbPoolTitle]: 'New GSLB Pool',
    [editGslbPoolTitle]: 'Edit GSLB Pool',
    [nameInputLabel]: 'Name',
    [applicationNameTooltipLabel]: 'Application name of the fully qualified domain name of the GSLB service.',
    [applicationNameInputLabel]: 'Application Name',
    [subdomainInputLabel]: 'Subdomain',
    [removeDomainNameTitle]: 'Remove Domain Name',
    [addApplicationNameLinkLabel]: 'Add Application Name',
    [healthMonitorLabel]: 'Health Monitor',
    [healthMonitorScopeLabel]: 'Health Monitor Scope',
    [controllerHealthStatusLabel]: 'Controller Health Status',
    [selectGroupTypeLabel]: 'Select Group Type',
    [activeActiveLabel]: 'Active Active',
    [activeStandbyLabel]: 'Active Standby',
    [groupsLoadBalancingAlgorithmLabel]: 'Groups Load Balancing Algorithm',
    [selectInputPlaceholder]: 'Select',
    [sitePersistenceCheckboxLabel]: 'Site Persistence',
    [siteCookieApplicationLabel]: 'Site Cookie Application Persistence Profile',
    [minimumServersLabel]: 'Minimum number of Servers',
    [minimumServersInputPlaceholder]: 'Min number of servers',
    [gslbPoolPlural]: '{0, plural, one{GSLB pool} other{GSLB pools}}',
    [addPoolLinkLabel]: 'Add Pool',
    [numberOfIpsLabel]: 'Number of IPs returned by DNS server',
    [downResponseLabel]: 'Down Response',
    [ttlServedByDnsServiceLabel]: 'TTL served by DNS Service',
    [defaultDnsServiceInputPlaceholder]: 'Default from DNS Service',
    [secInnerText]: 'Sec',
    [resolveCnameCheckboxLabel]: 'Resolve CNAME',
    [poolHeader]: 'Pool',
    [poolMembersLoadBalancingAlgorithmLabel]: 'Pool Members Load Balancing Algorithm',
    [poolMembersFallbackLoadBalancingAlgorithmLabel]: 'Pool Members Fallback Load Balancing Algorithm',
    [poolMembersFallbackMessage]: 'Pool Members Fallback Load Balancing Algorithm Mask',
    [poolMembersLoadMessage]: 'Pool Members Load Balancing Algorithm Mask',
    [minHealthMonitorsLabel]: 'Min. Health Monitors to consider server \'up\'',
    [descriptionLabel]: 'Description',
    [doneBtnLabel]: 'Done',
    [saveBtnLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'eventslistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const totalEventsPlural = `${prefix}.totalEventsPlural`;
export const includeInternalCheckboxLabel = `${prefix}.includeInternalCheckboxLabel`;
export const zoomToSelectedLink = `${prefix}.zoomToSelectedLink`;
export const reloadMoreAvailableEventsLink = `${prefix}.reloadMoreAvailableEventsLink`;

export const ENGLISH = {
    [totalEventsPlural]: '{0, plural, one{Total <span class="seltotalitems"><strong>#<strong><span> Event} other{Total <span class="seltotalitems"><strong>#<strong><span> Events}}',
    [includeInternalCheckboxLabel]: 'Include Internal',
    [zoomToSelectedLink]: 'Zoom to selected',
    [reloadMoreAvailableEventsLink]: 'More events available. Please ##0reload list##1',
};const moduleName = 'ajslegacy';
const componentName = 'policygridmenutooltipcontroller';
const prefix = `${moduleName}.${componentName}`;

export const editLabel = `${prefix}.editLabel`;
export const moveToLabel = `${prefix}.moveToLabel`;
export const duplicateRuleLabel = `${prefix}.duplicateRuleLabel`;

export const ENGLISH = {
    [editLabel]: 'Edit',
    [moveToLabel]: 'Move to',
    [duplicateRuleLabel]: 'Duplicate rule',
};const moduleName = 'ajslegacy';
const componentName = 'matchdropdowncontroller';
const prefix = `${moduleName}.${componentName}`;

export const addNewMatchInputPlaceholder = `${prefix}.addNewMatchInputPlaceholder`;

export const ENGLISH = {
    [addNewMatchInputPlaceholder]: 'Add New Match',
};const moduleName = 'ajslegacy';
const componentName = 'serverinfocontroller';
const prefix = `${moduleName}.${componentName}`;

export const serverHeader = `${prefix}.serverHeader`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const portLabel = `${prefix}.portLabel`;
export const ratioLabel = `${prefix}.ratioLabel`;
export const statusLabel = `${prefix}.statusLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const uptimeLabel = `${prefix}.uptimeLabel`;
export const downtimeLabel = `${prefix}.downtimeLabel`;

export const ENGLISH = {
    [serverHeader]: 'Server: <span class="selsubnavname">{0}<span>',
    [ipAddressLabel]: 'IP Address',
    [portLabel]: 'Port',
    [ratioLabel]: 'Ratio',
    [statusLabel]: 'Status',
    [enabledLabel]: 'Enabled',
    [disabledLabel]: 'Deactivated',
    [uptimeLabel]: 'Uptime',
    [downtimeLabel]: 'Downtime',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'loglistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const exportBtnLabel = `${prefix}.exportBtnLabel`;
export const totalLogsPluralLabel = `${prefix}.totalLogsPluralLabel`;
export const logThrottlingIsOnLabel = `${prefix}.logThrottlingIsOnLabel`;
export const zoomToSelectedLink = `${prefix}.zoomToSelectedLink`;
export const nonSignificantLogsLabel = `${prefix}.nonSignificantLogsLabel`;
export const significantLogsLabel = `${prefix}.significantLogsLabel`;
export const reloadMoreLogsMessage = `${prefix}.reloadMoreLogsMessage`;
export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleClientIp = `${prefix}.columnTitleClientIp`;
export const columnTitleClientApp = `${prefix}.columnTitleClientApp`;
export const columnTitlePort = `${prefix}.columnTitlePort`;
export const columnTitleServerIp = `${prefix}.columnTitleServerIp`;
export const columnTitleViolationResolutions = `${prefix}.columnTitleViolationResolutions`;
export const columnTitleViolationThreatNames = `${prefix}.columnTitleViolationThreatNames`;
export const columnTitleBytes = `${prefix}.columnTitleBytes`;
export const durationLinkLabel = `${prefix}.durationLinkLabel`;
export const timeLineLinkLabel = `${prefix}.timeLineLinkLabel`;
export const tooManyLogsToShowMessage = `${prefix}.tooManyLogsToShowMessage`;
export const columnTitleRequest = `${prefix}.columnTitleRequest`;
export const columnTitleResponse = `${prefix}.columnTitleResponse`;
export const columnTitleLength = `${prefix}.columnTitleLength`;
export const columnTitleProtocol = `${prefix}.columnTitleProtocol`;
export const columnTitleDnsRequestType = `${prefix}.columnTitleDnsRequestType`;
export const columnTitleDomainName = `${prefix}.columnTitleDomainName`;
export const poolNotAssignedMessage = `${prefix}.poolNotAssignedMessage`;
export const noLogsAvailableMessage = `${prefix}.noLogsAvailableMessage`;
export const summariesOptionLabel = `${prefix}.summariesOptionLabel`;
export const savedSearchesOptionLabel = `${prefix}.savedSearchesOptionLabel`;
export const logAnalyticsLabel = `${prefix}.logAnalyticsLabel`;
export const wafAnalyticsHeader = `${prefix}.wafAnalyticsHeader`;
export const columnTitleWafTags = `${prefix}.columnTitleWafTags`;
export const columnTitleWafRules = `${prefix}.columnTitleWafRules`;
export const columnTitleWafGroups = `${prefix}.columnTitleWafGroups`;
export const columnTitleWafLatency = `${prefix}.columnTitleWafLatency`;
export const clientAnalyticsHeader = `${prefix}.clientAnalyticsHeader`;
export const columnTitleBrowser = `${prefix}.columnTitleBrowser`;
export const columnTitleClientOs = `${prefix}.columnTitleClientOs`;
export const columnTitleDevice = `${prefix}.columnTitleDevice`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const columnTitleLocation = `${prefix}.columnTitleLocation`;
export const columnTitleEndToEnd = `${prefix}.columnTitleEndToEnd`;
export const columnTitleUserId = `${prefix}.columnTitleUserId`;
export const loadBalancerAnalyticsHeader = `${prefix}.loadBalancerAnalyticsHeader`;
export const columnTitlePolicies = `${prefix}.columnTitlePolicies`;
export const columnTitleVsIpAddress = `${prefix}.columnTitleVsIpAddress`;
export const columnTitleServerIpAddress = `${prefix}.columnTitleServerIpAddress`;
export const columnTitleServiceEngine = `${prefix}.columnTitleServiceEngine`;
export const requestAnalyticsHeader = `${prefix}.requestAnalyticsHeader`;
export const columnTitleReferer = `${prefix}.columnTitleReferer`;
export const columnTitleUrlPath = `${prefix}.columnTitleUrlPath`;
export const columnTitleHostHeader = `${prefix}.columnTitleHostHeader`;
export const columnTitleHttpVersion = `${prefix}.columnTitleHttpVersion`;
export const columnTitleRequestLength = `${prefix}.columnTitleRequestLength`;
export const columnTitleRequestType = `${prefix}.columnTitleRequestType`;
export const columnTitleResponseCode = `${prefix}.columnTitleResponseCode`;
export const columnTitleResponseContentType = `${prefix}.columnTitleResponseContentType`;
export const columnTitleResponseLength = `${prefix}.columnTitleResponseLength`;
export const icapAnalyticsHeader = `${prefix}.icapAnalyticsHeader`;
export const columnTitleAction = `${prefix}.columnTitleAction`;
export const columnTitleLatency = `${prefix}.columnTitleLatency`;
export const columnTitleIcapResponseCode = `${prefix}.columnTitleIcapResponseCode`;
export const columnTitleHttpResponseCode = `${prefix}.columnTitleHttpResponseCode`;
export const significanceHeader = `${prefix}.significanceHeader`;
export const columnTitleSignificance = `${prefix}.columnTitleSignificance`;
export const columnTitleEteTcp = `${prefix}.columnTitleEteTcp`;
export const columnTitleEteUdp = `${prefix}.columnTitleEteUdp`;
export const columnTitleFqdnDomainName = `${prefix}.columnTitleFqdnDomainName`;
export const columnTitleClientIpAddress = `${prefix}.columnTitleClientIpAddress`;
export const columnTitleQueryType = `${prefix}.columnTitleQueryType`;
export const columnTitleRecordSource = `${prefix}.columnTitleRecordSource`;
export const columnTitleGslbServiceName = `${prefix}.columnTitleGslbServiceName`;
export const enableNonSignificantLogsMessage = `${prefix}.enableNonSignificantLogsMessage`;
export const botColumnHeader = `${prefix}.botColumnHeader`;
export const columnBotClassification = `${prefix}.columnBotClassification`;
export const l4LogsLabel = `${prefix}.l4LogsLabel`;
export const l7LogsLabel = `${prefix}.l7LogsLabel`;
export const recommendationsTooltip = `${prefix}.recommendationsTooltip`;

export const ENGLISH = {
    [exportBtnLabel]: 'Export',
    [totalLogsPluralLabel]: '{0, plural, one{Total <strong class="seltotallogs">#<strong> Log} other{Total <strong class="seltotallogs">#<strong> Logs}}',
    [logThrottlingIsOnLabel]: '(Log Throttling is ON)',
    [zoomToSelectedLink]: 'Zoom to selected',
    [nonSignificantLogsLabel]: 'NonSignificant Logs',
    [significantLogsLabel]: 'Significant Logs',
    [reloadMoreLogsMessage]: 'More logs available. Please ##0reload list##1',
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleClientIp]: 'Client IP',
    [columnTitleClientApp]: 'Client App',
    [columnTitlePort]: 'Port',
    [columnTitleServerIp]: 'Server IP',
    [columnTitleViolationResolutions]: 'Violation Resolutions',
    [columnTitleViolationThreatNames]: 'Violation Threat Names',
    [columnTitleBytes]: 'Bytes',
    [durationLinkLabel]: 'Duration',
    [timeLineLinkLabel]: 'Timeline',
    [tooManyLogsToShowMessage]: 'Too many logs to show: either select a smaller time window or apply more filters.',
    [columnTitleRequest]: 'Request',
    [columnTitleResponse]: 'Response',
    [columnTitleLength]: 'Length',
    [columnTitleProtocol]: 'Protocol',
    [columnTitleDnsRequestType]: 'DNS Request Type',
    [columnTitleDomainName]: 'Domain Name',
    [poolNotAssignedMessage]: 'This pool is not assigned to any Virtual Service.',
    [noLogsAvailableMessage]: 'No logs available for this timeframe and filters.',
    [summariesOptionLabel]: 'Summaries',
    [savedSearchesOptionLabel]: 'Saved Searches',
    [logAnalyticsLabel]: 'Log Analytics',
    [wafAnalyticsHeader]: 'WAF Analytics',
    [columnTitleWafTags]: 'WAF Tags',
    [columnTitleWafRules]: 'WAF Rules',
    [columnTitleWafGroups]: 'WAF Groups',
    [columnTitleWafLatency]: 'WAF Latency',
    [clientAnalyticsHeader]: 'Client Analytics',
    [columnTitleBrowser]: 'Browser',
    [columnTitleClientOs]: 'Client OS',
    [columnTitleDevice]: 'Device',
    [columnTitleIpAddress]: 'IP Address',
    [columnTitleLocation]: 'Location',
    [columnTitleEndToEnd]: 'End to End',
    [columnTitleUserId]: 'User ID',
    [loadBalancerAnalyticsHeader]: 'Load Balancer Analytics',
    [columnTitlePolicies]: 'Policies',
    [columnTitleVsIpAddress]: 'VS IP Address',
    [columnTitleServerIpAddress]: 'Server IP Address',
    [columnTitleServiceEngine]: 'Service Engine',
    [requestAnalyticsHeader]: 'Request Analytics',
    [columnTitleReferer]: 'Referer',
    [columnTitleUrlPath]: 'URL Path',
    [columnTitleHostHeader]: 'Host Header',
    [columnTitleHttpVersion]: 'HTTP Version',
    [columnTitleRequestLength]: 'Request Length',
    [columnTitleRequestType]: 'Request Type',
    [columnTitleResponseCode]: 'Response Code',
    [columnTitleResponseContentType]: 'Response Content Type',
    [columnTitleResponseLength]: 'Response Length',
    [icapAnalyticsHeader]: 'ICAP Analytics',
    [columnTitleAction]: 'Action',
    [columnTitleLatency]: 'Latency',
    [columnTitleIcapResponseCode]: 'ICAP Response Code',
    [columnTitleHttpResponseCode]: 'HTTP Response Code',
    [significanceHeader]: 'Significance',
    [columnTitleSignificance]: 'Significance',
    [columnTitleEteTcp]: 'End to End (TCP)',
    [columnTitleEteUdp]: 'End to End (UDP)',
    [columnTitleFqdnDomainName]: 'FQDNDomain Name',
    [columnTitleClientIpAddress]: 'Client IP Address',
    [columnTitleQueryType]: 'Query Type',
    [columnTitleRecordSource]: 'Record Source',
    [columnTitleGslbServiceName]: 'GSLB Service Name',
    [enableNonSignificantLogsMessage]: 'Please enable NonSignificant logging in Virtual Service Settings.',
    [botColumnHeader]: 'Bot Analytics',
    [columnBotClassification]: 'Classifications',
    [l4LogsLabel]: 'L4 Logs',
    [l7LogsLabel]: 'L7 Logs',
    [recommendationsTooltip]: 'Recommendations',
};const moduleName = 'ajslegacy';
const componentName = 'poolserverlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const requestsPerSecondFullTitle = `${prefix}.requestsPerSecondFullTitle`;
export const columnTitleServerName = `${prefix}.columnTitleServerName`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const columnTitleDescription = `${prefix}.columnTitleDescription`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const columnTitleHealth = `${prefix}.columnTitleHealth`;
export const columnTitlePort = `${prefix}.columnTitlePort`;
export const columnTitleRatio = `${prefix}.columnTitleRatio`;
export const actionTitleEnable = `${prefix}.actionTitleEnable`;
export const actionTitleDisable = `${prefix}.actionTitleDisable`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const gridDefaultPortLabel = `${prefix}.gridDefaultPortLabel`;
export const blastPortLabel = `${prefix}.blastPortLabel`;
export const pcoipPortLabel = `${prefix}.pcoipPortLabel`;
export const tunnelPortLabel = `${prefix}.tunnelPortLabel`;

export const ENGLISH = {
    [requestsPerSecondFullTitle]: 'Requests per second',
    [columnTitleServerName]: 'Server Name',
    [columnTitleIpAddress]: 'IP Address',
    [columnTitleDescription]: 'Description',
    [columnTitleStatus]: 'Status',
    [columnTitleHealth]: 'Health',
    [columnTitlePort]: 'Port',
    [columnTitleRatio]: 'Ratio',
    [actionTitleEnable]: 'Enable',
    [actionTitleDisable]: 'Disable',
    [actionTitleDelete]: 'Delete',
    [enabledLabel]: 'Enabled',
    [disabledLabel]: 'Disabled',
    [gridDefaultPortLabel]: 'Default Port',
    [blastPortLabel]: 'Blast',
    [pcoipPortLabel]: 'PCoIP',
    [tunnelPortLabel]: 'Tunnel',
};const moduleName = 'ajslegacy';
const componentName = 'serviceportcontroller';
const prefix = `${moduleName}.${componentName}`;

export const servicePortLabel = `${prefix}.servicePortLabel`;
export const isRadioLabel = `${prefix}.isRadioLabel`;
export const isNotRadioLabel = `${prefix}.isNotRadioLabel`;
export const portsLabel = `${prefix}.portsLabel`;
export const removeMatchTitle = `${prefix}.removeMatchTitle`;

export const ENGLISH = {
    [servicePortLabel]: 'Service Port',
    [isRadioLabel]: 'Is',
    [isNotRadioLabel]: 'Is not',
    [portsLabel]: 'Ports',
    [removeMatchTitle]: 'Remove Match',
};const moduleName = 'ajslegacy';
const componentName = 'poolgrouplistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleNumberOfPools = `${prefix}.columnTitleNumberOfPools`;
export const columnTitleVirtualServices = `${prefix}.columnTitleVirtualServices`;
export const columnTitleCloud = `${prefix}.columnTitleCloud`;
export const createPoolGroupButtonLabel = `${prefix}.createPoolGroupButtonLabel`;
export const emptyPoolGroupSearchMatchLabel = `${prefix}.emptyPoolGroupSearchMatchLabel`;
export const emptyPoolGroupSearchLabel = `${prefix}.emptyPoolGroupSearchLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleNumberOfPools]: 'Number of Pools',
    [columnTitleVirtualServices]: 'Virtual Services',
    [columnTitleCloud]: 'Cloud',
    [createPoolGroupButtonLabel]: 'Create Pool Group',
    [emptyPoolGroupSearchMatchLabel]: 'No Pool Groups match your search criteria.',
    [emptyPoolGroupSearchLabel]: 'No Pool Groups found.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualservicesecuritycontroller';
const prefix = `${moduleName}.${componentName}`;

export const securitySummaryTitle = `${prefix}.securitySummaryTitle`;

export const ENGLISH = {
    [securitySummaryTitle]: 'Security Summary',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'virtualserviceanalyticscontroller';
const prefix = `${moduleName}.${componentName}`;

export const virtualServiceMetricsHeader = `${prefix}.virtualServiceMetricsHeader`;
export const poolsLabel = `${prefix}.poolsLabel`;

export const ENGLISH = {
    [virtualServiceMetricsHeader]: 'Virtual Service Metrics',
    [poolsLabel]: 'Pools',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicednsrecordscontroller';
const prefix = `${moduleName}.${componentName}`;

export const totalValuesHeader = `${prefix}.totalValuesHeader`;
export const columnTitleUdpQueries = `${prefix}.columnTitleUdpQueries`;
export const columnTitleErrors = `${prefix}.columnTitleErrors`;
export const columnTitleSource = `${prefix}.columnTitleSource`;
export const columnTitleService = `${prefix}.columnTitleService`;
export const columnTitleTenant = `${prefix}.columnTitleTenant`;

export const ENGLISH = {
    [totalValuesHeader]: 'Total Values',
    [columnTitleUdpQueries]: 'UDP Queries (sec)',
    [columnTitleErrors]: 'Errors (sec)',
    [columnTitleSource]: 'Source',
    [columnTitleService]: 'Service',
    [columnTitleTenant]: 'Tenant',
};const moduleName = 'ajslegacy';
const componentName = 'poolanalyticscontroller';
const prefix = `${moduleName}.${componentName}`;

export const virtualServiceLabel = `${prefix}.virtualServiceLabel`;
export const poolMetricsHeader = `${prefix}.poolMetricsHeader`;

export const ENGLISH = {
    [virtualServiceLabel]: 'Virtual Service',
    [poolMetricsHeader]: 'Pool Metrics',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'createvlaninterfacecontroller';
const prefix = `${moduleName}.${componentName}`;

export const ipAddressMaskInputLabel = `${prefix}.ipAddressMaskInputLabel`;
export const removeIpPrefixBtnLabel = `${prefix}.removeIpPrefixBtnLabel`;
export const addIpAddressLinkLabel = `${prefix}.addIpAddressLinkLabel`;
export const parentInterfaceInputLabel = `${prefix}.parentInterfaceInputLabel`;
export const parentInterfaceInputPlaceholder = `${prefix}.parentInterfaceInputPlaceholder`;
export const vrfInputPlaceholder = `${prefix}.vrfInputPlaceholder`;
export const vipAddressInputLabel = `${prefix}.vipAddressInputLabel`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const createVlanInterfaceLabel = `${prefix}.createVlanInterfaceLabel`;
export const editVlanInterfaceLabel = `${prefix}.editVlanInterfaceLabel`;
export const duplicateVlanErrorMessage = `${prefix}.duplicateVlanErrorMessage`;

export const ENGLISH = {
    [ipAddressMaskInputLabel]: 'IP Addressmask',
    [removeIpPrefixBtnLabel]: 'Remove IP Prefix',
    [addIpAddressLinkLabel]: '+ Add IP Address',
    [parentInterfaceInputLabel]: 'Parent Interface',
    [parentInterfaceInputPlaceholder]: 'Select Parent Interface',
    [vrfInputPlaceholder]: 'Select VRF',
    [vipAddressInputLabel]: 'VIP Address',
    [cancelBtnLabel]: 'Cancel',
    [saveBtnLabel]: 'Save',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Select Parent Interface',
    [createVlanInterfaceLabel]: 'Create VLAN Interface: {0}',
    [editVlanInterfaceLabel]: 'Edit VLAN Interface: {0}',
    [duplicateVlanErrorMessage]: 'A VLAN with this name already exists.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'cloudstatusmodalcontroller';
const prefix = `${moduleName}.${componentName}`;

export const cloudStatusDetailsHeader = `${prefix}.cloudStatusDetailsHeader`;
export const loadingLabel = `${prefix}.loadingLabel`;
export const unableAccessEsxHostsHeader = `${prefix}.unableAccessEsxHostsHeader`;
export const columnTitleHostName = `${prefix}.columnTitleHostName`;
export const columnTitlePowerStatus = `${prefix}.columnTitlePowerStatus`;
export const columnTitleMaintenanceMode = `${prefix}.columnTitleMaintenanceMode`;
export const columnTitleConnectedToVcenter = `${prefix}.columnTitleConnectedToVcenter`;
export const columnTitleAccessibleFromController = `${prefix}.columnTitleAccessibleFromController`;
export const columnTilteQuarantined = `${prefix}.columnTilteQuarantined`;
export const onStatusLabel = `${prefix}.onStatusLabel`;
export const offStatusLabel = `${prefix}.offStatusLabel`;
export const yesStatusLabel = `${prefix}.yesStatusLabel`;
export const noStatusLabel = `${prefix}.noStatusLabel`;
export const errorsInManagementNetworkHeader = `${prefix}.errorsInManagementNetworkHeader`;
export const overlappingSubnetsHeader = `${prefix}.overlappingSubnetsHeader`;
export const columnTitleNetworkName = `${prefix}.columnTitleNetworkName`;
export const columnTitleSubnet = `${prefix}.columnTitleSubnet`;

export const ENGLISH = {
    [cloudStatusDetailsHeader]: 'Cloud Status Details',
    [loadingLabel]: 'Loading...',
    [unableAccessEsxHostsHeader]: 'Unable to Access {0} ESX Hosts',
    [columnTitleHostName]: 'Host Name',
    [columnTitlePowerStatus]: 'Power Status',
    [columnTitleMaintenanceMode]: 'Maintenance Mode',
    [columnTitleConnectedToVcenter]: 'Connected to vCenter',
    [columnTitleAccessibleFromController]: 'Accessible from Controller',
    [columnTilteQuarantined]: 'Quarantined',
    [onStatusLabel]: 'ON',
    [offStatusLabel]: 'OFF',
    [yesStatusLabel]: 'Yes',
    [noStatusLabel]: 'No',
    [errorsInManagementNetworkHeader]: 'Errors in Management Network',
    [overlappingSubnetsHeader]: 'Overlapping Subnets',
    [columnTitleNetworkName]: 'Network Name',
    [columnTitleSubnet]: 'Subnet',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'chartvaluecontroller';
const prefix = `${moduleName}.${componentName}`;

export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const notAvailableLabel = `${prefix}.notAvailableLabel`;
export const emptyValueLabel = `${prefix}.emptyValueLabel`;
export const errorsLabel = `${prefix}.errorsLabel`;

export const ENGLISH = {
    [emptyDataLabel]: 'No Data',
    [notAvailableLabel]: 'Not Available',
    [emptyValueLabel]: 'NA',
    [errorsLabel]: 'sec errors',
};const moduleName = 'ajslegacy';
const componentName = 'virtualservicepolicyheadercontroller';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameInputLabel = `${prefix}.ruleNameInputLabel`;
export const noneBtnLabel = `${prefix}.noneBtnLabel`;
export const logBtnLabel = `${prefix}.logBtnLabel`;
export const logWithHeadersBtnLabel = `${prefix}.logWithHeadersBtnLabel`;

export const ENGLISH = {
    [ruleNameInputLabel]: 'Rule Name',
    [noneBtnLabel]: 'None',
    [logBtnLabel]: 'Log',
    [logWithHeadersBtnLabel]: 'Log with headers',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'gslbcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const leaderLabel = `${prefix}.leaderLabel`;
export const activeLabel = `${prefix}.activeLabel`;
export const passiveLabel = `${prefix}.passiveLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const currentLabel = `${prefix}.currentLabel`;
export const columnTitleIpAdress = `${prefix}.columnTitleIpAdress`;
export const columnTitlePort = `${prefix}.columnTitlePort`;
export const columnTitleUsername = `${prefix}.columnTitleUsername`;
export const columnTitleSiteStatus = `${prefix}.columnTitleSiteStatus`;
export const columnTitleSwVersion = `${prefix}.columnTitleSwVersion`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const actionBtnEnable = `${prefix}.actionBtnEnable`;
export const actionBtnDisable = `${prefix}.actionBtnDisable`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const columnTitleReplication = `${prefix}.columnTitleReplication`;
export const actionBtnKickoff = `${prefix}.actionBtnKickoff`;
export const columnTitleEnabled = `${prefix}.columnTitleEnabled`;
export const confirmMessage = `${prefix}.confirmMessage`;
export const gslbOffHeader = `${prefix}.gslbOffHeader`;
export const addNewSiteBtnLabel = `${prefix}.addNewSiteBtnLabel`;
export const add3rdPartySiteBtnLabel = `${prefix}.add3rdPartySiteBtnLabel`;
export const subdomainsDelegatedToGslbHeader = `${prefix}.subdomainsDelegatedToGslbHeader`;
export const emptySubdomainsSelectedLabel = `${prefix}.emptySubdomainsSelectedLabel`;
export const activeMembersHeader = `${prefix}.activeMembersHeader`;
export const replicationPolicyModeHeader = `${prefix}.replicationPolicyModeHeader`;
export const passiveMembersHeader = `${prefix}.passiveMembersHeader`;
export const thirdPartySitesHeader = `${prefix}.thirdPartySitesHeader`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [leaderLabel]: 'Leader',
    [activeLabel]: 'Active',
    [passiveLabel]: 'Passive',
    [disabledLabel]: '{0}, Disabled',
    [currentLabel]: '{0} (current)',
    [columnTitleIpAdress]: 'IP Address',
    [columnTitlePort]: 'Port',
    [columnTitleUsername]: 'Username',
    [columnTitleSiteStatus]: 'Site Status',
    [columnTitleSwVersion]: 'SW Version',
    [actionBtnDelete]: 'Delete',
    [actionBtnEnable]: 'Enable',
    [actionBtnDisable]: 'Disable',
    [actionBtnEdit]: 'Edit',
    [columnTitleReplication]: 'Replication',
    [actionBtnKickoff]: 'Kickoff Replication',
    [columnTitleEnabled]: 'Enabled',
    [confirmMessage]: 'GSLB Site configuration will be removed. Do you want to continue?',
    [gslbOffHeader]: 'GSLB: <strong>Off<strong>',
    [addNewSiteBtnLabel]: 'Add New Site',
    [add3rdPartySiteBtnLabel]: 'Add Thirdparty Site',
    [subdomainsDelegatedToGslbHeader]: 'Subdomains delegated to GSLB:',
    [emptySubdomainsSelectedLabel]: 'No subdomains selected',
    [activeMembersHeader]: 'Active Members',
    [replicationPolicyModeHeader]: '({0} Replication)',
    [passiveMembersHeader]: 'Passive Members',
    [thirdPartySitesHeader]: 'Thirdparty Sites',
};const moduleName = 'ajslegacy';
const componentName = 'networkcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const editNetworkCreateHeader = `${prefix}.editNetworkCreateHeader`;
export const newNetworkCreateHeader = `${prefix}.newNetworkCreateHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const ipAddressManagementHeader = `${prefix}.ipAddressManagementHeader`;
export const dhcpEnableInputLabel = `${prefix}.dhcpEnableInputLabel`;
export const ipV6AutoConfigurationInputLabel = `${prefix}.ipV6AutoConfigurationInputLabel`;
export const routingContextInputLabel = `${prefix}.routingContextInputLabel`;
export const routingContextInputPlaceholder = `${prefix}.routingContextInputPlaceholder`;
export const excludeDiscoveredSubnetsInputLabel = `${prefix}.excludeDiscoveredSubnetsInputLabel`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const cloudRequiredToCreateNetworkErrorMessage = `${prefix}.cloudRequiredToCreateNetworkErrorMessage`;

export const ENGLISH = {
    [editNetworkCreateHeader]: 'Edit Network Settings: {0}',
    [newNetworkCreateHeader]: 'New Network Settings: {0}',
    [nameInputLabel]: 'Name',
    [ipAddressManagementHeader]: 'IP Address Management',
    [dhcpEnableInputLabel]: 'DHCP Enabled',
    [ipV6AutoConfigurationInputLabel]: 'IPv6 Auto Configuration',
    [routingContextInputLabel]: 'Routing Context',
    [routingContextInputPlaceholder]: 'Select VRF',
    [excludeDiscoveredSubnetsInputLabel]: 'Exclude Discovered Subnets for Virtual Service Placement',
    [cancelBtnLabel]: 'Cancel',
    [saveBtnLabel]: 'Save',
    [cloudRequiredToCreateNetworkErrorMessage]: 'Cloud is required to create Network',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'cloudcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const seInProviderContextTooltip = `${prefix}.seInProviderContextTooltip`;
export const cloudSelectionTitle = `${prefix}.cloudSelectionTitle`;
export const selectCloudTitle = `${prefix}.selectCloudTitle`;
export const infrastructureTitle = `${prefix}.infrastructureTitle`;
export const dataCenterTitle = `${prefix}.dataCenterTitle`;
export const networkTitle = `${prefix}.networkTitle`;
export const roleMappingTitle = `${prefix}.roleMappingTitle`;
export const vpcNetworkEncryptionTitle = `${prefix}.vpcNetworkEncryptionTitle`;
export const dhcpSettingsTitle = `${prefix}.dhcpSettingsTitle`;
export const linuxServerConfigurationTitle = `${prefix}.linuxServerConfigurationTitle`;
export const credentialsTitle = `${prefix}.credentialsTitle`;
export const locationNetworkTitle = `${prefix}.locationNetworkTitle`;
export const generalTitle = `${prefix}.generalTitle`;
export const separateManagementInterfaceToolTip = `${prefix}.separateManagementInterfaceToolTip`;
export const vcenterVsphereLoginLabel = `${prefix}.vcenterVsphereLoginLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const usernameInputPlaceholder = `${prefix}.usernameInputPlaceholder`;
export const vcenterAddressInputLabel = `${prefix}.vcenterAddressInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const passwordInputPlaceholder = `${prefix}.passwordInputPlaceholder`;
export const accessPermissionInputLabel = `${prefix}.accessPermissionInputLabel`;
export const readButtonLabel = `${prefix}.readButtonLabel`;
export const writeButtonLabel = `${prefix}.writeButtonLabel`;
export const cloudNameInputPlaceholder = `${prefix}.cloudNameInputPlaceholder`;
export const licenseModelLabel = `${prefix}.licenseModelLabel`;
export const ipamProfileInputLabel = `${prefix}.ipamProfileInputLabel`;
export const selectIpamProfilePlaceholder = `${prefix}.selectIpamProfilePlaceholder`;
export const dnsProfileInputLabel = `${prefix}.dnsProfileInputLabel`;
export const selectDnsProfilePlaceholder = `${prefix}.selectDnsProfilePlaceholder`;
export const createIpamDnsProfileButtonLabel = `${prefix}.createIpamDnsProfileButtonLabel`;
export const selectDataCenterInputLabel = `${prefix}.selectDataCenterInputLabel`;
export const dataCenterInputLabel = `${prefix}.dataCenterInputLabel`;
export const selectDataCenterInputPlaceholder = `${prefix}.selectDataCenterInputPlaceholder`;
export const systemIpAddressManagementSettingLabel = `${prefix}.systemIpAddressManagementSettingLabel`;
export const defaultNetworkIpAddressManagementLabel = `${prefix}.defaultNetworkIpAddressManagementLabel`;
export const dhcpEnabledCheckboxLabel = `${prefix}.dhcpEnabledCheckboxLabel`;
export const ipv6AutoConfigurationCheckboxLabel = `${prefix}.ipv6AutoConfigurationCheckboxLabel`;
export const virtualServicePlacementSettingsLabel = `${prefix}.virtualServicePlacementSettingsLabel`;
export const preferStaticRoutesVsDirectlyConnectedNetworkLabel = `${prefix}.preferStaticRoutesVsDirectlyConnectedNetworkLabel`;
export const useStaticRoutesForNetworkResolutionOfVipLabel = `${prefix}.useStaticRoutesForNetworkResolutionOfVipLabel`;
export const selectManagementNetworkLabel = `${prefix}.selectManagementNetworkLabel`;
export const managementNetworkInputLabel = `${prefix}.managementNetworkInputLabel`;
export const selectManagementNetworkInputPlaceholder = `${prefix}.selectManagementNetworkInputPlaceholder`;
export const serviceEngineLabel = `${prefix}.serviceEngineLabel`;
export const ipAddressManagementNetworkLabel = `${prefix}.ipAddressManagementNetworkLabel`;
export const ipSubnetInputLabel = `${prefix}.ipSubnetInputLabel`;
export const defaultGatewayLabel = `${prefix}.defaultGatewayLabel`;
export const addStaticIpAddressPoolInputLabel = `${prefix}.addStaticIpAddressPoolInputLabel`;
export const stateBasedDnsRegistrationCheckboxLabel = `${prefix}.stateBasedDnsRegistrationCheckboxLabel`;
export const templateServiceEngineGroupInputLabel = `${prefix}.templateServiceEngineGroupInputLabel`;
export const templateSegGroupDropdownPlaceholder = `${prefix}.templateSegGroupDropdownPlaceholder`;
export const createServiceEngineGroupLabel = `${prefix}.createServiceEngineGroupLabel`;
export const nextBtnLabel = `${prefix}.nextBtnLabel`;
export const editClouldHeader = `${prefix}.editClouldHeader`;
export const newClouldHeader = `${prefix}.newClouldHeader`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;
export const completeBtnLabel = `${prefix}.completeBtnLabel`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const retryBtnLabel = `${prefix}.retryBtnLabel`;
export const previousBtnLabel = `${prefix}.previousBtnLabel`;
export const useIp4DhcpCheckboxLabel = `${prefix}.useIp4DhcpCheckboxLabel`;
export const useIp6DhcpCheckboxLabel = `${prefix}.useIp6DhcpCheckboxLabel`;
export const enableVipStaticRoutesCheckboxLabel = `${prefix}.enableVipStaticRoutesCheckboxLabel`;
export const preferStaticRoutesCheckboxLabel = `${prefix}.preferStaticRoutesCheckboxLabel`;
export const licenseModelHeader = `${prefix}.licenseModelHeader`;
export const ipamProfileInputPlaceholder = `${prefix}.ipamProfileInputPlaceholder`;
export const serviceEngineHeader = `${prefix}.serviceEngineHeader`;
export const openStackLoginHeader = `${prefix}.openStackLoginHeader`;
export const keystoneAuthUrlLabel = `${prefix}.keystoneAuthUrlLabel`;
export const allowSelfsignedCertificatesCheckboxLabel = `${prefix}.allowSelfsignedCertificatesCheckboxLabel`;
export const useKeystoneAuthCheckboxLabel = `${prefix}.useKeystoneAuthCheckboxLabel`;
export const useInternalUrlEndpointsCheckboxLabel = `${prefix}.useInternalUrlEndpointsCheckboxLabel`;
export const dnsProviderInputLabel = `${prefix}.dnsProviderInputLabel`;
export const dnsProviderInputPlaceholder = `${prefix}.dnsProviderInputPlaceholder`;
export const managementNetworkHeader = `${prefix}.managementNetworkHeader`;
export const adminTenantInputLabel = `${prefix}.adminTenantInputLabel`;
export const adminTenantInputPlaceholder = `${prefix}.adminTenantInputPlaceholder`;
export const regionNameInputLabel = `${prefix}.regionNameInputLabel`;
export const managementNetworkInputPlaceholder = `${prefix}.managementNetworkInputPlaceholder`;
export const freeUnusedFloatingIpAddressCheckboxLabel = `${prefix}.freeUnusedFloatingIpAddressCheckboxLabel`;
export const mapAviAdminToCloudAdminCheckboxLabel = `${prefix}.mapAviAdminToCloudAdminCheckboxLabel`;
export const serviceEngineOwnershipLabel = `${prefix}.serviceEngineOwnershipLabel`;
export const seWithinTenantContextRadioLabel = `${prefix}.seWithinTenantContextRadioLabel`;
export const seWithinAdminContextRadioLabel = `${prefix}.seWithinAdminContextRadioLabel`;
export const serviceEngineImageFormatLabel = `${prefix}.serviceEngineImageFormatLabel`;
export const importAllOpenStackKeystoneTenantsCheckboxLabel = `${prefix}.importAllOpenStackKeystoneTenantsCheckboxLabel`;
export const virtualServicePlacementSettingsHeader = `${prefix}.virtualServicePlacementSettingsHeader`;
export const preferStaticRoutesMessageCheckboxLabel = `${prefix}.preferStaticRoutesMessageCheckboxLabel`;
export const useStaticRoutesMessageCheckboxLabel = `${prefix}.useStaticRoutesMessageCheckboxLabel`;
export const advancedHeader = `${prefix}.advancedHeader`;
export const useAdminUrlCheckboxLabel = `${prefix}.useAdminUrlCheckboxLabel`;
export const antiAffinityCheckboxLael = `${prefix}.antiAffinityCheckboxLael`;
export const externalNetworksCheckboxLabel = `${prefix}.externalNetworksCheckboxLabel`;
export const configDriveRadioLabel = `${prefix}.configDriveRadioLabel`;
export const metadataSvcRadioLabel = `${prefix}.metadataSvcRadioLabel`;
export const thirdPartyIntegrationSettingsHeader = `${prefix}.thirdPartyIntegrationSettingsHeader`;
export const integrationWithContrailVncCheckboxLabel = `${prefix}.integrationWithContrailVncCheckboxLabel`;
export const apiEndpointUrlInputLabel = `${prefix}.apiEndpointUrlInputLabel`;
export const organizationInputLabel = `${prefix}.organizationInputLabel`;
export const vsdHostInputLabel = `${prefix}.vsdHostInputLabel`;
export const servicePortInputLabel = `${prefix}.servicePortInputLabel`;
export const sshUserInputLabel = `${prefix}.sshUserInputLabel`;
export const createSshUserLabel = `${prefix}.createSshUserLabel`;
export const sshUserInputPlaceholder = `${prefix}.sshUserInputPlaceholder`;
export const autoscalePollingIntervalInputLabel = `${prefix}.autoscalePollingIntervalInputLabel`;
export const secInnerText = `${prefix}.secInnerText`;
export const useStaticRouteForVipPlacementCheckboxLabel = `${prefix}.useStaticRouteForVipPlacementCheckboxLabel`;
export const useInbandManagementCheckboxLabel = `${prefix}.useInbandManagementCheckboxLabel`;
export const directoryPathForSeUsageLabel = `${prefix}.directoryPathForSeUsageLabel`;
export const autoSelectPathRadioLabel = `${prefix}.autoSelectPathRadioLabel`;
export const singlePathForAllLogsRadioLabel = `${prefix}.singlePathForAllLogsRadioLabel`;
export const separatePathsForSystemAndClientLogsRadioLabel = `${prefix}.separatePathsForSystemAndClientLogsRadioLabel`;
export const pathForSystemClientLogsInputLabel = `${prefix}.pathForSystemClientLogsInputLabel`;
export const pathForSystemLogsInputLabel = `${prefix}.pathForSystemLogsInputLabel`;
export const pathForSystemLogsInputPlaceholder = `${prefix}.pathForSystemLogsInputPlaceholder`;
export const sizeInputLabel = `${prefix}.sizeInputLabel`;
export const gbInnerText = `${prefix}.gbInnerText`;
export const pathForClientLogsInputLabel = `${prefix}.pathForClientLogsInputLabel`;
export const serverListHeader = `${prefix}.serverListHeader`;
export const hostIpAddressInputLabel = `${prefix}.hostIpAddressInputLabel`;
export const seGroupInputLabel = `${prefix}.seGroupInputLabel`;
export const seGroupInputPlaceholder = `${prefix}.seGroupInputPlaceholder`;
export const cleanupExistingSeConfigBtnLabel = `${prefix}.cleanupExistingSeConfigBtnLabel`;
export const removeHostBtnLabel = `${prefix}.removeHostBtnLabel`;
export const verifyHostBtnLabel = `${prefix}.verifyHostBtnLabel`;
export const yesRadioLabel = `${prefix}.yesRadioLabel`;
export const noRadioLabel = `${prefix}.noRadioLabel`;
export const inbandManagementLabel = `${prefix}.inbandManagementLabel`;
export const numberOfCoresLabel = `${prefix}.numberOfCoresLabel`;
export const allRadioLabel = `${prefix}.allRadioLabel`;
export const customRadioLabel = `${prefix}.customRadioLabel`;
export const memoryGbLabel = `${prefix}.memoryGbLabel`;
export const useCustomSystemClientLogPathsCheckboxLabel = `${prefix}.useCustomSystemClientLogPathsCheckboxLabel`;
export const addNewServerLinkLabel = `${prefix}.addNewServerLinkLabel`;
export const dnsProfileInputPlaceholder = `${prefix}.dnsProfileInputPlaceholder`;
export const awsRegionInputLabel = `${prefix}.awsRegionInputLabel`;
export const awsRegionInputPlaceholder = `${prefix}.awsRegionInputPlaceholder`;
export const accessAwsThroughProxyCheckboxLabel = `${prefix}.accessAwsThroughProxyCheckboxLabel`;
export const proxyHostInputLabel = `${prefix}.proxyHostInputLabel`;
export const proxyPortInputLabel = `${prefix}.proxyPortInputLabel`;
export const proxyPortInputPlaceholder = `${prefix}.proxyPortInputPlaceholder`;
export const proxyUsernameInputLabel = `${prefix}.proxyUsernameInputLabel`;
export const proxyUsernameInputPlaceholder = `${prefix}.proxyUsernameInputPlaceholder`;
export const proxyPasswordInputLabel = `${prefix}.proxyPasswordInputLabel`;
export const proxyPasswordInputPlaceholder = `${prefix}.proxyPasswordInputPlaceholder`;
export const awsUserCredentialsHeader = `${prefix}.awsUserCredentialsHeader`;
export const useAccessSecretKeyRadioLabel = `${prefix}.useAccessSecretKeyRadioLabel`;
export const useAwsIdentityAccessManagementRadioLabel = `${prefix}.useAwsIdentityAccessManagementRadioLabel`;
export const accessKeyIdInputLabel = `${prefix}.accessKeyIdInputLabel`;
export const secretAccessKeyInputLabel = `${prefix}.secretAccessKeyInputLabel`;
export const useCrossAccountAssumeRoleCheckboxLabel = `${prefix}.useCrossAccountAssumeRoleCheckboxLabel`;
export const iamAssumeRoleInputLabel = `${prefix}.iamAssumeRoleInputLabel`;
export const assumeRoleInputLabel = `${prefix}.assumeRoleInputLabel`;
export const registerVirtualServiceNamesLabel = `${prefix}.registerVirtualServiceNamesLabel`;
export const emptyRadioLabel = `${prefix}.emptyRadioLabel`;
export const amazonRoute53RadioLabel = `${prefix}.amazonRoute53RadioLabel`;
export const awsVpcAndAvailabilityZonesHeader = `${prefix}.awsVpcAndAvailabilityZonesHeader`;
export const vpcNameInputPlaceholder = `${prefix}.vpcNameInputPlaceholder`;
export const freeUnusedElasticIpAddressCheckboxLabel = `${prefix}.freeUnusedElasticIpAddressCheckboxLabel`;
export const selectSeManagementNetworkLabel = `${prefix}.selectSeManagementNetworkLabel`;
export const availabilityZoneInputLabel = `${prefix}.availabilityZoneInputLabel`;
export const availabilityZoneInputPlaceholder = `${prefix}.availabilityZoneInputPlaceholder`;
export const seManagementNetworkInputLabel = `${prefix}.seManagementNetworkInputLabel`;
export const seManagementNetworkInputPlaceholder = `${prefix}.seManagementNetworkInputPlaceholder`;
export const removeAvailabilityZoneBtnLabel = `${prefix}.removeAvailabilityZoneBtnLabel`;
export const addAvailabilityZoneLinkLabel = `${prefix}.addAvailabilityZoneLinkLabel`;
export const enableSimpleQueueServiceCheckboxLabel = `${prefix}.enableSimpleQueueServiceCheckboxLabel`;
export const encryptionHeader = `${prefix}.encryptionHeader`;
export const otherSettingsHeader = `${prefix}.otherSettingsHeader`;
export const asgPollingIntervalInputLabel = `${prefix}.asgPollingIntervalInputLabel`;
export const generalHeader = `${prefix}.generalHeader`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const ipamProviderInputLabel = `${prefix}.ipamProviderInputLabel`;
export const ipamProviderInputPlaceholder = `${prefix}.ipamProviderInputPlaceholder`;
export const otherRadioLabel = `${prefix}.otherRadioLabel`;
export const googleCloudUserCredentialsHeader = `${prefix}.googleCloudUserCredentialsHeader`;
export const serviceEngineProjectIdInputLabel = `${prefix}.serviceEngineProjectIdInputLabel`;
export const serviceEngineProjectIdInputPlaceholder = `${prefix}.serviceEngineProjectIdInputPlaceholder`;
export const controllerRnningInGcpMessage = `${prefix}.controllerRnningInGcpMessage`;
export const useControllerVirtualMachineServiceAccountCheckboxLabel = `${prefix}.useControllerVirtualMachineServiceAccountCheckboxLabel`;
export const googleCloudCredentialsInputLabel = `${prefix}.googleCloudCredentialsInputLabel`;
export const googleCloudCredentialsInputPlaceholder = `${prefix}.googleCloudCredentialsInputPlaceholder`;
export const createCredentialsBtnLabel = `${prefix}.createCredentialsBtnLabel`;
export const regionZonesHeader = `${prefix}.regionZonesHeader`;
export const serviceEngineRegionInputLabel = `${prefix}.serviceEngineRegionInputLabel`;
export const serviceEngineRegionInputPlaceholder = `${prefix}.serviceEngineRegionInputPlaceholder`;
export const zonesInputLabel = `${prefix}.zonesInputLabel`;
export const zonesInputPlaceholder = `${prefix}.zonesInputPlaceholder`;
export const networkHeader = `${prefix}.networkHeader`;
export const networkModeLabel = `${prefix}.networkModeLabel`;
export const dedicatedManagementLabel = `${prefix}.dedicatedManagementLabel`;
export const twoArmModeLabel = `${prefix}.twoArmModeLabel`;
export const vpcProjectIdLabel = `${prefix}.vpcProjectIdLabel`;
export const vpcNetworkNameInputLabel = `${prefix}.vpcNetworkNameInputLabel`;
export const vpcSubnetNameInputLabel = `${prefix}.vpcSubnetNameInputLabel`;
export const firewallHeader = `${prefix}.firewallHeader`;
export const firewallTargetTagsInputLabel = `${prefix}.firewallTargetTagsInputLabel`;
export const firewallTargetTagsInputPlaceholder = `${prefix}.firewallTargetTagsInputPlaceholder`;
export const storageHeader = `${prefix}.storageHeader`;
export const cloudStorageProjectIdInputLabel = `${prefix}.cloudStorageProjectIdInputLabel`;
export const cloudStorageBucketNameInputLabel = `${prefix}.cloudStorageBucketNameInputLabel`;
export const cloudStorageBucketNameInputPlaceholder = `${prefix}.cloudStorageBucketNameInputPlaceholder`;
export const encryptionKeysHeader = `${prefix}.encryptionKeysHeader`;
export const seImageEncryptionKeyIdInputLabel = `${prefix}.seImageEncryptionKeyIdInputLabel`;
export const seDiskEncryptionKeyIdInputLabel = `${prefix}.seDiskEncryptionKeyIdInputLabel`;
export const gcsBucketEncryptionKeyIdInputLabel = `${prefix}.gcsBucketEncryptionKeyIdInputLabel`;
export const gcsObjectsEncryptionKeyIdInputLabel = `${prefix}.gcsObjectsEncryptionKeyIdInputLabel`;
export const customTagsHeader = `${prefix}.customTagsHeader`;
export const vipAllocationHeader = `${prefix}.vipAllocationHeader`;
export const routesRadioLabel = `${prefix}.routesRadioLabel`;
export const enableSubnetRoutesCheckboxLabel = `${prefix}.enableSubnetRoutesCheckboxLabel`;
export const gcpCloudRouterNamesInputLabel = `${prefix}.gcpCloudRouterNamesInputLabel`;
export const gcpCloudRouterNamesInputPlaceholder = `${prefix}.gcpCloudRouterNamesInputPlaceholder`;
export const azureUserCredentialsHeader = `${prefix}.azureUserCredentialsHeader`;
export const subscriptionIdInputLabel = `${prefix}.subscriptionIdInputLabel`;
export const useAzureMsiAuthenticationCheckboxLabel = `${prefix}.useAzureMsiAuthenticationCheckboxLabel`;
export const azureCredentialsInputLabel = `${prefix}.azureCredentialsInputLabel`;
export const azureCredentialsInputPlaceholder = `${prefix}.azureCredentialsInputPlaceholder`;
export const locationAndNetworkHeader = `${prefix}.locationAndNetworkHeader`;
export const locationInputLabel = `${prefix}.locationInputLabel`;
export const locationInputPlaceholder = `${prefix}.locationInputPlaceholder`;
export const resourceGroupInputLabel = `${prefix}.resourceGroupInputLabel`;
export const resourceGroupInputPlaceholder = `${prefix}.resourceGroupInputPlaceholder`;
export const vnetInputPlaceholder = `${prefix}.vnetInputPlaceholder`;
export const serviceEngineNetworkInputLabel = `${prefix}.serviceEngineNetworkInputLabel`;
export const serviceEngineNetworkInputPlaceholder = `${prefix}.serviceEngineNetworkInputPlaceholder`;
export const useDedicatedManagementInterfaceCheckboxLabel = `${prefix}.useDedicatedManagementInterfaceCheckboxLabel`;
export const subnetForManagementInterfaceInputLabel = `${prefix}.subnetForManagementInterfaceInputLabel`;
export const subnetForManagementInterfaceInputPlaceholder = `${prefix}.subnetForManagementInterfaceInputPlaceholder`;
export const diskEncryptionHeader = `${prefix}.diskEncryptionHeader`;
export const diskEncryptionSetInputLabel = `${prefix}.diskEncryptionSetInputLabel`;
export const diskEncryptionSetInputPlaceholder = `${prefix}.diskEncryptionSetInputPlaceholder`;
export const dnsResolverLabel = `${prefix}.dnsResolverLabel`;

export const ENGLISH = {
    [seInProviderContextTooltip]: 'Provider mode is turned on in the Tenant Settings. Hence, all SEs can only be created in the provider tenant.',
    [cloudSelectionTitle]: 'Cloud Selection',
    [selectCloudTitle]: 'Select Cloud',
    [infrastructureTitle]: 'Infrastructure',
    [dataCenterTitle]: 'Data Center',
    [networkTitle]: 'Network',
    [roleMappingTitle]: 'Role Mapping',
    [vpcNetworkEncryptionTitle]: 'VPCNetworkEncryption',
    [dhcpSettingsTitle]: 'DHCP Settings',
    [linuxServerConfigurationTitle]: 'Linux Server Configuration',
    [credentialsTitle]: 'Credentials',
    [locationNetworkTitle]: 'LocationNetwork',
    [generalTitle]: 'General',
    [separateManagementInterfaceToolTip]: 'Use this option to use a separate NIC for controlplane communication between Service Engines and Controllers.When this option is not selected, a single NIC is used for both data and control plane traffic.',
    [vcenterVsphereLoginLabel]: 'vCenter  vSphere Login',
    [nameInputLabel]: 'Name',
    [cloudNameInputPlaceholder]: 'Name',
    [usernameInputLabel]: 'Username',
    [usernameInputPlaceholder]: 'Username',
    [vcenterAddressInputLabel]: 'vCenter Address',
    [passwordInputLabel]: 'Password',
    [passwordInputPlaceholder]: 'Password',
    [accessPermissionInputLabel]: 'Access Permission',
    [readButtonLabel]: 'Read',
    [writeButtonLabel]: 'Write',
    [licenseModelLabel]: 'License Model',
    [ipamProfileInputLabel]: 'IPAM Profile',
    [selectIpamProfilePlaceholder]: 'Select IPAM Profile',
    [dnsProfileInputLabel]: 'DNS Profile',
    [selectDnsProfilePlaceholder]: 'Select DNS Profile',
    [createIpamDnsProfileButtonLabel]: 'Create IPAMDNS Profile',
    [selectDataCenterInputLabel]: 'Select a Data Center',
    [dataCenterInputLabel]: 'Data Center',
    [selectDataCenterInputPlaceholder]: 'Select a Data Center',
    [systemIpAddressManagementSettingLabel]: 'System IP Address Management Setting',
    [defaultNetworkIpAddressManagementLabel]: 'Default Network IP Address Management',
    [dhcpEnabledCheckboxLabel]: 'DHCP Enabled',
    [ipv6AutoConfigurationCheckboxLabel]: 'IPv6 Auto Configuration',
    [virtualServicePlacementSettingsLabel]: 'Virtual Service Placement Settings',
    [preferStaticRoutesVsDirectlyConnectedNetworkLabel]: 'Prefer Static Routes vs Directly Connected Network',
    [useStaticRoutesForNetworkResolutionOfVipLabel]: 'Use Static Routes for Network Resolution of VIP',
    [selectManagementNetworkLabel]: 'Select Management Network',
    [managementNetworkInputLabel]: 'Management Network',
    [selectManagementNetworkInputPlaceholder]: 'Select Management Network',
    [serviceEngineLabel]: 'Service Engine',
    [ipAddressManagementNetworkLabel]: 'IP Address Management for Management Network',
    [ipSubnetInputLabel]: 'IP Subnet',
    [defaultGatewayLabel]: 'Default Gateway',
    [addStaticIpAddressPoolInputLabel]: 'Add Static IP Address Pool',
    [stateBasedDnsRegistrationCheckboxLabel]: 'State Based DNS Registration',
    [templateServiceEngineGroupInputLabel]: 'Template Service Engine Group',
    [templateSegGroupDropdownPlaceholder]: 'None',
    [createServiceEngineGroupLabel]: 'Create Service Engine Group',
    [nextBtnLabel]: 'Next',
    [editClouldHeader]: 'Edit Cloud: {0}',
    [newClouldHeader]: 'New Cloud: {0}',
    [saveBtnLabel]: 'Save',
    [completeBtnLabel]: 'Complete',
    [cancelBtnLabel]: 'Cancel',
    [retryBtnLabel]: 'Retry',
    [previousBtnLabel]: 'Previous',
    [useIp4DhcpCheckboxLabel]: 'Use IPv4 DHCP',
    [useIp6DhcpCheckboxLabel]: 'Use IPv6 DHCP',
    [enableVipStaticRoutesCheckboxLabel]: 'Enable VIP Static Routes',
    [preferStaticRoutesCheckboxLabel]: 'Prefer Static Routes',
    [licenseModelHeader]: 'License Model',
    [ipamProfileInputPlaceholder]: 'Select IPAM Profile',
    [serviceEngineHeader]: 'Service Engine',
    [openStackLoginHeader]: 'OpenStack Login',
    [keystoneAuthUrlLabel]: 'Keystone Auth URL',
    [allowSelfsignedCertificatesCheckboxLabel]: 'Allow Selfsigned Certificates',
    [useKeystoneAuthCheckboxLabel]: 'Use Keystone Auth',
    [useInternalUrlEndpointsCheckboxLabel]: 'Use InternalURL Endpoints',
    [dnsProviderInputLabel]: 'DNS Provider',
    [dnsProviderInputPlaceholder]: 'Select DNS Provider',
    [managementNetworkHeader]: 'Management Network',
    [adminTenantInputLabel]: 'Admin Tenant (Project)',
    [adminTenantInputPlaceholder]: 'Admin Tenant',
    [regionNameInputLabel]: 'Region Name',
    [managementNetworkInputPlaceholder]: 'Network Name',
    [freeUnusedFloatingIpAddressCheckboxLabel]: 'Free Unused Floating IP Address',
    [mapAviAdminToCloudAdminCheckboxLabel]: 'Map AviAdmin to CloudAdmin',
    [serviceEngineOwnershipLabel]: 'Service Engine Ownership',
    [seWithinTenantContextRadioLabel]: 'Service Engine within Tenant Context',
    [seWithinAdminContextRadioLabel]: 'Service Engine within Admin Context',
    [serviceEngineImageFormatLabel]: 'Service Engine Image Format',
    [importAllOpenStackKeystoneTenantsCheckboxLabel]: 'Import All OpenStack Keystone Tenants',
    [virtualServicePlacementSettingsHeader]: 'Virtual Service Placement Settings',
    [preferStaticRoutesMessageCheckboxLabel]: 'Prefer Static Routes vs Directly Connected Network for Virtual Service Placement',
    [useStaticRoutesMessageCheckboxLabel]: 'Use Static Routes for Network Resolution of VIP for Virtual Service Placement',
    [advancedHeader]: 'Advanced',
    [useAdminUrlCheckboxLabel]: 'Use Admin URL',
    [antiAffinityCheckboxLael]: 'Anti Affinity',
    [externalNetworksCheckboxLabel]: 'External Networks',
    [configDriveRadioLabel]: 'Config Drive',
    [metadataSvcRadioLabel]: 'Metadata SVC',
    [thirdPartyIntegrationSettingsHeader]: '3rd Party Integration Settings',
    [integrationWithContrailVncCheckboxLabel]: 'Integration with Contrail VNC',
    [apiEndpointUrlInputLabel]: 'API Endpoint URL',
    [organizationInputLabel]: 'Organization',
    [vsdHostInputLabel]: 'VSD Host',
    [servicePortInputLabel]: 'Service Port',
    [sshUserInputLabel]: 'SSH User',
    [createSshUserLabel]: 'Create SSH User',
    [sshUserInputPlaceholder]: 'Select SSH User',
    [autoscalePollingIntervalInputLabel]: 'Autoscale Polling Interval',
    [secInnerText]: 'sec',
    [useStaticRouteForVipPlacementCheckboxLabel]: 'Use Static Route for VIP Placement',
    [useInbandManagementCheckboxLabel]: 'Use Inband Management',
    [directoryPathForSeUsageLabel]: 'Directory Path for Service Engine Usage',
    [autoSelectPathRadioLabel]: 'Autoselect path',
    [singlePathForAllLogsRadioLabel]: 'Single path for all logs',
    [separatePathsForSystemAndClientLogsRadioLabel]: 'Separate paths for System and Client logs',
    [pathForSystemClientLogsInputLabel]: 'Path for System and Client Logs',
    [pathForSystemLogsInputLabel]: 'Path for System Logs',
    [pathForSystemLogsInputPlaceholder]: 'Path',
    [sizeInputLabel]: 'Size',
    [gbInnerText]: 'GB',
    [pathForClientLogsInputLabel]: 'Path for Client Logs',
    [serverListHeader]: 'Server List',
    [hostIpAddressInputLabel]: 'Host IP Address',
    [seGroupInputLabel]: 'Service Engine Group',
    [seGroupInputPlaceholder]: 'DefaultGroup',
    [cleanupExistingSeConfigBtnLabel]: 'Cleanup existing Service Engine config',
    [verifyHostBtnLabel]: 'Verify Host',
    [removeHostBtnLabel]: 'Remove Host',
    [yesRadioLabel]: 'Yes',
    [noRadioLabel]: 'No',
    [inbandManagementLabel]: 'Inband Management',
    [numberOfCoresLabel]: 'Number of Cores',
    [allRadioLabel]: 'All',
    [customRadioLabel]: 'Custom',
    [memoryGbLabel]: 'Memory (GB)',
    [useCustomSystemClientLogPathsCheckboxLabel]: 'Use custom System and Client Log paths',
    [addNewServerLinkLabel]: '+ Add new server',
    [dnsProfileInputPlaceholder]: 'Select DNS Profile',
    [awsRegionInputLabel]: 'AWS Region',
    [awsRegionInputPlaceholder]: 'Region Name',
    [accessAwsThroughProxyCheckboxLabel]: 'Access AWS through Proxy',
    [proxyHostInputLabel]: 'Proxy Host',
    [proxyPortInputLabel]: 'Proxy Port',
    [proxyPortInputPlaceholder]: 'Port',
    [proxyUsernameInputLabel]: 'Proxy Username',
    [proxyUsernameInputPlaceholder]: 'Username',
    [proxyPasswordInputLabel]: 'Proxy Password',
    [proxyPasswordInputPlaceholder]: 'Password',
    [awsUserCredentialsHeader]: 'AWS User Credentials',
    [useAccessSecretKeyRadioLabel]: 'Use AccessSecret Key',
    [useAwsIdentityAccessManagementRadioLabel]: 'Use AWS Identity and Access Management (IAM) Roles of Controller',
    [accessKeyIdInputLabel]: 'Access Key ID',
    [secretAccessKeyInputLabel]: 'Secret Access Key',
    [useCrossAccountAssumeRoleCheckboxLabel]: 'Use CrossAccount AssumeRole',
    [iamAssumeRoleInputLabel]: 'IAM AssumeRole',
    [assumeRoleInputLabel]: 'AssumeRole',
    [registerVirtualServiceNamesLabel]: 'Register Virtual Service Names',
    [emptyRadioLabel]: 'None',
    [amazonRoute53RadioLabel]: 'Amazon Route 53',
    [awsVpcAndAvailabilityZonesHeader]: 'AWS VPC and Availability Zones',
    [vpcNameInputPlaceholder]: 'VPC Name',
    [freeUnusedElasticIpAddressCheckboxLabel]: 'Free Unused Elastic IP Address',
    [selectSeManagementNetworkLabel]: 'Select Service Engine Management Network for required Availability Zones',
    [availabilityZoneInputLabel]: 'Availability Zone',
    [availabilityZoneInputPlaceholder]: 'Availability Zone name',
    [seManagementNetworkInputLabel]: 'Service Engine Management Network',
    [seManagementNetworkInputPlaceholder]: 'Management Network',
    [removeAvailabilityZoneBtnLabel]: 'Remove Availability Zone',
    [addAvailabilityZoneLinkLabel]: ' + Add Availability Zone',
    [enableSimpleQueueServiceCheckboxLabel]: 'Enable Simple Queue Service (SQS) for Autoscale Groups Monitoring',
    [encryptionHeader]: 'Encryption',
    [otherSettingsHeader]: 'Other Settings',
    [asgPollingIntervalInputLabel]: 'ASG Polling Interval',
    [generalHeader]: 'General',
    [typeInputLabel]: 'Type',
    [ipamProviderInputLabel]: 'IPAM Provider',
    [ipamProviderInputPlaceholder]: 'Select IPAM Provider',
    [otherRadioLabel]: 'Other',
    [googleCloudUserCredentialsHeader]: 'Google Cloud User Credentials',
    [serviceEngineProjectIdInputLabel]: 'Service Engine Project ID',
    [serviceEngineProjectIdInputPlaceholder]: 'Service Engine Project Id',
    [controllerRnningInGcpMessage]: 'This can be used only if the controller is running in Google Cloud Platform and a Service Account is attached to the Controller Virtual Machine. This Service Account should have all the required permissions to create resources in Google Cloud Platform required by AVI.',
    [useControllerVirtualMachineServiceAccountCheckboxLabel]: 'Use Controller Virtual Machine Service Account',
    [googleCloudCredentialsInputLabel]: 'Google Cloud Credentials',
    [googleCloudCredentialsInputPlaceholder]: 'Select Credentials',
    [createCredentialsBtnLabel]: 'Create Credentials',
    [regionZonesHeader]: 'Region & Zones',
    [serviceEngineRegionInputLabel]: 'Service Engine Region',
    [serviceEngineRegionInputPlaceholder]: 'Region Name',
    [zonesInputLabel]: 'Zones',
    [zonesInputPlaceholder]: 'Availability Zone name',
    [networkHeader]: 'Network',
    [networkModeLabel]: 'Network Mode',
    [dedicatedManagementLabel]: 'Dedicated Management',
    [twoArmModeLabel]: 'Twoarm Mode',
    [vpcProjectIdLabel]: 'VPC Project ID',
    [vpcNetworkNameInputLabel]: 'VPC Network Name',
    [vpcSubnetNameInputLabel]: 'VPC Subnet Name',
    [firewallHeader]: 'Firewall',
    [firewallTargetTagsInputLabel]: 'Firewall Target Tags',
    [firewallTargetTagsInputPlaceholder]: 'Firewall Target Tag',
    [storageHeader]: 'Storage',
    [cloudStorageProjectIdInputLabel]: 'Cloud Storage Project ID',
    [cloudStorageBucketNameInputLabel]: 'Cloud Storage Bucket Name',
    [cloudStorageBucketNameInputPlaceholder]: 'Cloud Bucket Name',
    [encryptionKeysHeader]: 'Encryption Keys',
    [seImageEncryptionKeyIdInputLabel]: 'Service Engine Image Encryption Key ID',
    [seDiskEncryptionKeyIdInputLabel]: 'Service Engine Disk Encryption Key ID',
    [gcsBucketEncryptionKeyIdInputLabel]: 'GCS Bucket Encryption Key ID',
    [gcsObjectsEncryptionKeyIdInputLabel]: 'GCS Objects Encryption Key ID',
    [customTagsHeader]: 'Custom Tags',
    [vipAllocationHeader]: 'VIP Allocation',
    [routesRadioLabel]: 'Routes',
    [enableSubnetRoutesCheckboxLabel]: 'Enable Subnet Routes',
    [gcpCloudRouterNamesInputLabel]: 'GCP Cloud Router Names ({0})',
    [gcpCloudRouterNamesInputPlaceholder]: 'Router Name',
    [azureUserCredentialsHeader]: 'Azure User Credentials',
    [subscriptionIdInputLabel]: 'Subscription ID',
    [useAzureMsiAuthenticationCheckboxLabel]: 'Use Azure Managed Service Identity (MSI) Authentication',
    [azureCredentialsInputLabel]: 'Azure Credentials',
    [azureCredentialsInputPlaceholder]: 'Select Credentials',
    [locationAndNetworkHeader]: 'Location and Network',
    [locationInputLabel]: 'Location',
    [locationInputPlaceholder]: 'Select Location',
    [resourceGroupInputLabel]: 'Resource Group',
    [resourceGroupInputPlaceholder]: 'Select Resource Group',
    [vnetInputPlaceholder]: 'Select VNet',
    [serviceEngineNetworkInputLabel]: 'Service Engine Network',
    [serviceEngineNetworkInputPlaceholder]: 'Select Network',
    [useDedicatedManagementInterfaceCheckboxLabel]: 'Use Dedicated Management Interface',
    [subnetForManagementInterfaceInputLabel]: 'Subnet for Management Interface',
    [subnetForManagementInterfaceInputPlaceholder]: 'Select Subnet',
    [diskEncryptionHeader]: 'Disk Encryption',
    [diskEncryptionSetInputLabel]: 'Disk Encryption Set',
    [diskEncryptionSetInputPlaceholder]: 'Select Disk Encryption Set',
    [dnsResolverLabel]: 'DNS Resolver',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'gslbeditcontroller';
const prefix = `${moduleName}.${componentName}`;

export const editGslbConfigurationTitle = `${prefix}.editGslbConfigurationTitle`;
export const newGslbConfigurationTitle = `${prefix}.newGslbConfigurationTitle`;
export const newGslbSiteTitle = `${prefix}.newGslbSiteTitle`;
export const eidtGslbSiteTitle = `${prefix}.eidtGslbSiteTitle`;
export const dnsVirtualServicesTitle = `${prefix}.dnsVirtualServicesTitle`;
export const gslbSubdomainInputLabel = `${prefix}.gslbSubdomainInputLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const userNameInputLabel = `${prefix}.userNameInputLabel`;
export const activeMemberCheckboxLabel = `${prefix}.activeMemberCheckboxLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const ipAdressInputLabel = `${prefix}.ipAdressInputLabel`;
export const removeIpAdressButtonTitle = `${prefix}.removeIpAdressButtonTitle`;
export const addIpAdressLink = `${prefix}.addIpAdressLink`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const removeDnsRuleButtonTitle = `${prefix}.removeDnsRuleButtonTitle`;
export const addGslbSubdomainLink = `${prefix}.addGslbSubdomainLink`;
export const advancedSettingsSectionTitle = `${prefix}.advancedSettingsSectionTitle`;
export const clientGroupIpAdressTypeDropdownList = `${prefix}.clientGroupIpAdressTypeDropdownList`;
export const clientGroupIpAdressTypePlaceholder = `${prefix}.clientGroupIpAdressTypePlaceholder`;
export const ipAdressPrefixRangeInputPlaceholder = `${prefix}.ipAdressPrefixRangeInputPlaceholder`;
export const addGroupIpAdressLink = `${prefix}.addGroupIpAdressLink`;
export const saveLabel = `${prefix}.saveLabel`;
export const saveAndSetDnsVirtualServicesButton = `${prefix}.saveAndSetDnsVirtualServicesButton`;
export const continuousReplicationModeLabel = `${prefix}.continuousReplicationModeLabel`;
export const adaptiveReplicationModeLabel = `${prefix}.adaptiveReplicationModeLabel`;
export const replicationModeLabel = `${prefix}.replicationModeLabel`;

export const ENGLISH = {
    [editGslbConfigurationTitle]: 'Edit GSLB Configuration',
    [newGslbConfigurationTitle]: 'New GSLB Configuration',
    [newGslbSiteTitle]: 'New GSLB Site',
    [eidtGslbSiteTitle]: 'Edit GSLB Site',
    [dnsVirtualServicesTitle]: '{0} DNS Virtual Services',
    [gslbSubdomainInputLabel]: 'GSLB Subdomain',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Name',
    [userNameInputLabel]: 'Username',
    [activeMemberCheckboxLabel]: 'Active Member',
    [passwordInputLabel]: 'Password',
    [ipAdressInputLabel]: 'IP Address',
    [removeIpAdressButtonTitle]: 'Remove Ip Address',
    [addIpAdressLink]: 'Add IP Address',
    [portInputLabel]: 'Port',
    [removeDnsRuleButtonTitle]: 'Remove DNS Rule',
    [addGslbSubdomainLink]: 'Add GSLB Subdomain',
    [advancedSettingsSectionTitle]: 'Advanced Settings',
    [clientGroupIpAdressTypeDropdownList]: 'Client Group IP Address Type',
    [clientGroupIpAdressTypePlaceholder]: 'Client Group IP Address Type',
    [ipAdressPrefixRangeInputPlaceholder]: 'IP Address or Prefix or Range',
    [addGroupIpAdressLink]: '+ Add Group IP Address',
    [saveLabel]: 'Save',
    [saveAndSetDnsVirtualServicesButton]: 'Save and Set DNS Virtual Services',
    [continuousReplicationModeLabel]: 'Continuous',
    [adaptiveReplicationModeLabel]: 'Adaptive',
    [replicationModeLabel]: 'Replication Mode',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'staticroutecreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const newStaticRouteHeader = `${prefix}.newStaticRouteHeader`;
export const editStaticRouteHeader = `${prefix}.editStaticRouteHeader`;
export const gatewaySubnetInputLabel = `${prefix}.gatewaySubnetInputLabel`;
export const nextHopInputLabel = `${prefix}.nextHopInputLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [newStaticRouteHeader]: 'New Static Route',
    [editStaticRouteHeader]: 'Edit Static Route: {0}',
    [gatewaySubnetInputLabel]: 'Gateway Subnet',
    [nextHopInputLabel]: 'Next Hop',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'infradashboardcontroller';
const prefix = `${moduleName}.${componentName}`;

export const healthScoreOptionLabel = `${prefix}.healthScoreOptionLabel`;
export const nameOptionLabel = `${prefix}.nameOptionLabel`;
export const sortByDropdownLabel = `${prefix}.sortByDropdownLabel`;
export const searchInputPlaceolder = `${prefix}.searchInputPlaceolder`;
export const serviceEngineHeader = `${prefix}.serviceEngineHeader`;
export const emptyServiceEnginesSearchMatchMessage = `${prefix}.emptyServiceEnginesSearchMatchMessage`;
export const showHideLegendTitle = `${prefix}.showHideLegendTitle`;
export const alertsLabel = `${prefix}.alertsLabel`;
export const emptyServiceEnglinesCreatedMessage = `${prefix}.emptyServiceEnglinesCreatedMessage`;

export const ENGLISH = {
    [sortByDropdownLabel]: 'Sort By',
    [healthScoreOptionLabel]: 'Health Score',
    [nameOptionLabel]: 'Name',
    [searchInputPlaceolder]: 'Search',
    [serviceEngineHeader]: 'Service Engine ({0})',
    [emptyServiceEnginesSearchMatchMessage]: 'No Service Engines match your search criteria.',
    [showHideLegendTitle]: 'ShowHide Legend',
    [alertsLabel]: 'Alerts',
    [emptyServiceEnglinesCreatedMessage]: 'No Service Engines have been created.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'infragatewaymonitorcontroller';
const prefix = `${moduleName}.${componentName}`;

export const editGatewayMonitorHeader = `${prefix}.editGatewayMonitorHeader`;
export const newGatewayMonitorHeader = `${prefix}.newGatewayMonitorHeader`;
export const ipAddressToMonitorInputLabel = `${prefix}.ipAddressToMonitorInputLabel`;
export const ipAddressToMonitorInputPlaceholder = `${prefix}.ipAddressToMonitorInputPlaceholder`;
export const saveBtnLabel = `${prefix}.saveBtnLabel`;

export const ENGLISH = {
    [editGatewayMonitorHeader]: 'Edit Gateway Monitor',
    [newGatewayMonitorHeader]: 'New Gateway Monitor',
    [ipAddressToMonitorInputLabel]: 'IP Address to Monitor',
    [ipAddressToMonitorInputPlaceholder]: 'Name',
    [saveBtnLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segroupcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const basicSettingsLabel = `${prefix}.basicSettingsLabel`;
export const advancedLabel = `${prefix}.advancedLabel`;
export const serviceEngineGroupNameInputLabel = `${prefix}.serviceEngineGroupNameInputLabel`;
export const metricUpdateFrequencyInputLabel = `${prefix}.metricUpdateFrequencyInputLabel`;
export const realTimeMetricsCheckboxLabel = `${prefix}.realTimeMetricsCheckboxLabel`;
export const highAvailabilityPlacementSettings = `${prefix}.highAvailabilityPlacementSettings`;
export const highAvailabilityMode = `${prefix}.highAvailabilityMode`;
export const legacyHaInputLabel = `${prefix}.legacyHaInputLabel`;
export const activeStandbyRadioLabel = `${prefix}.activeStandbyRadioLabel`;
export const elasticHaInputLabel = `${prefix}.elasticHaInputLabel`;
export const activeRadioLabel = `${prefix}.activeRadioLabel`;
export const nmBufferRadioLabel = `${prefix}.nmBufferRadioLabel`;
export const vsPerServiceEngineInputLabel = `${prefix}.vsPerServiceEngineInputLabel`;
export const maximumInnerText = `${prefix}.maximumInnerText`;
export const selfElectionCheckboxLabel = `${prefix}.selfElectionCheckboxLabel`;
export const vsPlacementAcrossSesInputLabel = `${prefix}.vsPlacementAcrossSesInputLabel`;
export const compactRadioLabel = `${prefix}.compactRadioLabel`;
export const distributedRadioLabel = `${prefix}.distributedRadioLabel`;
export const routeAggregationSubnetsInputLabel = `${prefix}.routeAggregationSubnetsInputLabel`;
export const removeSubnetButtonTitle = `${prefix}.removeSubnetButtonTitle`;
export const addSubnetLink = `${prefix}.addSubnetLink`;
export const healthMonitorStandbyInputLabel = `${prefix}.healthMonitorStandbyInputLabel`;
export const distributeLoadCheckboxLabel = `${prefix}.distributeLoadCheckboxLabel`;
export const autoRedistributeLoadCheckboxLabel = `${prefix}.autoRedistributeLoadCheckboxLabel`;
export const seCapacityLimitSettings = `${prefix}.seCapacityLimitSettings`;
export const maxNumberOfServiceEnginesInputLabel = `${prefix}.maxNumberOfServiceEnginesInputLabel`;
export const memoryPerServiceEngineInputLabel = `${prefix}.memoryPerServiceEngineInputLabel`;
export const memorySizeInputPlaceholder = `${prefix}.memorySizeInputPlaceholder`;
export const memoryReserveCheckboxLabel = `${prefix}.memoryReserveCheckboxLabel`;
export const vcpuPerServiceEngineInputLabel = `${prefix}.vcpuPerServiceEngineInputLabel`;
export const cpuReserveCheckboxLabel = `${prefix}.cpuReserveCheckboxLabel`;
export const diskPerServiceEngineInputLabel = `${prefix}.diskPerServiceEngineInputLabel`;
export const diskSizeInputPlaceholder = `${prefix}.diskSizeInputPlaceholder`;
export const memoryAllocationSettings = `${prefix}.memoryAllocationSettings`;
export const hostGeolocationProfileCheckboxLabel = `${prefix}.hostGeolocationProfileCheckboxLabel`;
export const memoryForCachingInputLabel = `${prefix}.memoryForCachingInputLabel`;
export const percentageInputPlaceHolder = `${prefix}.percentageInputPlaceHolder`;
export const availableMemoryForConnectionsBuffersInputLabel = `${prefix}.availableMemoryForConnectionsBuffersInputLabel`;
export const connectionsBuffersMemoryDistributionInputLabel = `${prefix}.connectionsBuffersMemoryDistributionInputLabel`;
export const connectionsLabel = `${prefix}.connectionsLabel`;
export const buffersLabel = `${prefix}.buffersLabel`;
export const serviceEngineNamePrefixInputLabel = `${prefix}.serviceEngineNamePrefixInputLabel`;
export const deleteUnusedServiceEnginesAfterLabel = `${prefix}.deleteUnusedServiceEnginesAfterLabel`;
export const serviceEngineFolderInputLabel = `${prefix}.serviceEngineFolderInputLabel`;
export const pathInputPlaceholder = `${prefix}.pathInputPlaceholder`;
export const hostDataStoreScopeLabel = `${prefix}.hostDataStoreScopeLabel`;
export const includeInputLabel = `${prefix}.includeInputLabel`;
export const excludeInputLabel = `${prefix}.excludeInputLabel`;
export const dataStoreScopeInputLabel = `${prefix}.dataStoreScopeInputLabel`;
export const dataStoreInputLabel = `${prefix}.dataStoreInputLabel`;
export const selectDataStoresInputPlaceholder = `${prefix}.selectDataStoresInputPlaceholder`;
export const advancedHaPlacementSettings = `${prefix}.advancedHaPlacementSettings`;
export const bufferServiceEnginesInputLabel = `${prefix}.bufferServiceEnginesInputLabel`;
export const overrideDataNetworkInputLabel = `${prefix}.overrideDataNetworkInputLabel`;
export const selectNetworkInputPlaceholder = `${prefix}.selectNetworkInputPlaceholder`;
export const overrideManagementNetworkInputLabel = `${prefix}.overrideManagementNetworkInputLabel`;
export const scalePerVirtualServiceInputLabel = `${prefix}.scalePerVirtualServiceInputLabel`;
export const minimumInnerText = `${prefix}.minimumInnerText`;
export const cpuSocketAffinityCheckboxLabel = `${prefix}.cpuSocketAffinityCheckboxLabel`;
export const dedicatedDispatcherCpuCheckboxLabel = `${prefix}.dedicatedDispatcherCpuCheckboxLabel`;
export const serviceEnginePlacementLabel = `${prefix}.serviceEnginePlacementLabel`;
export const seScopeWithinAvailabilityZonesLabel = `${prefix}.seScopeWithinAvailabilityZonesLabel`;
export const anyInputLabel = `${prefix}.anyInputLabel`;
export const availabilityZoneInputLabel = `${prefix}.availabilityZoneInputLabel`;
export const availabilityZonesInputLabel = `${prefix}.availabilityZonesInputLabel`;
export const selectAvailabilityZonesInputPlaceholder = `${prefix}.selectAvailabilityZonesInputPlaceholder`;
export const overrideOpenStackManagementNetworkInputLabel = `${prefix}.overrideOpenStackManagementNetworkInputLabel`;
export const securitySettings = `${prefix}.securitySettings`;
export const hsmGroupInputLabel = `${prefix}.hsmGroupInputLabel`;
export const selectHsmGroupInputPlaceholder = `${prefix}.selectHsmGroupInputPlaceholder`;
export const logCollectionStreamingSettings = `${prefix}.logCollectionStreamingSettings`;
export const significantLogThrottleInputLabel = `${prefix}.significantLogThrottleInputLabel`;
export const throttleInputPlaceholder = `${prefix}.throttleInputPlaceholder`;
export const udfLogThrottleInputLabel = `${prefix}.udfLogThrottleInputLabel`;
export const logsSecondInnerText = `${prefix}.logsSecondInnerText`;
export const nonSignificantLogThrottleInputLabel = `${prefix}.nonSignificantLogThrottleInputLabel`;
export const numberOfStreamingThreadsInputLabel = `${prefix}.numberOfStreamingThreadsInputLabel`;
export const threadsInnerText = `${prefix}.threadsInnerText`;
export const otherSettings = `${prefix}.otherSettings`;
export const aviManagedSecurityGroupCheckboxLabel = `${prefix}.aviManagedSecurityGroupCheckboxLabel`;
export const managementVnicCustomSecurityGroupsInputLabel = `${prefix}.managementVnicCustomSecurityGroupsInputLabel`;
export const selectManagementVnicCustomSecurityGroupsInputPlaceholder = `${prefix}.selectManagementVnicCustomSecurityGroupsInputPlaceholder`;
export const dataVnicCustomSecurityGroupsInputLabel = `${prefix}.dataVnicCustomSecurityGroupsInputLabel`;
export const selectDataVnicCustomSecurityGroupsInputPlaceholder = `${prefix}.selectDataVnicCustomSecurityGroupsInputPlaceholder`;
export const editServiceEngineGroupLabel = `${prefix}.editServiceEngineGroupLabel`;
export const newServiceEngineGroupLabel = `${prefix}.newServiceEngineGroupLabel`;
export const memoryAvailableBesidesCachingLabel = `${prefix}.memoryAvailableBesidesCachingLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const saveLabel = `${prefix}.saveLabel`;
export const cancelLabel = `${prefix}.cancelLabel`;

export const ENGLISH = {
    [basicSettingsLabel]: 'Basic Settings',
    [advancedLabel]: 'Advanced',
    [serviceEngineGroupNameInputLabel]: 'Service Engine Group Name',
    [metricUpdateFrequencyInputLabel]: 'Metric Update Frequency',
    [realTimeMetricsCheckboxLabel]: 'RealTime Metrics',
    [highAvailabilityPlacementSettings]: 'High Availability & Placement Settings',
    [highAvailabilityMode]: 'High Availability Mode',
    [legacyHaInputLabel]: 'Legacy HA',
    [activeStandbyRadioLabel]: 'ActiveStandby',
    [elasticHaInputLabel]: 'Elastic HA',
    [activeRadioLabel]: 'ActiveActive',
    [nmBufferRadioLabel]: 'N + M (buffer)',
    [vsPerServiceEngineInputLabel]: 'Virtual Services per Service Engine',
    [maximumInnerText]: 'Maximum',
    [selfElectionCheckboxLabel]: 'Service Engine SelfElection',
    [vsPlacementAcrossSesInputLabel]: 'VS Placement across Service Engines',
    [compactRadioLabel]: 'Compact',
    [distributedRadioLabel]: 'Distributed',
    [routeAggregationSubnetsInputLabel]: 'Route Aggregation Subnets',
    [removeSubnetButtonTitle]: 'Remove Subnet',
    [addSubnetLink]: '+ Add Subnet',
    [healthMonitorStandbyInputLabel]: 'Health Monitoring on Standby Service Engine(s)',
    [distributeLoadCheckboxLabel]: 'Distribute Load',
    [autoRedistributeLoadCheckboxLabel]: 'Autoredistribute Load',
    [seCapacityLimitSettings]: 'Service Engine Capacity and Limit Settings',
    [maxNumberOfServiceEnginesInputLabel]: 'Max Number of Service Engines',
    [memoryPerServiceEngineInputLabel]: 'Memory per Service Engine',
    [memorySizeInputPlaceholder]: 'Memory size',
    [memoryReserveCheckboxLabel]: 'Memory Reserve',
    [vcpuPerServiceEngineInputLabel]: 'vCPU per Service Engine',
    [cpuReserveCheckboxLabel]: 'CPU Reserve',
    [diskPerServiceEngineInputLabel]: 'Disk per Service Engine',
    [diskSizeInputPlaceholder]: 'Disk size',
    [memoryAllocationSettings]: 'Memory Allocation',
    [hostGeolocationProfileCheckboxLabel]: 'Host Geolocation Profile',
    [memoryForCachingInputLabel]: 'Memory for Caching',
    [percentageInputPlaceHolder]: 'Percentage',
    [availableMemoryForConnectionsBuffersInputLabel]: 'Available Memory for Connections and Buffers',
    [connectionsBuffersMemoryDistributionInputLabel]: 'Connections and Buffers Memory Distribution (slide the bar left or right)',
    [connectionsLabel]: 'Connections: {0}%',
    [buffersLabel]: 'Buffers: {0}%',
    [serviceEngineNamePrefixInputLabel]: 'Service Engine Name Prefix',
    [deleteUnusedServiceEnginesAfterLabel]: 'Delete Unused Service Engines After',
    [serviceEngineFolderInputLabel]: 'Service Engine Folder',
    [pathInputPlaceholder]: 'Path',
    [hostDataStoreScopeLabel]: 'Host & Data Store Scope',
    [includeInputLabel]: 'Include',
    [excludeInputLabel]: 'Exclude',
    [dataStoreScopeInputLabel]: 'Data Store Scope for Service Engine Virtual Machine',
    [dataStoreInputLabel]: 'Data Store',
    [selectDataStoresInputPlaceholder]: 'Select Data Stores',
    [advancedHaPlacementSettings]: 'Advanced HA & Placement',
    [bufferServiceEnginesInputLabel]: 'Buffer Service Engines',
    [overrideDataNetworkInputLabel]: 'Override Data Network',
    [selectNetworkInputPlaceholder]: 'Select a Network',
    [overrideManagementNetworkInputLabel]: 'Override Management Network',
    [scalePerVirtualServiceInputLabel]: 'Scale per Virtual Service',
    [minimumInnerText]: 'Minimum',
    [cpuSocketAffinityCheckboxLabel]: 'CPU socket Affinity',
    [dedicatedDispatcherCpuCheckboxLabel]: 'Dedicated dispatcher CPU',
    [serviceEnginePlacementLabel]: 'Service Engine Placement',
    [seScopeWithinAvailabilityZonesLabel]: 'Service Engine scope within Availability Zones',
    [anyInputLabel]: 'Any',
    [availabilityZoneInputLabel]: 'Availability Zone',
    [availabilityZonesInputLabel]: 'Availability Zones',
    [selectAvailabilityZonesInputPlaceholder]: 'Select Availability Zones',
    [overrideOpenStackManagementNetworkInputLabel]: 'Override OpenStack Management Network',
    [securitySettings]: 'Security',
    [hsmGroupInputLabel]: 'HSM Group',
    [selectHsmGroupInputPlaceholder]: 'Select HSM Group',
    [logCollectionStreamingSettings]: 'Log Collection and Streaming Settings',
    [significantLogThrottleInputLabel]: 'Significant Log Throttle',
    [throttleInputPlaceholder]: 'Throttle',
    [udfLogThrottleInputLabel]: 'UDF Log Throttle',
    [logsSecondInnerText]: 'LogsSecond',
    [nonSignificantLogThrottleInputLabel]: 'Nonsignificant Log Throttle',
    [numberOfStreamingThreadsInputLabel]: 'Number of Streaming Threads',
    [threadsInnerText]: 'Threads',
    [otherSettings]: 'Other Settings',
    [aviManagedSecurityGroupCheckboxLabel]: 'Avi Managed Security Group',
    [managementVnicCustomSecurityGroupsInputLabel]: 'Management vNIC Custom Security Groups',
    [selectManagementVnicCustomSecurityGroupsInputPlaceholder]: 'Select Management vNIC Custom Security Groups',
    [dataVnicCustomSecurityGroupsInputLabel]: 'Data vNIC Custom Security Groups',
    [selectDataVnicCustomSecurityGroupsInputPlaceholder]: 'Select Data vNIC Custom Security Groups',
    [editServiceEngineGroupLabel]: 'Edit Service Engine Group: {0}',
    [newServiceEngineGroupLabel]: 'New Service Engine Group:',
    [memoryAvailableBesidesCachingLabel]: 'Memory available besides caching',
    [minutesInnerText]: 'min',
    [saveLabel]: 'Save',
    [cancelLabel]: 'Cancel',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'seanalyticscontroller';
const prefix = `${moduleName}.${componentName}`;

export const serviceEngineMetricsHeader = `${prefix}.serviceEngineMetricsHeader`;
export const disableInProgressState = `${prefix}.disableInProgressState`;
export const errorDisabledState = `${prefix}.errorDisabledState`;
export const disabledForPlacementState = `${prefix}.disabledForPlacementState`;

export const ENGLISH = {
    [serviceEngineMetricsHeader]: 'Service Engine Metrics',
    [disableInProgressState]: 'Disabling',
    [errorDisabledState]: 'Failed to Disable',
    [disabledForPlacementState]: 'Disabled for Placement',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'analyticsprofilecontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [actionBtnEdit]: 'Edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'alertconfigcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAlertAction = `${prefix}.columnTitleAlertAction`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleAlertGroup = `${prefix}.columnTitleAlertGroup`;
export const columnTitleEnabled = `${prefix}.columnTitleEnabled`;
export const columnTitleObject = `${prefix}.columnTitleObject`;
export const notSeparator = `${prefix}.notSeparator`;
export const allInstancesObjectName = `${prefix}.allInstancesObjectName`;
export const emptySearchAlertsConfigMessage = `${prefix}.emptySearchAlertsConfigMessage`;
export const emptyAlertConfigMessage = `${prefix}.emptyAlertConfigMessage`;
export const trueText = `${prefix}.trueText`;
export const falseText = `${prefix}.falseText`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAlertAction]: 'Alert Action',
    [emptyDataLabel]: 'None',
    [columnTitleType]: 'Type',
    [columnTitleAlertGroup]: 'Alert Group',
    [columnTitleEnabled]: 'Enabled',
    [columnTitleObject]: 'Object',
    [notSeparator]: ', not ',
    [allInstancesObjectName]: 'All Instances',
    [emptySearchAlertsConfigMessage]: 'No Alert Configs match your search criteria.',
    [emptyAlertConfigMessage]: 'No Alert Configs found.',
    [trueText]: 'True',
    [falseText]: 'False',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'alertconfigcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const duplicateMetricError = `${prefix}.duplicateMetricsError`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const basicsHeader = `${prefix}.basicsHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const enableAlertTriggerLabel = `${prefix}.enableAlertTriggerLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const conditionsHeader = `${prefix}.conditionsHeader`;
export const throttleAlertInputLabel = `${prefix}.throttleAlertInputLabel`;
export const sourceInputLabel = `${prefix}.sourceInputLabel`;
export const eventRadioOption = `${prefix}.eventRadioOption`;
export const metricsRadioOption = `${prefix}.metricsRadioOption`;
export const objectInputLabel = `${prefix}.objectInputLabel`;
export const noneRadioOption = `${prefix}.noneRadioOption`;
export const virtualServiceRadioOption = `${prefix}.virtualServiceRadioOption`;
export const serviceEngineRadioOption = `${prefix}.serviceEngineRadioOption`;
export const poolRadioOption = `${prefix}.poolRadioOption`;
export const autoScaleAlertInputLabel = `${prefix}.autoScaleAlertInputLabel`;
export const instanceInputLabel = `${prefix}.instanceInputLabel`;
export const dropdownNone = `${prefix}.dropdownNone`;
export const dropdownAllInstances = `${prefix}.dropdownAllInstances`;
export const numberOfOccurrencesInputLabel = `${prefix}.numberOfOccurrencesInputLabel`;
export const categoryInputLabel = `${prefix}.categoryInputLabel`;
export const realtimeRadioOption = `${prefix}.realtimeRadioOption`;
export const rollingWindowRadioOption = `${prefix}.rollingWindowRadioOption`;
export const timeWindowInputLabel = `${prefix}.timeWindowInputLabel`;
export const metricOccursInputLabel = `${prefix}.metricOccursInputLabel`;
export const comparatorInputLabel = `${prefix}.comparatorInputLabel`;
export const durationInputLabel = `${prefix}.durationInputLabel`;
export const valueInputLabel = `${prefix}.valueInputLabel`;
export const removeMetricButtonTitle = `${prefix}.removeMetricButtonTitle`;
export const andRadioOption = `${prefix}.andRadioOption`;
export const andNotRadioOption = `${prefix}.andNotRadioOption`;
export const orRadioOption = `${prefix}.orRadioOption`;
export const addNewMetricLink = `${prefix}.addNewMetricLink`;
export const evenetOccursInputLabel = `${prefix}.evenetOccursInputLabel`;
export const selectEventPlaceholder = `${prefix}.selectEventPlaceholder`;
export const removeEventButtonTitle = `${prefix}.removeEventButtonTitle`;
export const addNewEventLink = `${prefix}.addNewEventLink`;
export const actionsHeader = `${prefix}.actionsHeader`;
export const alertActionInputLabel = `${prefix}.alertActionInputLabel`;
export const createAlertActionInputLabel = `${prefix}.createAlertActionInputLabel`;
export const eventFilterInputLabel = `${prefix}.eventFilterInputLabel`;
export const alertExpiryTimeInputLabel = `${prefix}.alertExpiryTimeInputLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [duplicateMetricError]: 'Metrics selected must be unique.',
    [modalHeaderEdit]: 'Edit Alert Configuration: {0}',
    [modalHeaderNew]: 'New Alert Configuration: {0}',
    [basicsHeader]: 'Basics',
    [nameInputLabel]: 'Name',
    [enableAlertTriggerLabel]: 'Enable Alert Trigger',
    [descriptionInputLabel]: 'Description',
    [conditionsHeader]: 'Conditions',
    [throttleAlertInputLabel]: 'Throttle Alert',
    [sourceInputLabel]: 'Source',
    [eventRadioOption]: 'Event',
    [metricsRadioOption]: 'Metrics',
    [objectInputLabel]: 'Object',
    [noneRadioOption]: 'None',
    [virtualServiceRadioOption]: 'Virtual Service',
    [serviceEngineRadioOption]: 'Service Engine',
    [poolRadioOption]: 'Pool',
    [autoScaleAlertInputLabel]: 'AutoScale Alert',
    [instanceInputLabel]: 'Instance',
    [dropdownNone]: 'None',
    [dropdownAllInstances]: 'All Instances',
    [numberOfOccurrencesInputLabel]: 'Number of Occurrences',
    [categoryInputLabel]: 'Category',
    [realtimeRadioOption]: 'Realtime',
    [rollingWindowRadioOption]: 'Rolling Window',
    [timeWindowInputLabel]: 'Time Window',
    [metricOccursInputLabel]: 'Metric Occurs',
    [comparatorInputLabel]: 'Comparator',
    [durationInputLabel]: 'Duration',
    [valueInputLabel]: 'Value',
    [removeMetricButtonTitle]: 'Remove Metric',
    [andRadioOption]: 'AND',
    [andNotRadioOption]: 'AND NOT',
    [orRadioOption]: 'OR',
    [addNewMetricLink]: '+ Add New Metric',
    [evenetOccursInputLabel]: 'Event Occurs',
    [selectEventPlaceholder]: 'Select an Event',
    [removeEventButtonTitle]: 'Remove Event',
    [addNewEventLink]: '+ Add New Event',
    [actionsHeader]: 'Actions',
    [alertActionInputLabel]: 'Alert Action',
    [createAlertActionInputLabel]: 'Create Alert Action',
    [eventFilterInputLabel]: 'Event Filter',
    [alertExpiryTimeInputLabel]: 'Alert Expiry Time',
    [saveButtonLabel]: 'Save',
};const moduleName = 'ajslegacy';
const componentName = 'controlscriptscontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};const moduleName = 'ajslegacy';
const componentName = 'certificatemanagementlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleControlScript = `${prefix}.columnTitleControlScript`;
export const columnTitleCustomParams = `${prefix}.columnTitleCustomParams`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleControlScript]: 'Control Script',
    [columnTitleCustomParams]: 'Custom Params',
    [actionBtnEdit]: 'Edit',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'alertactioncontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAlertLevel = `${prefix}.columnTitleAlertLevel`;
export const columnTitleSyslog = `${prefix}.columnTitleSyslog`;
export const columnTitleEmail = `${prefix}.columnTitleEmail`;
export const columnTitleSNMPTrap = `${prefix}.columnTitleSNMPTrap`;
export const columnTitleControlScript = `${prefix}.columnTitleControlScript`;
export const columnTitleExternalOnly = `${prefix}.columnTitleExternalOnly`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const generalInformationHeader = `${prefix}.generalInformationHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const alertLevelInputLabel = `${prefix}.alertLevelInputLabel`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const createEmailNotificationLabel = `${prefix}.createEmailNotificationLabel`;
export const selectEmailNotificationPlaceholder = `${prefix}.selectEmailNotificationPlaceholder`;
export const syslogLabel = `${prefix}.syslogLabel`;
export const createSyslogNotificationLabel = `${prefix}.createSyslogNotificationLabel`;
export const selectSyslogNotificationPlaceholder = `${prefix}.selectSyslogNotificationPlaceholder`;
export const snmpTrapLabel = `${prefix}.snmpTrapLabel`;
export const createSNMPTrapNotificationLabel = `${prefix}.createSNMPTrapNotificationLabel`;
export const selectSNMPTrapNotificationPlaceholder = `${prefix}.selectSNMPTrapNotificationPlaceholder`;
export const controlScriptLabel = `${prefix}.controlScriptLabel`;
export const createControlScriptProfileLabel = `${prefix}.createControlScriptProfileLabel`;
export const selectControlScriptProfilePlaceholder = `${prefix}.selectControlScriptProfilePlaceholder`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const noneValue = `${prefix}.noneValue`;
export const yesValue = `${prefix}.yesValue`;
export const noValue = `${prefix}.noValue`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAlertLevel]: 'Alert Level',
    [columnTitleSyslog]: 'Syslog',
    [columnTitleEmail]: 'Email',
    [columnTitleSNMPTrap]: 'SNMP Trap',
    [columnTitleControlScript]: 'Control Script',
    [columnTitleExternalOnly]: 'External Only',
    [modalHeaderEdit]: 'Edit Alert Action: {0}',
    [modalHeaderNew]: 'New Alert Action: {0}',
    [generalInformationHeader]: 'General Information',
    [nameInputLabel]: 'Name',
    [alertLevelInputLabel]: 'Alert Level',
    [emailInputLabel]: 'Email',
    [createEmailNotificationLabel]: 'Create Email Notification',
    [selectEmailNotificationPlaceholder]: 'Select Email Notification',
    [syslogLabel]: 'Syslog',
    [createSyslogNotificationLabel]: 'Create Syslog Notification',
    [selectSyslogNotificationPlaceholder]: 'Select Syslog Notification',
    [snmpTrapLabel]: 'SNMP Trap',
    [createSNMPTrapNotificationLabel]: 'Create SNMP Trap Notification',
    [selectSNMPTrapNotificationPlaceholder]: 'Select SNMP Trap Notification',
    [controlScriptLabel]: 'ControlScript',
    [createControlScriptProfileLabel]: 'Create ControlScript Profile',
    [selectControlScriptProfilePlaceholder]: 'Select ControlScript Profile',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [noneValue]: 'None',
    [yesValue]: 'Yes',
    [noValue]: 'No',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'healthmonitorcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleSendInterval = `${prefix}.columnTitleSendInterval`;
export const columnTitleReceiveTimeout = `${prefix}.columnTitleReceiveTimeout`;
export const columnTitleSuccessfulChecks = `${prefix}.columnTitleSuccessfulChecks`;
export const columnTitleFailedChecks = `${prefix}.columnTitleFailedChecks`;
export const columnTitleRequest = `${prefix}.columnTitleRequest`;
export const columnTitleResponseString = `${prefix}.columnTitleResponseString`;
export const columnTitleResponseCode = `${prefix}.columnTitleResponseCode`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const secInnerText = `${prefix}.secInnerText`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [columnTitleSendInterval]: 'Send Interval',
    [columnTitleReceiveTimeout]: 'Receive Timeout',
    [columnTitleSuccessfulChecks]: 'Successful Checks',
    [columnTitleFailedChecks]: 'Failed Checks',
    [columnTitleRequest]: 'Request',
    [columnTitleResponseString]: 'Response String',
    [columnTitleResponseCode]: 'Response Code',
    [actionBtnEdit]: 'Edit',
    [secInnerText]: '{0} sec',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'healthmonitorcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const editHealthMonitorHeader = `${prefix}.modalHeaderEdit`;
export const newHealthMonitorHeader = `${prefix}.newHealthMonitorHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const successfulChecksInputLabel = `${prefix}.successfulChecksInputLabel`;
export const failedChecksInputLabel = `${prefix}.failedChecksInputLabel`;
export const sendIntervalInputLabel = `${prefix}.sendIntervalInputLabel`;
export const secInnerText = `${prefix}.secInnerText`;
export const isFederatedInputLabel = `${prefix}.isFederatedInputLabel`;
export const receiveTimeoutInputLabel = `${prefix}.receiveTimeoutInputLabel`;
export const dnsRequestSettingsHeader = `${prefix}.dnsRequestSettingsHeader`;
export const queryNameInputLabel = `${prefix}.queryNameInputLabel`;
export const monitorPortInputLabel = `${prefix}.monitorPortInputLabel`;
export const dnsResponseSettingsHeader = `${prefix}.dnsResponseSettingsHeader`;
export const responseMatchesInputLabel = `${prefix}.responseMatchesInputLabel`;
export const responseCodeInputLabel = `${prefix}.responseCodeInputLabel`;
export const responseStringInputLabel = `${prefix}.responseStringInputLabel`;
export const recordTypeInputLabel = `${prefix}.recordTypeInputLabel`;
export const tcpSettingsHeader = `${prefix}.tcpSettingsHeader`;
export const healthMonitorPortInputLabel = `${prefix}.healthMonitorPortInputLabel`;
export const healthMonitorPortInputPlaceholder = `${prefix}.healthMonitorPortInputPlaceholder`;
export const requestDataInputLabel = `${prefix}.requestDataInputLabel`;
export const tcpHalfOpenInputLabel = `${prefix}.tcpHalfOpenInputLabel`;
export const serverResponseDataInputLabel = `${prefix}.serverResponseDataInputLabel`;
export const serverMaintenanceModeHeader = `${prefix}.serverMaintenanceModeHeader`;
export const maintenanceResponseInputLabel = `${prefix}.maintenanceResponseInputLabel`;
export const udpSettingsHeader = `${prefix}.udpSettingsHeader`;
export const httpSettingsHeader = `${prefix}.httpSettingsHeader`;
export const httpRequestHeaderInputLabel = `${prefix}.httpRequestHeaderInputLabel`;
export const httpRequestBodyInputLabel = `${prefix}.httpRequestBodyInputLabel`;
export const exactHttpRequestInputLabel = `${prefix}.exactHttpRequestInputLabel`;
export const maintenanceCodeInputLabel = `${prefix}.maintenanceCodeInputLabel`;
export const maintenanceCodeInputPlaceholder = `${prefix}.maintenanceCodeInputPlaceholder`;
export const httpsSettingsHeader = `${prefix}.httpsSettingsHeader`;
export const sslAttributesInputLabel = `${prefix}.sslAttributesInputLabel`;
export const serverNameInputLabel = `${prefix}.serverNameInputLabel`;
export const serverNameInputPlaceholder = `${prefix}.serverNameInputPlaceholder`;
export const sslProfileUuidInputLabel = `${prefix}.sslProfileUuidInputLabel`;
export const sslProfileUuidInputPlaceholder = `${prefix}.sslProfileUuidInputPlaceholder`;
export const pkiProfileUuidInputLabel = `${prefix}.pkiProfileUuidInputLabel`;
export const pkiProfileUuidInputPlaceholder = `${prefix}.pkiProfileUuidInputPlaceholder`;
export const sslKeyCertificateUuidInputLabel = `${prefix}.sslKeyCertificateUuidInputLabel`;
export const sslKeyCertificateUuidInputPlaceholder = `${prefix}.sslKeyCertificateUuidInputPlaceholder`;
export const externalSettingsHeader = `${prefix}.externalSettingsHeader`;
export const scriptCodeInputLabel = `${prefix}.scriptCodeInputLabel`;
export const pasteTextRadioOption = `${prefix}.pasteTextRadioOption`;
export const uploadFileRadioOption = `${prefix}.uploadFileRadioOption`;
export const scriptCodeInputPlaceholder = `${prefix}.scriptCodeInputPlaceholder`;
export const scriptParametersInputLabel = `${prefix}.scriptParametersInputLabel`;
export const scriptParametersInputPlaceholder = `${prefix}.scriptParametersInputPlaceholder`;
export const scriptVariablesInputLabel = `${prefix}.scriptVariablesInputLabel`;
export const scriptVariablesInputPlaceholder = `${prefix}.scriptVariablesInputPlaceholder`;
export const sipSettingsInputLabel = `${prefix}.sipSettingsInputLabel`;
export const sipRequestCodeInputLabel = `${prefix}.sipRequestCodeInputLabel`;
export const sipResponseInputLabel = `${prefix}.sipResponseInputLabel`;
export const sipMonitorTransportInputLabel = `${prefix}.sipMonitorTransportInputLabel`;
export const radiusSettingsHeader = `${prefix}.radiusSettingsHeader`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const sharedSecretInputLabel = `${prefix}.sharedSecretInputLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const rbacHeader = `${prefix}.rbacHeader`;

export const ENGLISH = {
    [editHealthMonitorHeader]: 'Edit Health Monitor: {0}',
    [newHealthMonitorHeader]: 'New Health Monitor: {0}',
    [nameInputLabel]: 'Name',
    [typeInputLabel]: 'Type',
    [descriptionInputLabel]: 'Description',
    [successfulChecksInputLabel]: 'Successful Checks',
    [failedChecksInputLabel]: 'Failed Checks',
    [sendIntervalInputLabel]: 'Send Interval',
    [secInnerText]: 'sec',
    [isFederatedInputLabel]: 'Is Federated',
    [receiveTimeoutInputLabel]: 'Receive Timeout',
    [dnsRequestSettingsHeader]: 'DNS Request Settings',
    [queryNameInputLabel]: 'Request Name',
    [monitorPortInputLabel]: 'Monitor Port',
    [dnsResponseSettingsHeader]: 'DNS Response Settings',
    [responseMatchesInputLabel]: 'Response Matches',
    [responseCodeInputLabel]: 'Response Code',
    [responseStringInputLabel]: 'Response String',
    [recordTypeInputLabel]: 'Record Type',
    [tcpSettingsHeader]: 'TCP Settings',
    [healthMonitorPortInputLabel]: 'Health Monitor Port',
    [healthMonitorPortInputPlaceholder]: 'Use Server Port',
    [requestDataInputLabel]: 'Client Request Data',
    [tcpHalfOpenInputLabel]: 'HalfOpen (Close connection before completion)',
    [serverResponseDataInputLabel]: 'Server Response Data',
    [serverMaintenanceModeHeader]: 'Server Maintenance Mode',
    [maintenanceResponseInputLabel]: 'Maintenance Server Response Data',
    [udpSettingsHeader]: 'UDP Settings',
    [httpSettingsHeader]: 'HTTP Settings',
    [httpRequestHeaderInputLabel]: 'Client Request Header',
    [httpRequestBodyInputLabel]: 'Client Request Body',
    [exactHttpRequestInputLabel]: 'Use Exact Request',
    [maintenanceCodeInputLabel]: 'Maintenance Response Code',
    [maintenanceCodeInputPlaceholder]: '101, 102, etc.',
    [httpsSettingsHeader]: 'HTTPS Settings',
    [sslAttributesInputLabel]: 'SSL Attributes',
    [serverNameInputLabel]: 'TLS SNI Server Name',
    [serverNameInputPlaceholder]: 'Host Header',
    [sslProfileUuidInputLabel]: 'SSL Profile',
    [sslProfileUuidInputPlaceholder]: 'Select SSL Profile',
    [pkiProfileUuidInputLabel]: 'PKI Profile',
    [pkiProfileUuidInputPlaceholder]: 'Select PKI Profile',
    [sslKeyCertificateUuidInputLabel]: 'SSL Key and Certificate',
    [sslKeyCertificateUuidInputPlaceholder]: 'Select SSL Key and Certificate',
    [externalSettingsHeader]: 'External Settings',
    [scriptCodeInputLabel]: 'Script Code',
    [pasteTextRadioOption]: 'Paste text',
    [uploadFileRadioOption]: 'Upload File',
    [scriptCodeInputPlaceholder]: 'Paste script code here',
    [scriptParametersInputLabel]: 'Script Parameters',
    [scriptParametersInputPlaceholder]: 'Enter script parameters',
    [scriptVariablesInputLabel]: 'Script Variables',
    [scriptVariablesInputPlaceholder]: 'Enter script variables',
    [sipSettingsInputLabel]: 'SIP Settings',
    [sipRequestCodeInputLabel]: 'SIP Request Code',
    [sipResponseInputLabel]: 'SIP Response',
    [sipMonitorTransportInputLabel]: 'SIP Monitor Transport',
    [radiusSettingsHeader]: 'Radius Settings',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Passworde',
    [sharedSecretInputLabel]: 'Shared Secret',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'ipaddrgroupcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleIpAddressesOrRanges = `${prefix}.columnTitleIpAddressesOrRanges`;
export const columnTitleCountryCodesOrEpg = `${prefix}.columnTitleCountryCodesOrEpg`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const createIpGroupButtonLabel = `${prefix}.createIpGroupButtonLabel`;
export const countryCodeDataLabel = `${prefix}.countryCodeDataLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleIpAddressesOrRanges]: 'IP Addresses or Ranges',
    [columnTitleCountryCodesOrEpg]: 'Country Codes or EPG',
    [actionBtnEdit]: 'Edit',
    [createIpGroupButtonLabel]: 'Create IP Group',
    [countryCodeDataLabel]: 'Country Code',
};const moduleName = 'ajslegacy';
const componentName = 'hsmgrouplistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const actionBtnOpenWindowForClientCertDownload = `${prefix}.actionBtnOpenWindowForClientCertDownload`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [actionBtnEdit]: 'Edit',
    [actionBtnOpenWindowForClientCertDownload]: 'Open window for client certificate download',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'datascriptsetlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleEventTypes = `${prefix}.columnTitleEventTypes`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleEventTypes]: 'Event Types',
};const moduleName = 'ajslegacy';
const componentName = 'launchconfiglistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
};const moduleName = 'ajslegacy';
const componentName = 'serverautoscalelistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleMinSize = `${prefix}.columnTitleMinSize`;
export const columnTitleMaxSize = `${prefix}.columnTitleMaxSize`;
export const columnTitleIntelligentAutoScale = `${prefix}.columnTitleIntelligentAutoScale`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const enabledDataLabel = `${prefix}.enabledDataLabel`;
export const disabledDataLabel = `${prefix}.disabledDataLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleMinSize]: 'Min Size',
    [columnTitleMaxSize]: 'Max Size',
    [columnTitleIntelligentAutoScale]: 'Intelligent AutoScale',
    [emptyDataLabel]: 'None',
    [enabledDataLabel]: 'Enabled',
    [disabledDataLabel]: 'Disabled',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'networkprofilelistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleAutoLearn = `${prefix}.columnTitleAutoLearn`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const yesLabel = `${prefix}.yesLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [columnTitleAutoLearn]: 'Auto Learn',
    [actionBtnEdit]: 'Edit',
    [yesLabel]: 'Yes',
};const moduleName = 'ajslegacy';
const componentName = 'networkprofilemodalcontroller';
const prefix = `${moduleName}.${componentName}`;

export const editTcpUdpProfileHeader = `${prefix}.editTcpUdpProfileHeader`;
export const newTcpUdpProfileHeader = `${prefix}.newTcpUdpProfileHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const tcpProxySettingsHeader = `${prefix}.tcpProxySettingsHeader`;
export const autoLearnInputLabel = `${prefix}.autoLearnInputLabel`;
export const customInputLabel = `${prefix}.customInputLabel`;
export const timeoutHeader = `${prefix}.timeoutHeader`;
export const idleConnectionInputLabel = `${prefix}.idleConnectionInputLabel`;
export const keepAliveRadioOption = `${prefix}.keepAliveRadioOption`;
export const ageOutIdleConnectonsRadioOption = `${prefix}.ageOutIdleConnectonsRadioOption`;
export const idleDurationInputLabel = `${prefix}.idleDurationInputLabel`;
export const ignoreTimeWaitInputLabel = `${prefix}.ignoreTimeWaitInputLabel`;
export const ignoreTimeWaitInputPlaceholder = `${prefix}.ignoreTimeWaitInputPlaceholder`;
export const retransmissionBehaviorHeader = `${prefix}.retransmissionBehaviorHeader`;
export const maxRetransmissionInputLabel = `${prefix}.maxRetransmissionInputLabel`;
export const maxCountInputPlaceholder = `${prefix}.maxCountInputPlaceholder`;
export const maxSynRetransmissionInputLabel = `${prefix}.maxSynRetransmissionInputLabel`;
export const bufferManagementHeader = `${prefix}.bufferManagementHeader`;
export const receiveWindowInputLabel = `${prefix}.receiveWindowInputLabel`;
export const maxSegmentSizeHeader = `${prefix}.maxSegmentSizeHeader`;
export const useInterfaceMtuInputLabel = `${prefix}.useInterfaceMtuInputLabel`;
export const useInterfaceMtuInputPlaceholder = `${prefix}.useInterfaceMtuInputPlaceholder`;
export const qosTrafficEngineeringHeader = `${prefix}.qosTrafficEngineeringHeader`;
export const passThroughInputLabel = `${prefix}.passThroughInputLabel`;
export const naglesAlgorithmInputLabel = `${prefix}.naglesAlgorithmInputLabel`;
export const tcpFastPathSettingsHeader = `${prefix}.tcpFastPathSettingsHeader`;
export const enableSynProtectionInputLabel = `${prefix}.enableSynProtectionInputLabel`;
export const sessionIdleTimeoutInputLabel = `${prefix}.sessionIdleTimeoutInputLabel`;
export const secInnerText = `${prefix}.secInnerText`;
export const udpFastPathSettingsHeader = `${prefix}.udpFastPathSettingsHeader`;
export const natClientIpAddressInputLabel = `${prefix}.natClientIpAddressInputLabel`;
export const perPacketLoadbalancingInputLabel = `${prefix}.perPacketLoadbalancingInputLabel`;
export const udpProxySettingsHeader = `${prefix}.udpProxySettingsHeader`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const rbacHeader = `${prefix}.rbacHeader`;

export const ENGLISH = {
    [editTcpUdpProfileHeader]: 'Edit TCPUDP Profile: {0}',
    [newTcpUdpProfileHeader]: 'New TCPUDP Profile: {0}',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [typeInputLabel]: 'Type',
    [tcpProxySettingsHeader]: 'TCP Proxy Settings',
    [autoLearnInputLabel]: 'Auto Learn',
    [customInputLabel]: 'Custom',
    [timeoutHeader]: 'Timeout',
    [idleConnectionInputLabel]: 'Idle Connections',
    [keepAliveRadioOption]: 'TCP keepalive',
    [ageOutIdleConnectonsRadioOption]: 'Age Out Idle Connections',
    [idleDurationInputLabel]: 'Idle Duration',
    [ignoreTimeWaitInputLabel]: 'Ignore Time Wait',
    [ignoreTimeWaitInputPlaceholder]: 'Duration',
    [retransmissionBehaviorHeader]: 'Retransmission Behavior',
    [maxRetransmissionInputLabel]: 'Max Retransmissions',
    [maxCountInputPlaceholder]: 'Max #',
    [maxSynRetransmissionInputLabel]: 'Max SYN Retransmissions',
    [bufferManagementHeader]: 'Buffer Management',
    [receiveWindowInputLabel]: 'Receive Window',
    [maxSegmentSizeHeader]: 'Max Segment Size',
    [useInterfaceMtuInputLabel]: 'Use Interface MTU',
    [useInterfaceMtuInputPlaceholder]: 'Size',
    [qosTrafficEngineeringHeader]: 'QOS & Traffic Engineering',
    [passThroughInputLabel]: 'Pass Through',
    [naglesAlgorithmInputLabel]: 'Nagles Algorithm',
    [tcpFastPathSettingsHeader]: 'TCP Fast Path Settings',
    [enableSynProtectionInputLabel]: 'Enable SYN Protection',
    [sessionIdleTimeoutInputLabel]: 'Session Idle Timeout',
    [secInnerText]: 'sec',
    [udpFastPathSettingsHeader]: 'UDP Fast Path Settings',
    [natClientIpAddressInputLabel]: 'NAT Client IP Address (SNAT)',
    [perPacketLoadbalancingInputLabel]: 'Per Packet Load Balancing',
    [udpProxySettingsHeader]: 'UDP Proxy Settings',
    [secondsInnerText]: 'Seconds',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
};const moduleName = 'ajslegacy';
const componentName = 'pkiprofilelistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleCaCertification = `${prefix}.columnTitleCaCertification`;
export const columnTitleCertificationRevocationList = `${prefix}.columnTitleCertificationRevocationList`;
export const columnTitleIssuedBy = `${prefix}.columnTitleIssuedBy`;
export const columnTitleExpirationDate = `${prefix}.columnTitleExpirationDate`;
export const caCertificationsHeader = `${prefix}.caCertificationsHeader`;
export const certificationRevocationListHeader = `${prefix}.certificationRevocationListHeader`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleCaCertification]: 'CA Certification',
    [columnTitleCertificationRevocationList]: 'Certificate Revocation List (CRL)',
    [columnTitleIssuedBy]: 'Issued By',
    [columnTitleExpirationDate]: 'Expiration Date',
    [caCertificationsHeader]: 'CA Certifications',
    [certificationRevocationListHeader]: 'Certificate Revocation List (CRL)',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'stringgroupcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleNumberOfStrings = `${prefix}.columnTitleNumberOfStrings`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const mapLabel = `${prefix}.mapLabel`;
export const stringLabel = `${prefix}.stringLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [columnTitleNumberOfStrings]: 'Number of Strings',
    [actionBtnEdit]: 'Edit',
    [mapLabel]: 'map',
    [stringLabel]: 'string',
};const moduleName = 'ajslegacy';
const componentName = 'verifyldapcontroller';
const prefix = `${moduleName}.${componentName}`;

export const nameInputLabel = `${prefix}.nameInputLabel`;
export const testUserEntryRadioLabel = `${prefix}.testUserEntryRadioLabel`;
export const testUserGroupMembershipRadioLabel = `${prefix}.testUserGroupMembershipRadioLabel`;
export const verifyAuthProfileHeader = `${prefix}.verifyAuthProfileHeader`;
export const testBaseDnRadioLabel = `${prefix}.testBaseDnRadioLabel`;
export const userNameInputLabel = `${prefix}.userNameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;
export const resultsInputLabel = `${prefix}.resultsInputLabel`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const verifyBtnLabel = `${prefix}.verifyBtnLabel`;

export const ENGLISH = {
    [nameInputLabel]: 'Name',
    [testUserEntryRadioLabel]: 'Test user entry',
    [testUserGroupMembershipRadioLabel]: 'Test user group membership',
    [verifyAuthProfileHeader]: 'Verify Auth Profile: {0}',
    [testBaseDnRadioLabel]: 'Test base DN',
    [userNameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
    [resultsInputLabel]: 'Results',
    [cancelBtnLabel]: 'Cancel',
    [verifyBtnLabel]: 'Verify',
};const moduleName = 'ajslegacy';
const componentName = 'chartwithoverlaystables';
const prefix = `${moduleName}.${componentName}`;

export const showAllLinkLabel = `${prefix}.showAllLinkLabel`;
export const showNearSelectedLinkLabel = `${prefix}.showNearSelectedLinkLabel`;
export const hideTableLinkLabel = `${prefix}.hideTableLinkLabel`;
export const columnTitleEntity = `${prefix}.columnTitleEntity`;
export const columnTitleMetricValue = `${prefix}.columnTitleMetricValue`;
export const columnTitleAnomalousValue = `${prefix}.columnTitleAnomalousValue`;
export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleEntityType = `${prefix}.columnTitleEntityType`;
export const columnTitlePredictionInterval = `${prefix}.columnTitlePredictionInterval`;

export const ENGLISH = {
    [showAllLinkLabel]: 'Show All',
    [showNearSelectedLinkLabel]: 'Show Near Selected',
    [hideTableLinkLabel]: 'Hide Table',
    [columnTitleEntity]: 'Entity',
    [columnTitleMetricValue]: 'Metric Value',
    [columnTitleAnomalousValue]: 'Anomalous Value',
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleType]: 'Type',
    [columnTitleEntityType]: 'Entity Type',
    [columnTitlePredictionInterval]: 'Prediction Interval',
};const moduleName = 'ajslegacy';
const componentName = 'clientlogfilters';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameAlreadyInUseMessage = `${prefix}.ruleNameAlreadyInUseMessage`;
export const clientIpMatchLabel = `${prefix}.clientIpMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const columnTitleEnabled = `${prefix}.columnTitleEnabled`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const removeButtonLabel = `${prefix}.removeButtonLabel`;
export const enableButtonLabel = `${prefix}.enableButtonLabel`;
export const disableButtonLabel = `${prefix}.disableButtonLabel`;
export const editActionTitle = `${prefix}.editActionTitle`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const clientIpLabel = `${prefix}.clientIpLabel`;
export const addClientLogFilterHeader = `${prefix}.addClientLogFilterHeader`;
export const filterNameInputLabel = `${prefix}.filterNameInputLabel`;
export const durationInputLabel = `${prefix}.durationInputLabel`;
export const minInnerText = `${prefix}.minInnerText`;
export const logAllHeadersCheckboxLabel = `${prefix}.logAllHeadersCheckboxLabel`;
export const matchingFilterHeader = `${prefix}.matchingFilterHeader`;
export const clientIpAddressHeader = `${prefix}.clientIpAddressHeader`;
export const isInRadioInputLabel = `${prefix}.isInRadioInputLabel`;
export const isNotInRadioInputLabel = `${prefix}.isNotInRadioInputLabel`;
export const removeMatchButtonLabel = `${prefix}.removeMatchButtonLabel`;
export const pathHeader = `${prefix}.pathHeader`;
export const matchInputLabel = `${prefix}.matchInputLabel`;
export const anyMatchInputPlaceholder = `${prefix}.anyMatchInputPlaceholder`;
export const clientLogSettingsHeader = `${prefix}.clientLogSettingsHeader`;
export const significantLogThrottleInputLabel = `${prefix}.significantLogThrottleInputLabel`;
export const userDefinedFiltersLogThrottleInputLabel = `${prefix}.userDefinedFiltersLogThrottleInputLabel`;
export const nonSignificantLogsCheckboxLabel = `${prefix}.nonSignificantLogsCheckboxLabel`;
export const nonSignificantLogThrottleInputLabel = `${prefix}.nonSignificantLogThrottleInputLabel`;
export const nonSignificantLogDurationInputLabel = `${prefix}.nonSignificantLogDurationInputLabel`;
export const clientLogFiltersHeader = `${prefix}.clientLogFiltersHeader`;
export const addClientLogFilterButtonLabel = `${prefix}.addClientLogFilterButtonLabel`;

export const ENGLISH = {
    [ruleNameAlreadyInUseMessage]: 'Rule name already in use',
    [clientIpMatchLabel]: 'Client IP',
    [pathMatchLabel]: 'Path',
    [columnTitleEnabled]: 'Enabled',
    [columnTitleName]: 'Name',
    [removeButtonLabel]: 'Remove',
    [enableButtonLabel]: 'Enable',
    [disableButtonLabel]: 'Disable',
    [editActionTitle]: 'Edit',
    [matchingRulesHeader]: 'Matching Rules',
    [clientIpLabel]: 'Client IP',
    [addClientLogFilterHeader]: 'Add Client Log Filter',
    [filterNameInputLabel]: 'Filter Name',
    [durationInputLabel]: 'Duration',
    [minInnerText]: 'min',
    [logAllHeadersCheckboxLabel]: 'Log all headers',
    [matchingFilterHeader]: 'Matching Filter',
    [clientIpAddressHeader]: 'Client IP Address',
    [isInRadioInputLabel]: 'Is',
    [isNotInRadioInputLabel]: 'Is not',
    [removeMatchButtonLabel]: 'Remove Match',
    [pathHeader]: 'Path',
    [matchInputLabel]: 'Match',
    [anyMatchInputPlaceholder]: 'Any',
    [clientLogSettingsHeader]: 'Client Log Settings',
    [significantLogThrottleInputLabel]: 'Significant log throttle',
    [userDefinedFiltersLogThrottleInputLabel]: 'User defined filters log throttle',
    [nonSignificantLogsCheckboxLabel]: 'Nonsignificant logs',
    [nonSignificantLogThrottleInputLabel]: 'Nonsignificant log throttle',
    [nonSignificantLogDurationInputLabel]: 'Nonsignificant log duration',
    [clientLogFiltersHeader]: 'Client Log Filters',
    [addClientLogFilterButtonLabel]: 'Add Client Log Filter',
};const moduleName = 'ajslegacy';
const componentName = 'webhookcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleCallbackUrl = `${prefix}.columnTitleCallbackUrl`;
export const columnTitleVerificationToken = `${prefix}.columnTitleVerificationToken`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleCallbackUrl]: 'Callback URL',
    [columnTitleVerificationToken]: 'Verification Token',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'avihealthscorepopup';
const prefix = `${moduleName}.${componentName}`;

export const trendingHealthScoreLabel = `${prefix}.trendingHealthScoreLabel`;
export const performanceLabel = `${prefix}.performanceLabel`;
export const anomalyPenaltyLabel = `${prefix}.anomalyPenaltyLabel`;
export const resourcePenaltyLabel = `${prefix}.resourcePenaltyLabel`;
export const securityPenaltyLabel = `${prefix}.securityPenaltyLabel`;
export const healthScoreLabel = `${prefix}.healthScoreLabel`;
export const viewHealthBtnLabel = `${prefix}.viewHealthBtnLabel`;
export const resolvePlacementIssueBtnLabel = `${prefix}.resolvePlacementIssueBtnLabel`;
export const popupStateLabel = `${prefix}.popupStateLabel`;
export const popupReasonLabel = `${prefix}.popupReasonLabel`;

export const ENGLISH = {
    [trendingHealthScoreLabel]: 'Trending Health Score ({0})',
    [performanceLabel]: 'Performance',
    [anomalyPenaltyLabel]: 'Anomaly Penalty',
    [resourcePenaltyLabel]: 'Resource Penalty',
    [securityPenaltyLabel]: 'Security Penalty',
    [healthScoreLabel]: 'Health Score',
    [viewHealthBtnLabel]: 'View Health',
    [resolvePlacementIssueBtnLabel]: 'Resolve Placement Issue',
    [popupStateLabel]: '<strong>State: <strong>{0}',
    [popupReasonLabel]: '<strong>Reason: <strong>{0}',
};const moduleName = 'ajslegacy';
const componentName = 'collectiongrid';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const createAction = `${prefix}.createAction`;
export const rowSelectionSelectAllAction = `${prefix}.rowSelectionSelectAllAction`;
export const rowSelectionClearAllAction = `${prefix}.rowSelectionClearAllAction`;
export const rowSelectionShowSelectedAction = `${prefix}.rowSelectionShowSelectedAction`;
export const rowSelectionShowAllAction = `${prefix}.rowSelectionShowAllAction`;
export const emptyListMessage = `${prefix}.emptyListMessage`;
export const emptyItemsMatchSearchCriteria = `${prefix}.emptyItemsMatchSearchCriteria`;
export const currentPageSelectLabel = `${prefix}.currentPageSelectLabel`;
export const rowsPerPageLabel = `${prefix}.rowsPerPageLabel`;
export const showingRangeOfTotalNumber = `${prefix}.showingRangeOfTotalNumber`;
export const showingRangeOfAtLeast = `${prefix}.showingRangeOfAtLeast`;
export const currentPageNumberLabel = `${prefix}.currentPageNumberLabel`;
export const settingsModalHeader = `${prefix}.settingsModalHeader`;
export const settingsModalColumnConfigHeader = `${prefix}.settingsModalColumnConfigHeader`;
export const settingsModalColumnConfigResetLabel = `${prefix}.settingsModalColumnConfigResetLabel`;
export const settingsModalColumnConfigAvailableHeader = `${prefix}.settingsModalColumnConfigAvailableHeader`;
export const settingsModalColumnConfigDisplayedHeader = `${prefix}.settingsModalColumnConfigDisplayedHeader`;
export const settingsModalColumnConfigRequiredColumnTag = `${prefix}.settingsModalColumnConfigRequiredColumnTag`;
export const settingsModalCancelLabel = `${prefix}.settingsModalCancelLabel`;
export const settingsModalSaveLabel = `${prefix}.settingsModalSaveLabel`;
export const nothingIsSelectedMessage = `${prefix}.nothingIsSelectedMessage`;
export const columnTitleTenant = `${prefix}.columnTitleTenant`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
    [createAction]: 'Create',
    [rowSelectionSelectAllAction]: 'Select All',
    [rowSelectionClearAllAction]: 'Clear All',
    [rowSelectionShowSelectedAction]: 'Show Selected',
    [rowSelectionShowAllAction]: 'Show All',
    [emptyListMessage]: 'No items found.',
    [emptyItemsMatchSearchCriteria]: 'No items match your search criteria.',
    [currentPageSelectLabel]: 'Page:',
    [rowsPerPageLabel]: 'Rows per page:',
    [showingRangeOfTotalNumber]: '{0} of {1}',
    [showingRangeOfAtLeast]: '{0} of at least {1}',
    [currentPageNumberLabel]: 'Page {0}',
    [settingsModalHeader]: 'Table Customization',
    [settingsModalColumnConfigHeader]: 'Column Configuration',
    [settingsModalColumnConfigResetLabel]: 'Reset to Default',
    [settingsModalColumnConfigAvailableHeader]: 'Available Columns',
    [settingsModalColumnConfigDisplayedHeader]: 'Displayed Columns',
    [settingsModalColumnConfigRequiredColumnTag]: '(Required)',
    [settingsModalCancelLabel]: 'Cancel',
    [settingsModalSaveLabel]: 'Save',
    [nothingIsSelectedMessage]: 'Nothing is selected, click ##0here##1, to show all',
    [columnTitleTenant]: 'Tenant',
};const moduleName = 'ajslegacy';
const componentName = 'collectiondropdowncustom';
const prefix = `${moduleName}.${componentName}`;

export const setCustomValueLabel = `${prefix}.setCustomValueLabel`;
export const customValueLabel = `${prefix}.customValueLabel`;
export const orPickOneStringIpGroupsLabel = `${prefix}.orPickOneStringIpGroupsLabel`;
export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const emptyValidEntriesLabel = `${prefix}.emptyValidEntriesLabel`;
export const createBtnLabel = `${prefix}.createBtnLabel`;

export const ENGLISH = {
    [setCustomValueLabel]: 'Set Custom Value',
    [customValueLabel]: 'Custom Value',
    [orPickOneStringIpGroupsLabel]: 'Or pick one of the following StringIP Groups',
    [searchInputPlaceholder]: 'Search',
    [emptyValidEntriesLabel]: ' no valid entries ',
    [createBtnLabel]: 'Create',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'confirm';
const prefix = `${moduleName}.${componentName}`;

export const discardChangesMessage = `${prefix}.discardChangesMessage`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const discardChangesButtonLabel = `${prefix}.discardChangesButtonLabel`;
export const wantSaveChangesMessage = `${prefix}.wantSaveChangesMessage`;
export const saveChangesButtonLabel = `${prefix}.saveChangesButtonLabel`;
export const virtualServiceTextPlural = `${prefix}.virtualServiceTextPlural`;
export const poolTextPlural = `${prefix}.poolTextPlural`;
export const usedByVsAndPoolMessage = `${prefix}.usedByVsAndPoolMessage`;

export const ENGLISH = {
    [discardChangesMessage]: 'Recent changes have been made, are you sure you want to discard?',
    [cancelButtonLabel]: 'Cancel',
    [discardChangesButtonLabel]: 'Yes, discard changes',
    [wantSaveChangesMessage]: 'Are you sure you want to save changes?',
    [saveChangesButtonLabel]: 'Yes, save changes',
    [virtualServiceTextPlural]: '{0, plural,one {Virtual Service}other {Virtual Services}}',
    [poolTextPlural]: '{0, plural,one {Pool}other {Pools}}',
    [usedByVsAndPoolMessage]: 'This profile is being used by##0{0}##1and##2{1}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'collectiondropdown';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const noValidEntriesLabel = `${prefix}.noValidEntriesLabel`;
export const createButtonLabel = `${prefix}.createButtonLabel`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
    [noValidEntriesLabel]: ' no valid entries ',
    [createButtonLabel]: 'Create',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'datascriptpolicy';
const prefix = `${moduleName}.${componentName}`;

export const scriptToExecuteInputLabel = `${prefix}.scriptToExecuteInputLabel`;
export const emptyInputPlaceholder = `${prefix}.emptyInputPlaceholder`;
export const createDataScriptButtonLabel = `${prefix}.createDataScriptButtonLabel`;
export const dataScriptsHeader = `${prefix}.dataScriptsHeader`;
export const addDataScriptButtonLabel = `${prefix}.addDataScriptButtonLabel`;
export const editActionLabel = `${prefix}.editActionLabel`;
export const deleteActionLabel = `${prefix}.deleteActionLabel`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleIndex = `${prefix}.columnTitleIndex`;

export const ENGLISH = {
    [scriptToExecuteInputLabel]: 'Script To Execute',
    [emptyInputPlaceholder]: 'None',
    [createDataScriptButtonLabel]: 'Create DataScript',
    [dataScriptsHeader]: 'DataScripts',
    [addDataScriptButtonLabel]: 'Add DataScript',
    [editActionLabel]: 'Edit',
    [deleteActionLabel]: 'Delete',
    [columnTitleName]: 'Name',
    [columnTitleIndex]: 'Index',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'dropdown';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;
export const emptyValidEntriesLabel = `${prefix}.emptyValidEntriesLabel`;
export const clearSelectedBtnLabel = `${prefix}.clearSelectedBtnLabel`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
    [emptyValidEntriesLabel]: ' no valid entries ',
    [clearSelectedBtnLabel]: 'Clear selected',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'eventsearch';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
};const moduleName = 'ajslegacy';
const componentName = 'eventdetails';
const prefix = `${moduleName}.${componentName}`;

export const descriptionLabel = `${prefix}.descriptionLabel`;
export const downloadCrsDataButtonLabel = `${prefix}.downloadCrsDataButtonLabel`;
export const previousConfigurationLabel = `${prefix}.previousConfigurationLabel`;
export const newConfigurationLabel = `${prefix}.newConfigurationLabel`;

export const ENGLISH = {
    [descriptionLabel]: 'Description',
    [downloadCrsDataButtonLabel]: 'Download CRS data',
    [previousConfigurationLabel]: 'Previous Configuration',
    [newConfigurationLabel]: 'New Configuration',
};const moduleName = 'ajslegacy';
const componentName = 'compressionfilters';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleClientIp = `${prefix}.columnTitleClientIp`;
export const columnTitleUserAgent = `${prefix}.columnTitleUserAgent`;
export const anyDataLabel = `${prefix}.anyDataLabel`;
export const columnTitleCompression = `${prefix}.columnTitleCompression`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const filterNameInUseErrorMessage = `${prefix}.filterNameInUseErrorMessage`;
export const compressionFilterBtnLabel = `${prefix}.compressionFilterBtnLabel`;
export const filterNameInputPlaceholder = `${prefix}.filterNameInputPlaceholder`;
export const addCompressionFilterHeader = `${prefix}.addCompressionFilterHeader`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const clientIpAddressInputLabel = `${prefix}.clientIpAddressInputLabel`;
export const isInRadioOption = `${prefix}.isInRadioOption`;
export const isNotInRadioOption = `${prefix}.isNotInRadioOption`;
export const clientIpAddressInputPlaceholder = `${prefix}.clientIpAddressInputPlaceholder`;
export const createIpGroupBtnLabel = `${prefix}.createIpGroupBtnLabel`;
export const userAgentContainsInputLabel = `${prefix}.userAgentContainsInputLabel`;
export const userAgentContainsInputPlaceholder = `${prefix}.userAgentContainsInputPlaceholder`;
export const createStringGroupBtnLabel = `${prefix}.createStringGroupBtnLabel`;
export const actionHeader = `${prefix}.actionHeader`;
export const compressionInputLabel = `${prefix}.compressionInputLabel`;
export const compressionFiltersHeader = `${prefix}.compressionFiltersHeader`;
export const filtersCountLabel = `${prefix}.filtersCountLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleClientIp]: 'Client IP',
    [columnTitleUserAgent]: 'User Agent',
    [anyDataLabel]: 'Any',
    [columnTitleCompression]: 'Compression',
    [actionBtnDelete]: 'Delete',
    [actionBtnEdit]: 'Edit',
    [filterNameInUseErrorMessage]: 'Filter name already in use',
    [compressionFilterBtnLabel]: 'Compression Filter',
    [filterNameInputPlaceholder]: 'Filter Name',
    [addCompressionFilterHeader]: 'Add Compression Filter',
    [matchingRulesHeader]: 'Matching Rules',
    [clientIpAddressInputLabel]: 'Client IP Address',
    [isInRadioOption]: 'Is in',
    [isNotInRadioOption]: 'Is not in',
    [clientIpAddressInputPlaceholder]: 'Select IP Group',
    [createIpGroupBtnLabel]: 'Create IP Group',
    [userAgentContainsInputLabel]: 'User Agent <span style="fontweight:normal">contains<span>',
    [userAgentContainsInputPlaceholder]: 'Select String Group',
    [createStringGroupBtnLabel]: 'Create String Group',
    [actionHeader]: 'Action',
    [compressionInputLabel]: 'Compression',
    [compressionFiltersHeader]: 'Compression Filters',
    [filtersCountLabel]: 'Filter {0}',
};const moduleName = 'ajslegacy';
const componentName = 'dosratelimitervs';
const prefix = `${moduleName}.${componentName}`;

export const rateLimitNumberOfNewTcpConnectionsHeader = `${prefix}.rateLimitNumberOfNewTcpConnectionsHeader`;
export const thresholdInputLabel = `${prefix}.thresholdInputLabel`;
export const thresholdInputPlaceholder = `${prefix}.thresholdInputPlaceholder`;
export const timePeriodInputLabel = `${prefix}.timePeriodInputLabel`;
export const timePeriodInputPlaceholder = `${prefix}.timePeriodInputPlaceholder`;
export const secInnerText = `${prefix}.secInnerText`;
export const actionInputLabel = `${prefix}.actionInputLabel`;
export const rateLimitNumberOfNewHttpRequestHeader = `${prefix}.rateLimitNumberOfNewHttpRequestHeader`;
export const statusCodeInputLabel = `${prefix}.statusCodeInputLabel`;
export const fileInputLabel = `${prefix}.fileInputLabel`;
export const protocolInputLabel = `${prefix}.protocolInputLabel`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const keepQueryInputLabel = `${prefix}.keepQueryInputLabel`;
export const hostInputLabel = `${prefix}.hostInputLabel`;
export const pathInputLabel = `${prefix}.pathInputLabel`;

export const ENGLISH = {
    [rateLimitNumberOfNewTcpConnectionsHeader]: 'Rate Limit Number of New TCP Connections',
    [thresholdInputLabel]: 'Threshold',
    [thresholdInputPlaceholder]: 'Infinite',
    [timePeriodInputLabel]: 'Time Period',
    [timePeriodInputPlaceholder]: 'Infinite Time',
    [secInnerText]: 'sec',
    [actionInputLabel]: 'Action',
    [rateLimitNumberOfNewHttpRequestHeader]: 'Rate Limit Number of New HTTP Requests',
    [statusCodeInputLabel]: 'Status Code:',
    [fileInputLabel]: 'File:',
    [protocolInputLabel]: 'Protocol:',
    [portInputLabel]: 'Port:',
    [keepQueryInputLabel]: 'Keep query',
    [hostInputLabel]: 'Host:',
    [pathInputLabel]: 'Path:',
};const moduleName = 'ajslegacy';
const componentName = 'dosratelimiter';
const prefix = `${moduleName}.${componentName}`;

export const rateLimitsInputLabel = `${prefix}.rateLimitsInputLabel`;
export const rateLimitsInputPlaceholder = `${prefix}.rateLimitsInputPlaceholder`;
export const removeBtnLabel = `${prefix}.removeBtnLabel`;

export const ENGLISH = {
    [rateLimitsInputLabel]: 'Rate Limits',
    [rateLimitsInputPlaceholder]: 'Add Rate Limit',
    [removeBtnLabel]: 'Remove {0}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'iporgrouplist';
const prefix = `${moduleName}.${componentName}`;

export const addItemBtnLabel = `${prefix}.addItemBtnLabel`;
export const orDataLabel = `${prefix}.orDataLabel`;

export const ENGLISH = {
    [addItemBtnLabel]: '+ Add Item',
    [orDataLabel]: 'or',
};const moduleName = 'ajslegacy';
const componentName = 'loginputpills';
const prefix = `${moduleName}.${componentName}`;

export const searchInputPlaceholder = `${prefix}.searchInputPlaceholder`;

export const ENGLISH = {
    [searchInputPlaceholder]: 'Search',
};const moduleName = 'ajslegacy';
const componentName = 'logbarchart';
const prefix = `${moduleName}.${componentName}`;

export const eventsPluralLabel = `${prefix}.eventsPluralLabel`;

export const ENGLISH = {
    [eventsPluralLabel]: '{0, plural, one{# <span class="units"> event<span>} other{# <span class="units"> events<span>}}',
};const moduleName = 'ajslegacy';
const componentName = 'gslbpoolpriorityfield';
const prefix = `${moduleName}.${componentName}`;

export const priorityLabel = `${prefix}.priorityLabel`;

export const ENGLISH = {
    [priorityLabel]: 'Priority',
};const moduleName = 'ajslegacy';
const componentName = 'modalipaddrlistedit';
const prefix = `${moduleName}.${componentName}`;

export const addSubnetBtnLabel = `${prefix}.addSubnetBtnLabel`;
export const addModifyStaticIpSubnetHeader = `${prefix}.addModifyStaticIpSubnetHeader`;
export const ipSubnetInputLabel = `${prefix}.ipSubnetInputLabel`;
export const networkIpSubnetsHeader = `${prefix}.networkIpSubnetsHeader`;
export const columnTitleIpSubnet = `${prefix}.columnTitleIpSubnet`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleIpAddressPool = `${prefix}.columnTitleIpAddressPool`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const discoveredLabel = `${prefix}.discoveredLabel`;
export const configuredLabel = `${prefix}.configuredLabel`;

export const ENGLISH = {
    [addSubnetBtnLabel]: 'Add Subnet',
    [addModifyStaticIpSubnetHeader]: 'AddModify Static IP Subnet',
    [ipSubnetInputLabel]: 'IP Subnet',
    [networkIpSubnetsHeader]: 'Network IP Subnets',
    [columnTitleIpSubnet]: 'IP Subnet',
    [columnTitleType]: 'Type',
    [columnTitleIpAddressPool]: 'IP Address Pool',
    [actionBtnDelete]: 'Delete',
    [actionBtnEdit]: 'Edit',
    [discoveredLabel]: 'Discovered',
    [configuredLabel]: 'Configured',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'file';
const prefix = `${moduleName}.${componentName}`;

export const noFileInputPlaceholder = `${prefix}.noFileInputPlaceholder`;
export const uploadFileLabel = `${prefix}.uploadFileLabel`;

export const ENGLISH = {
    [noFileInputPlaceholder]: 'No File Selected',
    [uploadFileLabel]: 'Upload File',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'networksecuritypolicy';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameDuplicatedMessage = `${prefix}.ruleNameDuplicatedMessage`;
export const ruleNameAlreadyInUseMessage = `${prefix}.ruleNameAlreadyInUseMessage`;
export const clientIpMatchLabel = `${prefix}.clientIpMatchLabel`;
export const servicePortMatchLabel = `${prefix}.servicePortMatchLabel`;
export const ipReputationMatchLabel = `${prefix}.ipReputationMatchLabel`;
export const createRuleActionLabel = `${prefix}.createRuleActionLabel`;
export const deleteRuleActionLabel = `${prefix}.deleteRuleActionLabel`;
export const menuActionLabel = `${prefix}.menuActionLabel`;
export const ipReputationDbHeader = `${prefix}.ipReputationDbHeader`;
export const ipReputationDbInputPlaceholder = `${prefix}.ipReputationDbInputPlaceholder`;
export const geoDbHeader = `${prefix}.geoDbHeader`;
export const geoDbInputPlaceholder = `${prefix}.geoDbInputPlaceholder`;
export const addNetworkSecurityRuleHeader = `${prefix}.addNetworkSecurityRuleHeader`;
export const ruleNameInputLabel = `${prefix}.ruleNameInputLabel`;
export const loggingCheckboxLabel = `${prefix}.loggingCheckboxLabel`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const burstSizeInputLabel = `${prefix}.burstSizeInputLabel`;
export const burstSizeInputPlaceholder = `${prefix}.burstSizeInputPlaceholder`;
export const maximumRateInputLabel = `${prefix}.maximumRateInputLabel`;
export const maximumRateInputPlaceholder = `${prefix}.maximumRateInputPlaceholder`;
export const rbacHeader = `${prefix}.rbacHeader`;

export const ENGLISH = {
    [ruleNameDuplicatedMessage]: '{0}  duplicated',
    [ruleNameAlreadyInUseMessage]: 'Rule name already in use',
    [clientIpMatchLabel]: 'Client IP',
    [servicePortMatchLabel]: 'Service Port',
    [ipReputationMatchLabel]: 'IP Reputation',
    [createRuleActionLabel]: 'Create rule',
    [deleteRuleActionLabel]: 'Delete',
    [menuActionLabel]: 'Menu',
    [ipReputationDbHeader]: 'IP Reputation DB',
    [ipReputationDbInputPlaceholder]: 'Select IP Reputation DB',
    [geoDbHeader]: 'Geo DB',
    [geoDbInputPlaceholder]: 'Select Geo DB',
    [addNetworkSecurityRuleHeader]: 'Add Network Security Rule',
    [ruleNameInputLabel]: 'Rule Name',
    [loggingCheckboxLabel]: 'Logging',
    [matchingRulesHeader]: 'Matching Rules',
    [actionHeader]: 'Action',
    [burstSizeInputLabel]: 'Burst Size',
    [burstSizeInputPlaceholder]: 'Connection Burst',
    [maximumRateInputLabel]: 'Maximum Rate',
    [maximumRateInputPlaceholder]: 'Connections per sec',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
};const moduleName = 'ajslegacy';
const componentName = 'gslbpoolmemberform';
const prefix = `${moduleName}.${componentName}`;

export const poolMemberPlural = `${prefix}.poolMemberPlural`;
export const ipAddressRadioLabel = `${prefix}.ipAddressRadioLabel`;
export const virtualServiceLabel = `${prefix}.virtualServiceLabel`;
export const siteClusterControllerLabel = `${prefix}.siteClusterControllerLabel`;
export const selectSiteInputPlaceholder = `${prefix}.selectSiteInputPlaceholder`;
export const virtualServiceInputPlaceholder = `${prefix}.virtualServiceInputPlaceholder`;
export const resolvedAddressLabel = `${prefix}.resolvedAddressLabel`;
export const publicAddressLabel = `${prefix}.publicAddressLabel`;
export const thirdPartySiteClusterControllerLabel = `${prefix}.thirdPartySiteClusterControllerLabel`;
export const radioLabel = `${prefix}.radioLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const descriptionLabel = `${prefix}.descriptionLabel`;
export const removeGslbPoolMemberTitle = `${prefix}.removeGslbPoolMemberTitle`;
export const addGslbPoolMemberLinkLabel = `${prefix}.addGslbPoolMemberLinkLabel`;

export const ENGLISH = {
    [poolMemberPlural]: '{0, plural, one{Pool Member} other{Pool Members}}',
    [ipAddressRadioLabel]: 'IP Address',
    [virtualServiceLabel]: 'Virtual Service',
    [siteClusterControllerLabel]: 'Site Cluster Controller',
    [selectSiteInputPlaceholder]: 'Select Site',
    [virtualServiceInputPlaceholder]: 'Select Virtual Service',
    [resolvedAddressLabel]: 'Resolved IP(v4v6) Address',
    [publicAddressLabel]: 'Public IP(v4v6) Address',
    [thirdPartySiteClusterControllerLabel]: 'Thirdparty Site Cluster Controller',
    [radioLabel]: 'Ratio',
    [enabledLabel]: 'Enabled',
    [descriptionLabel]: 'Description',
    [removeGslbPoolMemberTitle]: 'Remove GSLB Pool Member',
    [addGslbPoolMemberLinkLabel]: 'Add GSLB Pool Member',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'performancechartcontrols';
const prefix = `${moduleName}.${componentName}`;

export const configEventsLabel = `${prefix}.configEventsLabel`;
export const systemEventsLabel = `${prefix}.systemEventsLabel`;
export const alertsLabel = `${prefix}.alertsLabel`;
export const anomaliesLabel = `${prefix}.anomaliesLabel`;

export const ENGLISH = {
    [configEventsLabel]: '<span class="avilabel">Config Events<span> ({0})',
    [systemEventsLabel]: '<span class="avilabel">System Events<span> ({0})',
    [alertsLabel]: '<span class="avilabel">Alerts<span> ({0})',
    [anomaliesLabel]: '<span class="avilabel">Anomalies<span> ({0})',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'performancechartlegend';
const prefix = `${moduleName}.${componentName}`;

export const showHideLegendTitle = `${prefix}.showHideLegendTitle`;

export const ENGLISH = {
    [showHideLegendTitle]: 'ShowHide Legend',
};const moduleName = 'welcome';
const componentName = 'repeatedinputs';
const prefix = `${moduleName}.${componentName}`;

export const removeItemBtnLabel = `${prefix}.removeItemBtnLabel`;
export const addItemBtnLabel = `${prefix}.addItemBtnLabel`;
export const itemLabel = `${prefix}.itemLabel`;

export const ENGLISH = {
    [removeItemBtnLabel]: 'Remove {0}',
    [addItemBtnLabel]: '+ Add {0}',
    [itemLabel]: 'Item',
};const moduleName = 'ajslegacy';
const componentName = 'responsepolicy';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameDuplicatedMessage = `${prefix}.ruleNameDuplicatedMessage`;
export const ruleNameAlreadyInUseMessage = `${prefix}.ruleNameAlreadyInUseMessage`;
export const clientIpMatchLabel = `${prefix}.clientIpMatchLabel`;
export const servicePortMatchLabel = `${prefix}.servicePortMatchLabel`;
export const protocolTypeMatchLabel = `${prefix}.protocolTypeMatchLabel`;
export const httpMethodMatchLabel = `${prefix}.httpMethodMatchLabel`;
export const httpVersionMatchLabel = `${prefix}.httpVersionMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const queryMatchLabel = `${prefix}.queryMatchLabel`;
export const headersMatchLabel = `${prefix}.headersMatchLabel`;
export const cookieMatchLabel = `${prefix}.cookieMatchLabel`;
export const hostHeaderMatchLabel = `${prefix}.hostHeaderMatchLabel`;
export const locationHeaderMatchLabel = `${prefix}.locationHeaderMatchLabel`;
export const httpStatusMatchLabel = `${prefix}.httpStatusMatchLabel`;
export const responseHeaderMatchLabel = `${prefix}.responseHeaderMatchLabel`;
export const modifyHeaderActionLabel = `${prefix}.modifyHeaderActionLabel`;
export const rewriteLocationHeaderActionLabel = `${prefix}.rewriteLocationHeaderActionLabel`;
export const createRuleActionLabel = `${prefix}.createRuleActionLabel`;
export const deleteRuleActionLabel = `${prefix}.deleteRuleActionLabel`;
export const menuActionLabel = `${prefix}.menuActionLabel`;
export const addHttpResponseRuleHeader = `${prefix}.addHttpResponseRuleHeader`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const sourceIpMatchLabel = `${prefix}.sourceIpMatchLabel`;

export const ENGLISH = {
    [ruleNameDuplicatedMessage]: '{0}  duplicated',
    [ruleNameAlreadyInUseMessage]: 'Rule name already in use',
    [clientIpMatchLabel]: 'Client IP',
    [servicePortMatchLabel]: 'Service Port',
    [protocolTypeMatchLabel]: 'Protocol Type',
    [httpMethodMatchLabel]: 'HTTP Method',
    [httpVersionMatchLabel]: 'HTTP Version',
    [pathMatchLabel]: 'Path',
    [queryMatchLabel]: 'Query',
    [headersMatchLabel]: 'Headers',
    [cookieMatchLabel]: 'Cookie',
    [hostHeaderMatchLabel]: 'Host Header',
    [locationHeaderMatchLabel]: 'Location Header',
    [httpStatusMatchLabel]: 'HTTP Status',
    [responseHeaderMatchLabel]: 'Response Header',
    [modifyHeaderActionLabel]: 'Modify Header',
    [rewriteLocationHeaderActionLabel]: 'Rewrite Location Header',
    [createRuleActionLabel]: 'Create rule',
    [deleteRuleActionLabel]: 'Delete',
    [menuActionLabel]: 'Menu',
    [addHttpResponseRuleHeader]: 'Add HTTP Response Rule',
    [matchingRulesHeader]: 'Matching Rules',
    [actionHeader]: 'Action',
    [sourceIpMatchLabel]: 'Source IP',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'healthmonitorlistcontroller';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleSendInterval = `${prefix}.columnTitleSendInterval`;
export const columnTitleReceiveTimeout = `${prefix}.columnTitleReceiveTimeout`;
export const columnTitleSuccessfulChecks = `${prefix}.columnTitleSuccessfulChecks`;
export const columnTitleFailedChecks = `${prefix}.columnTitleFailedChecks`;
export const columnTitleIsFederated = `${prefix}.columnTitleIsFederated`;
export const actionBtnEdit = `${prefix}.actionBtnEdit`;
export const secInnerText = `${prefix}.secInnerText`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleType]: 'Type',
    [columnTitleSendInterval]: 'Send Interval',
    [columnTitleReceiveTimeout]: 'Receive Timeout',
    [columnTitleSuccessfulChecks]: 'Successful Checks',
    [columnTitleFailedChecks]: 'Failed Checks',
    [columnTitleIsFederated]: 'Federated',
    [actionBtnEdit]: 'Edit',
    [secInnerText]: '{0} sec',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'requestpolicy';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameDuplicatedMessage = `${prefix}.ruleNameDuplicatedMessage`;
export const ruleNameAlreadyInUseMessage = `${prefix}.ruleNameAlreadyInUseMessage`;
export const clientIpMatchLabel = `${prefix}.clientIpMatchLabel`;
export const servicePortMatchLabel = `${prefix}.servicePortMatchLabel`;
export const protocolTypeMatchLabel = `${prefix}.protocolTypeMatchLabel`;
export const httpMethodMatchLabel = `${prefix}.httpMethodMatchLabel`;
export const httpVersionMatchLabel = `${prefix}.httpVersionMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const queryMatchLabel = `${prefix}.queryMatchLabel`;
export const headersMatchLabel = `${prefix}.headersMatchLabel`;
export const cookieMatchLabel = `${prefix}.cookieMatchLabel`;
export const hostHeaderMatchLabel = `${prefix}.hostHeaderMatchLabel`;
export const ipReputationMatchLabel = `${prefix}.ipReputationMatchLabel`;
export const redirectActionLabel = `${prefix}.redirectActionLabel`;
export const modifyHeaderActionLabel = `${prefix}.modifyHeaderActionLabel`;
export const rewriteUrlActionLabel = `${prefix}.rewriteUrlActionLabel`;
export const contentSwitchActionLabel = `${prefix}.contentSwitchActionLabel`;
export const createRuleActionLabel = `${prefix}.createRuleActionLabel`;
export const deleteRuleActionLabel = `${prefix}.deleteRuleActionLabel`;
export const menuActionLabel = `${prefix}.menuActionLabel`;
export const ipReputationDbHeader = `${prefix}.ipReputationDbHeader`;
export const ipReputationDbInputPlaceholder = `${prefix}.ipReputationDbInputPlaceholder`;
export const addHttpRequestRuleHeader = `${prefix}.addHttpRequestRuleHeader`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const sourceIpMatchLabel = `${prefix}.sourceIpMatchLabel`;

export const ENGLISH = {
    [ruleNameDuplicatedMessage]: '{0}  duplicated',
    [ruleNameAlreadyInUseMessage]: 'Rule name already in use',
    [clientIpMatchLabel]: 'Client IP',
    [servicePortMatchLabel]: 'Service Port',
    [protocolTypeMatchLabel]: 'Protocol Type',
    [httpMethodMatchLabel]: 'HTTP Method',
    [httpVersionMatchLabel]: 'HTTP Version',
    [pathMatchLabel]: 'Path',
    [queryMatchLabel]: 'Query',
    [headersMatchLabel]: 'Headers',
    [cookieMatchLabel]: 'Cookie',
    [hostHeaderMatchLabel]: 'Host Header',
    [ipReputationMatchLabel]: 'IP Reputation',
    [redirectActionLabel]: 'Redirect',
    [modifyHeaderActionLabel]: 'Modify Header',
    [rewriteUrlActionLabel]: 'Rewrite URL',
    [contentSwitchActionLabel]: 'Content Switch',
    [createRuleActionLabel]: 'Create rule',
    [deleteRuleActionLabel]: 'Delete',
    [menuActionLabel]: 'Menu',
    [ipReputationDbHeader]: 'IP Reputation DB',
    [ipReputationDbInputPlaceholder]: 'Select IP Reputation DB',
    [addHttpRequestRuleHeader]: 'Add HTTP Request Rule',
    [matchingRulesHeader]: 'Matching Rules',
    [actionHeader]: 'Action',
    [sourceIpMatchLabel]: 'Source IP',
};const moduleName = 'ajslegacy';
const componentName = 'poolnavbars';
const prefix = `${moduleName}.${componentName}`;

export const analyticsTabLabel = `${prefix}.analyticsTabLabel`;
export const logsTabLabel = `${prefix}.logsTabLabel`;
export const healthTabLabel = `${prefix}.healthTabLabel`;
export const serversTabLabel = `${prefix}.serversTabLabel`;
export const eventsTabLabel = `${prefix}.eventsTabLabel`;
export const alertsTabLabel = `${prefix}.alertsTabLabel`;

export const ENGLISH = {
    [analyticsTabLabel]: 'Analytics',
    [logsTabLabel]: 'Logs',
    [healthTabLabel]: 'Health',
    [serversTabLabel]: 'Servers',
    [eventsTabLabel]: 'Events',
    [alertsTabLabel]: 'Alerts',
};const moduleName = 'ajslegacy';
const componentName = 'stringorgrouplist';
const prefix = `${moduleName}.${componentName}`;

export const addStringGroupLinkLabel = `${prefix}.addStringGroupLinkLabel`;
export const addStringGroupCustomStringLinkLabel = `${prefix}.addStringGroupCustomStringLinkLabel`;
export const orLabel = `${prefix}.orLabel`;
export const enterStringInputPlaceholder = `${prefix}.enterStringInputPlaceholder`;
export const enterCustomStringInputPlaceholder = `${prefix}.enterCustomStringInputPlaceholder`;
export const selectStringGroupInputPlaceholder = `${prefix}.selectStringGroupInputPlaceholder`;
export const removeItemTitle = `${prefix}.removeItemTitle`;

export const ENGLISH = {
    [addStringGroupLinkLabel]: '+ Add string group',
    [addStringGroupCustomStringLinkLabel]: '+ Add string group or custom string',
    [orLabel]: 'or',
    [enterStringInputPlaceholder]: 'Enter string or select string group',
    [enterCustomStringInputPlaceholder]: 'Enter String',
    [selectStringGroupInputPlaceholder]: 'Select String Group',
    [removeItemTitle]: 'Remove Item',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'securitypolicy';
const prefix = `${moduleName}.${componentName}`;

export const ruleNameDuplicatedMessage = `${prefix}.ruleNameDuplicatedMessage`;
export const ruleNameAlreadyInUseMessage = `${prefix}.ruleNameAlreadyInUseMessage`;
export const clientIpMatchLabel = `${prefix}.clientIpMatchLabel`;
export const servicePortMatchLabel = `${prefix}.servicePortMatchLabel`;
export const protocolTypeMatchLabel = `${prefix}.protocolTypeMatchLabel`;
export const httpMethodMatchLabel = `${prefix}.httpMethodMatchLabel`;
export const httpVersionMatchLabel = `${prefix}.httpVersionMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const queryMatchLabel = `${prefix}.queryMatchLabel`;
export const headersMatchLabel = `${prefix}.headersMatchLabel`;
export const cookieMatchLabel = `${prefix}.cookieMatchLabel`;
export const hostHeaderMatchLabel = `${prefix}.hostHeaderMatchLabel`;
export const ipReputationMatchLabel = `${prefix}.ipReputationMatchLabel`;
export const createRuleActionLabel = `${prefix}.createRuleActionLabel`;
export const deleteRuleActionLabel = `${prefix}.deleteRuleActionLabel`;
export const menuActionLabel = `${prefix}.menuActionLabel`;
export const ipReputationDbHeader = `${prefix}.ipReputationDbHeader`;
export const ipReputationDbInputPlaceholder = `${prefix}.ipReputationDbInputPlaceholder`;
export const geoDbHeader = `${prefix}.geoDbHeader`;
export const geoDbInputPlaceholder = `${prefix}.geoDbInputPlaceholder`;
export const addHttpSecurityRuleHeader = `${prefix}.addHttpSecurityRuleHeader`;
export const matchingRulesHeader = `${prefix}.matchingRulesHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const actionInputPlaceholder = `${prefix}.actionInputPlaceholder`;
export const sendResponseSettingsHeader = `${prefix}.sendResponseSettingsHeader`;
export const statusCodeInputLabel = `${prefix}.statusCodeInputLabel`;
export const redirectToHttpsSettingsHeader = `${prefix}.redirectToHttpsSettingsHeader`;
export const portInputLabel = `${prefix}.portInputLabel`;
export const rateLimitSettingsHeader = `${prefix}.rateLimitSettingsHeader`;
export const countInputLabel = `${prefix}.countInputLabel`;
export const periodInputLabel = `${prefix}.periodInputLabel`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const rateLimiterActionInputLabel = `${prefix}.rateLimiterActionInputLabel`;
export const rateLimiterActionInputPlaceholder = `${prefix}.rateLimiterActionInputPlaceholder`;
export const emptyLabel = `${prefix}.emptyLabel`;
export const reportOnlyLabel = `${prefix}.reportOnlyLabel`;
export const localResponseSettingsHeader = `${prefix}.localResponseSettingsHeader`;
export const rateLimiterActionStatusCodeInputLabel = `${prefix}.rateLimiterActionStatusCodeInputLabel`;
export const rateLimiterActionStatusCodeInputPlaceholder = `${prefix}.rateLimiterActionStatusCodeInputPlaceholder`;
export const fileUploadInputLabel = `${prefix}.fileUploadInputLabel`;
export const rbacHeader = `${prefix}.rbacHeader`;
export const botManagementLabel = `${prefix}.botManagementLabel`;
export const invalidBotManagemntValues = `${prefix}.invalidBotManagemntValues`;
export const sourceIpMatchLabel = `${prefix}.sourceIpMatchLabel`;

export const ENGLISH = {
    [ruleNameDuplicatedMessage]: '{0}  duplicated',
    [ruleNameAlreadyInUseMessage]: 'Rule name already in use',
    [clientIpMatchLabel]: 'Client IP',
    [servicePortMatchLabel]: 'Service Port',
    [protocolTypeMatchLabel]: 'Protocol Type',
    [httpMethodMatchLabel]: 'HTTP Method',
    [httpVersionMatchLabel]: 'HTTP Version',
    [pathMatchLabel]: 'Path',
    [queryMatchLabel]: 'Query',
    [headersMatchLabel]: 'Headers',
    [cookieMatchLabel]: 'Cookie',
    [hostHeaderMatchLabel]: 'Host Header',
    [ipReputationMatchLabel]: 'IP Reputation',
    [createRuleActionLabel]: 'Create rule',
    [deleteRuleActionLabel]: 'Delete',
    [menuActionLabel]: 'Menu',
    [ipReputationDbHeader]: 'IP Reputation DB',
    [ipReputationDbInputPlaceholder]: 'Select IP Reputation DB',
    [geoDbHeader]: 'Geo DB',
    [geoDbInputPlaceholder]: 'Select Geo DB',
    [addHttpSecurityRuleHeader]: 'Add HTTP Security Rule',
    [matchingRulesHeader]: 'Matching Rules',
    [actionHeader]: 'Action',
    [actionInputPlaceholder]: 'Select Action',
    [sendResponseSettingsHeader]: 'Send Response Settings',
    [statusCodeInputLabel]: 'Status Code:',
    [redirectToHttpsSettingsHeader]: 'Redirect to HTTPS Settings',
    [portInputLabel]: 'Port',
    [rateLimitSettingsHeader]: 'Rate Limit Settings',
    [countInputLabel]: 'Count',
    [periodInputLabel]: 'Period',
    [secondsInnerText]: 'seconds',
    [rateLimiterActionInputLabel]: 'Rate Limiter Action',
    [rateLimiterActionInputPlaceholder]: 'Select Rate Limiter Action',
    [emptyLabel]: 'None',
    [reportOnlyLabel]: 'Report Only',
    [localResponseSettingsHeader]: 'Local Response Settings',
    [rateLimiterActionStatusCodeInputLabel]: 'Status Code',
    [rateLimiterActionStatusCodeInputPlaceholder]: 'Select Rate Limiter Action',
    [fileUploadInputLabel]: 'File',
    [rbacHeader]: 'RoleBased Access Control (RBAC)',
    [botManagementLabel]: 'Bot Management',
    [invalidBotManagemntValues]: 'Invalid Values For Bot Management Rule',
    [sourceIpMatchLabel]: 'Source IP',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'serviceenginenavbars';
const prefix = `${moduleName}.${componentName}`;

export const analyticsLinkLabel = `${prefix}.analyticsLinkLabel`;
export const healthLinkLabel = `${prefix}.healthLinkLabel`;
export const eventsLinkLabel = `${prefix}.eventsLinkLabel`;
export const alertsLinkLabel = `${prefix}.alertsLinkLabel`;

export const ENGLISH = {
    [analyticsLinkLabel]: 'Analytics',
    [healthLinkLabel]: 'Health',
    [eventsLinkLabel]: 'Events',
    [alertsLinkLabel]: 'Alerts',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'unitinfo';
const prefix = `${moduleName}.${componentName}`;

export const serviceEngineHeader = `${prefix}.serviceEngineHeader`;
export const managementIpHeader = `${prefix}.managementIpHeader`;
export const uptimeHeader = `${prefix}.uptimeHeader`;
export const downtimeHeader = `${prefix}.downtimeHeader`;
export const managementInterfaceHeader = `${prefix}.managementInterfaceHeader`;
export const managementNetworkHeader = `${prefix}.managementNetworkHeader`;
export const serviceEngineGroupHeader = `${prefix}.serviceEngineGroupHeader`;
export const physicalHostHeader = `${prefix}.physicalHostHeader`;
export const systemMemoryHeader = `${prefix}.systemMemoryHeader`;
export const resourceUsageMemoryLabel = `${prefix}.resourceUsageMemoryLabel`;
export const diskUsageHeader = `${prefix}.diskUsageHeader`;
export const resourceUsageDiskLabel = `${prefix}.resourceUsageDiskLabel`;
export const numberOfCpusHeader = `${prefix}.numberOfCpusHeader`;
export const socketsHeader = `${prefix}.socketsHeader`;
export const inuseInterfaceListLabel = `${prefix}.inuseInterfaceListLabel`;
export const virtualNetworkInterfacesLabel = `${prefix}.virtualNetworkInterfacesLabel`;
export const columnTitleInterface = `${prefix}.columnTitleInterface`;
export const columnTitleNetworkName = `${prefix}.columnTitleNetworkName`;
export const columnTitleMacAddress = `${prefix}.columnTitleMacAddress`;
export const columnTitleIpAddress = `${prefix}.columnTitleIpAddress`;
export const vlanInterfacesLabel = `${prefix}.vlanInterfacesLabel`;

export const ENGLISH = {
    [serviceEngineHeader]: 'Service Engine: <span class="selsubnavname navbarunitname se">{0}<span>',
    [managementIpHeader]: 'Management IP',
    [uptimeHeader]: 'Uptime',
    [downtimeHeader]: 'Downtime',
    [managementInterfaceHeader]: 'Management Interface',
    [managementNetworkHeader]: 'Management Network',
    [serviceEngineGroupHeader]: 'Service Engine Group',
    [physicalHostHeader]: 'Physical Host',
    [systemMemoryHeader]: 'System Memory',
    [resourceUsageMemoryLabel]: '{0}MB  {1}MB',
    [diskUsageHeader]: 'Disk Usage',
    [resourceUsageDiskLabel]: '{0}GB  {1}GB',
    [numberOfCpusHeader]: 'Number of CPUs',
    [socketsHeader]: 'Sockets',
    [inuseInterfaceListLabel]: 'Inuse Interface List',
    [virtualNetworkInterfacesLabel]: 'Virtual Network Interfaces',
    [columnTitleInterface]: 'Interface',
    [columnTitleNetworkName]: 'Network Name',
    [columnTitleMacAddress]: 'Mac Address',
    [columnTitleIpAddress]: 'IP Address',
    [vlanInterfacesLabel]: 'VLAN Interfaces',
};const moduleName = 'ajslegacy';
const componentName = 'scatterplotcard';
const prefix = `${moduleName}.${componentName}`;

export const serverPlural = `${prefix}.serverPlural`;

export const ENGLISH = {
    [serverPlural]: '{0, plural, one{<span class="selservercount">#<span> Server} other{<span class="selservercount">#<span> Servers}}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'wizard';
const prefix = `${moduleName}.${componentName}`;

export const stepLinkLabel = `${prefix}.stepLinkLabel`;

export const ENGLISH = {
    [stepLinkLabel]: 'Step {0}: {1}',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'timeframeselector';
const prefix = `${moduleName}.${componentName}`;

export const displayingLabel = `${prefix}.displayingLabel`;

export const ENGLISH = {
    [displayingLabel]: 'Displaying',
};const moduleName = 'ajslegacy';
const componentName = 'toplist';
const prefix = `${moduleName}.${componentName}`;

export const emptyDataMessage = `${prefix}.emptyDataMessage`;
export const resourceTimingBtnLabel = `${prefix}.resourceTimingBtnLabel`;
export const totalTimeLabel = `${prefix}.totalTimeLabel`;
export const pageDownloadTimeTotalLabel = `${prefix}.pageDownloadTimeTotalLabel`;
export const pageDownloadTimeTotalSecondLabel = `${prefix}.pageDownloadTimeTotalSecondLabel`;
export const deviceLabel = `${prefix}.deviceLabel`;
export const browserLabel = `${prefix}.browserLabel`;
export const operatingSystemLabel = `${prefix}.operatingSystemLabel`;
export const topUrlsLabel = `${prefix}.topUrlsLabel`;

export const ENGLISH = {
    [emptyDataMessage]: 'No Data Available',
    [resourceTimingBtnLabel]: 'Resource Timing',
    [totalTimeLabel]: 'Total time: {0} <span class = "unitscolor">ms<span>',
    [pageDownloadTimeTotalLabel]: '{0} <span class = "unitscolor">ms<span>',
    [pageDownloadTimeTotalSecondLabel]: '{0} <span class = "unitscolor">s<span>',
    [deviceLabel]: 'Device',
    [browserLabel]: 'Browser',
    [operatingSystemLabel]: 'Operating System',
    [topUrlsLabel]: 'Top URLs',
};const moduleName = 'ajslegacy';
const componentName = 'alertgridconfig';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleResourceName = `${prefix}.columnTitleResourceName`;
export const columnTitleLevel = `${prefix}.columnTitleLevel`;
export const columnTitleSummary = `${prefix}.columnTitleSummary`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const actionTitleExpand = `${prefix}.actionTitleExpand`;
export const columnTitleMetric = `${prefix}.columnTitleMetric`;
export const columnTitleValue = `${prefix}.columnTitleValue`;
export const columnTitleReportTime = `${prefix}.columnTitleReportTime`;
export const columnTitleEndTime = `${prefix}.columnTitleEndTime`;
export const columnTitleStep = `${prefix}.columnTitleStep`;
export const editAlertConfigBtnLabel = `${prefix}.editAlertConfigBtnLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const throttleCountInputLabel = `${prefix}.throttleCountInputLabel`;
export const actionScriptOutputInputLabel = `${prefix}.actionScriptOutputInputLabel`;
export const relatedEventInputLabel = `${prefix}.relatedEventInputLabel`;

export const ENGLISH = {
    [columnTitleMetric]: 'Metric',
    [columnTitleValue]: 'Value',
    [columnTitleReportTime]: 'Report Time',
    [columnTitleEndTime]: 'End Time',
    [columnTitleStep]: 'Step',
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleResourceName]: 'Resource Name',
    [columnTitleLevel]: 'Level',
    [columnTitleSummary]: 'Summary',
    [actionTitleDelete]: 'Delete',
    [actionTitleExpand]: 'Expand',
    [editAlertConfigBtnLabel]: 'Edit Alert Config',
    [descriptionInputLabel]: '<span class="key">Description<span>: {0}',
    [throttleCountInputLabel]: 'Throttle Count: {0}',
    [actionScriptOutputInputLabel]: '<strong>Action Script Output:<strong><div>{0}<div>',
    [relatedEventInputLabel]: '{0, plural, one{# Related Event} other{# Related Events}}',
};const moduleName = 'ajslegacy';
const componentName = 'dosratelimiterservice';
const prefix = `${moduleName}.${componentName}`;

export const rateLimitConnectionsFromClientOption = `${prefix}.rateLimitConnectionsFromClientOption`;
export const rateLimitRequestsFromClientToAllUrlsOption = `${prefix}.rateLimitRequestsFromClientToAllUrlsOption`;
export const rateLimitRequestsFromAllClientsToUrlOption = `${prefix}.rateLimitRequestsFromAllClientsToUrlOption`;
export const rateLimitRequestsFromClientsToUrlOption = `${prefix}.rateLimitRequestsFromClientsToUrlOption`;
export const rateLimitFailedRequestsFromClientsToAllUrlsOption = `${prefix}.rateLimitFailedRequestsFromClientsToAllUrlsOption`;
export const rateLimitFailedRequestsFromAllClientsToUrlOption = `${prefix}.rateLimitFailedRequestsFromAllClientsToUrlOptions`;
export const rateLimitHttpRequestsToAllUrlsOfVsOption = `${prefix}.rateLimitHttpRequestsToAllUrlsOfVsOption`;
export const rateLimitFailedRequestsFormClientToUrlOption = `${prefix}.rateLimitFailedRequestsFormClientToUrlOption`;
export const rateLimitScansFromClientToAllUrlsOption = `${prefix}.rateLimitScansFromClientToAllUrlsOption`;
export const rateLimitScansFromAllClientsToAllUrlsOption = `${prefix}.rateLimitScansFromAllClientsToAllUrlsOption`;
export const rateLimitHttpHeaderOrCookieOption = `${prefix}.rateLimitHttpHeaderOrCookieOption`;
export const reportOnlyOption = `${prefix}.reportOnlyOption`;
export const dropSynPacketsOption = `${prefix}.dropSynPacketsOption`;
export const sendTcpRstOption = `${prefix}.sendTcpRstOption`;
export const closeTcpConnectionOption = `${prefix}.closeTcpConnectionOption`;
export const sendHttpLocalResponseOption = `${prefix}.sendHttpLocalResponseOption`;
export const sendHttpRedirectOption = `${prefix}.sendHttpRedirectOption`;

export const ENGLISH = {
    [rateLimitConnectionsFromClientOption]: 'Rate Limit Connections from a Client',
    [rateLimitRequestsFromClientToAllUrlsOption]: 'Rate Limit Requests from a Client to all URLs',
    [rateLimitRequestsFromAllClientsToUrlOption]: 'Rate Limit Requests from all Clients to a URL',
    [rateLimitRequestsFromClientsToUrlOption]: 'Rate Limit Requests from a Client to a URL',
    [rateLimitFailedRequestsFromClientsToAllUrlsOption]: 'Rate Limit Failed Requests from a Client to all URLs',
    [rateLimitFailedRequestsFromAllClientsToUrlOption]: 'Rate Limit Failed Requests from all Clients to a URL',
    [rateLimitHttpRequestsToAllUrlsOfVsOption]: 'Rate Limit all HTTP requests that map to any custom string to all URLs of the Virtual Service.',
    [rateLimitFailedRequestsFormClientToUrlOption]: 'Rate Limit Failed Requests from a Client to a URL',
    [rateLimitScansFromClientToAllUrlsOption]: 'Rate Limit Scans from a Client to all URLs',
    [rateLimitScansFromAllClientsToAllUrlsOption]: 'Rate Limit Scans from all Clients to all URLs',
    [rateLimitHttpHeaderOrCookieOption]: 'Rate Limit HTTP Header or Cookie',
    [reportOnlyOption]: 'Report Only',
    [dropSynPacketsOption]: 'Drop SYN Packets',
    [sendTcpRstOption]: 'Send TCP RST',
    [closeTcpConnectionOption]: 'Close TCP Connection',
    [sendHttpLocalResponseOption]: 'Send HTTP Local Response',
    [sendHttpRedirectOption]: 'Send HTTP Redirect',
};const moduleName = 'ajslegacy';
const componentName = 'techsupportdatatransformer';
const prefix = `${moduleName}.${componentName}`;

export const completeSuccessfullyLabel = `${prefix}.completeSuccessfullyLabel`;
export const completeErrorLabel = `${prefix}.completeErrorLabel`;

export const ENGLISH = {
    [completeSuccessfullyLabel]: 'Completed successfully',
    [completeErrorLabel]: 'Completed with errors',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'endtoendtimemetric';
const prefix = `${moduleName}.${componentName}`;

export const clientTitle = `${prefix}.clientTitle`;
export const clientRttTitle = `${prefix}.clientRttTitle`;
export const serverRttTitle = `${prefix}.serverRttTitle`;
export const serverTitle = `${prefix}.serverTitle`;
export const appResponseTitle = `${prefix}.appResponseTitle`;
export const appTitle = `${prefix}.appTitle`;
export const dataTransferTitle = `${prefix}.dataTransferTitle`;
export const endToEndTimingHeader = `${prefix}.endToEndTimingHeader`;
export const totalTimeTitle = `${prefix}.totalTimeTitle`;

export const ENGLISH = {
    [clientTitle]: 'Client',
    [clientRttTitle]: 'Client RTT',
    [serverRttTitle]: 'Server RTT',
    [serverTitle]: 'Server',
    [appResponseTitle]: 'App Response',
    [appTitle]: 'App',
    [dataTransferTitle]: 'Data Transfer',
    [endToEndTimingHeader]: 'End to End Timing',
    [totalTimeTitle]: 'Total Time',
};const moduleName = 'wafpolicy';
const componentName = 'vswaftophitsdatatransformer';
const prefix = `${moduleName}.${componentName}`;

export const allOtherValuesLabel = `${prefix}.allOtherValuesLabel`;

export const ENGLISH = {
    [allOtherValuesLabel]: 'All Other Values',
};const moduleName = 'ajslegacy';
const componentName = 'popuphelper';
const prefix = `${moduleName}.${componentName}`;

export const poolNameHeader = `${prefix}.poolNameHeader`;
export const loadBalancingLabel = `${prefix}.loadBalancingLabel`;
export const uptimeLabel = `${prefix}.uptimeLabel`;
export const downtimeLabel = `${prefix}.downtimeLabel`;
export const persistenceLabel = `${prefix}.persistenceLabel`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const healthMonitorsLabel = `${prefix}.healthMonitorsLabel`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const autoScalePolicyLabel = `${prefix}.autoScalePolicyLabel`;
export const autoScaleLaunchConfigLabel = `${prefix}.autoScaleLaunchConfigLabel`;
export const serversLabel = `${prefix}.serversLabel`;
export const activeServersLabel = `${prefix}.activeServersLabel`;
export const disabledServersLabel = `${prefix}.disabledServersLabel`;
export const downServersLabel = `${prefix}.downServersLabel`;

export const ENGLISH = {
    [poolNameHeader]: 'Pool: <span class="selsubnavname navbarunitname">{0}<span>',
    [loadBalancingLabel]: 'Load Balancing',
    [uptimeLabel]: 'Uptime',
    [downtimeLabel]: 'Downtime',
    [persistenceLabel]: 'Persistence',
    [cloudLabel]: 'Cloud',
    [healthMonitorsLabel]: 'Health Monitors',
    [emptyDataLabel]: 'None',
    [autoScalePolicyLabel]: 'AutoScale Policy',
    [autoScaleLaunchConfigLabel]: 'AutoScale Launch Config',
    [serversLabel]: 'Servers',
    [activeServersLabel]: 'Active: <strong>{0}<strong>',
    [disabledServersLabel]: 'Disabled: <strong>{0}<strong>',
    [downServersLabel]: 'Down: <strong>{0}<strong>',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'eventgridconfig';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleResourceName = `${prefix}.columnTitleResourceName`;
export const columnTitleResourceType = `${prefix}.columnTitleResourceType`;
export const columnTitleEventCode = `${prefix}.columnTitleEventCode`;
export const columnTitleUser = `${prefix}.columnTitleUser`;
export const columnTitleDescription = `${prefix}.columnTitleDescription`;

export const ENGLISH = {
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleResourceName]: 'Resource Name (obj_name)',
    [columnTitleResourceType]: 'Resource Type (obj_type)',
    [columnTitleEventCode]: 'Event Code (event_id)',
    [columnTitleUser]: 'User',
    [columnTitleDescription]: 'Description',
};========================================================================
  
  ========================================================================


const moduleName = 'accounts';
const componentName = 'authenticationtenantrolemappingcontroller';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const ldapGroupLabel = `${prefix}.ldapGroupLabel`;
export const anyRadioLabel = `${prefix}.anyRadioLabel`;
export const memberRadioLabel = `${prefix}.memberRadioLabel`;
export const notMemberRadioLabel = `${prefix}.notMemberRadioLabel`;
export const groupInputPlaceholder = `${prefix}.groupInputPlaceholder`;
export const attributeNameInputPlaceholder = `${prefix}.attributeNameInputPlaceholder`;
export const attributeValueInputPlaceholder = `${prefix}.attributeValueInputPlaceholder`;
export const superUserLabel = `${prefix}.superUserLabel`;
export const userRoleLabel = `${prefix}.userRoleLabel`;
export const selectRoleDropdownLabel = `${prefix}.selectRoleDropdownLabel`;
export const roleAttributeNameInputLabel = `${prefix}.roleAttributeNameInputLabel`;
export const rolesDropdownLabel = `${prefix}.rolesDropdownLabel`;
export const createRoleDropdownLabel = `${prefix}.createRoleDropdownLabel`;
export const selectRoleDropdownPlaceholder = `${prefix}.selectRoleDropdownPlaceholder`;
export const userTenantsLabel = `${prefix}.userTenantsLabel`;
export const selectTenantsDropdownLabel = `${prefix}.selectTenantsDropdownLabel`;
export const tenantAttributeNameInputLabel = `${prefix}.tenantAttributeNameInputLabel`;
export const tenantsDropdownLabel = `${prefix}.tenantsDropdownLabel`;
export const createTenantDropdownLabel = `${prefix}.createTenantDropdownLabel`;
export const selectTenantDropdownPlaceholder = `${prefix}.selectTenantDropdownPlaceholder`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Tenant and Role Mapping',
    [modalHeaderNew]: 'New Tenant and Role Mapping',
    [ldapGroupLabel]: 'LDAP Group',
    [anyRadioLabel]: 'Any',
    [memberRadioLabel]: 'Member',
    [notMemberRadioLabel]: 'Not a Member',
    [groupInputPlaceholder]: 'Group',
    [attributeNameInputPlaceholder]: 'Attribute Name',
    [attributeValueInputPlaceholder]: 'Attribute Value',
    [superUserLabel]: 'Super User',
    [userRoleLabel]: 'User Role',
    [selectRoleDropdownLabel]: 'Select a Role',
    [roleAttributeNameInputLabel]: 'Role Attribute Name',
    [rolesDropdownLabel]: 'Roles',
    [createRoleDropdownLabel]: 'Create Role',
    [selectRoleDropdownPlaceholder]: 'Select Role',
    [userTenantsLabel]: 'User Tenants',
    [selectTenantsDropdownLabel]: 'Select Tenants',
    [tenantAttributeNameInputLabel]: 'Tenant Attribute Name',
    [tenantsDropdownLabel]: 'Tenants',
    [createTenantDropdownLabel]: 'Create Tenant',
    [selectTenantDropdownPlaceholder]: 'Select Tenant',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'nameshelper';
const prefix = `${moduleName}.${componentName}`;

export const newConnectionsTitle = `${prefix}.newConnectionsTitle`;
export const newRequestsTitle = `${prefix}.newRequestsTitle`;
export const averageSatisfactoryResponsesTitle = `${prefix}.averageSatisfactoryResponsesTitle`;
export const averageToleratedResponsesTitle = `${prefix}.averageToleratedResponsesTitle`;
export const averageFrustratedResponsesTitle = `${prefix}.averageFrustratedResponsesTitle`;
export const connectionApdexTitle = `${prefix}.connectionApdexTitle`;
export const responseApdexTitle = `${prefix}.responseApdexTitle`;
export const clientLatencyTitle = `${prefix}.clientLatencyTitle`;
export const performanceTitle = `${prefix}.performanceTitle`;
export const requestsTitle = `${prefix}.requestsTitle`;
export const apdexRttTitle = `${prefix}.apdexRttTitle`;
export const totalTitle = `${prefix}.totalTitle`;
export const resourcePenaltyTitle = `${prefix}.resourcePenaltyTitle`;
export const connsTitle = `${prefix}.connsTitle`;
export const openConnsTitle = `${prefix}.openConnsTitle`;
export const droppedConnectionsTitle = `${prefix}.droppedConnectionsTitle`;
export const lossyConnectionsTitle = `${prefix}.lossyConnectionsTitle`;
export const server4xxTitle = `${prefix}.server4xxTitle`;
export const server5xxTitle = `${prefix}.server5xxTitle`;
export const pageLoadApdexTitle = `${prefix}.pageLoadApdexTitle`;
export const requestErrorsTitle = `${prefix}.requestErrorsTitle`;
export const requestErrorsPercentageTitle = `${prefix}.requestErrorsPercentageTitle`;
export const averageUptimeTitle = `${prefix}.averageUptimeTitle`;
export const getTitle = `${prefix}.getTitle`;
export const postTitle = `${prefix}.postTitle`;
export const othersTitle = `${prefix}.othersTitle`;
export const oneXxInfoTitle = `${prefix}.oneXxInfoTitle`;
export const twoXxOkTitle = `${prefix}.twoXxOkTitle`;
export const threeXxRedirectTitle = `${prefix}.threeXxRedirectTitle`;
export const throughputTitle = `${prefix}.throughputTitle`;
export const satisfactoryResponsesTitle = `${prefix}.satisfactoryResponsesTitle`;
export const toleratedResponsesTitle = `${prefix}.toleratedResponsesTitle`;
export const frustratedResponsesTitle = `${prefix}.frustratedResponsesTitle`;
export const badConnectionsTitle = `${prefix}.badConnectionsTitle`;
export const satisfiedResponsesTitle = `${prefix}.satisfiedResponsesTitle`;
export const postRequestsTitle = `${prefix}.postRequestsTitle`;
export const getRequestsTitle = `${prefix}.getRequestsTitle`;
export const otherRequestsTitle = `${prefix}.otherRequestsTitle`;
export const dataTransferTitle = `${prefix}.dataTransferTitle`;
export const appResponseTitle = `${prefix}.appResponseTitle`;
export const clientRttTitle = `${prefix}.clientRttTitle`;
export const serverRttTitle = `${prefix}.serverRttTitle`;
export const fourXxErrorsTitle = `${prefix}.fourXxErrorsTitle`;
export const fiveXxErrorsTitle = `${prefix}.fiveXxErrorsTitle`;
export const aviGenerated4xxTitle = `${prefix}.aviGenerated4xxTitle`;
export const aviGenerated5xxTitle = `${prefix}.aviGenerated5xxTitle`;
export const cpuUsageTitle = `${prefix}.cpuUsageTitle`;
export const connectionMemoryUsageTitle = `${prefix}.connectionMemoryUsageTitle`;
export const memoryUsageTitle = `${prefix}.memoryUsageTitle`;
export const bufferUsageTitle = `${prefix}.bufferUsageTitle`;
export const sslCacheUsageTitle = `${prefix}.sslCacheUsageTitle`;
export const disk1UsageTitle = `${prefix}.disk1UsageTitle`;
export const persistentTableUsageTitle = `${prefix}.persistentTableUsageTitle`;
export const maxUsageTitle = `${prefix}.maxUsageTitle`;
export const droppedConnsPercentageTitle = `${prefix}.droppedConnsPercentageTitle`;
export const synCacheUsageTitle = `${prefix}.synCacheUsageTitle`;
export const rxPacketsDropTitle = `${prefix}.rxPacketsDropTitle`;
export const rxBytesDropTitle = `${prefix}.rxBytesDropTitle`;
export const txThroughputTitle = `${prefix}.txThroughputTitle`;
export const vsesTimeSeriesTitle = `${prefix}.vsesTimeSeriesTitle`;
export const dynamicMemoryUsageTitle = `${prefix}.dynamicMemoryUsageTitle`;
export const serviceEngineTitle = `${prefix}.serviceEngineTitle`;
export const poolTitle = `${prefix}.poolTitle`;
export const virtualServiceTitle = `${prefix}.virtualServiceTitle`;
export const anomalyPenaltyTitle = `${prefix}.anomalyPenaltyTitle`;
export const securityPenaltyTitle = `${prefix}.securityPenaltyTitle`;
export const performanceScoreTitle = `${prefix}.performanceScoreTitle`;
export const healthScoreTitle = `${prefix}.healthScoreTitle`;
export const clientTxnLatencyTitle = `${prefix}.clientTxnLatencyTitle`;
export const rxPacketsTitle = `${prefix}.rxPacketsTitle`;
export const txPacketsTitle = `${prefix}.txPacketsTitle`;
export const numberServiceEnginesTitle = `${prefix}.numberServiceEnginesTitle`;
export const anomalyScoreTitle = `${prefix}.anomalyScoreTitle`;
export const totalRequestsTitle = `${prefix}.totalRequestsTitle`;
export const netUsageTitle = `${prefix}.netUsageTitle`;
export const netReceivedTitle = `${prefix}.netReceivedTitle`;
export const connectionErrorsTitle = `${prefix}.connectionErrorsTitle`;
export const memoryTitle = `${prefix}.memoryTitle`;
export const diskBandwidthTitle = `${prefix}.diskBandwidthTitle`;
export const transactionsTitle = `${prefix}.transactionsTitle`;
export const newSslSessionsTitle = `${prefix}.newSslSessionsTitle`;
export const reusedSslSessionsTitle = `${prefix}.reusedSslSessionsTitle`;
export const sslProtocolErrorsTitle = `${prefix}.sslProtocolErrorsTitle`;
export const sslNetworkErrorsTitle = `${prefix}.sslNetworkErrorsTitle`;
export const sslTimeoutsTitle = `${prefix}.sslTimeoutsTitle`;
export const failedTransactionsTitle = `${prefix}.failedTransactionsTitle`;
export const l4AttacksTitle = `${prefix}.l4AttacksTitle`;
export const l7AttacksTitle = `${prefix}.l7AttacksTitle`;
export const attackDurationTitle = `${prefix}.attackDurationTitle`;
export const blockedConnectionsTitle = `${prefix}.blockedConnectionsTitle`;
export const numberOfAttacksTitle = `${prefix}.numberOfAttacksTitle`;
export const blockedTitle = `${prefix}.blockedTitle`;
export const attackLevelTitle = `${prefix}.attackLevelTitle`;
export const dosAttacksTitle = `${prefix}.dosAttacksTitle`;
export const packetsDosAttacksTitle = `${prefix}.packetsDosAttacksTitle`;
export const applicationDosAttacksTitle = `${prefix}.applicationDosAttacksTitle`;
export const dosRxBytesTitle = `${prefix}.dosRxBytesTitle`;
export const policyDropsTitle = `${prefix}.policyDropsTitle`;
export const connectionDosAttacksTitle = `${prefix}.connectionDosAttacksTitle`;
export const dosBandwidthTitle = `${prefix}.dosBandwidthTitle`;
export const lbFailCountTitle = `${prefix}.lbFailCountTitle`;
export const estimatedCapacityTitle = `${prefix}.estimatedCapacityTitle`;
export const availableCapacityTitle = `${prefix}.availableCapacityTitle`;
export const dnsQueriesTitle = `${prefix}.dnsQueriesTitle`;
export const otherTitle = `${prefix}.otherTitle`;
export const errorsPercentageTitle = `${prefix}.errorsPercentageTitle`;
export const errorsSecTitle = `${prefix}.errorsSecTitle`;
export const tcpQueriesTitle = `${prefix}.tcpQueriesTitle`;
export const udpQueriesTitle = `${prefix}.udpQueriesTitle`;
export const updPassthroughResponseTimeTitle = `${prefix}.updPassthroughResponseTimeTitle`;
export const gslbPoolMemberNotAvailableTitle = `${prefix}.gslbPoolMemberNotAvailableTitle`;
export const invalidQueriesTitle = `${prefix}.invalidQueriesTitle`;
export const invalidDomainsTitle = `${prefix}.invalidDomainsTitle`;
export const unsupportedRequestsTitle = `${prefix}.unsupportedRequestsTitle`;
export const tcpPassthroughErrorsTitle = `${prefix}.tcpPassthroughErrorsTitle`;
export const udpPassthroughErrorsTitle = `${prefix}.udpPassthroughErrorsTitle`;
export const backendServersTitle = `${prefix}.backendServersTitle`;
export const seCoresAvailableTitle = `${prefix}.seCoresAvailableTitle`;
export const throughputAcrossSesTitle = `${prefix}.throughputAcrossSesTitle`;
export const throughputAcrossVirtualServicesTitle = `${prefix}.throughputAcrossVirtualServicesTitle`;
export const maxSeHostsTitle = `${prefix}.maxSeHostsTitle`;
export const averageSeHostsTitle = `${prefix}.averageSeHostsTitle`;
export const maxSeSocketsTitle = `${prefix}.maxSeSocketsTitle`;
export const averageSeSocketsTitle = `${prefix}.averageSeSocketsTitle`;
export const wafAttacksTitle = `${prefix}.wafAttacksTitle`;
export const wafAttacksPercentageTitle = `${prefix}.wafAttacksPercentageTitle`;
export const http2RequestsTitle = `${prefix}.http2RequestsTitle`;
export const endToEndTimingTitle = `${prefix}.endToEndTimingTitle`;
export const virtualServiceThroughputTitle = `${prefix}.virtualServiceThroughputTitle`;
export const interfaceThroughputTitle = `${prefix}.interfaceThroughputTitle`;
export const certificateTitle = `${prefix}.certificateTitle`;
export const tlsVersionTitle = `${prefix}.tlsVersionTitle`;
export const keyExchangeTitle = `${prefix}.keyExchangeTitle`;
export const attackCountTitle = `${prefix}.attackCountTitle`;
export const attackRateTitle = `${prefix}.attackRateTitle`;
export const rxMinusculesPacketsTitle = `${prefix}.rxMinusculesPacketsTitle`;
export const txMinusculesPacketsTitle = `${prefix}.txMinusculesPacketsTitle`;
export const dnsQueryTypesTitle = `${prefix}.dnsQueryTypesTitle`;
export const tcpVsUdpTitle = `${prefix}.tcpVsUdpTitle`;
export const localVsPassthroughQueriesTitle = `${prefix}.localVsPassthroughQueriesTitle`;
export const pfsVsNonPfsTrafficTitle = `${prefix}.pfsVsNonPfsTrafficTitle`;
export const httpVsHttps2RequestsTitle = `${prefix}.httpVsHttps2RequestsTitle`;
export const icapRequestsTotalTitle = `${prefix}.icapRequestsTotalTitle`;
export const icapRequestsModifiedTitle = `${prefix}.icapRequestsModifiedTitle`;
export const icapRequestsPassedTitle = `${prefix}.icapRequestsPassedTitle`;
export const icapRequestsInternalErrorTitle = `${prefix}.icapRequestsInternalErrorTitle`;
export const icapRequestsServerErrorTitle = `${prefix}.icapRequestsServerErrorTitle`;
export const timeoutSeriesTitle = `${prefix}.timeoutSeriesTitle`;
export const botTitle = `${prefix}.botTitle`;

export const ENGLISH = {
    [newConnectionsTitle]: 'New Connections',
    [newRequestsTitle]: 'New Requests',
    [averageSatisfactoryResponsesTitle]: 'Average Satisfactory Responses',
    [averageToleratedResponsesTitle]: 'Average Tolerated Responses',
    [averageFrustratedResponsesTitle]: 'Average Frustrated Responses',
    [connectionApdexTitle]: 'Connection Apdex',
    [responseApdexTitle]: 'Response Apdex',
    [clientLatencyTitle]: 'Client Latency',
    [performanceTitle]: 'Performance',
    [requestsTitle]: 'Requests',
    [apdexRttTitle]: 'Apdex RTT',
    [totalTitle]: 'Total',
    [resourcePenaltyTitle]: 'Resource Penalty',
    [connsTitle]: 'Conns',
    [openConnsTitle]: 'Open Conns',
    [droppedConnectionsTitle]: 'Dropped Connections',
    [lossyConnectionsTitle]: 'Lossy Connections',
    [server4xxTitle]: 'Server 4xx',
    [server5xxTitle]: 'Server 5xx',
    [pageLoadApdexTitle]: 'PageLoad Apdex',
    [requestErrorsTitle]: 'Request Errors',
    [requestErrorsPercentageTitle]: 'Request Errors, %',
    [averageUptimeTitle]: 'Average Uptime',
    [getTitle]: 'GET',
    [postTitle]: 'POST',
    [othersTitle]: 'Others',
    [oneXxInfoTitle]: '1xx Info',
    [twoXxOkTitle]: '2xx OK',
    [threeXxRedirectTitle]: '3xx Redirect',
    [throughputTitle]: 'Throughput',
    [satisfactoryResponsesTitle]: 'Satisfactory Responses',
    [toleratedResponsesTitle]: 'Tolerated Responses',
    [frustratedResponsesTitle]: 'Frustrated Responses',
    [badConnectionsTitle]: 'Bad Connections',
    [satisfiedResponsesTitle]: 'Satisfied Responses',
    [postRequestsTitle]: 'Post Requests',
    [getRequestsTitle]: 'Get Requests',
    [otherRequestsTitle]: 'Other Requests',
    [dataTransferTitle]: 'Data Transfer',
    [appResponseTitle]: 'App Response',
    [clientRttTitle]: 'Client RTT',
    [serverRttTitle]: 'Server RTT',
    [fourXxErrorsTitle]: '4xx Errors',
    [fiveXxErrorsTitle]: '5xx Errors',
    [aviGenerated4xxTitle]: 'Avi Generated 4xx',
    [aviGenerated5xxTitle]: 'Avi Generated 5xx',
    [cpuUsageTitle]: 'CPU Usage',
    [connectionMemoryUsageTitle]: 'Connection Memory Usage',
    [memoryUsageTitle]: 'Memory Usage',
    [bufferUsageTitle]: 'Buffer Usage',
    [sslCacheUsageTitle]: 'SSL Cache Usage',
    [disk1UsageTitle]: 'Disk1 Usage',
    [persistentTableUsageTitle]: 'Persistent Table Usage',
    [maxUsageTitle]: 'Max Usage',
    [droppedConnsPercentageTitle]: 'Dropped Conns, %',
    [synCacheUsageTitle]: 'Syn Cache Usage',
    [rxPacketsDropTitle]: 'RX Packets Drop',
    [rxBytesDropTitle]: 'RX Bytes Drop',
    [txThroughputTitle]: 'TX Throughput',
    [vsesTimeSeriesTitle]: '# VSes Time Series',
    [dynamicMemoryUsageTitle]: 'Dynamic Memory Usage',
    [serviceEngineTitle]: 'Service Engine',
    [poolTitle]: 'Pool',
    [virtualServiceTitle]: 'Virtual Service',
    [anomalyPenaltyTitle]: 'Anomaly Penalty',
    [securityPenaltyTitle]: 'Security Penalty',
    [performanceScoreTitle]: 'Performance Score',
    [healthScoreTitle]: 'Health Score',
    [clientTxnLatencyTitle]: 'Client TXN Latency',
    [rxPacketsTitle]: 'RX Packets',
    [txPacketsTitle]: 'TX Packets',
    [numberServiceEnginesTitle]: '# Service Engines',
    [anomalyScoreTitle]: 'Anomaly Score',
    [totalRequestsTitle]: 'Total Requests',
    [netUsageTitle]: 'Net Usage',
    [netReceivedTitle]: 'Net Received',
    [connectionErrorsTitle]: 'Connection Errors',
    [memoryTitle]: 'Memory',
    [diskBandwidthTitle]: 'Disk Bandwidth',
    [transactionsTitle]: 'Transactions',
    [newSslSessionsTitle]: 'New SSL Sessions',
    [reusedSslSessionsTitle]: 'Reused SSL Sessions',
    [sslProtocolErrorsTitle]: 'SSL Protocol Errors',
    [sslNetworkErrorsTitle]: 'SSL Network Errors',
    [sslTimeoutsTitle]: 'SSL Timeouts',
    [failedTransactionsTitle]: 'Failed Transactions',
    [l4AttacksTitle]: 'L4 Attacks',
    [l7AttacksTitle]: 'L7 Attacks',
    [attackDurationTitle]: 'Attack Duration',
    [blockedConnectionsTitle]: 'Blocked Connections',
    [numberOfAttacksTitle]: 'Number of Attacks',
    [blockedTitle]: 'Blocked',
    [attackLevelTitle]: 'Attack Level',
    [dosAttacksTitle]: 'DoS Attacks',
    [packetsDosAttacksTitle]: 'Packets DoS Attacks',
    [applicationDosAttacksTitle]: 'Application DoS Attacks',
    [dosRxBytesTitle]: 'DoS RX Bytes',
    [policyDropsTitle]: 'Policy Drops',
    [connectionDosAttacksTitle]: 'Connection DoS Attacks',
    [dosBandwidthTitle]: 'DoS Bandwidth',
    [lbFailCountTitle]: 'LB Fail Count',
    [estimatedCapacityTitle]: 'Estimated Capacity',
    [availableCapacityTitle]: 'Available Capacity',
    [dnsQueriesTitle]: 'DNS Queries',
    [otherTitle]: 'Other',
    [errorsPercentageTitle]: 'Errors (%)',
    [errorsSecTitle]: 'Errors (sec)',
    [tcpQueriesTitle]: 'TCP Queries',
    [udpQueriesTitle]: 'UDP Queries',
    [updPassthroughResponseTimeTitle]: 'UDP Passthrough Response Time',
    [gslbPoolMemberNotAvailableTitle]: 'GSLB Pool Member Not Available',
    [invalidQueriesTitle]: 'Invalid Queries',
    [invalidDomainsTitle]: 'Invalid Domains',
    [unsupportedRequestsTitle]: 'Unsupported Requests',
    [tcpPassthroughErrorsTitle]: 'TCP Passthrough Errors',
    [udpPassthroughErrorsTitle]: 'UDP Passthrough Errors',
    [backendServersTitle]: 'Backend Servers',
    [seCoresAvailableTitle]: 'Service Engine Cores Available',
    [throughputAcrossSesTitle]: 'Throughput across Service Engines',
    [throughputAcrossVirtualServicesTitle]: 'Throughput across Virtual Services',
    [maxSeHostsTitle]: 'Max Service Engine Hosts',
    [averageSeHostsTitle]: 'Average Service Engine Hosts',
    [maxSeSocketsTitle]: 'Max Service Engine Sockets',
    [averageSeSocketsTitle]: 'Average Service Engine Sockets',
    [wafAttacksTitle]: 'WAF Attacks',
    [wafAttacksPercentageTitle]: 'WAF Attacks, %',
    [http2RequestsTitle]: 'HTTP2 Requests',
    [endToEndTimingTitle]: 'End to End Timing',
    [virtualServiceThroughputTitle]: 'Virtual Service Throughput',
    [interfaceThroughputTitle]: 'Interface Throughput',
    [certificateTitle]: 'Certificate',
    [tlsVersionTitle]: 'TLS Version',
    [keyExchangeTitle]: 'Key Exchange',
    [attackCountTitle]: 'Attack Count',
    [attackRateTitle]: 'Attack Rate',
    [rxMinusculesPacketsTitle]: 'Rx Packets',
    [txMinusculesPacketsTitle]: 'Tx Packets',
    [dnsQueryTypesTitle]: 'DNS Query Types',
    [tcpVsUdpTitle]: 'TCP vs UDP',
    [localVsPassthroughQueriesTitle]: 'Local vs Passthrough Queries',
    [pfsVsNonPfsTrafficTitle]: 'PFS vs NonPFS Traffic',
    [httpVsHttps2RequestsTitle]: 'HTTP vs HTTP2 Requests',
    [icapRequestsTotalTitle]: 'ICAP Requests',
    [icapRequestsModifiedTitle]: 'Modified',
    [icapRequestsPassedTitle]: 'Passed',
    [icapRequestsInternalErrorTitle]: 'Internal Errors',
    [icapRequestsServerErrorTitle]: 'Server Errors',
    [timeoutSeriesTitle]: 'Timeouts',
    [botTitle]: 'Bot',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'timeframe';
const prefix = `${moduleName}.${componentName}`;

export const past30minutesOptionLabel = `${prefix}.past30minutesOptionLabel`;
export const past6HoursOptionLabel = `${prefix}.past6HoursOptionLabel`;
export const pastDayOptionLabel = `${prefix}.pastDayOptionLabel`;
export const pastWeekOptionLabel = `${prefix}.pastWeekOptionLabel`;
export const pastMonthOptionLabel = `${prefix}.pastMonthOptionLabel`;
export const pastQuarterOptionLabel = `${prefix}.pastQuarterOptionLabel`;
export const pastYearOptionLabel = `${prefix}.pastYearOptionLabel`;

export const ENGLISH = {
    [past30minutesOptionLabel]: 'Past 30 Minutes',
    [past6HoursOptionLabel]: 'Past 6 Hours',
    [pastDayOptionLabel]: 'Past Day',
    [pastWeekOptionLabel]: 'Past Week',
    [pastMonthOptionLabel]: 'Past Month',
    [pastQuarterOptionLabel]: 'Past Quarter',
    [pastYearOptionLabel]: 'Past Year',
};const prefix = 'accounts';

export const tenantModalBreadcrumbTitle = `${prefix}.tenantModalBreadcrumbTitle`;
export const userProfileModalBreadcrumbTitle = `${prefix}.userProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [tenantModalBreadcrumbTitle]: 'Tenant',
    [userProfileModalBreadcrumbTitle]: 'User Profile',
};========================================================================
  
  ========================================================================


const moduleName = 'accounts';
const componentName = 'rolecontroller';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const roleAccessHeader = `${prefix}.roleAccessHeader`;
export const assortedLabel = `${prefix}.assortedLabel`;
export const writeLabel = `${prefix}.writeLabel`;
export const readLabel = `${prefix}.readLabel`;
export const noAccessLabel = `${prefix}.noAccessLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const cloneLabel = `${prefix}.cloneLabel`;

export const ENGLISH = {
    [modalHeaderNew]: 'New Role: {0}',
    [modalHeaderEdit]: 'Edit Role: {0}',
    [nameInputLabel]: 'Name',
    [roleAccessHeader]: 'Role Access',
    [assortedLabel]: 'Assorted',
    [writeLabel]: 'Write',
    [readLabel]: 'Read',
    [noAccessLabel]: 'No access',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [cloneLabel]: 'Clone',
};========================================================================
  
  ========================================================================


const moduleName = 'accounts';
const componentName = 'systemconfigurationeditaccesscontroller';
const prefix = `${moduleName}.${componentName}`;

export const updateSystemAccessSettingsHeader = `${prefix}.updateSystemAccessSettingsHeader`;
export const systemAccessSettingsHeader = `${prefix}.systemAccessSettingsHeader`;
export const httpsAccessSystemLabel = `${prefix}.httpsAccessSystemLabel`;
export const httpsPortLabel = `${prefix}.httpsPortLabel`;
export const httpAccessSystemLabel = `${prefix}.httpAccessSystemLabel`;
export const httpPortLabel = `${prefix}.httpPortLabel`;
export const modifiedNoteLabel = `${prefix}.modifiedNoteLabel`;
export const redirectHttpToHttpsLabel = `${prefix}.redirectHttpToHttpsLabel`;
export const allowBasicAuthenticationLabel = `${prefix}.allowBasicAuthenticationLabel`;
export const sslProfileLabel = `${prefix}.sslProfileLabel`;
export const createSslProfileLabel = `${prefix}.createSslProfileLabel`;
export const selectSslProfileLabel = `${prefix}.selectSslProfileLabel`;
export const sslTlsCertificateLabel = `${prefix}.sslTlsCertificateLabel`;
export const createSslCertificateLabel = `${prefix}.createSslCertificateLabel`;
export const selectSslCertificateLabel = `${prefix}.selectSslCertificateLabel`;
export const secureChannelSslCertificateLabel = `${prefix}.secureChannelSslCertificateLabel`;
export const allowedCiphersLabel = `${prefix}.allowedCiphersLabel`;
export const allowedCiphersPlaceholder = `${prefix}.allowedCiphersPlaceholder`;
export const allowedHmacsLabel = `${prefix}.allowedHmacsLabel`;
export const allowedHmacsPlaceholder = `${prefix}.allowedHmacsPlaceholder`;
export const snmpSettingsHeader = `${prefix}.snmpSettingsHeader`;
export const snmpVersionLabel = `${prefix}.snmpVersionLabel`;
export const snmpVersionPlaceholder = `${prefix}.snmpVersionPlaceholder`;
export const snmpCommunityLabel = `${prefix}.snmpCommunityLabel`;
export const engineIdLabel = `${prefix}.engineIdLabel`;
export const clientManagementAccessHeader = `${prefix}.clientManagementAccessHeader`;
export const allowedSshClientsLabel = `${prefix}.allowedSshClientsLabel`;
export const anyPlaceholder = `${prefix}.anyPlaceholder`;
export const cliShellClientsLabel = `${prefix}.cliShellClientsLabel`;
export const allowedExternalHttpClientsLabel = `${prefix}.allowedExternalHttpClientsLabel`;
export const allowedExternalSnmpClientsLabel = `${prefix}.allowedExternalSnmpClientsLabel`;
export const bannerHeader = `${prefix}.bannerHeader`;
export const messageOfTheDayLabel = `${prefix}.messageOfTheDayLabel`;
export const loginBannerLabel = `${prefix}.loginBannerLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [updateSystemAccessSettingsHeader]: 'Update System Access Settings',
    [systemAccessSettingsHeader]: 'System Access Settings',
    [httpsAccessSystemLabel]: 'HTTPS Access to System',
    [httpsPortLabel]: 'HTTPS Port ',
    [httpAccessSystemLabel]: 'HTTP Access to System',
    [httpPortLabel]: 'HTTP Port ',
    [modifiedNoteLabel]: ' If modified, please relogin at the new port number.',
    [redirectHttpToHttpsLabel]: 'Redirect HTTP to HTTPS',
    [allowBasicAuthenticationLabel]: 'Allow Basic Authentication',
    [sslProfileLabel]: 'SSL Profile',
    [createSslProfileLabel]: 'Create SSL Profile',
    [selectSslProfileLabel]: 'Select SSL Profile',
    [sslTlsCertificateLabel]: 'SSLTLS Certificate',
    [createSslCertificateLabel]: 'Create Certificate',
    [selectSslCertificateLabel]: 'Select SSLTLS Certificate',
    [secureChannelSslCertificateLabel]: 'Secure Channel SSLTLS Certificate',
    [allowedCiphersLabel]: 'Allowed Ciphers',
    [allowedCiphersPlaceholder]: 'Cipher 1, Cipher 2, Cipher 3',
    [allowedHmacsLabel]: 'Allowed HMACs',
    [allowedHmacsPlaceholder]: 'HMAC 1, HMAC 2, HMAC 3',
    [snmpSettingsHeader]: 'SNMP Settings',
    [snmpVersionLabel]: 'SNMP Version:',
    [snmpVersionPlaceholder]: 'SNMP Version',
    [snmpCommunityLabel]: 'SNMP Community',
    [engineIdLabel]: 'Engine ID',
    [clientManagementAccessHeader]: 'Client Management Access to Avi Controller',
    [allowedSshClientsLabel]: 'Allowed SSH Clients',
    [anyPlaceholder]: 'Any',
    [cliShellClientsLabel]: 'CLI Shell Clients',
    [allowedExternalHttpClientsLabel]: 'Allowed External HTTP(S) Clients',
    [allowedExternalSnmpClientsLabel]: 'Allowed External SNMP Clients',
    [bannerHeader]: 'Banner',
    [messageOfTheDayLabel]: 'Message of the Day',
    [loginBannerLabel]: 'Login Banner',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
};const moduleName = 'accounts';
const componentName = 'tenantsettingscontroller';
const prefix = `${moduleName}.${componentName}`;

export const modalHeader = `${prefix}.modalHeader`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;

export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const ipRouteDomainLabel = `${prefix}.ipRouteDomainLabel`;
export const serviceEnginesContextLabel = `${prefix}.serviceEnginesContextLabel`;

export const perTenantIpRouteDomainMessage = `${prefix}.perTenantIpRouteDomainMessage`;
export const shareIpRouteDomainAcrossTenantsMessage = `${prefix}.shareIpRouteDomainAcrossTenantsMessage`;
export const seProviderContextShareMessage = `${prefix}.seProviderContextShareMessage`;
export const seProviderContextNotShareMessage = `${prefix}.seProviderContextNotShareMessage`;
export const tenantReadAccessToSeMessage = `${prefix}.tenantReadAccessToSeMessage`;
export const tenantNoAccessToSeMessage = `${prefix}.tenantNoAccessToSeMessage`;

export const ENGLISH = {
    [modalHeader]: 'Tenant Settings Config',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',

    [ipRouteDomainLabel]: 'IP Route Domain',
    [serviceEnginesContextLabel]: 'Service Engines Context',

    [perTenantIpRouteDomainMessage]: 'Per tenant IP route domain.',
    [shareIpRouteDomainAcrossTenantsMessage]: 'Share IP route domain across tenants.',
    [seProviderContextShareMessage]: 'Service Engines are managed within the provider context, shared across tenants.',
    [seProviderContextNotShareMessage]: 'Service Engines are managed within the tenant context, not shared across tenants.',
    [tenantReadAccessToSeMessage]: 'Tenant has Read Access to Service Engines',
    [tenantNoAccessToSeMessage]: 'Tenant has No Access to Service Engines',
};const moduleName = 'ajslegacy';
const componentName = 'roleservice';
const prefix = `${moduleName}.${componentName}`;

export const applicationLabel = `${prefix}.applicationLabel`;
export const virtualServiceLabel = `${prefix}.virtualServiceLabel`;
export const poolLabel = `${prefix}.poolLabel`;
export const poolGroupLabel = `${prefix}.poolGroupLabel`;
export const httpPolicySetLabel = `${prefix}.httpPolicySetLabel`;
export const networkSecurityPolicyLabel = `${prefix}.networkSecurityPolicyLabel`;
export const autoScaleLabel = `${prefix}.autoScaleLabel`;
export const dnsPolicyLabel = `${prefix}.dnsPolicyLabel`;
export const profilesLabel = `${prefix}.profilesLabel`;
export const tcpUdpProfileLabel = `${prefix}.tcpUdpProfileLabel`;
export const applicationProfileLabel = `${prefix}.applicationProfileLabel`;
export const persistenceProfileLabel = `${prefix}.persistenceProfileLabel`;
export const healthMonitorLabel = `${prefix}.healthMonitorLabel`;
export const analyticsProfileLabel = `${prefix}.analyticsProfileLabel`;
export const ipamDnsProfileLabel = `${prefix}.ipamDnsProfileLabel`;
export const customIpamDnsProfileLabel = `${prefix}.customIpamDnsProfileLabel`;
export const trafficCloneLabel = `${prefix}.trafficCloneLabel`;
export const icapProfileLabel = `${prefix}.icapProfileLabel`;
export const groupScriptLabel = `${prefix}.groupScriptLabel`;
export const ipAddressGroupLabel = `${prefix}.ipAddressGroupLabel`;
export const stringGroupLabel = `${prefix}.stringGroupLabel`;
export const dataScriptsLabel = `${prefix}.dataScriptsLabel`;
export const protocolParserScriptsLabel = `${prefix}.protocolParserScriptsLabel`;
export const securityLabel = `${prefix}.securityLabel`;
export const sslTlsProfileLabel = `${prefix}.sslTlsProfileLabel`;
export const authenticationProfileLabel = `${prefix}.authenticationProfileLabel`;
export const pingAccessAgentLabel = `${prefix}.pingAccessAgentLabel`;
export const pkiProfileLabel = `${prefix}.pkiProfileLabel`;
export const sslTlsCertificatesLabel = `${prefix}.sslTlsCertificatesLabel`;
export const certificateManagementProfileLabel = `${prefix}.certificateManagementProfileLabel`;
export const hardwareSecurityModuleGroupLabel = `${prefix}.hardwareSecurityModuleGroupLabel`;
export const ssoPolicyLabel = `${prefix}.ssoPolicyLabel`;
export const policyLabel = `${prefix}.policyLabel`;
export const wafLabel = `${prefix}.wafLabel`;
export const natPolicyLabel = `${prefix}.natPolicyLabel`;
export const l4PolicyLabel = `${prefix}.l4PolicyLabel`;
export const wafProfileLabel = `${prefix}.wafProfileLabel`;
export const wafPolicyLabel = `${prefix}.wafPolicyLabel`;
export const positiveSecurityLabel = `${prefix}.positiveSecurityLabel`;
export const errorPageLabel = `${prefix}.errorPageLabel`;
export const errorPageProfileLabel = `${prefix}.errorPageProfileLabel`;
export const errorPageBodyLabel = `${prefix}.errorPageBodyLabel`;
export const operationsLabel = `${prefix}.operationsLabel`;
export const alertConfigLabel = `${prefix}.alertConfigLabel`;
export const alertLabel = `${prefix}.alertLabel`;
export const alertActionLabel = `${prefix}.alertActionLabel`;
export const syslogLabel = `${prefix}.syslogLabel`;
export const emailLabel = `${prefix}.emailLabel`;
export const snmpTrapsLabel = `${prefix}.snmpTrapsLabel`;
export const trafficCaptureLabel = `${prefix}.trafficCaptureLabel`;
export const infrastructureLabel = `${prefix}.infrastructureLabel`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const serviceEngineLabel = `${prefix}.serviceEngineLabel`;
export const serviceEngineGroupLabel = `${prefix}.serviceEngineGroupLabel`;
export const networkLabel = `${prefix}.networkLabel`;
export const vrfContextLabel = `${prefix}.vrfContextLabel`;
export const userCredentialsLabel = `${prefix}.userCredentialsLabel`;
export const administrationLabel = `${prefix}.administrationLabel`;
export const systemSettingsLabel = `${prefix}.systemSettingsLabel`;
export const controllerLabel = `${prefix}.controllerLabel`;
export const rebootLabel = `${prefix}.rebootLabel`;
export const upgradeLabel = `${prefix}.upgradeLabel`;
export const troubleshootingLabel = `${prefix}.troubleshootingLabel`;
export const internalLabel = `${prefix}.internalLabel`;
export const controllerSiteLabel = `${prefix}.controllerSiteLabel`;
export const softwareLabel = `${prefix}.softwareLabel`;
export const accountsLabel = `${prefix}.accountsLabel`;
export const usersLabel = `${prefix}.usersLabel`;
export const rolesLabel = `${prefix}.rolesLabel`;
export const tenantLabel = `${prefix}.tenantLabel`;
export const gslbLabel = `${prefix}.gslbLabel`;
export const gslbConfigurationLabel = `${prefix}.gslbConfigurationLabel`;
export const gslbServicesLabel = `${prefix}.gslbServicesLabel`;
export const gslbGeoProfileLabel = `${prefix}.gslbGeoProfileLabel`;
export const assortedLabel = `${prefix}.assortedLabel`;
export const noAccessLabel = `${prefix}.noAccessLabel`;
export const readLabel = `${prefix}.readLabel`;
export const writeLabel = `${prefix}.writeLabel`;

export const ENGLISH = {
    [applicationLabel]: 'Application',
    [virtualServiceLabel]: 'Virtual Service',
    [poolLabel]: 'Pool',
    [poolGroupLabel]: 'Pool Group',
    [httpPolicySetLabel]: 'HTTP Policy Set',
    [networkSecurityPolicyLabel]: 'Network Security Policy',
    [autoScaleLabel]: 'AutoScale',
    [dnsPolicyLabel]: 'DNS Policy',
    [profilesLabel]: 'Profiles',
    [tcpUdpProfileLabel]: 'TCPUDP Profile',
    [applicationProfileLabel]: 'Application Profile',
    [persistenceProfileLabel]: 'Persistence Profile',
    [healthMonitorLabel]: 'Health Monitor',
    [analyticsProfileLabel]: 'Analytics Profile',
    [ipamDnsProfileLabel]: 'IPAMDNS Profile',
    [customIpamDnsProfileLabel]: 'Custom IPAMDNS Profile',
    [trafficCloneLabel]: 'Traffic Clone',
    [icapProfileLabel]: 'ICAP Profile',
    [groupScriptLabel]: 'Group & Script',
    [ipAddressGroupLabel]: 'IP Address Group',
    [stringGroupLabel]: 'String Group',
    [dataScriptsLabel]: 'DataScripts',
    [protocolParserScriptsLabel]: 'ProtocolParserScripts',
    [securityLabel]: 'Security',
    [sslTlsProfileLabel]: 'SSLTLS Profile',
    [authenticationProfileLabel]: 'Authentication Profile',
    [pingAccessAgentLabel]: 'PingAccess Agent',
    [pkiProfileLabel]: 'PKI Profile',
    [sslTlsCertificatesLabel]: 'SSLTLS Certificates',
    [certificateManagementProfileLabel]: 'Certificate Management Profile',
    [hardwareSecurityModuleGroupLabel]: 'Hardware Security Module Group',
    [ssoPolicyLabel]: 'SSO Policy',
    [policyLabel]: 'Policy',
    [natPolicyLabel]: 'NAT Policy',
    [l4PolicyLabel]: 'L4 Policy Set',
    [wafLabel]: 'WAF',
    [wafProfileLabel]: 'WAF Profile',
    [wafPolicyLabel]: 'WAF Policy',
    [positiveSecurityLabel]: 'Positive Security',
    [errorPageLabel]: 'Error Page',
    [errorPageProfileLabel]: 'Error Page Profile',
    [errorPageBodyLabel]: 'Error Page Body',
    [operationsLabel]: 'Operations',
    [alertConfigLabel]: 'Alert Config',
    [alertLabel]: 'Alert',
    [alertActionLabel]: 'Alert Action',
    [syslogLabel]: 'Syslog',
    [emailLabel]: 'Email',
    [snmpTrapsLabel]: 'SNMP Traps',
    [trafficCaptureLabel]: 'Traffic Capture',
    [infrastructureLabel]: 'Infrastructure',
    [cloudLabel]: 'Cloud',
    [serviceEngineLabel]: 'Service Engine',
    [serviceEngineGroupLabel]: 'Service Engine Group',
    [networkLabel]: 'Network',
    [vrfContextLabel]: 'VRF Context',
    [userCredentialsLabel]: 'User Credentials',
    [administrationLabel]: 'Administration',
    [systemSettingsLabel]: 'System Settings',
    [controllerLabel]: 'Controller',
    [rebootLabel]: 'Reboot',
    [upgradeLabel]: 'Upgrade',
    [troubleshootingLabel]: 'Troubleshooting',
    [internalLabel]: 'Internal',
    [controllerSiteLabel]: 'Controller Site',
    [softwareLabel]: 'Software',
    [accountsLabel]: 'Accounts',
    [usersLabel]: 'Users',
    [rolesLabel]: 'Roles',
    [tenantLabel]: 'Tenant',
    [gslbLabel]: 'GSLB',
    [gslbConfigurationLabel]: 'GSLB Configuration',
    [gslbServicesLabel]: 'GSLB Services',
    [gslbGeoProfileLabel]: 'GSLB Geo Profile',
    [assortedLabel]: 'Assorted',
    [noAccessLabel]: 'No Access',
    [readLabel]: 'Read',
    [writeLabel]: 'Write',
};========================================================================
  
  ========================================================================


const moduleName = 'accounts';
const componentName = 'authenticationtypecontroller';
const prefix = `${moduleName}.${componentName}`;

export const authenticationLabel = `${prefix}.authenticationLabel`;
export const localButtonLabel = `${prefix}.localButtonLabel`;
export const remoteButtonLabel = `${prefix}.remoteButtonLabel`;
export const authProfileSelectLabel = `${prefix}.authProfileSelectLabel`;
export const authProfileSelectPlaceholder = `${prefix}.authProfileSelectPlaceholder`;
export const allowLocalUserLoginLabel = `${prefix}.allowLocalUserLoginLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [authenticationLabel]: 'Authentication',
    [localButtonLabel]: 'Local',
    [remoteButtonLabel]: 'Remote',
    [authProfileSelectLabel]: 'Auth Profile',
    [authProfileSelectPlaceholder]: 'Select Auth Profile',
    [allowLocalUserLoginLabel]: 'Allow local user login',
    [saveButtonLabel]: 'Save',
};const moduleName = 'analytics';
const componentName = 'timingtiles';
const prefix = `${moduleName}.${componentName}`;

export const licenseUpgradeMessage = `${prefix}.licenseUpgradeMessage`;

export const ENGLISH = {
    [licenseUpgradeMessage]: 'Upgrade your license to use EndtoEnd timing.',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botdetectionresultmatchcomponent';
const prefix = `${moduleName}.${componentName}`;

export const andText = `${prefix}.andText`;
export const botManagementLabel = `${prefix}.botManagementLabel`;
export const isRadioLabel = `${prefix}.isRadioLabel`;
export const isNotRadioLabel = `${prefix}.isNotRadioLabel`;
export const subHeader = `${prefix}.subHeader`;
export const removeMatchTitle = `${prefix}.removeMatchTitle`;

export const ENGLISH = {
    [andText]: 'and',
    [botManagementLabel]: 'Bot Management',
    [isRadioLabel]: 'Is',
    [isNotRadioLabel]: 'Is Not',
    [subHeader]: 'Classfications ({0})',
    [removeMatchTitle]: 'Remove Match',
};const prefix = 'autoscale';

export const autoScalePolicyModalBreadcrumbTitle = `${prefix}.autoScalePolicyModalBreadcrumbTitle`;

export const ENGLISH = {
    [autoScalePolicyModalBreadcrumbTitle]: 'Server AutoScale Policy',
};const prefix = 'alert';

export const alertEmailConfigBreadcrumbTitle = `${prefix}.alertEmailConfigBreadcrumbTitle`;
export const alertActionBreadcrumbTitle = `${prefix}.alertActionBreadcrumbTitle`;
export const alertSyslogBreadcrumbTitle = `${prefix}.alertSyslogBreadcrumbTitle`;
export const alertSyslogServerBreadcrumbTitle = `${prefix}.alertSyslogServerBreadcrumbTitle`;
export const alertSnmpTrapProfileBreadcrumbTitle = `${prefix}.alertSnmpTrapProfileBreadcrumbTitle`;
export const alertSnmpTrapServereBreadcrumbTitle = `${prefix}.alertSnmpTrapServereBreadcrumbTitle`;

export const ENGLISH = {
    [alertEmailConfigBreadcrumbTitle]: 'Email',
    [alertActionBreadcrumbTitle]: 'Alert Action',
    [alertSyslogBreadcrumbTitle]: 'Syslog',
    [alertSyslogServerBreadcrumbTitle]: 'Syslog Server',
    [alertSnmpTrapProfileBreadcrumbTitle]: 'Trap Profile',
    [alertSnmpTrapServereBreadcrumbTitle]: 'Trap Server',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botmanagementpage';
const prefix = `${moduleName}.${componentName}`;

export const botManagementPagePolicyTitle = `${prefix}.botManagementPagePolicyTitle`;

export const columnTitleNameLabel = `${prefix}.columnTitleNameLabel`;

export const ENGLISH = {
    [botManagementPagePolicyTitle]: 'Bot Management Policy',

    [columnTitleNameLabel]: 'Name',
};const moduleName = 'tenancymode';
const componentName = 'tenantmodepagecard';
const prefix = `${moduleName}.${componentName}`;

export const ipRouteDomainPerTenantMessage = `${prefix}.ipRouteDomainPerTenantMessage`;
export const ipRouteDomainSharedTenantMessage = `${prefix}.ipRouteDomainSharedTenantMessage`;

export const seManagedWithinProviderContextMessage = `${prefix}.seManagedWithinProviderContextMessage`;
export const seManagedWithinTenantContextMessage = `${prefix}.seManagedWithinTenantContextMessage`;

export const tenantSeAccessReadOnlyMessage = `${prefix}.tenantSeAccessReadOnlyMessage`;
export const tenantSeNoAccessMessage = `${prefix}.tenantSeNoAccessMessage`;

export const emptyDataLabel = `${prefix}.emptyDataLabel`;

export const ENGLISH = {
    [ipRouteDomainPerTenantMessage]: 'Per Tenant',
    [ipRouteDomainSharedTenantMessage]: 'Shared',

    [seManagedWithinProviderContextMessage]: 'Provider Context',
    [seManagedWithinTenantContextMessage]: 'Tenant Context',

    [tenantSeAccessReadOnlyMessage]: 'Read Only',
    [tenantSeNoAccessMessage]: 'No Access',

    [emptyDataLabel]: 'NA',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botdetectionpolicyitem';
const prefix = `${moduleName}.${componentName}`;

export const botManagementPolicyBreadcrumbTitle = `${prefix}.botManagementPagePolicyTitle`;

export const ENGLISH = {
    [botManagementPolicyBreadcrumbTitle]: 'Bot Management Policy',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botipreputationtypemapping';
const prefix = `${moduleName}.${componentName}`;

export const ipReputationMappingTitle = `${prefix}.ipReputationMappingTitle`;

export const ENGLISH = {
    [ipReputationMappingTitle]: 'IP Reputation Mapping',
};const moduleName = 'ajslegacy';
const componentName = 'usercredentialspage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleCredentialType = `${prefix}.columnTitleCredentialType`;
export const verifyHostBtnLabel = `${prefix}.verifyHostBtnLabel`;
export const downloadPublicKeyBtnLabel = `${prefix}.downloadPublicKeyBtnLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleCredentialType]: 'Credentials Type',
    [verifyHostBtnLabel]: 'Verify Host',
    [downloadPublicKeyBtnLabel]: 'Download Public Key',
};const moduleName = 'botdetectionpolicy';
const componentName = 'botmappingrule';
const prefix = `${moduleName}.${componentName}`;

export const botMappingRuleLabel = `${prefix}.botMappingRuleLabel`;

export const ENGLISH = {
    [botMappingRuleLabel]: 'Bot Mapping Rule',
};const prefix = 'cloud';

export const dnsResolverModalBreadcrumbTitle = `${prefix}.dnsResolverModalBreadcrumbTitle`;
export const cloudModalBreadcrumbTitle = `${prefix}.cloudModalBreadcrumbTitle`;
export const linuxHostServerBreadcrumbTitle = `${prefix}.linuxHostServerBreadcrumbTitle`;

export const ENGLISH = {
    [dnsResolverModalBreadcrumbTitle]: 'DNS Resolver',
    [cloudModalBreadcrumbTitle]: 'Cloud',
    [linuxHostServerBreadcrumbTitle]: 'Server',
};const moduleName = 'ajslegacy';
const componentName = 'cloudconnectoruseritem';
const prefix = `${moduleName}.${componentName}`;

export const userCredentialsLabel = `${prefix}.userCredentialsLabel`;

export const ENGLISH = {
    [userCredentialsLabel]: 'User Credentials',
};const moduleName = 'cloud';
const componentName = 'cloudtypeselector';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const noOrchestratorLabel = `${prefix}.noOrchestratorLabel`;
export const orchestratorLabel = `${prefix}.orchestratorLabel`;

export const ENGLISH = {
    [header]: 'Cloud Infrastructure Type',
    [noOrchestratorLabel]: 'No Orchestrator',
    [orchestratorLabel]: 'Orchestrator',
};const moduleName = 'botdetectionpolicy';
const componentName = 'ipreputationtypemapping';
const prefix = `${moduleName}.${componentName}`;

export const typeMappingTitle = `${prefix}.typeMappingTitle`;
export const allowRuleTitle = `${prefix}.allowRuleTitle`;

export const ENGLISH = {
    [typeMappingTitle]: 'Type Mapping',
    [allowRuleTitle]: 'Allow Rule',
};const moduleName = 'ajslegacy';
const componentName = 'avimodal';
const prefix = `${moduleName}.${componentName}`;

export const saveLabel = `${prefix}.saveLabel`;
export const cancelLabel = `${prefix}.cancelLabel`;
export const accountSettingsLabel = `${prefix}.accountSettingsLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const userNameInputLabel = `${prefix}.userNameInputLabel`;
export const myNameInputPlaceholder = `${prefix}.myNameInputPlaceholder`;
export const myUsernameInputPlaceholder = `${prefix}.myUsernameInputPlaceholder`;
export const oldPasswordInputLabel = `${prefix}.oldPasswordInputLabel`;
export const newPasswordInputLabel = `${prefix}.newPasswordInputLabel`;
export const confirmNewPasswordInputLabel = `${prefix}.confirmNewPasswordInputLabel`;
export const emailInputLabel = `${prefix}.emailInputLabel`;
export const myEmailInputPlaceholder = `${prefix}.myEmailInputPlaceholder`;
export const displaySettingsLabel = `${prefix}.displaySettingsLabel`;
export const timeZoneLabel = `${prefix}.timeZoneLabel`;
export const utcTimeLabel = `${prefix}.utcTimeLabel`;
export const localTimeLabel = `${prefix}.localTimeLabel`;
export const controllerSettingsLabel = `${prefix}.controllerSettingsLabel`;
export const sessionTimeoutLabel = `${prefix}.sessionTimeoutLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const dnsRefreshPeriodInputLabel = `${prefix}.dnsRefreshPeriodInputLabel`;
export const editMyAccountTitle = `${prefix}.editMyAccountTitle`;
export const languageLabel = `${prefix}.languageLabel`;

export const ENGLISH = {
    [saveLabel]: 'Save',
    [cancelLabel]: 'Cancel',
    [accountSettingsLabel]: 'Account Settings',
    [nameInputLabel]: 'Name',
    [userNameInputLabel]: 'Username',
    [myNameInputPlaceholder]: 'My Name',
    [myUsernameInputPlaceholder]: 'My Username',
    [oldPasswordInputLabel]: 'Old Password',
    [newPasswordInputLabel]: 'New Password',
    [confirmNewPasswordInputLabel]: 'Confirm New Password',
    [emailInputLabel]: 'Email',
    [myEmailInputPlaceholder]: 'My Email',
    [displaySettingsLabel]: 'Display Settings',
    [timeZoneLabel]: 'Time Zone',
    [utcTimeLabel]: 'UTC Time',
    [localTimeLabel]: 'Local Time',
    [controllerSettingsLabel]: 'Controller Settings',
    [sessionTimeoutLabel]: 'Session Timeout',
    [minutesInnerText]: 'min',
    [dnsRefreshPeriodInputLabel]: 'DNS Refresh Period',
    [editMyAccountTitle]: 'Edit My Account: <strong>{0}<strong>',
    [languageLabel]: 'Language',
};const moduleName = 'ajslegacy';
const componentName = 'aviajsconfirm';
const prefix = `${moduleName}.${componentName}`;

export const confirmationText = `${prefix}.confirmationText`;
export const defaultCancelButtonText = `${prefix}.defaultCancelButtonText`;
export const defaultConfirmButtonText = `${prefix}.defaultConfirmButtonText`;
export const headerText = `${prefix}.headerText`;

export const ENGLISH = {
    [confirmationText]: 'Would you like to continue?',
    [defaultCancelButtonText]: 'Cancel',
    [defaultConfirmButtonText]: 'Ok',
    [headerText]: 'Please Confirm',
};undefined CoreModule
 


  
  
  


const moduleName = 'ajslegacy';
const componentName = 'appstatetree';
const prefix = `${moduleName}.${componentName}`;

export const usersLabel = `${prefix}.usersLabel`;
export const userProfilesLabel = `${prefix}.userProfilesLabel`;
export const rolesLabel = `${prefix}.rolesLabel`;
export const tenantsLabel = `${prefix}.tenantsLabel`;
export const logsLabel = `${prefix}.logsLabel`;
export const eventsLabel = `${prefix}.eventsLabel`;
export const alertsLabel = `${prefix}.alertsLabel`;
export const healthLabel = `${prefix}.healthLabel`;
export const analyticsLabel = `${prefix}.analyticsLabel`;
export const clientsLabel = `${prefix}.clientsLabel`;
export const securityLabel = `${prefix}.securityLabel`;
export const dnsRecordsLabel = `${prefix}.dnsRecordsLabel`;
export const membersStatusLabel = `${prefix}.membersStatusLabel`;
export const fqdnInsightsLabel = `${prefix}.fqdnInsightsLabel`;
export const staticRouteLabel = `${prefix}.staticRouteLabel`;
export const bgpPeeringLabel = `${prefix}.bgpPeeringLabel`;
export const vrfContextLabel = `${prefix}.vrfContextLabel`;
export const gatewayMonitorLabel = `${prefix}.gatewayMonitorLabel`;
export const siteConfigurationLabel = `${prefix}.siteConfigurationLabel`;
export const geoProfileLabel = `${prefix}.geoProfileLabel`;
export const uploadGeoFilesLabel = `${prefix}.uploadGeoFilesLabel`;
export const federationCheckpointsLabel = `${prefix}.federationCheckpointsLabel`;
export const authenticationAuthorizationLabel = `${prefix}.authenticationAuthorizationLabel`;
export const accessSettingsLabel = `${prefix}.accessSettingsLabel`;
export const licensingLabel = `${prefix}.licensingLabel`;
export const emailSmtpLabel = `${prefix}.emailSmtpLabel`;
export const tenancyModeLabel = `${prefix}.tenancyModeLabel`;
export const uploadHsmPackagesLabel = `${prefix}.uploadHsmPackagesLabel`;
export const dnsServiceLabel = `${prefix}.dnsServiceLabel`;
export const cloudServicesLabel = `${prefix}.cloudServicesLabel`;
export const nodesLabel = `${prefix}.nodesLabel`;
export const softwareLabel = `${prefix}.softwareLabel`;
export const systemUpdateLabel = `${prefix}.systemUpdateLabel`;
export const segUpdateLabel = `${prefix}.segUpdateLabel`;
export const configurationBackupLabel = `${prefix}.configurationBackupLabel`;
export const techSupportLabel = `${prefix}.techSupportLabel`;
export const crashReportsLabel = `${prefix}.crashReportsLabel`;
export const userCredentialsLabel = `${prefix}.userCredentialsLabel`;
export const casesLabel = `${prefix}.casesLabel`;
export const allAlertsLabel = `${prefix}.allAlertsLabel`;
export const alertConfigLabel = `${prefix}.alertConfigLabel`;
export const alertActionsLabel = `${prefix}.alertActionsLabel`;
export const allEventsLabel = `${prefix}.allEventsLabel`;
export const configAuditTrailLabel = `${prefix}.configAuditTrailLabel`;
export const syslogLabel = `${prefix}.syslogLabel`;
export const emailLabel = `${prefix}.emailLabel`;
export const snmpTrapLabel = `${prefix}.snmpTrapLabel`;
export const trafficCaptureLabel = `${prefix}.trafficCaptureLabel`;
export const applicationLabel = `${prefix}.applicationLabel`;
export const persistenceLabel = `${prefix}.persistenceLabel`;
export const healthMonitorsLabel = `${prefix}.healthMonitorsLabel`;
export const ipamDnsProfilesLabel = `${prefix}.ipamDnsProfilesLabel`;
export const customIpamDnsLabel = `${prefix}.customIpamDnsLabel`;
export const trafficCloneLabel = `${prefix}.trafficCloneLabel`;
export const icapProfileLabel = `${prefix}.icapProfileLabel`;
export const natPolicyLabel = `${prefix}.natPolicyLabel`;
export const ipGroupsLabel = `${prefix}.ipGroupsLabel`;
export const stringGroupsLabel = `${prefix}.stringGroupsLabel`;
export const sslTlsCertificatesLabel = `${prefix}.sslTlsCertificatesLabel`;
export const sslTlsProfileLabel = `${prefix}.sslTlsProfileLabel`;
export const pkiProfileLabel = `${prefix}.pkiProfileLabel`;
export const authProfileLabel = `${prefix}.authProfileLabel`;
export const jwtServerProfileLabel = `${prefix}.jwtServerProfileLabel`;
export const geoDbLabel = `${prefix}.geoDbLabel`;
export const pingAccessAgentLabel = `${prefix}.pingAccessAgentLabel`;
export const certificateManagementLabel = `${prefix}.certificateManagementLabel`;
export const ipReputationLabel = `${prefix}.ipReputationLabel`;
export const hsmGroupsLabel = `${prefix}.hsmGroupsLabel`;
export const ssoPolicyLabel = `${prefix}.ssoPolicyLabel`;
export const botManagementPolicyListPageLabel = `${prefix}.botManagementPolicyListPageLabel`;
export const dataScriptsLabel = `${prefix}.dataScriptsLabel`;
export const controlScriptsLabel = `${prefix}.controlScriptsLabel`;
export const protocolParserScriptsLabel = `${prefix}.protocolParserScriptsLabel`;
export const serverAutoScaleLabel = `${prefix}.serverAutoScaleLabel`;
export const launchConfigLabel = `${prefix}.launchConfigLabel`;
export const webhookLabel = `${prefix}.webhookLabel`;
export const poolGroupDeploymentLabel = `${prefix}.poolGroupDeploymentLabel`;
export const wafPolicyLabel = `${prefix}.wafPolicyLabel`;
export const wafProfileLabel = `${prefix}.wafProfileLabel`;
export const applicationRulesLabel = `${prefix}.applicationRulesLabel`;
export const positiveSecurityLabel = `${prefix}.positiveSecurityLabel`;
export const errorPageProfileLabel = `${prefix}.errorPageProfileLabel`;
export const errorPageBodyLabel = `${prefix}.errorPageBodyLabel`;
export const applicationsTabLabel = `${prefix}.applicationsTabLabel`;
export const operationsTabLabel = `${prefix}.operationsTabLabel`;
export const templatesTabLabel = `${prefix}.templatesTabLabel`;
export const infrastructureTabLabel = `${prefix}.infrastructureTabLabel`;
export const administrationTabLabel = `${prefix}.administrationTabLabel`;

export const gslbServicesLabel = `${prefix}.gslbServicesLabel`;
export const poolGroupsLabel = `${prefix}.poolGroupsLabel`;
export const poolsLabel = `${prefix}.poolsLabel`;
export const virtualServicesLabel = `${prefix}.virtualServicesLabel`;
export const accountsLabel = `${prefix}.accountsLabel`;
export const settingsLabel = `${prefix}.settingsLabel`;
export const controllerLabel = `${prefix}.controllerLabel`;
export const systemLabel = `${prefix}.systemLabel`;
export const supportLabel = `${prefix}.supportLabel`;
export const dashboardLabel = `${prefix}.dashboardLabel`;
export const cloudsLabel = `${prefix}.cloudsLabel`;
export const cloudLabel = `${prefix}.cloudLabel`;
export const serviceEngineLabel = `${prefix}.serviceEngineLabel`;
export const serviceEngineGroupLabel = `${prefix}.serviceEngineGroupLabel`;
export const networksLabel = `${prefix}.networksLabel`;
export const networkServicesLabel = `${prefix}.networkServicesLabel`;
export const routingLabel = `${prefix}.routingLabel`;
export const notificationsLabel = `${prefix}.notificationsLabel`;
export const profilesLabel = `${prefix}.profilesLabel`;
export const policiesLabel = `${prefix}.policiesLabel`;
export const groupsLabel = `${prefix}.groupsLabel`;
export const scriptsLabel = `${prefix}.scriptsLabel`;
export const autoScaleLabel = `${prefix}.autoScaleLabel`;
export const errorPageLabel = `${prefix}.errorPageLabel`;

export const ENGLISH = {
    [usersLabel]: 'Users',
    [userProfilesLabel]: 'User Profiles',
    [rolesLabel]: 'Roles',
    [tenantsLabel]: 'Tenants',
    [logsLabel]: 'Logs',
    [eventsLabel]: 'Events',
    [alertsLabel]: 'Alerts',
    [healthLabel]: 'Health',
    [analyticsLabel]: 'Analytics',
    [clientsLabel]: 'Clients',
    [securityLabel]: 'Security',
    [dnsRecordsLabel]: 'DNS Records',
    [membersStatusLabel]: 'Members Status',
    [fqdnInsightsLabel]: 'FQDN Insights',
    [staticRouteLabel]: 'Static Route',
    [bgpPeeringLabel]: 'BGP Peering',
    [vrfContextLabel]: 'VRF Context',
    [gatewayMonitorLabel]: 'Gateway Monitor',
    [siteConfigurationLabel]: 'Site Configuration',
    [geoProfileLabel]: 'Geo Profile',
    [uploadGeoFilesLabel]: 'Upload Geo Files',
    [federationCheckpointsLabel]: 'Federation Checkpoints',
    [authenticationAuthorizationLabel]: 'AuthenticationAuthorization',
    [accessSettingsLabel]: 'Access Settings',
    [licensingLabel]: 'Licensing',
    [emailSmtpLabel]: 'EmailSMTP',
    [tenancyModeLabel]: 'Tenancy Mode',
    [uploadHsmPackagesLabel]: 'Upload HSM Packages',
    [dnsServiceLabel]: 'DNS Service',
    [cloudServicesLabel]: 'Cloud Services',
    [nodesLabel]: 'Nodes',
    [softwareLabel]: 'Software',
    [systemUpdateLabel]: 'System Update',
    [segUpdateLabel]: 'SEG Update',
    [configurationBackupLabel]: 'Configuration Backup',
    [techSupportLabel]: 'Tech Support',
    [crashReportsLabel]: 'Crash Reports',
    [userCredentialsLabel]: 'User Credentials',
    [casesLabel]: 'Cases',
    [allAlertsLabel]: 'All Alerts',
    [alertConfigLabel]: 'Alert Config',
    [alertActionsLabel]: 'Alert Actions',
    [allEventsLabel]: 'All Events',
    [configAuditTrailLabel]: 'Config Audit Trail',
    [syslogLabel]: 'Syslog',
    [emailLabel]: 'Email',
    [snmpTrapLabel]: 'SNMP Trap',
    [trafficCaptureLabel]: 'Traffic Capture',
    [applicationLabel]: 'Application',
    [persistenceLabel]: 'Persistence',
    [healthMonitorsLabel]: 'Health Monitors',
    [ipamDnsProfilesLabel]: 'IPAMDNS Profiles',
    [customIpamDnsLabel]: 'Custom IPAMDNS',
    [trafficCloneLabel]: 'Traffic Clone',
    [icapProfileLabel]: 'ICAP Profile',
    [natPolicyLabel]: 'NAT Policy',
    [ipGroupsLabel]: 'IP Groups',
    [stringGroupsLabel]: 'String Groups',
    [sslTlsCertificatesLabel]: 'SSLTLS Certificates',
    [sslTlsProfileLabel]: 'SSLTLS Profile',
    [pkiProfileLabel]: 'PKI Profile',
    [authProfileLabel]: 'Auth Profile',
    [jwtServerProfileLabel]: 'JWT Server Profile',
    [geoDbLabel]: 'Geo DB',
    [pingAccessAgentLabel]: 'PingAccess Agent',
    [certificateManagementLabel]: 'Certificate Management',
    [ipReputationLabel]: 'IP Reputation',
    [hsmGroupsLabel]: 'HSM Groups',
    [ssoPolicyLabel]: 'SSO Policy',
    [botManagementPolicyListPageLabel]: 'Bot Management Policy',
    [dataScriptsLabel]: 'DataScripts',
    [controlScriptsLabel]: 'ControlScripts',
    [protocolParserScriptsLabel]: 'ProtocolParserScripts',
    [serverAutoScaleLabel]: 'Server AutoScale',
    [launchConfigLabel]: 'Launch Config',
    [webhookLabel]: 'Webhook',
    [poolGroupDeploymentLabel]: 'PoolGroup Deployment',
    [wafPolicyLabel]: 'WAF Policy',
    [wafProfileLabel]: 'WAF Profile',
    [applicationRulesLabel]: 'Application Rules',
    [positiveSecurityLabel]: 'Positive Security',
    [errorPageProfileLabel]: 'Error Page Profile',
    [errorPageBodyLabel]: 'Error Page Body',
    [applicationsTabLabel]: 'Applications',
    [operationsTabLabel]: 'Operations',
    [templatesTabLabel]: 'Templates',
    [infrastructureTabLabel]: 'Infrastructure',
    [administrationTabLabel]: 'Administration',
    [gslbServicesLabel]: 'GSLB Services',
    [poolGroupsLabel]: 'Pool Groups',
    [poolsLabel]: 'Pools',
    [virtualServicesLabel]: 'Virtual Services',
    [accountsLabel]: 'Accounts',
    [settingsLabel]: 'Settings',
    [controllerLabel]: 'Controller',
    [systemLabel]: 'System',
    [supportLabel]: 'Support',
    [dashboardLabel]: 'Dashboard',
    [cloudsLabel]: 'Clouds',
    [cloudLabel]: 'Cloud Resources',
    [serviceEngineLabel]: 'Service Engine',
    [serviceEngineGroupLabel]: 'Service Engine Group',
    [networksLabel]: 'Networks',
    [networkServicesLabel]: 'Network Services',
    [routingLabel]: 'Routing',
    [notificationsLabel]: 'Notifications',
    [profilesLabel]: 'Profiles',
    [policiesLabel]: 'Policies',
    [groupsLabel]: 'Groups',
    [scriptsLabel]: 'Scripts',
    [autoScaleLabel]: 'AutoScale',
    [errorPageLabel]: 'Error Page',
};const moduleName = 'ajslegacy';
const componentName = 'booleanlabelfilter';
const prefix = `${moduleName}.${componentName}`;

export const yesLabel = `${prefix}.yesLabel`;
export const noLabel = `${prefix}.noLabel`;
export const activeLabel = `${prefix}.activeLabel`;
export const suspendedLabel = `${prefix}.suspendedLabel`;
export const disableLabel = `${prefix}.disableLabel`;
export const enableLabel = `${prefix}.enableLabel`;
export const allowedLabel = `${prefix}.allowedLabel`;
export const disallowedLabel = `${prefix}.disallowedLabel`;
export const enabledLabel = `${prefix}.enabledLabel`;
export const notEnabledLabel = `${prefix}.notEnabledLabel`;
export const trueLabel = `${prefix}.trueLabel`;
export const falseLabel = `${prefix}.falseLabel`;

export const ENGLISH = {
    [yesLabel]: 'Yes',
    [noLabel]: 'No',
    [activeLabel]: 'Active',
    [suspendedLabel]: 'Suspended',
    [disableLabel]: 'Deactivate',
    [enableLabel]: 'Enable',
    [allowedLabel]: 'Allowed',
    [disallowedLabel]: 'Disallowed',
    [enabledLabel]: 'Enabled',
    [notEnabledLabel]: 'Not Enabled',
    [trueLabel]: 'True',
    [falseLabel]: 'False',
};const prefix = 'CportalModule';

export const albServiceConfigBreadcrumbTitle = `${prefix}.albServiceConfigBreadcrumbTitle`;

export const ENGLISH = {
    [albServiceConfigBreadcrumbTitle]: 'ALB Services Config',
};const prefix = 'dns';

export const dnsModalBreadcrumbTitle = `${prefix}.dnsModalBreadcrumbTitle`;

export const ENGLISH = {
    [dnsModalBreadcrumbTitle]: 'DNS',
};const moduleName = 'ajslegacy';
const componentName = 'caselist';
const prefix = `${moduleName}.${componentName}`;

export const attachmentBtnLabel = `${prefix}.attachmentBtnLabel`;
export const editBtnLabel = `${prefix}.editBtnLabel`;
export const columnTitleDateOpened = `${prefix}.columnTitleDateOpened`;
export const columnTitleCaseNumber = `${prefix}.columnTitleCaseNumber`;
export const columnTitleSubject = `${prefix}.columnTitleSubject`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleLastUpdated = `${prefix}.columnTitleLastUpdated`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const registerNowBtnLabel = `${prefix}.registerNowBtnLabel`;
export const registerControllerPromptLabel = `${prefix}.registerControllerPromptLabel`;
export const pulseMustBeConnectedLabel = `${prefix}.pulseMustBeConnectedLabel`;
export const connectNowBtnLabel = `${prefix}.connectNowBtnLabel`;

export const ENGLISH = {
    [attachmentBtnLabel]: 'Attachment',
    [editBtnLabel]: 'Edit',
    [columnTitleDateOpened]: 'Date Opened',
    [columnTitleCaseNumber]: 'Case Number',
    [columnTitleSubject]: 'Subject',
    [columnTitleType]: 'Type',
    [columnTitleLastUpdated]: 'Last Updated',
    [columnTitleStatus]: 'Status',
    [registerControllerPromptLabel]: 'Register your controller and easily access your support tickets from inside Avi Vantage.',
    [registerNowBtnLabel]: 'Register Now.',
    [pulseMustBeConnectedLabel]: 'Pulse must be connected to access your support tickets from inside Avi Vantage.',
    [connectNowBtnLabel]: 'Connect Now.',
};const prefix = 'errorpage';

export const errorPageBodyModalBreadcrumbTitle = `${prefix}.errorPageBodyModalBreadcrumbTitle`;
export const errorPageProfileModalBreadcrumbTitle = `${prefix}.errorPageProfileModalBreadcrumbTitle`;
export const errorPageBodyBreadcrumbTitle = `${prefix}.errorPageBodyBreadcrumbTitle`;
export const errorPageUrlBreadcrumbTitle = `${prefix}.errorPageUrlBreadcrumbTitle`;

export const ENGLISH = {
    [errorPageBodyModalBreadcrumbTitle]: 'Error Page Body',
    [errorPageProfileModalBreadcrumbTitle]: 'Error Page Profile',
    [errorPageBodyBreadcrumbTitle]: 'Error Page (Body)',
    [errorPageUrlBreadcrumbTitle]: 'Error Page (URL)',
};undefined GeoDBModule
 


  
  
  
 
const moduleName = 'security';
const componentName = 'geodblistpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleFederated = `${prefix}.columnTitleFederated`;
export const columnTitleFiles = `${prefix}.columnTitleFiles`;
export const columnTitleMappings = `${prefix}.columnTitleMappings`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleFederated]: 'Federated',
    [columnTitleFiles]: 'GeoDB Files',
    [columnTitleMappings]: 'GeoDB Mapping',
    [actionBtnDelete]: 'Delete',
};const moduleName = 'ajslegacy';
const componentName = 'matchextendableconfigitemfactory';
const prefix = `${moduleName}.${componentName}`;

export const sourceIpAddressLabel = `${prefix}.sourceIpAddressLabel`;
export const destinationIpAddressLabel = `${prefix}.destinationIpAddressLabel`;
export const sourcePortLabel = `${prefix}.sourcePortLabel`;
export const destinationPortLabel = `${prefix}.destinationPortLabel`;
export const protocolLabel = `${prefix}.protocolLabel`;
export const servicePortsLabel = `${prefix}.servicePortsLabel`;
export const ipAddrMatchLabel = `${prefix}.ipAddrMatchLabel`;
export const portMatchLabel = `${prefix}.portMatchLabel`;
export const protocolMatchLabel = `${prefix}.protocolMatchLabel`;
export const methodMatchLabel = `${prefix}.methodMatchLabel`;
export const httpVersionMatchLabel = `${prefix}.httpVersionMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const queryMatchLabel = `${prefix}.queryMatchLabel`;
export const headerMatchLabel = `${prefix}.headerMatchLabel`;
export const cookieMatchLabel = `${prefix}.cookieMatchLabel`;
export const hostHeaderMatchLabel = `${prefix}.hostHeaderMatchLabel`;
export const l4RulePortMatchLabel = `${prefix}.l4RulePortMatchLabel`;
export const l4RuleProtocolMatchLabel = `${prefix}.l4RuleProtocolMatchLabel`;

export const ENGLISH = {
    [sourceIpAddressLabel]: 'Source IP Address',
    [destinationIpAddressLabel]: 'Destination IP Address',
    [sourcePortLabel]: 'Source Port',
    [destinationPortLabel]: 'Destination Port',
    [protocolLabel]: 'Protocol',
    [servicePortsLabel]: 'Service Ports',
    [ipAddrMatchLabel]: 'Client IP',
    [portMatchLabel]: 'Service Port',
    [protocolMatchLabel]: 'Protocol Type',
    [methodMatchLabel]: 'HTTP Method',
    [httpVersionMatchLabel]: 'HTTP Version',
    [pathMatchLabel]: 'Path',
    [queryMatchLabel]: 'Query',
    [headerMatchLabel]: 'Headers',
    [cookieMatchLabel]: 'Cookie',
    [hostHeaderMatchLabel]: 'Host Header',
    [l4RulePortMatchLabel]: 'Listening Ports',
    [l4RuleProtocolMatchLabel]: 'L4 Protocol',
};const prefix = 'groups';

export const ipAddrgroupModalBreadcrumbTitle = `${prefix}.ipAddrgroupModalBreadcrumbTitle`;
export const stringGroupModalBreadcrumbTitle = `${prefix}.stringGroupModalBreadcrumbTitle`;

export const ENGLISH = {
    [ipAddrgroupModalBreadcrumbTitle]: 'IP Group',
    [stringGroupModalBreadcrumbTitle]: 'String Group',
};const moduleName = 'gslb';
const componentName = 'gslbreplicationstatuspopover';
const prefix = `${moduleName}.${componentName}`;

export const replicationStatus = `${prefix}.replicationStatus`;
export const reason = `${prefix}.reason`;
export const recommendation = `${prefix}.recommendation`;
export const objectPending = `${prefix}.objectPending`;
export const objectsPending = `${prefix}.objectsPending`;

export const ENGLISH = {
    [replicationStatus]: 'Replication Status',
    [reason]: 'Reason',
    [recommendation]: 'Recommendation',
    [objectPending]: 'Object Pending',
    [objectsPending]: 'Objects Pending',
};const prefix = 'geodb';

export const addGeoDbFileModalBreadcrumbTitle = `${prefix}.addGeoDbFileModalBreadcrumbTitle`;
export const addGeoDbMappingModalBreadcrumbTitle = `${prefix}.addGeoDbMappingModalBreadcrumbTitle`;
export const addGeoDbMappingElementModalBreadcrumbTitle = `${prefix}.addGeoDbMappingElementModalBreadcrumbTitle`;

export const ENGLISH = {
    [addGeoDbFileModalBreadcrumbTitle]: 'GeoDB File',
    [addGeoDbMappingModalBreadcrumbTitle]: 'GeoDB Mapping',
    [addGeoDbMappingElementModalBreadcrumbTitle]: 'GeoDB Mapping Element',
};const moduleName = 'ajslegacy';
const componentName = 'gslbcheckpointspage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleTimestamp = `${prefix}.columnTitleTimestamp`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const actionTitleDelete = `${prefix}.actionTitleDelete`;
export const actionTitleSetToActive = `${prefix}.actionTitleSetToActive`;
export const confirmMessage = `${prefix}.confirmMessage`;
export const activeCheckpointLabel = `${prefix}.activeCheckpointLabel`;

export const ENGLISH = {
    [columnTitleTimestamp]: 'Timestamp',
    [columnTitleName]: 'Name',
    [actionTitleDelete]: 'Delete',
    [actionTitleSetToActive]: 'Set To Active',
    [confirmMessage]: 'Are you sure you want to make {0} the active checkpoint?',
    [activeCheckpointLabel]: 'Active Checkpoint',
};const prefix = 'gslb';

export const gslbPoolMemberUnavailableOperStatus = `${prefix}.gslbPoolMemberUnavailableOperStatus`;
export const federationCheckpointModalBreadcrumbTitle = `${prefix}.federationCheckpointModalBreadcrumbTitle`;
export const geoProfileModalBreadcrumbTitle = `${prefix}.geoProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [gslbPoolMemberUnavailableOperStatus]: 'This site is not monitoring the GSLB service pool ' +
        'member',
    [federationCheckpointModalBreadcrumbTitle]: 'Federation Checkpoint',
    [geoProfileModalBreadcrumbTitle]: 'Geo Profile',
};const prefix = 'icapprofile';

export const icapProfileModalBreadcrumbTitle = `${prefix}.icapProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [icapProfileModalBreadcrumbTitle]: 'ICAP Profile',
};const moduleName = 'icapprofile';
const componentName = 'icapprofilelistpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleServiceUri = `${prefix}.columnTitleServiceUri`;
export const columnTitlePoolGroup = `${prefix}.columnTitlePoolGroup`;
export const columnTitleFailAction = `${prefix}.columnTitleFailAction`;
export const columnTitleVendor = `${prefix}.columnTitleVendor`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleServiceUri]: 'Service URI',
    [columnTitlePoolGroup]: 'Pool Group',
    [columnTitleFailAction]: 'Fail Action',
    [columnTitleVendor]: 'Vendor',
    [actionBtnDelete]: 'Delete',
};const moduleName = 'healthmonitor';
const componentName = 'healthmonitorauthentication';
const prefix = `${moduleName}.${componentName}`;

export const authenticationHeader = `${prefix}.authenticationHeader`;
export const authenticationTypeInputLabel = `${prefix}.authenticationTypeInputLabel`;
export const usernameInputLabel = `${prefix}.usernameInputLabel`;
export const passwordInputLabel = `${prefix}.passwordInputLabel`;

export const ENGLISH = {
    [authenticationHeader]: 'Authentication',
    [authenticationTypeInputLabel]: 'Authentication Type',
    [usernameInputLabel]: 'Username',
    [passwordInputLabel]: 'Password',
};const prefix = 'ipam';

export const customIpamDnsProfileModalBreadcrumbTitle = `${prefix}.customIpamDnsProfileModalBreadcrumbTitle`;
export const ipamDnsProfileModalBreadcrumbTitle = `${prefix}.ipamDnsProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [customIpamDnsProfileModalBreadcrumbTitle]: 'Custom IPAMDNS Profile',
    [ipamDnsProfileModalBreadcrumbTitle]: 'IPAMDNS Profile',
};const prefix = 'launchconfig';

export const launchConfigModalBreadcrumbTitle = `${prefix}.launchConfigModalBreadcrumbTitle`;

export const ENGLISH = {
    [launchConfigModalBreadcrumbTitle]: 'Launch Config',
};Copyright 2022 VMware, Inc.  All rights reserved. VMware Confidential
  
 

const prefix = 'l4policy';

export const l4PolicySetModalBreadcrumbTitle = `${prefix}.l4PolicySetModalBreadcrumbTitle`;
export const l4RuleModalBreadcrumbTitle = `${prefix}.l4RuleModalBreadcrumbTitle`;

export const ENGLISH = {
    [l4PolicySetModalBreadcrumbTitle]: 'L4 Policy Set',
    [l4RuleModalBreadcrumbTitle]: 'L4 Rule',
};const moduleName = 'policies';
const componentName = 'l4policysetlist';
const prefix = `${moduleName}.${componentName}`;

export const descriptionLabel = `${prefix}.descriptionLabel`;
export const notApplicableLabel = `${prefix}.notApplicableLabel`;
export const columnTitleNumberRules = `${prefix}.columnTitleNumberRules`;
export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [descriptionLabel]: 'Description',
    [notApplicableLabel]: 'NA',
    [columnTitleNumberRules]: '# Rules in L4 Connection Policy',
    [columnTitleName]: 'Name',
};const moduleName = 'logs';
const componentName = 'icaplogheaders';
const prefix = `${moduleName}.${componentName}`;

export const icapHeadersSentToServerLabel = `${prefix}.icapHeadersSentToServerLabel`;
export const icapHeadersReceivedFromServerLabel = `${prefix}.icapHeadersRecievedFromServerLabel`;

export const ENGLISH = {
    [icapHeadersSentToServerLabel]: 'ICAP Headers Sent to Server',
    [icapHeadersReceivedFromServerLabel]: 'ICAP Headers Received From Server',
};const moduleName = 'logs';
const componentName = 'botdetectionpolicylogsexpander';
const prefix = `${moduleName}.${componentName}`;

export const gridRowExpandedConfidenceLabel = `${prefix}.gridRowExpandedConfidenceLabel`;
export const gridRowExpandedNotesLabel = `${prefix}.gridRowExpandedNotesLabel`;

export const ENGLISH = {
    [gridRowExpandedConfidenceLabel]: 'Confidence',
    [gridRowExpandedNotesLabel]: 'Notes',
};const moduleName = 'l4policy';
const componentName = 'l4ruleprotocolmatch';
const prefix = `${moduleName}.${componentName}`;

export const radioLabelMatchCriteriaIs = `${prefix}.radioLabelMatchCriteriaIs`;
export const radioLabelMatchCriteriaIsNot = `${prefix}.radioLabelMatchCriteriaIsNot`;
export const matchProtocolFieldLabel = `${prefix}.matchProtocolFieldLabel`;

export const ENGLISH = {
    [radioLabelMatchCriteriaIs]: 'Is',
    [radioLabelMatchCriteriaIsNot]: 'Is not',
    [matchProtocolFieldLabel]: 'L4 Rule Protocol',
};const moduleName = 'logs';
const componentName = 'icapnsxdefenderlogs';
const prefix = `${moduleName}.${componentName}`;

export const nsxDefenderHeaderLabel = `${prefix}.nsxDefenderHeaderLabel`;
export const scoreLabel = `${prefix}.scoreLabel`;
export const taskIdLabel = `${prefix}.taskIdLabel`;
export const detailAnalysisLabel = `${prefix}.detailAnalysisLabel`;

export const ENGLISH = {
    [nsxDefenderHeaderLabel]: 'NSX Defender',
    [scoreLabel]: 'Score',
    [taskIdLabel]: 'Task ID',
    [detailAnalysisLabel]: 'Detail Analysis',
};const moduleName = 'logs';
const componentName = 'icaploglistexpander';
const prefix = `${moduleName}.${componentName}`;

export const summaryLabel = `${prefix}.summaryLabel`;
export const seSourcePortLabel = `${prefix}.seSourcePortLabel`;
export const icapPoolLabel = `${prefix}.icapPoolLabel`;
export const icapServerIpPortLabel = `${prefix}.icapServerIpPortLabel`;
export const icapLatencyLabel = `${prefix}.icapLatencyLabel`;
export const requestLabel = `${prefix}.requestLabel`;
export const httpMethodLabel = `${prefix}.httpMethodLabel`;
export const completeBodySentLabel = `${prefix}.completeBodySentLabel`;
export const icapAbsoluteUriLabel = `${prefix}.icapAbsoluteUriLabel`;
export const icapMethodLabel = `${prefix}.icapMethodLabel`;
export const responseLabel = `${prefix}.responseLabel`;
export const httpResponseCodeLabel = `${prefix}.httpResponseCodeLabel`;
export const modifiedContentLengthLabel = `${prefix}.modifiedContentLengthLabel`;
export const icapResponseCodeLabel = `${prefix}.icapResponseCodeLabel`;

export const ENGLISH = {
    [summaryLabel]: 'Summary',
    [seSourcePortLabel]: 'Service Engine Source Port',
    [icapPoolLabel]: 'ICAP Pool',
    [icapServerIpPortLabel]: 'ICAP Server IP:Port',
    [icapLatencyLabel]: 'ICAP Latency',
    [requestLabel]: 'Request',
    [httpMethodLabel]: 'HTTP Method',
    [completeBodySentLabel]: 'Complete Body Sent',
    [icapAbsoluteUriLabel]: 'ICAP Absolute URI',
    [icapMethodLabel]: 'ICAP Method',
    [responseLabel]: 'Response',
    [httpResponseCodeLabel]: 'HTTP Response Code',
    [modifiedContentLengthLabel]: 'Modified Content Length',
    [icapResponseCodeLabel]: 'ICAP Response Code',
};const moduleName = 'logs';
const componentName = 'icaplogs';
const prefix = `${moduleName}.${componentName}`;

export const gridColumnHeaderActionLabel = `${prefix}.gridColumnHeaderActionLabel`;
export const gridColumnHeaderTypeLabel = `${prefix}.gridColumnHeaderTypeLabel`;
export const gridColumnHeaderReasonLabel = `${prefix}.gridColumnHeaderReasonLabel`;
export const gridColumnHeaderViolationsLabel = `${prefix}.gridColumnHeaderViolationsLabel`;
export const gridColumnHeaderScoreLabel = `${prefix}.gridColumnHeaderScoreLabel`;

export const ENGLISH = {
    [gridColumnHeaderActionLabel]: 'Request Action',
    [gridColumnHeaderTypeLabel]: 'Type',
    [gridColumnHeaderReasonLabel]: 'Reason',
    [gridColumnHeaderViolationsLabel]: 'Violations',
    [gridColumnHeaderScoreLabel]: 'Score',
};const moduleName = 'logs';
const componentName = 'icapopswatlogs';
const prefix = `${moduleName}.${componentName}`;

export const opswatHeaderLabel = `${prefix}.opswatHeaderLabel`;
export const threatIdLabel = `${prefix}.threatIdLabel`;
export const opswatViolationsSectionTitle = `${prefix}.icapOpswatViolationsSectionTitle`;
export const fileNameLabel = `${prefix}.fileNameLabel`;
export const threatNameLabel = `${prefix}.threatNameLabel`;
export const violationResolutionLabel = `${prefix}.violationResolutionLabel`;

export const ENGLISH = {
    [opswatHeaderLabel]: 'OPSWAT',
    [threatIdLabel]: 'Threat ID',
    [opswatViolationsSectionTitle]: 'ICAP Violations ({0})',
    [fileNameLabel]: 'File Name',
    [threatNameLabel]: 'Threat Name',
    [violationResolutionLabel]: 'Violation Resolution',
};========================================================================
  
  ========================================================================


const moduleName = 'logs';
const componentName = 'logtimeframes';
const prefix = `${moduleName}.${componentName}`;

export const past15minutesOptionLabel = `${prefix}.past15minutesOptionLabel`;
export const pastHourOptionLabel = `${prefix}.pastHourOptionLabel`;
export const past3hoursOptionLabel = `${prefix}.past3hoursOptionLabel`;
export const past6hoursOptionLabel = `${prefix}.past6hoursOptionLabel`;
export const pastDayOptionLabel = `${prefix}.pastDayOptionLabel`;
export const pastWeekOptionLabel = `${prefix}.pastWeekOptionLabel`;
export const pastMonthOptionLabel = `${prefix}.pastMonthOptionLabel`;
export const pastQuarterOptionLabel = `${prefix}.pastQuarterOptionLabel`;
export const pastYearOptionLabel = `${prefix}.pastYearOptionLabel`;
export const allTimeOptionLabel = `${prefix}.allTimeOptionLabel`;
export const customOptionLabel = `${prefix}.customOptionLabel`;

export const ENGLISH = {
    [past15minutesOptionLabel]: 'Past 15 Minutes',
    [pastHourOptionLabel]: 'Past Hour',
    [past3hoursOptionLabel]: 'Past 3 Hours',
    [past6hoursOptionLabel]: 'Past 6 Hours',
    [pastDayOptionLabel]: 'Past Day',
    [pastWeekOptionLabel]: 'Past Week',
    [pastMonthOptionLabel]: 'Past Month',
    [pastQuarterOptionLabel]: 'Past Quarter',
    [pastYearOptionLabel]: 'Past Year',
    [allTimeOptionLabel]: 'All Time',
    [customOptionLabel]: 'Custom',
};undefined MatchModule 


  
  
  


const moduleName = 'ajslegacy';
const componentName = 'match';
const prefix = `${moduleName}.${componentName}`;

export const clientIpLabel = `${prefix}.clientIpLabel`;

export const ENGLISH = {
    [clientIpLabel]: 'Client IP',
};const moduleName = 'logs';
const componentName = 'l4datascriptlog';
const prefix = `${moduleName}.${componentName}`;

export const datascriptHeader = `${prefix}.datascriptHeader`;
export const datascriptLogGridTitle = `${prefix}.datascriptLogGridTitle`;

export const ENGLISH = {
    [datascriptHeader]: 'Datascript',
    [datascriptLogGridTitle]: 'Datascript Log',
};const moduleName = 'logs';
const componentName = 'botdetectionpolicylogs';
const prefix = `${moduleName}.${componentName}`;

export const botManagementSectionHeaderLabel = `${prefix}.botManagementSectionHeaderLabel`;
export const botSectionClassificationLabel = `${prefix}.botSectionClassificationLabel`;
export const gridColumnHeaderComponentLabel = `${prefix}.gridColumnHeaderComponentLabel`;
export const gridColumnHeaderClassLabel = `${prefix}.gridColumnHeaderClassLabel`;
export const gridColumnHeaderTypeLabel = `${prefix}.gridColumnHeaderTypeLabel`;
export const gridColumnHeaderIdentifierLabel = `${prefix}.gridColumnHeaderIdentifierLabel`;
export const botSectionTypeLabel = `${prefix}.botSectionTypeLabel`;
export const botSectionIdentifierLabel = `${prefix}.botSectionIdentifierLabel`;
export const showComponentsButtonLabel = `${prefix}.showComponentsButtonLabel`;
export const hideComponentsButtonLabel = `${prefix}.hideComponentsButtonLabel`;

export const ENGLISH = {
    [botManagementSectionHeaderLabel]: 'Bot Management',
    [botSectionClassificationLabel]: 'Classification',
    [gridColumnHeaderComponentLabel]: 'Component',
    [gridColumnHeaderClassLabel]: 'Bot Client Class',
    [gridColumnHeaderTypeLabel]: 'Bot Client Type',
    [gridColumnHeaderIdentifierLabel]: 'Identifier',
    [botSectionTypeLabel]: 'Bot Client Type',
    [botSectionIdentifierLabel]: 'Identifier',
    [showComponentsButtonLabel]: 'Show Components',
    [hideComponentsButtonLabel]: 'Hide Components',
};const moduleName = 'logs';
const componentName = 'outofbandloglistexpander';
const prefix = `${moduleName}.${componentName}`;

export const summaryLabel = `${prefix}.summaryLabel`;
export const poolNameLabel = `${prefix}.poolNameLabel`;
export const poolUuidLabel = `${prefix}.poolUuidLabel`;
export const seSourcePortLabel = `${prefix}.seSourcePortLabel`;
export const totalTimeLabel = `${prefix}.totalTimeLabel`;
export const serverNameLabel = `${prefix}.serverNameLabel`;
export const serverIpPortLabel = `${prefix}.serverIpPortLabel`;
export const serversTriedLabel = `${prefix}.serversTriedLabel`;
export const requestLabel = `${prefix}.requestLabel`;
export const responseLabel = `${prefix}.responseLabel`;
export const httpMethodLabel = `${prefix}.httpMethodLabel`;
export const httpVersionLabel = `${prefix}.httpVersionLabel`;
export const uriPathLabel = `${prefix}.uriPathLabel`;
export const uriQueryLabel = `${prefix}.uriQueryLabel`;
export const requestLengthLabel = `${prefix}.requestLengthLabel`;
export const httpResponseCodeLabel = `${prefix}.httpResponseCodeLabel`;
export const responseLengthLabel = `${prefix}.responseLengthLabel`;
export const headersSentToServerLabel = `${prefix}.headersSentToServerLabel`;
export const headersReceivedFromServerLabel = `${prefix}.headersReceivedFromServerLabel`;

export const ENGLISH = {
    [summaryLabel]: 'Summary',
    [poolNameLabel]: 'Pool Name',
    [poolUuidLabel]: 'Pool UUID',
    [seSourcePortLabel]: 'Service Engine Source Port',
    [totalTimeLabel]: 'Total Time',
    [serverNameLabel]: 'Server Name',
    [serverIpPortLabel]: 'Server IP:Port',
    [serversTriedLabel]: 'Servers Tried',
    [requestLabel]: 'Request',
    [responseLabel]: 'Response',
    [httpMethodLabel]: 'HTTP Method',
    [httpVersionLabel]: 'HTTP Version',
    [uriPathLabel]: 'URI Path',
    [uriQueryLabel]: 'URI Query',
    [requestLengthLabel]: 'Request Length',
    [httpResponseCodeLabel]: 'HTTP Response Code',
    [responseLengthLabel]: 'Response Length',
    [headersSentToServerLabel]: 'Headers Sent to Server',
    [headersReceivedFromServerLabel]: 'Headers Received from Server',
};const moduleName = 'network';
const componentName = 'networklistpage';
const prefix = `${moduleName}.${componentName}`;

export const noneLabel = `${prefix}.noneLabel`;
export const excludedLabel = `${prefix}.excludedLabel`;
export const configuredSubnetsValueText = `${prefix}.configuredSubnetsValueText`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleDiscoveredSubnets = `${prefix}.columnTitleDiscoveredSubnets`;
export const columnTitleConfiguredSubnets = `${prefix}.columnTitleConfiguredSubnets`;
export const columnTitleStaticIpPools = `${prefix}.columnTitleStaticIpPools`;
export const columnTitleVrfContext = `${prefix}.columnTitleVrfContext`;

export const ENGLISH = {
    [noneLabel]: 'None',
    [excludedLabel]: 'Excluded',
    [configuredSubnetsValueText]: '{0} (+{1} More)',
    [columnTitleName]: 'Name',
    [columnTitleDiscoveredSubnets]: 'Discovered Subnets',
    [columnTitleConfiguredSubnets]: 'Configured Subnets',
    [columnTitleStaticIpPools]: 'Static IP Pools',
    [columnTitleVrfContext]: 'VRF Context',
};const prefix = 'networkprofile';

export const NetworkProfileModalBreadcrumbTitle = `${prefix}.NetworkProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [NetworkProfileModalBreadcrumbTitle]: 'Network Profile',
};const prefix = 'persistenceprofile';

export const persistenceProfileBreadcrumbTitle = `${prefix}.persistenceProfileBreadcrumbTitle`;

export const ENGLISH = {
    [persistenceProfileBreadcrumbTitle]: 'Persistence Profile',
};const moduleName = 'logs';
const componentName = 'outofbandlogs';
const prefix = `${moduleName}.${componentName}`;

export const outOfBandHeaderLabel = `${prefix}.outOfBandHeaderLabel`;
export const totalEventsPluralLabel = `${prefix}.totalEventsPluralLabel`;
export const gridColumnHeaderNameLabel = `${prefix}.gridColumnHeaderNameLabel`;
export const gridColumnHeaderEventLabel = `${prefix}.gridColumnHeaderEventLabel`;

export const ENGLISH = {
    [outOfBandHeaderLabel]: 'Out of Band Request',
    [totalEventsPluralLabel]: '{0, plural, one{# Event} other{# Events}}',
    [gridColumnHeaderNameLabel]: 'Datascript Name',
    [gridColumnHeaderEventLabel]: 'VS Datascript Event',
};const moduleName = 'network';
const componentName = 'staticippoolconfiguration';
const prefix = `${moduleName}.${componentName}`;

export const staticIpAddressPoolLabel = `${prefix}.staticIpAddressPoolLabel`;
export const useStaticIpForBothCheckboxLabel = `${prefix}.useStaticIpForBothCheckboxLabel`;
export const useStaticIpForBothCheckboxTooltip = `${prefix}.useStaticIpForBothCheckboxTooltip`;
export const useForVipsLabel = `${prefix}.useForVipsLabel`;
export const useForServiceEnginesLabel = `${prefix}.useForServiceEnginesLabel`;
export const addButtonLabel = `${prefix}.addButtonLabel`;

export const ENGLISH = {
    [staticIpAddressPoolLabel]: 'Static IP Address Pool',
    [useStaticIpForBothCheckboxLabel]: 'Use Static IP Address for VIPs and Service Engine',
    [useStaticIpForBothCheckboxTooltip]:
        'Static IPs are used for both VIP and Service Engine vNIC IP allocation',
    [useForVipsLabel]: 'Use For VIPs',
    [useForServiceEnginesLabel]: 'Use for Service Engines',
    [addButtonLabel]: 'Add Static IP Address Pool',
};const moduleName = 'networkservices';
const componentName = 'networkservicespage';
const prefix = `${moduleName}.${componentName}`;

export const networkServicesPageTitle = `${prefix}.networkServicesPageTitle`;
export const columnTitleName = `${prefix}.columnTitleName`;

export const ENGLISH = {
    [networkServicesPageTitle]: 'Network Services',
    [columnTitleName]: 'Name',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'natpolicymodal';
const prefix = `${moduleName}.${componentName}`;

export const editNatPolicyModalHeader = `${prefix}.editNatPolicyModalHeader`;
export const newNatPolicyModalHeader = `${prefix}.newNatPolicyModalHeader`;
export const generalHeader = `${prefix}.generalHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const rulesHeader = `${prefix}.rulesHeader`;
export const ruleCountText = `${prefix}.ruleCountText`;
export const addRuleButtonLabel = `${prefix}.addRuleButtonLabel`;

export const ENGLISH = {
    [editNatPolicyModalHeader]: 'Edit NAT Policy: {0}',
    [newNatPolicyModalHeader]: 'New NAT Policy: {0}',
    [generalHeader]: 'General',
    [nameInputLabel]: 'Name',
    [descriptionInputLabel]: 'Description',
    [rulesHeader]: 'Rules',
    [ruleCountText]: '{0, plural, one{(# Rule)} other{(# Rules)}}',
    [addRuleButtonLabel]: 'Add Rule',
};========================================================================
  
  ========================================================================


const moduleName = 'notifications';
const componentName = 'snmpcontroller';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const serverLabel = `${prefix}.serverLabel`;
export const validateSettingsLabel = `${prefix}.validateSettingsLabel`;
export const snmpTrapServersLabel = `${prefix}.snmpTrapServersLabel`;
export const trapServerIpAddressLabel = `${prefix}.trapServerIpAddressLabel`;
export const ipAddressLabel = `${prefix}.ipAddressLabel`;
export const snmpCommunityLabel = `${prefix}.snmpCommunityLabel`;
export const snmpVersionLabel = `${prefix}.snmpVersionLabel`;
export const removeSnmpServerLabel = `${prefix}.removeSnmpServerLabel`;
export const addSnmpServerLabel = `${prefix}.addSnmpServerLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit SNMP Trap Notifications: {0}',
    [modalHeaderNew]: 'New SNMP Trap Notifications: {0}',
    [nameInputLabel]: 'Name',
    [serverLabel]: 'Server',
    [validateSettingsLabel]: 'Validate Settings',
    [snmpTrapServersLabel]: 'SNMP Trap Servers',
    [trapServerIpAddressLabel]: 'Trap Server IP Address',
    [ipAddressLabel]: 'IP Address',
    [snmpCommunityLabel]: 'SNMP Community',
    [snmpVersionLabel]: 'SNMP Version:',
    [removeSnmpServerLabel]: 'Remove SNMP Server',
    [addSnmpServerLabel]: '+ Add SNMP Server',
    [saveButtonLabel]: 'Save',
};const moduleName = 'ajslegacy';
const componentName = 'policymatchconfigitemfactory';
const prefix = `${moduleName}.${componentName}`;

export const sourceIpAddressLabel = `${prefix}.sourceIpAddressLabel`;
export const destinationIpAddressLabel = `${prefix}.destinationIpAddressLabel`;
export const sourcePortLabel = `${prefix}.sourcePortLabel`;
export const destinationPortLabel = `${prefix}.destinationPortLabel`;
export const protocolLabel = `${prefix}.protocolLabel`;
export const servicePortsLabel = `${prefix}.servicePortsLabel`;
export const ipAddrMatchLabel = `${prefix}.ipAddrMatchLabel`;
export const ipReputationMatchLabel = `${prefix}.ipReputationMatchLabel`;
export const portMatchLabel = `${prefix}.portMatchLabel`;
export const protocolMatchLabel = `${prefix}.protocolMatchLabel`;
export const methodMatchLabel = `${prefix}.methodMatchLabel`;
export const httpVersionMatchLabel = `${prefix}.httpVersionMatchLabel`;
export const pathMatchLabel = `${prefix}.pathMatchLabel`;
export const queryMatchLabel = `${prefix}.queryMatchLabel`;
export const headerMatchLabel = `${prefix}.headerMatchLabel`;
export const cookieMatchLabel = `${prefix}.cookieMatchLabel`;
export const hostHeaderMatchLabel = `${prefix}.hostHeaderMatchLabel`;
export const l4RulePortMatchLabel = `${prefix}.l4RulePortMatchLabel`;
export const l4RuleProtocolMatchLabel = `${prefix}.l4RuleProtocolMatchLabel`;

export const ENGLISH = {
    [sourceIpAddressLabel]: 'Source IP Address',
    [destinationIpAddressLabel]: 'Destination IP Address',
    [sourcePortLabel]: 'Source Port',
    [destinationPortLabel]: 'Destination Port',
    [protocolLabel]: 'Protocol',
    [servicePortsLabel]: 'Service Ports',
    [ipAddrMatchLabel]: 'Client IP',
    [ipReputationMatchLabel]: 'IP Reputation',
    [portMatchLabel]: 'Service Port',
    [protocolMatchLabel]: 'Protocol Type',
    [methodMatchLabel]: 'HTTP Method',
    [httpVersionMatchLabel]: 'HTTP Version',
    [pathMatchLabel]: 'Path',
    [queryMatchLabel]: 'Query',
    [headerMatchLabel]: 'Headers',
    [cookieMatchLabel]: 'Cookie',
    [hostHeaderMatchLabel]: 'Host Header',
    [l4RulePortMatchLabel]: 'Listening Ports',
    [l4RuleProtocolMatchLabel]: 'L4 Protocol',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'nataddrinfoselect';
const prefix = `${moduleName}.${componentName}`;

export const ipAddressInputLabel = `${prefix}.ipAddressInputLabel`;
export const addIpAddressButtonLabel = `${prefix}.addIpAddressButtonLabel`;

export const ENGLISH = {
    [ipAddressInputLabel]: 'IP Address',
    [addIpAddressButtonLabel]: '+ Add IP Address',
};========================================================================
  
  ========================================================================


const moduleName = 'notifications';
const componentName = 'syslogcontroller';
const prefix = `${moduleName}.${componentName}`;

export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const syslogServerInputLabel = `${prefix}.syslogServerInputLabel`;
export const syslogServerInputPlaceholder = `${prefix}.syslogServerInputPlaceholder`;
export const serverPortInputLabel = `${prefix}.serverPortInputLabel`;
export const portInputPlaceholder = `${prefix}.portInputPlaceholder`;
export const addSyslogServerButtonLabel = `${prefix}.addSyslogServerButtonLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const actionBtnValidateSettings = `${prefix}.actionBtnValidateSettings`;
export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleSyslogServer = `${prefix}.columnTitleSyslogServer`;
export const emptySyslogServersLabel = `${prefix}.emptySyslogServersLabel`;

export const ENGLISH = {
    [modalHeaderEdit]: 'Edit Syslog Notification: {0}',
    [modalHeaderNew]: 'New Syslog Notification: {0}',
    [nameInputLabel]: 'Name',
    [syslogServerInputLabel]: 'Syslog Server',
    [syslogServerInputPlaceholder]: 'IP Address or Hostname',
    [serverPortInputLabel]: 'Port',
    [portInputPlaceholder]: 'Default port 514',
    [addSyslogServerButtonLabel]: '+ Add Syslog Server',
    [cancelButtonLabel]: 'Cancel',
    [saveButtonLabel]: 'Save',
    [actionBtnValidateSettings]: 'Validate Settings',
    [columnTitleName]: 'Name',
    [columnTitleSyslogServer]: 'Syslog Server',
    [emptySyslogServersLabel]: 'No Syslog Servers',
};const prefix = 'scripts';

export const controlScriptModalBreadcrumbTitle = `${prefix}.controlScriptModalBreadcrumbTitle`;
export const protocolParserScriptModalBreadcrumbTitle = `${prefix}.protocolParserScriptModalBreadcrumbTitle`;

export const ENGLISH = {
    [controlScriptModalBreadcrumbTitle]: 'Control Script',
    [protocolParserScriptModalBreadcrumbTitle]: 'Protocol Parser Script',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'natrulemodal';
const prefix = `${moduleName}.${componentName}`;

export const editNatRuleModalHeader = `${prefix}.editNatRuleModalHeader`;
export const newNatRuleModalHeader = `${prefix}.newNatRuleModalHeader`;
export const generalHeader = `${prefix}.generalHeader`;
export const ruleEnableInputLabel = `${prefix}.ruleEnableInputLabel`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const matchRequiredTooltipLabel = `${prefix}.matchRequiredTooltipLabel`;
export const matchHeader = `${prefix}.matchHeader`;
export const actionHeader = `${prefix}.actionHeader`;
export const typeInputLabel = `${prefix}.typeInputLabel`;
export const typeInputPlaceholder = `${prefix}.typeInputPlaceholder`;

export const ENGLISH = {
    [editNatRuleModalHeader]: 'Edit NAT Rule: {0}',
    [newNatRuleModalHeader]: 'New NAT Rule: {0}',
    [generalHeader]: 'General',
    [ruleEnableInputLabel]: 'Rule {0}',
    [nameInputLabel]: 'Name',
    [matchRequiredTooltipLabel]: 'At least one match is required.',
    [matchHeader]: 'Match ({0})',
    [actionHeader]: 'Action',
    [typeInputLabel]: 'Type',
    [typeInputPlaceholder]: 'Select Type',
};const prefix = 'pool';

export const poolGroupDeploymentPolicyModalBreadcrumbTitle =
    `${prefix}.poolGroupDeploymentPolicyModalBreadcrumbTitle`;

export const ENGLISH = {
    [poolGroupDeploymentPolicyModalBreadcrumbTitle]: 'Pool Group Deployment Policy',
};const prefix = 'security';

export const hsmGroupModalBreadcrumbTitle = `${prefix}.hsmGroupModalBreadcrumbTitle`;
export const thalesNetHsmModalBreadcrumbTitle = `${prefix}.thalesNetHsmModalBreadcrumbTitle`;
export const safenetLunaServerModalBreadcrumbTitle = `${prefix}.safenetLunaServerModalBreadcrumbTitle`;

export const ENGLISH = {
    [hsmGroupModalBreadcrumbTitle]: 'HSM Group',
    [thalesNetHsmModalBreadcrumbTitle]: 'Thales netHSM',
    [safenetLunaServerModalBreadcrumbTitle]: 'Safenet Luna Server',
};========================================================================
  
  ========================================================================


const moduleName = 'pool';
const componentName = 'poolcreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const tabLabelSettings = `${prefix}.tabLabelSettings`;
export const tabLabelServers = `${prefix}.tabLabelServers`;
export const tabLabelAdvanced = `${prefix}.tabLabelAdvanced`;
export const tabLabelReview = `${prefix}.tabLabelReview`;
export const disableActionTitle = `${prefix}.disableActionTitle`;
export const listColumnHeaderServer = `${prefix}.listColumnHeaderServer`;
export const ipAddressInputPlaceholder = `${prefix}.ipAddressInputPlaceholder`;
export const listColumnHeaderIPAddress = `${prefix}.listColumnHeaderIPAddress`;
export const listColumnHeaderMacAddress = `${prefix}.listColumnHeaderMacAddress`;
export const addServersActionTitle = `${prefix}.addServersActionTitle`;
export const addServersHeader = `${prefix}.addServersHeader`;
export const listColumnHeaderStatus = `${prefix}.listColumnHeaderStatus`;
export const listColumnHeaderServerName = `${prefix}.listColumnHeaderServerName`;
export const listColumnHeaderResolveServerByDns = `${prefix}.listColumnHeaderResolveServerByDns`;
export const listColumnHeaderServerPort = `${prefix}.listColumnHeaderServerPort`;
export const defaultServerPortInputPlaceholder = `${prefix}.defaultServerPortInputPlaceholder`;
export const serverPortInputPlaceholder = `${prefix}.serverPortInputPlaceholder`;
export const listColumnHeaderServerRatio = `${prefix}.listColumnHeaderServerRatio`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const listColumnHeaderDescription = `${prefix}.listColumnHeaderDescription`;
export const listColumnHeaderNetwork = `${prefix}.listColumnHeaderNetwork`;
export const listColumnHeaderValue = `${prefix}.listColumnHeaderValue`;
export const headerValueInputPlaceholder = `${prefix}.headerValueInputPlaceholder`;
export const listColumnHeaderRewriteHostHeader = `${prefix}.listColumnHeaderRewriteHostHeader`;
export const removeActionTitle = `${prefix}.removeActionTitle`;
export const enableActionTitle = `${prefix}.enableActionTitle`;
export const gracefulDisableLabel = `${prefix}.gracefulDisableLabel`;
export const serverAlreadyPresentErrorMessage = `${prefix}.serverAlreadyPresentErrorMessage`;
export const maxServersOverflowErrorMessage = `${prefix}.maxServersOverflowErrorMessage`;
export const maxIpAddressesOverflowErrorMessage = `${prefix}.maxIpAddressesOverflowErrorMessage`;
export const confirmationMessageRemoveServers = `${prefix}.confirmationMessageRemoveServers`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const selectCloudHeader = `${prefix}.selectCloudHeader`;
export const cloudsHeader = `${prefix}.cloudsHeader`;
export const selectVrfContextHeader = `${prefix}.selectVrfContextHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const enabledSwitchLabel = `${prefix}.enabledSwitchLabel`;
export const disabledSwitchLabel = `${prefix}.disabledSwitchLabel`;
export const autoScalePolicyInputLabel = `${prefix}.autoScalePolicyInputLabel`;
export const noneDropdownPlaceholder = `${prefix}.noneDropdownPlaceholder`;
export const createAutoScalePolicyInputLabel = `${prefix}.createAutoScalePolicyInputLabel`;
export const defaultServerPortInputLabel = `${prefix}.defaultServerPortInputLabel`;
export const autoScaleLaunchConfigInputLabel = `${prefix}.autoScaleLaunchConfigInputLabel`;
export const gracefulDisableTimeoutInputLabel = `${prefix}.gracefulDisableTimeoutInputLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const persistenceProfileInputLabel = `${prefix}.persistenceProfileInputLabel`;
export const serversLabel = `${prefix}.serversLabel`;
export const persistenceProfileInputCreateActionLabel = `${prefix}.persistenceProfileInputCreateActionLabel`;
export const loadBalanceAlgorithmLabel = `${prefix}.loadBalanceAlgorithmLabel`;
export const loadBalancingAlgoInputPlaceholder = `${prefix}.loadBalancingAlgoInputPlaceholder`;
export const headerNameInputPlaceholder = `${prefix}.headerNameInputPlaceholder`;
export const analyticsProfileInputLabel = `${prefix}.analyticsProfileInputLabel`;
export const createAnalyticsProfileInputLabel = `${prefix}.createAnalyticsProfileInputLabel`;
export const analyticsProfileInputPlaceholder = `${prefix}.analyticsProfileInputPlaceholder`;
export const tier1LogicalRouterInputLabel = `${prefix}.tier1LogicalRouterInputLabel`;
export const tier1LogicalRouterInputPlaceholder = `${prefix}.tier1LogicalRouterInputPlaceholder`;
export const healthMonitorsCheckboxLabel = `${prefix}.healthMonitorsCheckboxLabel`;
export const passiveHealthMonitorCheckboxLabel = `${prefix}.passiveHealthMonitorCheckboxLabel`;
export const minHealthMonitorsUpInputLabel = `${prefix}.minHealthMonitorsUpInputLabel`;
export const lookupServerByNameCheckboxLabel = `${prefix}.lookupServerByNameCheckboxLabel`;
export const rewriteHostHeaderCheckboxLabel = `${prefix}.rewriteHostHeaderCheckboxLabel`;
export const enableRealTimeMetricsCheckboxLabel = `${prefix}.enableRealTimeMetricsCheckboxLabel`;
export const sslBackendServersHeader = `${prefix}.sslBackendServersHeader`;
export const enableSslBackendServersCheckboxLabel = `${prefix}.enableSslBackendServersCheckboxLabel`;
export const enableSslCheckboxLabel = `${prefix}.enableSslCheckboxLabel`;
export const sslProfileInputLabel = `${prefix}.sslProfileInputLabel`;
export const createSslProfileInputLabel = `${prefix}.createSslProfileInputLabel`;
export const pkiProfileInputLabel = `${prefix}.pkiProfileInputLabel`;
export const createPkiProfileInputLabel = `${prefix}.createPkiProfileInputLabel`;
export const sslKeyAndCertificateInputLabel = `${prefix}.sslKeyAndCertificateInputLabel`;
export const createCertificateInputLabel = `${prefix}.createCertificateInputLabel`;
export const commonNameCheckCheckboxLabel = `${prefix}.commonNameCheckCheckboxLabel`;
export const domainNamesInputLabel = `${prefix}.domainNamesInputLabel`;
export const tlsSniCheckboxLabel = `${prefix}.tlsSniCheckboxLabel`;
export const tlsSniServerNameInputLabel = `${prefix}.tlsSniServerNameInputLabel`;
export const tlsSniServerNameInputPlaceholder = `${prefix}.tlsSniServerNameInputPlaceholder`;
export const rewriteHostHeaderToSniCheckboxLabel = `${prefix}.rewriteHostHeaderToSniCheckboxLabel`;
export const selectServersByNetworkHeader = `${prefix}.selectServersByNetworkHeader`;
export const selectNetworkInputPlaceholder = `${prefix}.selectNetworkInputPlaceholder`;
export const selectServersLabel = `${prefix}.selectServersLabel`;
export const ipAddressRangeDnsLabel = `${prefix}.ipAddressRangeDnsLabel`;
export const ipGroupLabel = `${prefix}.ipGroupLabel`;
export const securityGroupsLabel = `${prefix}.securityGroupsLabel`;
export const azureScaleSetLabel = `${prefix}.azureScaleSetLabel`;
export const autoScalingGroupsLabel = `${prefix}.autoScalingGroupsLabel`;
export const selectServersByNetworkButtonLabel = `${prefix}.selectServersByNetworkButtonLabel`;
export const ipGroupInputLabel = `${prefix}.ipGroupInputLabel`;
export const ipGroupInputPlaceholder = `${prefix}.ipGroupInputPlaceholder`;
export const nsxSecurityGroupsInputLabel = `${prefix}.nsxSecurityGroupsInputLabel`;
export const securityGroupInputPlaceholder = `${prefix}.securityGroupInputPlaceholder`;
export const autoScalingGroupsInputLabel = `${prefix}.autoScalingGroupsInputLabel`;
export const autoScalingGroupsInputPlaceholder = `${prefix}.autoScalingGroupsInputPlaceholder`;
export const serversHeader = `${prefix}.serversHeader`;
export const enableHttp2CheckboxLabel = `${prefix}.enableHttp2CheckboxLabel`;
export const poolFullSettingsHeader = `${prefix}.poolFullSettingsHeader`;
export const requestQueuingLabel = `${prefix}.requestQueuingLabel`;
export const disabledLabel = `${prefix}.disabledLabel`;
export const queueLengthInputLabel = `${prefix}.queueLengthInputLabel`;
export const poolFailureSettingsHeader = `${prefix}.poolFailureSettingsHeader`;
export const placementSettingsHeader = `${prefix}.placementSettingsHeader`;
export const serverNetworkLabel = `${prefix}.serverNetworkLabel`;
export const serverNetworkInputPlaceholder = `${prefix}.serverNetworkInputPlaceholder`;
export const subnetInputLabel = `${prefix}.subnetInputLabel`;
export const subnetInputPlaceholder = `${prefix}.subnetInputPlaceholder`;
export const addServerNetworkButtonLabel = `${prefix}.addServerNetworkButtonLabel`;
export const connectionPoolSettingsHeader = `${prefix}.connectionPoolSettingsHeader`;
export const connectionIdleTimeoutInputLabel = `${prefix}.connectionIdleTimeoutInputLabel`;
export const connectionLifeTimeoutInputLabel = `${prefix}.connectionLifeTimeoutInputLabel`;
export const connectionMaxUsedTimesInputLabel = `${prefix}.connectionMaxUsedTimesInputLabel`;
export const maxCacheConnectionsPerServerInputLabel = `${prefix}.maxCacheConnectionsPerServerInputLabel`;
export const otherSettingsHeader = `${prefix}.otherSettingsHeader`;
export const rbacSettingHeader = `${prefix}.rbacSettingHeader`;
export const disablePortTranslationCheckboxLabel = `${prefix}.disablePortTranslationCheckboxLabel`;
export const useServiceSslModeCheckboxLabel = `${prefix}.useServiceSslModeCheckboxLabel`;
export const ignoreServerPortCheckboxLabel = `${prefix}.ignoreServerPortCheckboxLabel`;
export const defaultServerTimeoutInputLabel = `${prefix}.defaultServerTimeoutInputLabel`;
export const connectionRampInputLabel = `${prefix}.connectionRampInputLabel`;
export const secondsInnerText = `${prefix}.secondsInnerText`;
export const poolDescriptionInputLabel = `${prefix}.poolDescriptionInputLabel`;
export const maxConnectionsPerServerInputLabel = `${prefix}.maxConnectionsPerServerInputLabel`;
export const httpServerReselectCheckboxLabel = `${prefix}.httpServerReselectCheckboxLabel`;
export const routingPoolCheckboxLabel = `${prefix}.routingPoolCheckboxLabel`;
export const httpResponseCodesForServerReselectInputLabel = `${prefix}.httpResponseCodesForServerReselectInputLabel`;
export const numberOfRetriesInputLabel = `${prefix}.numberOfRetriesInputLabel`;
export const serverRetryTimeoutInputLabel = `${prefix}.serverRetryTimeoutInputLabel`;
export const reviewHeader = `${prefix}.reviewHeader`;
export const defaultServerPortLabel = `${prefix}.defaultServerPortLabel`;
export const activeHealthMonitorsLabel = `${prefix}.activeHealthMonitorsLabel`;
export const loadBalanceHashLabel = `${prefix}.loadBalanceHashLabel`;
export const hashHeaderLabel = `${prefix}.hashHeaderLabel`;
export const persistenceLabel = `${prefix}.persistenceLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const nextButtonLabel = `${prefix}.nextButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const previousButtonLabel = `${prefix}.previousButtonLabel`;
export const appendPortLabel = `${prefix}.appendPortLabel`;
export const serverDisableTypeLabel = `${prefix}.serverDisableTypeLabel`;
export const disallowNewConnectionLabel = `${prefix}.disallowNewConnectionLabel`;
export const allowNewConnectionLabel = `${prefix}.allowNewConnectionLabel`;

export const ENGLISH = {
    [tabLabelSettings]: 'Settings',
    [tabLabelServers]: 'Servers',
    [tabLabelAdvanced]: 'Advanced',
    [tabLabelReview]: 'Review',
    [disableActionTitle]: 'Disable',
    [listColumnHeaderServer]: 'Server',
    [ipAddressInputPlaceholder]: 'IP Address',
    [listColumnHeaderIPAddress]: 'IP Address',
    [listColumnHeaderMacAddress]: 'MAC Address',
    [addServersActionTitle]: 'Add Servers',
    [addServersHeader]: 'Add Servers',
    [listColumnHeaderStatus]: 'Status',
    [listColumnHeaderServerName]: 'Server Name',
    [listColumnHeaderResolveServerByDns]: 'Resolve by DNS',
    [listColumnHeaderServerPort]: 'Port',
    [defaultServerPortInputPlaceholder]: 'Port',
    [serverPortInputPlaceholder]: 'Inherit',
    [listColumnHeaderServerRatio]: 'Ratio',
    [descriptionInputLabel]: 'Description',
    [listColumnHeaderDescription]: 'Description',
    [listColumnHeaderNetwork]: 'Network',
    [listColumnHeaderValue]: 'Header Value',
    [headerValueInputPlaceholder]: 'Header Value',
    [listColumnHeaderRewriteHostHeader]: 'Rewrite Host Header',
    [removeActionTitle]: 'Remove',
    [enableActionTitle]: 'Enable',
    [gracefulDisableLabel]: 'Graceful Disable',
    [serverAlreadyPresentErrorMessage]: "Can't add server {0} to the list because server with the same IP and port combination is already present in a list.",
    [maxServersOverflowErrorMessage]: "Can't add more servers, up to {0} is supported.",
    [maxIpAddressesOverflowErrorMessage]: 'Too many ({0}) in IP group. Only {1} addresses supported.',
    [confirmationMessageRemoveServers]: 'Remove current servers?',
    [modalHeaderEdit]: 'Edit Pool: <strong>{0}<strong>',
    [modalHeaderNew]: 'New Pool: <strong>{0}<strong>',
    [selectCloudHeader]: 'Select Cloud',
    [cloudsHeader]: 'Clouds',
    [selectVrfContextHeader]: 'Select VRF Context',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Pool Name',
    [enabledSwitchLabel]: 'Enabled',
    [disabledSwitchLabel]: 'Disable',
    [autoScalePolicyInputLabel]: 'AutoScale Policy',
    [noneDropdownPlaceholder]: 'None',
    [createAutoScalePolicyInputLabel]: 'Create AutoScale Policy',
    [defaultServerPortInputLabel]: 'Default Server Port',
    [autoScaleLaunchConfigInputLabel]: 'AutoScale Launch Config',
    [gracefulDisableTimeoutInputLabel]: 'Graceful Disable Timeout',
    [minutesInnerText]: 'Minutes',
    [persistenceProfileInputLabel]: 'Persistence',
    [serversLabel]: 'Servers',
    [persistenceProfileInputCreateActionLabel]: 'Create Persistence Profile',
    [loadBalanceAlgorithmLabel]: 'Load Balance',
    [loadBalancingAlgoInputPlaceholder]: 'Field for Consistent Hash. Default is Source IP Address.',
    [headerNameInputPlaceholder]: 'Header Name',
    [analyticsProfileInputLabel]: 'Analytics Profile',
    [createAnalyticsProfileInputLabel]: 'Create Analytics Profile',
    [analyticsProfileInputPlaceholder]: 'Select Analytics Profile',
    [tier1LogicalRouterInputLabel]: 'Tier1 Logical Router',
    [tier1LogicalRouterInputPlaceholder]: 'Select Tier1 Logical Router',
    [healthMonitorsCheckboxLabel]: 'Health Monitors',
    [passiveHealthMonitorCheckboxLabel]: 'Passive Health Monitor',
    [minHealthMonitorsUpInputLabel]: "Min. Health Monitors to consider server 'up'",
    [lookupServerByNameCheckboxLabel]: 'Lookup Server by Name',
    [rewriteHostHeaderCheckboxLabel]: 'Rewrite Host Header to Server Name',
    [enableRealTimeMetricsCheckboxLabel]: 'Enable real time metrics',
    [sslBackendServersHeader]: 'SSL to Backend Servers',
    [enableSslBackendServersCheckboxLabel]: 'Enable SSL to Backend Servers',
    [enableSslCheckboxLabel]: 'Enable SSL',
    [sslProfileInputLabel]: 'SSL Profile',
    [createSslProfileInputLabel]: 'Create SSL Profile',
    [pkiProfileInputLabel]: 'Server SSL Certificate Validation PKI Profile',
    [createPkiProfileInputLabel]: 'Create PKI Profile',
    [sslKeyAndCertificateInputLabel]: 'Service Engine Client Certificate',
    [createCertificateInputLabel]: 'Create Certificate',
    [commonNameCheckCheckboxLabel]: 'Common Name Check',
    [domainNamesInputLabel]: 'Domain Names',
    [tlsSniCheckboxLabel]: 'TLS SNI',
    [tlsSniServerNameInputLabel]: 'TLS SNI Server Name',
    [tlsSniServerNameInputPlaceholder]: 'Host Header',
    [rewriteHostHeaderToSniCheckboxLabel]: 'Rewrite Host Header to SNI Name',
    [selectServersByNetworkHeader]: 'Select Servers by Network',
    [selectNetworkInputPlaceholder]: 'Select a Network',
    [selectServersLabel]: 'Select Servers',
    [ipAddressRangeDnsLabel]: 'IP Address, Range, or DNS Name',
    [ipGroupLabel]: 'IP Group',
    [securityGroupsLabel]: 'Security Groups',
    [azureScaleSetLabel]: 'Azure Scale Set',
    [autoScalingGroupsLabel]: 'Auto Scaling groups',
    [selectServersByNetworkButtonLabel]: 'Select Servers by Network',
    [ipGroupInputLabel]: 'IP Group',
    [ipGroupInputPlaceholder]: 'Select IP Group',
    [nsxSecurityGroupsInputLabel]: 'NSX Security Groups',
    [securityGroupInputPlaceholder]: 'Select Security Group',
    [autoScalingGroupsInputLabel]: 'Auto Scaling groups',
    [autoScalingGroupsInputPlaceholder]: 'Select Auto Scaling Groups',
    [serversHeader]: 'Servers',
    [enableHttp2CheckboxLabel]: 'Enable HTTP2',
    [poolFullSettingsHeader]: 'Pool Full Settings',
    [requestQueuingLabel]: 'Request Queuing:',
    [disabledLabel]: 'Disabled',
    [queueLengthInputLabel]: 'Queue Length',
    [poolFailureSettingsHeader]: 'Pool Failure Settings',
    [placementSettingsHeader]: 'Placement Settings',
    [serverNetworkLabel]: 'Server Network',
    [serverNetworkInputPlaceholder]: 'Any Network',
    [subnetInputLabel]: 'Subnet',
    [subnetInputPlaceholder]: 'IPv4 or IPv6 Prefix',
    [addServerNetworkButtonLabel]: '+ Add Server Network',
    [connectionPoolSettingsHeader]: 'Connection Pool Settings',
    [connectionIdleTimeoutInputLabel]: 'Connection Idle Timeout',
    [connectionLifeTimeoutInputLabel]: 'Connection Life Timeout',
    [connectionMaxUsedTimesInputLabel]: 'Connection Max Used Times',
    [maxCacheConnectionsPerServerInputLabel]: 'Max Cache Connections Per Server',
    [otherSettingsHeader]: 'Other Settings',
    [rbacSettingHeader]: 'RoleBased Access Control (RBAC)',
    [disablePortTranslationCheckboxLabel]: 'Disable Port Translation',
    [useServiceSslModeCheckboxLabel]: 'Use Service SSL Mode',
    [ignoreServerPortCheckboxLabel]: 'Ignore Server Port',
    [defaultServerTimeoutInputLabel]: 'Default Server Timeout',
    [connectionRampInputLabel]: 'Connection Ramp',
    [secondsInnerText]: 'seconds',
    [poolDescriptionInputLabel]: 'Pool description',
    [maxConnectionsPerServerInputLabel]: 'Max Connections per Server',
    [httpServerReselectCheckboxLabel]: 'HTTP Server Reselect',
    [routingPoolCheckboxLabel]: 'Routing Pool',
    [httpResponseCodesForServerReselectInputLabel]: 'HTTP Response codes for Server Reselect',
    [numberOfRetriesInputLabel]: 'Number of Retries',
    [serverRetryTimeoutInputLabel]: 'Server Retry Timeout',
    [reviewHeader]: '{0} Review',
    [defaultServerPortLabel]: 'Default Server Port',
    [activeHealthMonitorsLabel]: 'Active Health Monitors',
    [loadBalanceHashLabel]: 'Load Balance Hash',
    [hashHeaderLabel]: 'Hash Header',
    [persistenceLabel]: 'Persistence',
    [cancelButtonLabel]: 'Cancel',
    [nextButtonLabel]: 'Next',
    [saveButtonLabel]: 'Save',
    [previousButtonLabel]: 'Previous',
    [appendPortLabel]: 'Append Port',
    [serverDisableTypeLabel]: 'Server Disable Type',
    [disallowNewConnectionLabel]: 'Disallow New Connections',
    [allowNewConnectionLabel]: 'Allow New Connections with Persistence Entry',
};const moduleName = 'security';
const componentName = 'certificatemanagementexpander';
const prefix = `${moduleName}.${componentName}`;

export const customParamLabel = `${prefix}.customParamLabel`;
export const nameLabel = `${prefix}.nameLabel`;
export const valueLabel = `${prefix}.valueLabel`;
export const sensitiveLabel = `${prefix}.sensitiveLabel`;
export const dynamicLabel = `${prefix}.dynamicLabel`;

export const ENGLISH = {
    [customParamLabel]: 'Custom Param {0}',
    [sensitiveLabel]: 'Sensitive',
    [dynamicLabel]: 'Dynamic',
};const moduleName = 'security';
const componentName = 'certificateexpander';
const prefix = `${moduleName}.${componentName}`;

export const revocationReasonLabel = `${prefix}.revocationReasonLabel`;
export const ocspResponseFromResponderUrlLabel = `${prefix}.ocspResponseFromResponderUrlLabel`;
export const nextUpdateLabel = `${prefix}.nextUpdateLabel`;
export const certStatusLabel = `${prefix}.certStatusLabel`;
export const revocationTimeLabel = `${prefix}.revocationTimeLabel`;
export const thisUpdateLabel = `${prefix}.thisUpdateLabel`;

export const ENGLISH = {
    [revocationReasonLabel]: 'Revocation Reason',
    [ocspResponseFromResponderUrlLabel]: 'OCSP Response from Responder URL',
    [nextUpdateLabel]: 'Next Update',
    [certStatusLabel]: 'Cert Status',
    [revocationTimeLabel]: 'Revocation Time',
    [thisUpdateLabel]: 'This Update',
};const prefix = 'security';

export const pingAccessAgentModalBreadcrumbTitle = `${prefix}.pingAccessAgentModalBreadcrumbTitle`;

export const ENGLISH = {
    [pingAccessAgentModalBreadcrumbTitle]: 'PingAccess Agent',
};undefined SecurityModule
 


  
  
  
 
const moduleName = 'security';
const componentName = 'jwtserverprofilelistpage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const actionBtnDelete = `${prefix}.actionBtnDelete`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [actionBtnDelete]: 'Delete',
};const prefix = 'security';

export const certificateManagementModalBreadcrumbTitle = `${prefix}.certificateManagementModalBreadcrumbTitle`;
export const customParamsModalBreadcrumbTitle = `${prefix}.customParamsModalBreadcrumbTitle`;

export const ENGLISH = {
    [certificateManagementModalBreadcrumbTitle]: 'Certificate Management',
    [customParamsModalBreadcrumbTitle]: 'Custom Param',
};const prefix = 'security';

export const authProfileModalBreadcrumbTitle = `${prefix}.authProfileModalBreadcrumbTitle`;

export const ENGLISH = {
    [authProfileModalBreadcrumbTitle]: 'Auth Profile',
};const prefix = 'pkiprofile';

export const pkiProfileModalBreadcrumbTitle = `${prefix}.pkiProfileModalBreadcrumbTitle`;
export const addCaModalBreadcrumbTitle = `${prefix}.addCaModalBreadcrumbTitle`;
export const addCrlModalBreadcrumbTitle = `${prefix}.addCrlModalBreadcrumbTitle`;

export const ENGLISH = {
    [pkiProfileModalBreadcrumbTitle]: 'PKI Profile',
    [addCaModalBreadcrumbTitle]: 'Add CA',
    [addCrlModalBreadcrumbTitle]: 'Add CRL',
};const moduleName = 'serviceenginegroup';
const componentName = 'segroupclusterhostconfig';
const prefix = `${moduleName}.${componentName}`;

export const clusterInputLabel = `${prefix}.clusterInputLabel`;
export const includeInputLabel = `${prefix}.includeInputLabel`;
export const excludeInputLabel = `${prefix}.excludeInputLabel`;
export const selectClusterInputPlaceholder = `${prefix}.selectClusterInputPlaceholder`;
export const hostInputLabel = `${prefix}.hostInputLabel`;
export const selectHostInputPlaceholder = `${prefix}.selectHostInputPlaceholder`;
export const clusterChangeWarning = `${prefix}.clusterChangeWarning`;
export const warningTitle = `${prefix}.warningTitle`;
export const continueMessage = `${prefix}.continueMessage`;

export const ENGLISH = {
    [clusterInputLabel]: 'Cluster',
    [includeInputLabel]: 'Include',
    [excludeInputLabel]: 'Exclude',
    [selectClusterInputPlaceholder]: 'Select a Cluster',
    [hostInputLabel]: 'Host',
    [selectHostInputPlaceholder]: 'Select a Host',
    [clusterChangeWarning]: 'Changing cluster will clear selected hosts.',
    [warningTitle]: 'Warning',
    [continueMessage]: 'yes, continue',
};const prefix = 'security';

export const sslProfileModalBreadcrumbTitle = `${prefix}.sslProfileModalBreadcrumbTitle`;
export const sslTlsCertificateModalBreadcrumbTitle = `${prefix}.sslTlsCertificateModalBreadcrumbTitle`;

export const ENGLISH = {
    [sslProfileModalBreadcrumbTitle]: 'SSLTLS Profile',
    [sslTlsCertificateModalBreadcrumbTitle]: 'Certificate (SSLTLS)',
};const moduleName = 'serviceenginegroup';
const componentName = 'segroupnsxtplacementscope';
const prefix = `${moduleName}.${componentName}`;

export const header = `${prefix}.header`;
export const addVcenterButtonLabel = `${prefix}.addVcenterButtonLabel`;

export const ENGLISH = {
    [header]: 'Placement Scope',
    [addVcenterButtonLabel]: 'Add vCenter',
};const moduleName = 'serviceenginegroup';
const componentName = 'segroupnsxtplacementscopeconfig';
const prefix = `${moduleName}.${componentName}`;

export const vcenterLabel = `${prefix}.vcenterLabel`;
export const removeVcenterHint = `${prefix}.removeVcenterHint`;
export const vcenterFieldLabel = `${prefix}.vcenterFieldLabel`;
export const vcenterFieldPlaceholder = `${prefix}.vcenterFieldPlaceholder`;
export const serviceEngineFolderFieldLabel = `${prefix}.serviceEngineFolderFieldLabel`;
export const serviceEngineFolderFieldPlaceholder = `${prefix}.serviceEngineFolderFieldPlaceholder`;
export const hostClusterScopeFieldLabel = `${prefix}.hostClusterScopeFieldLabel`;
export const anyRadioOptionLabel = `${prefix}.anyRadioOptionLabel`;
export const hostRadioOptionLabel = `${prefix}.hostRadioOptionLabel`;
export const sharedRadioOptionLabel = `${prefix}.sharedRadioOptionLabel`;
export const clusterRadioOptionLabel = `${prefix}.clusterRadioOptionLabel`;
export const hostFieldLabel = `${prefix}.hostFieldLabel`;
export const clusterFieldLabel = `${prefix}.clusterFieldLabel`;
export const includeRadioOptionLabel = `${prefix}.includeRadioOptionLabel`;
export const excludeRadioOptionLabel = `${prefix}.excludeRadioOptionLabel`;
export const selectHostsFieldPlaceholder = `${prefix}.selectHostsFieldPlaceholder`;
export const selectClustersFieldPlaceholder = `${prefix}.selectClustersFieldPlaceholder`;
export const dataScopeFieldLabel = `${prefix}.dataScopeFieldLabel`;
export const dataStoreFieldLabel = `${prefix}.dataStoreFieldLabel`;
export const selectDataStoresFieldPlaceholder = `${prefix}.selectDataStoresFieldPlaceholder`;
export const vcenterServerNotAvailable = `${prefix}.vcenterServerNotAvailable`;
export const vSphereHaHeader = `${prefix}.vSphereHaHeader`;
export const clusterInputLabel = `${prefix}.clusterInputLabel`;
export const clusterInputPlaceholder = `${prefix}.clusterInputPlaceholder`;
export const vmGroupInputLabel = `${prefix}.vmGroupInputLabel`;
export const vmGroupInputPlaceholder = `${prefix}.vmGroupInputPlaceholder`;
export const removeClusterHaBtnLabel = `${prefix}.removeClusterHaBtnLabel`;
export const addClusterHaLinkLabel = `${prefix}.addClusterHaLinkLabel`;

export const ENGLISH = {
    [vcenterLabel]: 'vCenter',
    [removeVcenterHint]: 'Remove vCenter',
    [vcenterFieldLabel]: 'vCenter',
    [vcenterFieldPlaceholder]: 'Select vCenter Server',
    [serviceEngineFolderFieldLabel]: 'Service Engine Folder',
    [serviceEngineFolderFieldPlaceholder]: 'Select a Folder',
    [hostClusterScopeFieldLabel]: 'HostCluster Scope Service Engine within',
    [anyRadioOptionLabel]: 'Any',
    [hostRadioOptionLabel]: 'Host',
    [sharedRadioOptionLabel]: 'Shared',
    [clusterRadioOptionLabel]: 'Cluster',
    [hostFieldLabel]: 'Host',
    [clusterFieldLabel]: 'Cluster',
    [includeRadioOptionLabel]: 'Include',
    [excludeRadioOptionLabel]: 'Exclude',
    [selectHostsFieldPlaceholder]: 'Select Hosts',
    [selectClustersFieldPlaceholder]: 'Select Clusters',
    [dataScopeFieldLabel]: 'Data Store Scope for Service Engine Virtual Machine',
    [dataStoreFieldLabel]: 'Data Store',
    [selectDataStoresFieldPlaceholder]: 'Select Data Stores',
    [vcenterServerNotAvailable]: 'NA',
    [vSphereHaHeader]: 'vSphere HA',
    [clusterInputLabel]: 'Cluster',
    [clusterInputPlaceholder]: 'Select Cluster',
    [vmGroupInputLabel]: 'VM Group',
    [vmGroupInputPlaceholder]: 'Select VM Group',
    [removeClusterHaBtnLabel]: 'Remove Cluster HA Config',
    [addClusterHaLinkLabel]: 'Add Cluster HA Config',
};const moduleName = 'ajslegacy';
const componentName = 'systemconfigurationcontroller';
const prefix = `${moduleName}.${componentName}`;

export const anyLabel = `${prefix}.anyLabel`;
export const emptyObjectLabel = `${prefix}.emptyObjectLabel`;
export const systemAccessSettingsHeader = `${prefix}.systemAccessSettingsHeader`;
export const accessMechanismsLabel = `${prefix}.accessMechanismsLabel`;
export const httpTextLabel = `${prefix}.httpTextLabel`;
export const httpsTextLabel = `${prefix}.httpsTextLabel`;
export const redirectHttpToHttpsTextLabel = `${prefix}.redirectHttpToHttpsTextLabel`;
export const basicAuthenticationTextLabel = `${prefix}.basicAuthenticationTextLabel`;
export const sslProfileLabel = `${prefix}.sslProfileLabel`;
export const sslCertificateLabel = `${prefix}.sslCertificateLabel`;
export const secureChannelSslCertificateLabel = `${prefix}.secureChannelSslCertificateLabel`;
export const allowedCiphersLabel = `${prefix}.allowedCiphersLabel`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const allowedHmacsLabel = `${prefix}.allowedHmacsLabel`;
export const snmpCommunityLabel = `${prefix}.snmpCommunityLabel`;
export const managementIpAccessControlLabel = `${prefix}.managementIpAccessControlLabel`;
export const sshAccessTextLabel = `${prefix}.sshAccessTextLabel`;
export const cliShellServerAccessTextLabel = `${prefix}.cliShellServerAccessTextLabel`;
export const apiAccessTextLabel = `${prefix}.apiAccessTextLabel`;
export const snmpAccessTextLabel = `${prefix}.snmpAccessTextLabel`;
export const loginBannerLabel = `${prefix}.loginBannerLabel`;
export const messageOfTheDayLabel = `${prefix}.messageOfTheDayLabel`;

export const ENGLISH = {
    [anyLabel]: 'Any',
    [emptyObjectLabel]: 'NA',
    [systemAccessSettingsHeader]: 'System Access Settings',
    [accessMechanismsLabel]: 'Access Mechanisms',
    [httpTextLabel]: 'HTTP  {0},',
    [httpsTextLabel]: 'HTTPS  {0},',
    [redirectHttpToHttpsTextLabel]: 'Redirect HTTP to HTTPS  {0},',
    [basicAuthenticationTextLabel]: 'Basic Authentication  {0},',
    [sslProfileLabel]: 'SSL Profile',
    [sslCertificateLabel]: 'SSL Certificate',
    [secureChannelSslCertificateLabel]: 'Secure Channel SSL Certificate',
    [allowedCiphersLabel]: 'Allowed Ciphers',
    [emptyDataLabel]: 'None',
    [allowedHmacsLabel]: 'Allowed HMACs',
    [snmpCommunityLabel]: 'SNMP Community',
    [managementIpAccessControlLabel]: 'Management IP Access Control',
    [sshAccessTextLabel]: 'SSH Access: {0}',
    [cliShellServerAccessTextLabel]: 'CLI Shell Server Access: {0}',
    [apiAccessTextLabel]: 'API Access: {0}',
    [snmpAccessTextLabel]: 'SNMP Access: {0}',
    [messageOfTheDayLabel]: 'Message of the Day',
    [loginBannerLabel]: 'Login Banner',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segupdateimageselectionmodal';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const columnTitleAttributes = `${prefix}.columnTitleAttributes`;
export const compatibleUpdateModalTitle = `${prefix}.compatibleUpdateModalTitle`;
export const nextBtnLabel = `${prefix}.nextBtnLabel`;
export const emptyCompatibleImageLabel = `${prefix}.emptyCompatibleImageLabel`;

export const ENGLISH = {
    [columnTitleType]: 'Type',
    [columnTitleVersion]: 'Version',
    [columnTitleAttributes]: 'Attributes',
    [compatibleUpdateModalTitle]: 'Compatible Updates',
    [nextBtnLabel]: 'Next',
    [emptyCompatibleImageLabel]: 'No compatible image found for the selected SEGs.',
};const prefix = 'ssopolicy';

export const ssoPolicyModalBreadcrumbTitle = `${prefix}.ssoPolicyModalBreadcrumbTitle`;
export const authenticationRuleModalBreadcrumbTitle = `${prefix}.authenticationRuleModalBreadcrumbTitle`;
export const authorizationRuleModalBreadcrumbTitle = `${prefix}.authorizationRuleModalBreadcrumbTitle`;

export const ENGLISH = {
    [ssoPolicyModalBreadcrumbTitle]: 'SSO Policy',
    [authenticationRuleModalBreadcrumbTitle]: 'Authentication Rule',
    [authorizationRuleModalBreadcrumbTitle]: 'Authorization Rule',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segupdatepagegridfieldstatus';
const prefix = `${moduleName}.${componentName}`;

export const failedStatusLabel = `${prefix}.failedStatusLabel`;
export const successfulStatusLabel = `${prefix}.successfulStatusLabel`;
export const inProgressStatusLabel = `${prefix}.inProgressStatusLabel`;
export const unknownStatusLabel = `${prefix}.unknownStatusLabel`;

export const ENGLISH = {
    [failedStatusLabel]: 'Failed',
    [successfulStatusLabel]: 'Successful',
    [inProgressStatusLabel]: 'In Progress',
    [unknownStatusLabel]: 'Unknown',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'selectedseglist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const serviceEngineGroupsCountLabel = `${prefix}.serviceEngineGroupsCountLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleVersion]: 'Version',
    [serviceEngineGroupsCountLabel]: 'Service Engine Groups ({0})',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segupdatepagegridexpander';
const prefix = `${moduleName}.${componentName}`;

export const haModeLabel = `${prefix}.haModeLabel`;
export const versionLabel = `${prefix}.versionLabel`;
export const patchLabel = `${prefix}.patchLabel`;
export const updateOnLabel = `${prefix}.updateOnLabel`;

export const ENGLISH = {
    [haModeLabel]: 'HA Mode',
    [versionLabel]: 'Version',
    [patchLabel]: 'Patch',
    [updateOnLabel]: 'Update On',
};const prefix = 'system';

export const emailConfigurationModalBreadcrumbTitle =
    `${prefix}.emailConfigurationModalBreadcrumbTitle`;
export const schedulerModalBreadcrumbTitle = `${prefix}.schedulerModalBreadcrumbTitle`;

export const ENGLISH = {
    [emailConfigurationModalBreadcrumbTitle]: 'EmailSMTP',
    [schedulerModalBreadcrumbTitle]: 'Configuration Backup',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'softwarepage';
const prefix = `${moduleName}.${componentName}`;

export const uploadFromComputerBtnLabel = `${prefix}.uploadFromComputerBtnLabel`;
export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const columnTitleAttributes = `${prefix}.columnTitleAttributes`;
export const deleteButtonLabel = `${prefix}.deleteButtonLabel`;
export const uploadingStatusMessage = `${prefix}.uploadingStatusMessage`;
export const processingCompleteStatusMessage = `${prefix}.processingCompleteStatusMessage`;
export const uploadCompleteMessage = `${prefix}.uploadCompleteMessage`;
export const leavingPageUploadMessage = `${prefix}.leavingPageUploadMessage`;
export const currentVersionLabel = `${prefix}.currentVersionLabel`;

export const ENGLISH = {
    [uploadFromComputerBtnLabel]: 'Upload From Computer',
    [columnTitleType]: 'Type',
    [columnTitleVersion]: 'Version',
    [columnTitleAttributes]: 'Attributes',
    [deleteButtonLabel]: 'Delete',
    [uploadingStatusMessage]: 'Uploading',
    [processingCompleteStatusMessage]: 'Processing complete',
    [uploadCompleteMessage]: 'Upload Complete! {0}',
    [leavingPageUploadMessage]: '{0} is in the process of being uploaded, leaving the page will terminate the upload.',
    [currentVersionLabel]: '{0} (current)',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'segupdatepage';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const columnTitleCloud = `${prefix}.columnTitleCloud`;
export const columnTitleStatus = `${prefix}.columnTitleStatus`;
export const transcriptBtnLabel = `${prefix}.transcriptBtnLabel`;
export const upgradeBtnLabel = `${prefix}.upgradeBtnLabel`;
export const columnTitleTenant = `${prefix}.columnTitleTenant`;
export const aboutHeader = `${prefix}.aboutHeader`;
export const inProgressHeader = `${prefix}.inProgressHeader`;
export const emptyGridPlaceholder = `${prefix}.emptyGridPlaceholder`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleVersion]: 'Version',
    [columnTitleCloud]: 'Cloud',
    [columnTitleStatus]: 'Status',
    [transcriptBtnLabel]: 'Transcript',
    [upgradeBtnLabel]: 'Upgrade',
    [columnTitleTenant]: 'Tenant',
    [aboutHeader]: 'About',
    [inProgressHeader]: 'In Progress',
    [emptyGridPlaceholder]: 'No Compatible Image Found.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'systemupdate';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleType = `${prefix}.columnTitleType`;
export const columnTitleVersion = `${prefix}.columnTitleVersion`;
export const columnTitleAttributes = `${prefix}.columnTitleAttributes`;
export const upgradeBtnLabel = `${prefix}.upgradeBtnLabel`;
export const versionLabel = `${prefix}.versionLabel`;
export const clearPatchLabel = `${prefix}.clearPatchLabel`;
export const inProgressHeader = `${prefix}.inProgressHeader`;
export const emptyGridPlaceholder = `${prefix}.emptyGridPlaceholder`;
export const nonoperationalFipsMessage = `${prefix}.nonoperationalFipsMessage`;

export const ENGLISH = {
    [columnTitleType]: 'Type',
    [columnTitleVersion]: 'Version',
    [columnTitleAttributes]: 'Attributes',
    [upgradeBtnLabel]: 'Upgrade',
    [versionLabel]: 'Version',
    [clearPatchLabel]: 'Clear Patch',
    [inProgressHeader]: 'In Progress',
    [emptyGridPlaceholder]: 'No Compatible Image Found.',
    [nonoperationalFipsMessage]: 'Something went wrong and FIPS is currently nonoperational. ' +
        'Please set up compliance mode again.',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'softwareuploadcancelconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const uploadInProgressHeader = `${prefix}.uploadInProgressHeader`;
export const likeToContinuePrompt = `${prefix}.likeToContinuePrompt`;
export const cancelBtnLabel = `${prefix}.cancelBtnLabel`;
export const okBtnLabel = `${prefix}.okBtnLabel`;

export const ENGLISH = {
    [uploadInProgressHeader]: 'Upload in Progress',
    [likeToContinuePrompt]: 'Would you like to continue?',
    [cancelBtnLabel]: 'Cancel',
    [okBtnLabel]: 'OK',
};========================================================================
  
  ========================================================================


const moduleName = 'ajslegacy';
const componentName = 'updatecardprogress';
const prefix = `${moduleName}.${componentName}`;

export const completeStatusMessage = `${prefix}.completeStatusMessage`;
export const controllerUpdatingToVersionHeader = `${prefix}.controllerUpdatingToVersionHeader`;
export const viewTranscriptTooltipLabel = `${prefix}.viewTranscriptTooltipLabel`;
export const nothingCurrentlyInProgressLabel = `${prefix}.nothingCurrentlyInProgressLabel`;
export const seGroupLeftPluralLabel = `${prefix}.seGroupLeftPluralLabel`;
export const clusterWarmRebootingLabel = `${prefix}.clusterWarmRebootingLabel`;

export const ENGLISH = {
    [completeStatusMessage]: 'Complete',
    [controllerUpdatingToVersionHeader]: 'Controller Updating to {0}',
    [viewTranscriptTooltipLabel]: 'View Transcript',
    [nothingCurrentlyInProgressLabel]: 'Nothing Currently in Progress',
    [seGroupLeftPluralLabel]: '{0, plural, one{Service Engine Group Left} other{Service Engine Groups Left}}',
    [clusterWarmRebootingLabel]: 'Cluster warm rebooting. This may take several minutes.',
};.
  
 

const moduleName = 'vrfcontext';
const componentName = 'bgpprofilelist';
const prefix = `${moduleName}.${componentName}`;

export const editEnableBgpButtonLabel = `${prefix}.editEnableBgpButtonLabel`;
export const bgpPeeringLabel = `${prefix}.bgpPeeringLabel`;
export const bgpPeeringWithVrfLabel = `${prefix}.bgpPeeringWithVrfLabel`;
export const bgpPeeringDisabledLabel = `${prefix}.bgpPeeringDisabledLabel`;
export const bgpPeeringDisabledWithVrfLabel = `${prefix}.bgpPeeringDisabledWithVrfLabel`;
export const addBgpButtonLabel = `${prefix}.addBgpButtonLabel`;

export const ENGLISH = {
    [editEnableBgpButtonLabel]: 'EditEnable BGP',
    [addBgpButtonLabel]: 'Add',
    [bgpPeeringLabel]: 'BGP Peering',
    [bgpPeeringWithVrfLabel]: 'BGP Peering for <strong>{0}<strong> VRF Context',
    [bgpPeeringDisabledLabel]: 'BGP Peering is disabled',
    [bgpPeeringDisabledWithVrfLabel]: 'BGP Peering for <strong>{0}<strong> VRF Context is ' +
        'disabled',
};.
  
 

const moduleName = 'vrfcontext';
const componentName = 'bgpprofiledetails';
const prefix = `${moduleName}.${componentName}`;

export const typeTableHeader = `${prefix}.typeTableHeader`;
export const bgpAsTableHeader = `${prefix}.bgpAsTableHeader`;
export const ipv4PrefixTableHeader = `${prefix}.ipv4PrefixTableHeader`;
export const ipv4PeerTableHeader = `${prefix}.ipv4PeerTableHeader`;
export const ipv6PrefixTableHeader = `${prefix}.ipv6PrefixTableHeader`;
export const ipv6PeerTableHeader = `${prefix}.ipv6PeerTableHeader`;
export const remoteAsTableHeader = `${prefix}.remoteAsTableHeader`;
export const advertiseVipTableHeader = `${prefix}.advertiseVipTableHeader`;
export const advertiseSnatTableHeader = `${prefix}.advertiseSnatTableHeader`;

export const ENGLISH = {
    [typeTableHeader]: 'Type',
    [bgpAsTableHeader]: 'BGP AS',
    [ipv4PrefixTableHeader]: 'IPv4 Prefix',
    [ipv4PeerTableHeader]: 'IPv4 Peer',
    [ipv6PrefixTableHeader]: 'IPv6 Prefix',
    [ipv6PeerTableHeader]: 'IPv6 Peer',
    [remoteAsTableHeader]: 'Remote AS',
    [advertiseVipTableHeader]: 'Advertise VIP',
    [advertiseSnatTableHeader]: 'Advertise SNAT',
};.
  
 

const moduleName = 'vrfcontext';
const componentName = 'deactivatebgppeeringconfirmation';
const prefix = `${moduleName}.${componentName}`;

export const deactivateBgpPeeringConfirmationHeader = `${prefix}.deactivateBgpPeeringConfirmationHeader`;
export const deactivateBgpPeeringConfirmationMesssage = `${prefix}.deactivateBgpPeeringConfirmationMesssage`;
export const deactivateBgpPeeringConfirmationText = `${prefix}.deactivateBgpPeeringConfirmationText`;
export const continueLabel = `${prefix}.continueLabel`;
export const cancelLabel = `${prefix}.cancelLabel`;

export const ENGLISH = {
    [deactivateBgpPeeringConfirmationHeader]: 'Deactivate BGP Peering',
    [deactivateBgpPeeringConfirmationMesssage]: 'BGP Peering will be deactivated for <strong>{0}<strong> and all settings will be removed.',
    [deactivateBgpPeeringConfirmationText]: 'Are you sure you want to continue?',
    [continueLabel]: 'Yes, Continue',
    [cancelLabel]: 'Cancel',
};const prefix = 'vrfcontext';

export const bgpPeerLabel = `${prefix}.bgpPeerLabel`;
export const bgpProfileLabel = `${prefix}.bgpProfileLabel`;
export const routingOptionsLabel = `${prefix}.routingOptionsLabel`;

export const ENGLISH = {
    [bgpPeerLabel]: 'Peer ({0})',
    [bgpProfileLabel]: 'BGP Profile',
    [routingOptionsLabel]: 'Routing Options',
};const moduleName = 'vs';
const componentName = 'viplistpopover';
const prefix = `${moduleName}.${componentName}`;

export const headerPrefix = `${prefix}.headerPrefix`;

export const ENGLISH = {
    [headerPrefix]: 'Addresses {0} ({1})',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'ldapvsvalidationconfig';
const prefix = `${moduleName}.${componentName}`;

export const ssoPolicyLabel = `${prefix}.ssoPolicyLabel`;
export const ssoPolicyInputPlaceholder = `${prefix}.ssoPolicyInputPlaceholder`;
export const createSsoPolicyButtonLabel = `${prefix}.createSsoPolicyButtonLabel`;
export const realmInputLabel = `${prefix}.realmInputLabel`;
export const realmInputPlaceholder = `${prefix}.realmInputPlaceholder`;
export const bindTimeoutInputLabel = `${prefix}.bindTimeoutInputLabel`;
export const bindTimeoutInputPlaceholder = `${prefix}.bindTimeoutInputPlaceholder`;
export const cacheSizeInputLabel = `${prefix}.cacheSizeInputLabel`;
export const cacheSizeInputPlaceholder = `${prefix}.cacheSizeInputPlaceholder`;
export const connectTimeoutInputLabel = `${prefix}.connectTimeoutInputLabel`;
export const connectTimeoutInputPlaceholder = `${prefix}.connectTimeoutInputPlaceholder`;
export const connsPerServerInputLabel = `${prefix}.connsPerServerInputLabel`;
export const connsPerServerInputPlaceholder = `${prefix}.connsPerServerInputPlaceholder`;
export const reconnectTimeoutInputLabel = `${prefix}.reconnectTimeoutInputLabel`;
export const reconnectTimeoutInputPlaceholder = `${prefix}.reconnectTimeoutInputPlaceholder`;
export const requestTimeoutInputLabel = `${prefix}.requestTimeoutInputLabel`;
export const requestTimeoutInputPlaceholder = `${prefix}.requestTimeoutInputPlaceholder`;
export const serversFailoverOnlyLabel = `${prefix}.serversFailoverOnlyLabel`;
export const millisecondsDataLabel = `${prefix}.millisecondsDataLabel`;
export const bytesDataLabel = `${prefix}.bytesDataLabel`;

export const ENGLISH = {
    [ssoPolicyLabel]: 'SSO Policy',
    [ssoPolicyInputPlaceholder]: 'Select SSO Policy',
    [createSsoPolicyButtonLabel]: 'Create SSO Policy',
    [realmInputLabel]: 'Basic Realm',
    [realmInputPlaceholder]: 'Enter Basic Realm',
    [bindTimeoutInputLabel]: 'Bind Timeout',
    [bindTimeoutInputPlaceholder]: 'Enter Bind Timeout',
    [cacheSizeInputLabel]: 'Cache Size',
    [cacheSizeInputPlaceholder]: 'Enter Cache Size',
    [connectTimeoutInputLabel]: 'Connect Timeout',
    [connectTimeoutInputPlaceholder]: 'Enter Connect Timeout',
    [connsPerServerInputLabel]: 'Connections Per Server',
    [connsPerServerInputPlaceholder]: 'Enter Connections Per Server',
    [reconnectTimeoutInputLabel]: 'Reconnect Timeout',
    [reconnectTimeoutInputPlaceholder]: 'Enter Reconnect Timeout',
    [requestTimeoutInputLabel]: 'Request Timeout',
    [requestTimeoutInputPlaceholder]: 'Enter Request Timeout',
    [serversFailoverOnlyLabel]: 'Servers Failover Only',
    [millisecondsDataLabel]: 'milliseconds',
    [bytesDataLabel]: 'bytes',
};const moduleName = 'ajslegacy';
const componentName = 'updatemodal';
const prefix = `${moduleName}.${componentName}`;

export const confirmBtnLabel = `${prefix}.confirmBtnLabel`;
export const continueBtnLabel = `${prefix}.continueBtnLabel`;
export const upgradeCheckboxLabel = `${prefix}.upgradeCheckboxLabel`;
export const rollbackCheckboxLabel = `${prefix}.rollbackCheckboxLabel`;
export const clearPatchHeader = `${prefix}.clearPatchHeader`;
export const upgradeHeader = `${prefix}.upgradeHeader`;
export const rollbackVersionHeader = `${prefix}.rollbackVersionHeader`;
export const seGroupPatchVersionLabel = `${prefix}.seGroupPatchVersionLabel`;
export const actionTakeLabel = `${prefix}.actionTakeLabel`;
export const recommendCheckMessage = `${prefix}.recommendCheckMessage`;
export const waitCheckMessage = `${prefix}.waitCheckMessage`;
export const takeOneMinuteMessage = `${prefix}.takeOneMinuteMessage`;
export const wentWrongChecksMessage = `${prefix}.wentWrongChecksMessage`;
export const issueCameUpMessage = `${prefix}.issueCameUpMessage`;
export const continueConfirmMessage = `${prefix}.continueConfirmMessage`;

export const ENGLISH = {
    [confirmBtnLabel]: 'Confirm',
    [continueBtnLabel]: 'Continue',
    [upgradeCheckboxLabel]: 'Upgrade All Service Engine Groups',
    [rollbackCheckboxLabel]: 'Rollback All Service Engine Groups',
    [clearPatchHeader]: 'Clear {0} Patch',
    [upgradeHeader]: '{0} Upgrade',
    [rollbackVersionHeader]: 'Rollback to Version {0}',
    [seGroupPatchVersionLabel]: 'Service Engine Group Patch Version',
    [actionTakeLabel]: 'Action to Take on SEG Update Failure',
    [recommendCheckMessage]: 'Here are a couple things we recommend you check before upgrading:',
    [waitCheckMessage]: 'Please wait while the system completes final checks.',
    [takeOneMinuteMessage]: 'This may take up to one minute.',
    [wentWrongChecksMessage]: 'Something went wrong with the checks.',
    [issueCameUpMessage]: 'The following issue came up while preparing to update:',
    [continueConfirmMessage]: 'Would you like to continue?',
};const moduleName = 'vs';
const componentName = 'vslistvirtualhostingcell';
const prefix = `${moduleName}.${componentName}`;

export const parentLabel = `${prefix}.parentLabel`;
export const childLabel = `${prefix}.childLabel`;
export const enhancedVHLabel = `${prefix}.enhancedVHLabel`;
export const sniVHLabel = `${prefix}.sniVHLabel`;

export const ENGLISH = {
    [parentLabel]: 'Parent',
    [childLabel]: 'Child',
    [enhancedVHLabel]: 'Enhanced Virtual Hosting',
    [sniVHLabel]: 'SNI',
};undefined SecurityModule
 


  
  
  
 

const moduleName = 'security';
const componentName = 'jwtvsvalidationconfig';
const prefix = `${moduleName}.${componentName}`;

export const ssoPolicyLabel = `${prefix}.ssoPolicyLabel`;
export const ssoPolicyInputPlaceholder = `${prefix}.ssoPolicyInputPlaceholder`;
export const createSsoPolicyButtonLabel = `${prefix}.createSsoPolicyButtonLabel`;
export const audienceInputLabel = `${prefix}.audienceInputLabel`;
export const audienceInputPlaceholder = `${prefix}.audienceInputPlaceholder`;
export const tokenLocationLabel = `${prefix}.tokenLocationLabel`;
export const authorizationHeaderLabel = `${prefix}.authorizationHeaderLabel`;
export const urlQueryLabel = `${prefix}.urlQueryLabel`;
export const tokenNameLabel = `${prefix}.tokenNameLabel`;

export const ENGLISH = {
    [ssoPolicyLabel]: 'SSO Policy',
    [ssoPolicyInputPlaceholder]: 'Select SSO Policy',
    [createSsoPolicyButtonLabel]: 'Create SSO Policy',
    [audienceInputLabel]: 'Audience',
    [audienceInputPlaceholder]: 'Enter Audience',
    [tokenLocationLabel]: 'Token Location',
    [authorizationHeaderLabel]: 'Authorization Header',
    [urlQueryLabel]: 'URL Query',
    [tokenNameLabel]: 'Token name',
};const moduleName = 'vs';
const componentName = 'vsviplist';
const prefix = `${moduleName}.${componentName}`;

export const columnTitleName = `${prefix}.columnTitleName`;
export const columnTitleAddress = `${prefix}.columnTitleAddress`;
export const columnTitleVirtualServicesCount = `${prefix}.columnTitleVirtualServicesCount`;
export const virtualServicesHeader = `${prefix}.virtualServicesHeader`;
export const emptyDataLabel = `${prefix}.emptyDataLabel`;
export const allVipsOptionLabel = `${prefix}.allVipsOptionLabel`;
export const unusedVipsOptionLabel = `${prefix}.unusedVipsOptionLabel`;
export const inUseVipsOptionLabel = `${prefix}.inUseVipsOptionLabel`;
export const showPrependLabel = `${prefix}.showPrependLabel`;

export const ENGLISH = {
    [columnTitleName]: 'Name',
    [columnTitleAddress]: 'Address',
    [columnTitleVirtualServicesCount]: '# Virtual Services',
    [virtualServicesHeader]: 'Virtual Services',
    [emptyDataLabel]: 'None',
    [allVipsOptionLabel]: 'All VIPs',
    [unusedVipsOptionLabel]: 'Unused VIPs',
    [inUseVipsOptionLabel]: 'InUse VIPs',
    [showPrependLabel]: 'Show',
};const moduleName = 'vs';
const componentName = 'vsenhancedvhchildhosts';
const prefix = `${moduleName}.${componentName}`;

export const domainLabel = `${prefix}.domainLabel`;
export const hostInputLabel = `${prefix}.hostInputLabel`;
export const addMatchButtonLabel = `${prefix}.addMatchButtonLabel`;
export const addDomainButtonLabel = `${prefix}.addDomainButtonLabel`;
export const removeDomainTitle = `${prefix}.removeDomainTitle`;
export const hostInputPlaceholder = `${prefix}.hostInputPlaceholder`;

export const ENGLISH = {
    [domainLabel]: 'Domain',
    [hostInputLabel]: 'Host',
    [addMatchButtonLabel]: 'Add Match',
    [addDomainButtonLabel]: 'Add Domain',
    [removeDomainTitle]: 'Remove Domain',
    [hostInputPlaceholder]: 'Host',
};========================================================================
  
  ========================================================================


const moduleName = 'vs';
const componentName = 'virtualservicecreatebasiccontroller';
const prefix = `${moduleName}.${componentName}`;

export const listColumnHeaderVirtualMachineName = `${prefix}.listColumnHeaderVirtualMachineName`;
export const listColumnHeaderIPAddress = `${prefix}.listColumnHeaderIPAddress`;
export const listColumnHeaderMacAddress = `${prefix}.listColumnHeaderMacAddress`;
export const addServersActionTitle = `${prefix}.addServersActionTitle`;
export const listColumnHeaderServerName = `${prefix}.listColumnHeaderServerName`;
export const listColumnHeaderResolveServerByDns = `${prefix}.listColumnHeaderResolveServerByDns`;
export const listColumnHeaderNetwork = `${prefix}.listColumnHeaderNetwork`;
export const removeActionTitle = `${prefix}.removeActionTitle`;
export const serverAlreadyPresentErrorMessage = `${prefix}.serverAlreadyPresentErrorMessage`;
export const maxServersOverflowErrorMessage = `${prefix}.maxServersOverflowErrorMessage`;
export const maxIpAddressesOverflowErrorMessage = `${prefix}.maxIpAddressesOverflowErrorMessage`;
export const newVirtualServiceHeader = `${prefix}.newVirtualServiceHeader`;
export const selectCloudHeader = `${prefix}.selectCloudHeader`;
export const cloudsHeader = `${prefix}.cloudsHeader`;
export const selectVrfContextHeader = `${prefix}.selectVrfContextHeader`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const applicationTypeInputLabel = `${prefix}.applicationTypeInputLabel`;
export const servicePortInputLabel = `${prefix}.servicePortInputLabel`;
export const servicePortInputPlaceholder = `${prefix}.servicePortInputPlaceholder`;
export const certificateInputLabel = `${prefix}.certificateInputLabel`;
export const certificateInputPlaceholder = `${prefix}.certificateInputPlaceholder`;
export const selectServersByNetworkHeader = `${prefix}.selectServersByNetworkHeader`;
export const selectNetworkInputPlaceholder = `${prefix}.selectNetworkInputPlaceholder`;
export const addServersHeader = `${prefix}.addServersHeader`;
export const selectServersLabel = `${prefix}.selectServersLabel`;
export const ipAddressRangeDnsRadioInputLabel = `${prefix}.ipAddressRangeDnsRadioInputLabel`;
export const ipGroupRadioInputLabel = `${prefix}.ipGroupRadioInputLabel`;
export const securityGroupsRadioInputLabel = `${prefix}.securityGroupsRadioInputLabel`;
export const azureScaleSetRadioInputLabel = `${prefix}.azureScaleSetRadioInputLabel`;
export const autoScalingGroupsRadioInputLabel = `${prefix}.autoScalingGroupsRadioInputLabel`;
export const selectServersByNetworkButtonLabel = `${prefix}.selectServersByNetworkButtonLabel`;
export const ipGroupInputLabel = `${prefix}.ipGroupInputLabel`;
export const ipGroupInputPlaceholder = `${prefix}.ipGroupInputPlaceholder`;
export const nsxSecurityGroupsInputLabel = `${prefix}.nsxSecurityGroupsInputLabel`;
export const nsxSecurityGroupsInputPlaceholder = `${prefix}.nsxSecurityGroupsInputPlaceholder`;
export const autoScalingGroupsInputLabel = `${prefix}.autoScalingGroupsInputLabel`;
export const autoScalingGroupsInputPlaceholder = `${prefix}.autoScalingGroupsInputPlaceholder`;
export const serversHeader = `${prefix}.serversHeader`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const nextButtonLabel = `${prefix}.nextButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const vsVipInputLabel = `${prefix}.vsVipInputLabel`;
export const vsVipInputPlaceholder = `${prefix}.vsVipInputPlaceholder`;
export const createVsVipButtonLabel = `${prefix}.createVsVipButtonLabel`;

export const ENGLISH = {
    [listColumnHeaderVirtualMachineName]: 'Virtual Machine Name',
    [listColumnHeaderIPAddress]: 'IP Address',
    [listColumnHeaderMacAddress]: 'MAC Address',
    [addServersActionTitle]: 'Add Servers',
    [listColumnHeaderServerName]: 'Server Name',
    [listColumnHeaderResolveServerByDns]: 'Resolve by DNS',
    [listColumnHeaderNetwork]: 'Network',
    [removeActionTitle]: 'Remove',
    [serverAlreadyPresentErrorMessage]: 'Can\'t add server {0} to the list because server with the same IP and port combination is already present in a list.',
    [maxServersOverflowErrorMessage]: 'Can\'t add more servers, up to {0} is supported.',
    [maxIpAddressesOverflowErrorMessage]: 'Too many ({0}) in IP group. Only {1} addresses supported.',
    [newVirtualServiceHeader]: 'New Virtual Service: <strong>{0}<strong>',
    [selectCloudHeader]: 'Select Cloud',
    [cloudsHeader]: 'Clouds',
    [selectVrfContextHeader]: 'Select VRF Context',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Virtual Service Name',
    [applicationTypeInputLabel]: 'Application Type',
    [servicePortInputLabel]: 'Service',
    [servicePortInputPlaceholder]: 'Port',
    [certificateInputLabel]: 'Certificate',
    [certificateInputPlaceholder]: 'Select',
    [selectServersByNetworkHeader]: 'Select Servers by Network',
    [selectNetworkInputPlaceholder]: 'Select a Network',
    [addServersHeader]: 'Add Servers',
    [selectServersLabel]: 'Select Servers',
    [ipAddressRangeDnsRadioInputLabel]: 'IP Address, Range, or DNS Name',
    [ipGroupRadioInputLabel]: 'IP Group',
    [securityGroupsRadioInputLabel]: 'Security Groups',
    [azureScaleSetRadioInputLabel]: 'Azure Scale Set',
    [autoScalingGroupsRadioInputLabel]: 'Auto Scaling groups',
    [selectServersByNetworkButtonLabel]: 'Select Servers by Network',
    [ipGroupInputLabel]: 'IP Group',
    [ipGroupInputPlaceholder]: 'Select IP Group',
    [nsxSecurityGroupsInputLabel]: 'NSX Security Groups',
    [nsxSecurityGroupsInputPlaceholder]: 'Select Security Group',
    [autoScalingGroupsInputLabel]: 'Auto Scaling groups',
    [autoScalingGroupsInputPlaceholder]: 'Select Auto Scaling groups',
    [vsVipInputLabel]: 'VS VIP',
    [vsVipInputPlaceholder]: 'Select VS VIP',
    [createVsVipButtonLabel]: 'Create VS VIP',
    [serversHeader]: 'Servers',
    [cancelButtonLabel]: 'Cancel',
    [nextButtonLabel]: 'Next',
    [saveButtonLabel]: 'Save',
};========================================================================
  
  ========================================================================


const moduleName = 'waf';
const componentName = 'wafapplicationlearning';
const prefix = `${moduleName}.${componentName}`;

export const learningGroupRequiredMessage = `${prefix}.learningGroupRequiredMessage`;
export const createLearningGroupButtonLabel = `${prefix}.createLearningGroupButtonLabel`;
export const wafLearningEnableLabel = `${prefix}.wafLearningEnableLabel`;
export const samplingPercentInputLabel = `${prefix}.samplingPercentInputLabel`;
export const autoRuleUpdatesCheckboxLabel = `${prefix}.autoRuleUpdatesCheckboxLabel`;
export const confidenceLevelInputLabel = `${prefix}.confidenceLevelInputLabel`;
export const confidenceLevelInputPlaceholder = `${prefix}.confidenceLevelInputPlaceholder`;
export const updateIntervalInputLabel = `${prefix}.updateIntervalInputLabel`;
export const minutesInnerText = `${prefix}.minutesInnerText`;
export const maxParametersInputLabel = `${prefix}.maxParametersInputLabel`;
export const minHitsToLearnInputLabel = `${prefix}.minHitsToLearnInputLabel`;
export const perUriLearningCheckboxLabel = `${prefix}.perUriLearningCheckboxLabel`;
export const maxUriInputLabel = `${prefix}.maxUriInputLabel`;

export const ENGLISH = {
    [learningGroupRequiredMessage]: 'A Learning Group is required for WAF Learning',
    [createLearningGroupButtonLabel]: 'Create Learning Group',
    [wafLearningEnableLabel]: 'WAF Learning {0}',
    [samplingPercentInputLabel]: 'Sampling',
    [autoRuleUpdatesCheckboxLabel]: 'Enable Auto Rule Updates',
    [confidenceLevelInputLabel]: 'Auto Promote Rules w Confidence',
    [confidenceLevelInputPlaceholder]: 'Confidence Level',
    [updateIntervalInputLabel]: 'Learning Interval',
    [minutesInnerText]: 'min',
    [maxParametersInputLabel]: 'Max Parameters',
    [minHitsToLearnInputLabel]: 'Min Hits to Learn',
    [perUriLearningCheckboxLabel]: 'Per URI Learning',
    [maxUriInputLabel]: 'Max URI',
};const prefix = 'vs';

export const vsVipModalBreadcrumbTitle = `${prefix}.vsVipModalBreadcrumbTitle`;
export const rbacKeyValueCountLabel = `${prefix}.rbacKeyValueCountLabel`;
export const placementNetworkModalBreadcrumbTitle = `${prefix}.placementNetworkModalBreadcrumbTitle`;

export const ENGLISH = {
    [vsVipModalBreadcrumbTitle]: 'VS VIP',
    [rbacKeyValueCountLabel]: '{0} key(s), {1} value(s)',
    [placementNetworkModalBreadcrumbTitle]: 'Placement Network',
};const prefix = 'waf';

export const wafExcludeListEntryBreadcrumbTitle = `${prefix}.wafExcludeListEntryBreadcrumbTitle`;
export const addExceptionModalHeader = `${prefix}.addExceptionModalHeader`;
export const editExceptionModalHeader = `${prefix}.editExceptionModalHeader`;
export const createPreCrsGroupModalHeader = `${prefix}.createPreCrsGroupModalHeader`;
export const editPreCrsGroupModalHeader = `${prefix}.editPreCrsGroupModalHeader`;
export const createPostCrsGroupModalHeader = `${prefix}.createPostCrsGroupModalHeader`;
export const editPostCrsGroupModalHeader = `${prefix}.editPostCrsGroupModalHeader`;
export const editCrsGroupModalHeader = `${prefix}.editCrsGroupModalHeader`;
export const createPreCrsRuleModalHeader = `${prefix}.createPreCrsRuleModalHeader`;
export const editPreCrsRuleModalHeader = `${prefix}.editPreCrsRuleModalHeader`;
export const createPostCrsRuleModalHeader = `${prefix}.createPostCrsRuleModalHeader`;
export const editPostCrsRuleModalHeader = `${prefix}.editPostCrsRuleModalHeader`;
export const editCrsRuleModalHeader = `${prefix}.editCrsRuleModalHeader`;
export const wafGroupBreadcrumbTitle = `${prefix}.wafGroupBreadcrumbTitle`;
export const wafRuleBreadcrumbTitle = `${prefix}.wafRuleBreadcrumbTitle`;
export const wafProfileModalBreadcrumbTitle = `${prefix}.wafProfileModalBreadcrumbTitle`;
export const wafDataFileModalBreadcrumbTitle = `${prefix}.wafDataFileModalBreadcrumbTitle`;

export const ENGLISH = {
    [addExceptionModalHeader]: 'Add Exception',
    [editExceptionModalHeader]: 'Edit Exception',
    [wafExcludeListEntryBreadcrumbTitle]: 'Exception',
    [createPreCrsGroupModalHeader]: 'Create PreCRS Group: {0}',
    [editPreCrsGroupModalHeader]: 'Edit PreCRS Group: {0}',
    [createPostCrsGroupModalHeader]: 'Create PostCRS Group: {0}',
    [editPostCrsGroupModalHeader]: 'Edit PostCRS Group: {0}',
    [editCrsGroupModalHeader]: 'Edit CRS Group: {0}',
    [createPreCrsRuleModalHeader]: 'Create PreCRS Rule: {0}',
    [editPreCrsRuleModalHeader]: 'Edit PreCRS Rule: {0}',
    [createPostCrsRuleModalHeader]: 'Create PostCRS Rule: {0}',
    [editPostCrsRuleModalHeader]: 'Edit PostCRS Rule: {0}',
    [editCrsRuleModalHeader]: 'Edit CRS Rule: {0}',
    [wafGroupBreadcrumbTitle]: 'CRS Group',
    [wafRuleBreadcrumbTitle]: 'CRS Rule',
    [wafProfileModalBreadcrumbTitle]: 'WAF Profile',
    [wafDataFileModalBreadcrumbTitle]: 'File',
};========================================================================
  
  ========================================================================


const moduleName = 'waf';
const componentName = 'waflearningdatamodal';
const prefix = `${moduleName}.${componentName}`;

export const wafLearningDataHeader = `${prefix}.wafLearningDataHeader`;
export const doneSubmitModalLabel = `${prefix}.doneSubmitModalLabel`;

export const ENGLISH = {
    [wafLearningDataHeader]: 'WAF Learning Data: {0}',
    [doneSubmitModalLabel]: 'Done',
};========================================================================
  
  ========================================================================


const moduleName = 'vs';
const componentName = 'virtualservicecreatecontroller';
const prefix = `${moduleName}.${componentName}`;

export const tabLabelSettings = `${prefix}.tabLabelSettings`;
export const tabLabelPolicies = `${prefix}.tabLabelPolicies`;
export const tabLabelAnalytics = `${prefix}.tabLabelAnalytics`;
export const tabLabelAdvanced = `${prefix}.tabLabelAdvanced`;
export const discardPolicyChangesMessage = `${prefix}.discardPolicyChangesMessage`;
export const discardClientFilterChangesMessage = `${prefix}.discardClientFilterChangesMessage`;
export const tabLabelStaticDnsRecords = `${prefix}.tabLabelStaticDnsRecords`;
export const modalHeaderEdit = `${prefix}.modalHeaderEdit`;
export const modalHeaderNew = `${prefix}.modalHeaderNew`;
export const selectCloudHeader = `${prefix}.selectCloudHeader`;
export const cloudsHeader = `${prefix}.cloudsHeader`;
export const selectVrfContextHeader = `${prefix}.selectVrfContextHeader`;
export const selectPoolMessage = `${prefix}.selectPoolMessage`;
export const nameInputLabel = `${prefix}.nameInputLabel`;
export const nameInputPlaceholder = `${prefix}.nameInputPlaceholder`;
export const enabledSwitchLabel = `${prefix}.enabledSwitchLabel`;
export const trafficEnabledCheckboxLabel = `${prefix}.trafficEnabledCheckboxLabel`;
export const virtualHostingVsCheckboxLabel = `${prefix}.virtualHostingVsCheckboxLabel`;
export const vhvsParentButtonLabel = `${prefix}.vhvsParentButtonLabel`;
export const vhvsChildButtonLabel = `${prefix}.vhvsChildButtonLabel`;
export const virtualHostingTypeInputLabel = `${prefix}.virtualHostingTypeInputLabel`;
export const roleBaseAccessControlHeader = `${prefix}.roleBaseAccessControlHeader`;
export const vipAddressHeader = `${prefix}.vipAddressHeader`;
export const addressHeader = `${prefix}.addressHeader`;
export const virtualHostingParentInputLabel = `${prefix}.virtualHostingParentInputLabel`;
export const virtualHostingParentInputPlaceholder = `${prefix}.virtualHostingParentInputPlaceholder`;
export const domainNameInputLabel = `${prefix}.domainNameInputLabel`;
export const virtualHostingMatchCriteriaHeader = `${prefix}.virtualHostingMatchCriteriaHeader`;
export const profilesHeader = `${prefix}.profilesHeader`;
export const tcpUdpProfileInputLabel = `${prefix}.tcpUdpProfileInputLabel`;
export const createTcpUdpProfileInputLabel = `${prefix}.createTcpUdpProfileInputLabel`;
export const selectDropdownPlaceholder = `${prefix}.selectDropdownPlaceholder`;
export const applicationProfileInputLabel = `${prefix}.applicationProfileInputLabel`;
export const createApplicationProfileInputLabel = `${prefix}.createApplicationProfileInputLabel`;
export const wafPolicyInputLabel = `${prefix}.wafPolicyInputLabel`;
export const createWafPolicyInputLabel = `${prefix}.createWafPolicyInputLabel`;
export const wafPolicyInputPlaceholder = `${prefix}.wafPolicyInputPlaceholder`;
export const icapProfileInputLabel = `${prefix}.icapProfileInputLabel`;
export const createIcapProfileInputLabel = `${prefix}.createIcapProfileInputLabel`;
export const icapProfileInputPlaceholder = `${prefix}.icapProfileInputPlaceholder`;
export const errorPageProfileInputLabel = `${prefix}.errorPageProfileInputLabel`;
export const createErrorPageProfileInputLabel = `${prefix}.createErrorPageProfileInputLabel`;
export const errorPageProfileInputPlaceholder = `${prefix}.errorPageProfileInputPlaceholder`;
export const servicePortHeader = `${prefix}.servicePortHeader`;
export const switchToAdvancedButtonLabel = `${prefix}.switchToAdvancedButtonLabel`;
export const switchToBasicButtonLabel = `${prefix}.switchToBasicButtonLabel`;
export const virtualServiceListenTrafficMessage = `${prefix}.virtualServiceListenTrafficMessage`;
export const servicesLabel = `${prefix}.servicesLabel`;
export const servicePortInputPlaceholder = `${prefix}.servicePortInputPlaceholder`;
export const servicePortMinInputPlaceholder = `${prefix}.servicePortMinInputPlaceholder`;
export const servicePortToLabel = `${prefix}.servicePortToLabel`;
export const servicePortMaxInputPlaceholder = `${prefix}.servicePortMaxInputPlaceholder`;
export const overrideTcpUdpCheckboxLabel = `${prefix}.overrideTcpUdpCheckboxLabel`;
export const createTcpUdpInputLabel = `${prefix}.createTcpUdpInputLabel`;
export const addPortButtonLabel = `${prefix}.addPortButtonLabel`;
export const poolHeader = `${prefix}.poolHeader`;
export const poolInputLabel = `${prefix}.poolInputLabel`;
export const poolGroupInputLabel = `${prefix}.poolGroupInputLabel`;
export const createPoolInputLabel = `${prefix}.createPoolInputLabel`;
export const poolInputPlaceholder = `${prefix}.poolInputPlaceholder`;
export const createPoolGroupInputLabel = `${prefix}.createPoolGroupInputLabel`;
export const poolGroupInputPlaceholder = `${prefix}.poolGroupInputPlaceholder`;
export const ignoreNetworkReachabilityMessage = `${prefix}.ignoreNetworkReachabilityMessage`;
export const otherSettingsHeader = `${prefix}.otherSettingsHeader`;
export const descriptionInputLabel = `${prefix}.descriptionInputLabel`;
export const sslSettingsHeader = `${prefix}.sslSettingsHeader`;
export const sslProfileInputLabel = `${prefix}.sslProfileInputLabel`;
export const sslCertificateInputLabel = `${prefix}.sslCertificateInputLabel`;
export const sslProfileInputPlaceholder = `${prefix}.sslProfileInputPlaceholder`;
export const tabLabelNetworkSecurity = `${prefix}.tabLabelNetworkSecurity`;
export const tabLabelHttpSecurity = `${prefix}.tabLabelHttpSecurity`;
export const httpPolicySetInputLabel = `${prefix}.httpPolicySetInputLabel`;
export const httpPolicySetInputPlaceholder = `${prefix}.httpPolicySetInputPlaceholder`;
export const tabLabelHttpRequest = `${prefix}.tabLabelHttpRequest`;
export const tabLabelHttpResponse = `${prefix}.tabLabelHttpResponse`;
export const tabLabelDnsPolicy = `${prefix}.tabLabelDnsPolicy`;
export const dnsPoliciesInputLabel = `${prefix}.dnsPoliciesInputLabel`;
export const dnsPoliciesInputPlaceholder = `${prefix}.dnsPoliciesInputPlaceholder`;
export const tabLabelTopologyPolicy = `${prefix}.tabLabelTopologyPolicy`;
export const topologyPolicyInputLabel = `${prefix}.topologyPolicyInputLabel`;
export const topologyPolicyInputPlaceholder = `${prefix}.topologyPolicyInputPlaceholder`;
export const tabLabelDataScripts = `${prefix}.tabLabelDataScripts`;
export const tabLabelAccess = `${prefix}.tabLabelAccess`;
export const analyticsProfileInputLabel = `${prefix}.analyticsProfileInputLabel`;
export const metricsRealtimeUpdateInputLabel = `${prefix}.metricsRealtimeUpdateInputLabel`;
export const realTimeMetricsCheckboxLabel = `${prefix}.realTimeMetricsCheckboxLabel`;
export const metricsRealtimeUpdateInputPlaceholder = `${prefix}.metricsRealtimeUpdateInputPlaceholder`;
export const metricsRealtimeUpdateMinutesInnerText = `${prefix}.metricsRealtimeUpdateMinutesInnerText`;
export const clientInsightsHeader = `${prefix}.clientInsightsHeader`;
export const clientInsightsInputLabel = `${prefix}.clientInsightsInputLabel`;
export const includeUrlInputLabel = `${prefix}.includeUrlInputLabel`;
export const excludeUrlInputLabel = `${prefix}.excludeUrlInputLabel`;
export const includeUrlInputPlaceholder = `${prefix}.includeUrlInputPlaceholder`;
export const excludeUrlInputPlaceholder = `${prefix}.excludeUrlInputPlaceholder`;
export const clientIpAddressInputLabel = `${prefix}.clientIpAddressInputLabel`;
export const clientIpAddressInputPlaceholder = `${prefix}.clientIpAddressInputPlaceholder`;
export const performanceLimitSettingsHeader = `${prefix}.performanceLimitSettingsHeader`;
export const performanceLimitCheckboxLabel = `${prefix}.performanceLimitCheckboxLabel`;
export const maxThroughputInputLabel = `${prefix}.maxThroughputInputLabel`;
export const maxThroughputInputPlaceholder = `${prefix}.maxThroughputInputPlaceholder`;
export const maxConcurrentConnectionsInputLabel = `${prefix}.maxConcurrentConnectionsInputLabel`;
export const maxConcurrentConnectionsInputPlaceholder = `${prefix}.maxConcurrentConnectionsInputPlaceholder`;
export const qualityOfServiceHeader = `${prefix}.qualityOfServiceHeader`;
export const weightInputLabel = `${prefix}.weightInputLabel`;
export const fairnessInputLabel = `${prefix}.fairnessInputLabel`;
export const throughputAndDelayFairnessInputLabel = `${prefix}.throughputAndDelayFairnessInputLabel`;
export const throughputFairnessInputLabel = `${prefix}.throughputFairnessInputLabel`;
export const httpBasicAuthenticationHeader = `${prefix}.httpBasicAuthenticationHeader`;
export const useHttpBasicAuthenticationMessage = `${prefix}.useHttpBasicAuthenticationMessage`;
export const enableHttpBasicAuthenticationCheckboxLabel = `${prefix}.enableHttpBasicAuthenticationCheckboxLabel`;
export const basicRealmInputLabel = `${prefix}.basicRealmInputLabel`;
export const authProfileInputLabel = `${prefix}.authProfileInputLabel`;
export const createAuthProfileInputLabel = `${prefix}.createAuthProfileInputLabel`;
export const serverNetworkProfileInputLabel = `${prefix}.serverNetworkProfileInputLabel`;
export const serverNetworkProfileInputPlaceholder = `${prefix}.serverNetworkProfileInputPlaceholder`;
export const createServerNetworkProfileInputLabel = `${prefix}.createServerNetworkProfileInputLabel`;
export const autoGatewayCheckboxLabel = `${prefix}.autoGatewayCheckboxLabel`;
export const useVipAsSnatCheckboxLabel = `${prefix}.useVipAsSnatCheckboxLabel`;
export const advertiseVipViaBgpCheckboxLabel = `${prefix}.advertiseVipViaBgpCheckboxLabel`;
export const advertiseSnatViaBgpCheckboxLabel = `${prefix}.advertiseSnatViaBgpCheckboxLabel`;
export const hostNameTranslationInputLabel = `${prefix}.hostNameTranslationInputLabel`;
export const seGroupInputLabel = `${prefix}.seGroupInputLabel`;
export const activeStandbySeTagInputLabel = `${prefix}.activeStandbySeTagInputLabel`;
export const snatIpAddressInputLabel = `${prefix}.snatIpAddressInputLabel`;
export const removeListeningPortOnVsDownCheckboxLabel = `${prefix}.removeListeningPortOnVsDownCheckboxLabel`;
export const trafficCloneProfileInputLabel = `${prefix}.trafficCloneProfileInputLabel`;
export const trafficCloneProfileInputPlaceholder = `${prefix}.trafficCloneProfileInputPlaceholder`;
export const scaleoutEcmpCheckboxLabel = `${prefix}.scaleoutEcmpCheckboxLabel`;
export const cancelButtonLabel = `${prefix}.cancelButtonLabel`;
export const saveRuleButtonLabel = `${prefix}.saveRuleButtonLabel`;
export const saveDataScriptButtonLabel = `${prefix}.saveDataScriptButtonLabel`;
export const saveFilterButtonLabel = `${prefix}.saveFilterButtonLabel`;
export const nextButtonLabel = `${prefix}.nextButtonLabel`;
export const saveButtonLabel = `${prefix}.saveButtonLabel`;
export const previousButtonLabel = `${prefix}.previousButtonLabel`;
export const botDetectionPolicyInputLabel = `${prefix}.botDetectionPolicyInputLabel`;
export const botDetectionPolicyInputPlaceholder = `${prefix}.botDetectionPolicyInputPlaceholder`;
export const vsVipInputLabel = `${prefix}.vsVipInputLabel`;
export const vsVipInputPlaceholder = `${prefix}.vsVipInputPlaceholder`;
export const createVsVipButtonLabel = `${prefix}.createVsVipButtonLabel`;
export const useAsHorizonPrimaryTunnelProtocolPortsLabel = `${prefix}.useAsHorizonPrimaryTunnelProtocolPortsLabel`;
export const overrideApplicationProfileLabel = `${prefix}.overrideApplicationProfileLabel`;
export const overrideApplicationProfileDropdownPlaceholder = `${prefix}.overrideApplicationProfileDropdownPlaceholder`;

export const ENGLISH = {
    [tabLabelSettings]: 'Settings',
    [tabLabelPolicies]: 'Policies',
    [tabLabelAnalytics]: 'Analytics',
    [tabLabelAdvanced]: 'Advanced',
    [discardPolicyChangesMessage]: 'Discard policy changes?',
    [discardClientFilterChangesMessage]: 'Discard Client Filter changes?',
    [tabLabelStaticDnsRecords]: 'Static DNS Records',
    [modalHeaderEdit]: 'Edit Virtual Service: {0}',
    [modalHeaderNew]: 'New Virtual Service: {0}',
    [selectCloudHeader]: 'Select Cloud',
    [cloudsHeader]: 'Clouds',
    [selectVrfContextHeader]: 'Select VRF Context',
    [selectPoolMessage]: 'You may want to select a pool.',
    [nameInputLabel]: 'Name',
    [nameInputPlaceholder]: 'Virtual Service Name',
    [enabledSwitchLabel]: 'Enabled',
    [trafficEnabledCheckboxLabel]: 'Traffic Enabled',
    [virtualHostingVsCheckboxLabel]: 'Virtual Hosting VS',
    [vhvsParentButtonLabel]: 'Parent',
    [vhvsChildButtonLabel]: 'Child',
    [virtualHostingTypeInputLabel]: 'Virtual Hosting Type',
    [roleBaseAccessControlHeader]: 'RoleBased Access Control (RBAC)',
    [vipAddressHeader]: 'VIP Address',
    [addressHeader]: 'Address',
    [virtualHostingParentInputLabel]: 'Virtual Hosting Parent',
    [virtualHostingParentInputPlaceholder]: 'Select VH Parent',
    [domainNameInputLabel]: 'Domain Name',
    [virtualHostingMatchCriteriaHeader]: 'Virtual Hosting Match Criteria',
    [profilesHeader]: 'Profiles',
    [tcpUdpProfileInputLabel]: 'TCPUDP Profile',
    [createTcpUdpProfileInputLabel]: 'Create TCPUDP Profile',
    [selectDropdownPlaceholder]: 'Select',
    [applicationProfileInputLabel]: 'Application Profile',
    [createApplicationProfileInputLabel]: 'Create Application Profile',
    [wafPolicyInputLabel]: 'WAF Policy',
    [createWafPolicyInputLabel]: 'Create WAF Policy',
    [wafPolicyInputPlaceholder]: 'Select WAF Policy',
    [icapProfileInputLabel]: 'ICAP Profile',
    [createIcapProfileInputLabel]: 'Create ICAP Profile',
    [icapProfileInputPlaceholder]: 'Select ICAP Profile',
    [errorPageProfileInputLabel]: 'Error Page Profile',
    [createErrorPageProfileInputLabel]: 'Create Error Page Profile',
    [errorPageProfileInputPlaceholder]: 'Select Error Page Profile',
    [servicePortHeader]: 'Service Port',
    [switchToAdvancedButtonLabel]: 'Switch to Advanced',
    [switchToBasicButtonLabel]: 'Switch to Basic',
    [virtualServiceListenTrafficMessage]: 'The Virtual Service will listen to these service ports for incoming traffic',
    [servicesLabel]: 'Services',
    [servicePortInputPlaceholder]: 'Port',
    [servicePortMinInputPlaceholder]: 'Port Min',
    [servicePortToLabel]: 'to',
    [servicePortMaxInputPlaceholder]: 'Port Max',
    [overrideTcpUdpCheckboxLabel]: 'Override TCPUDP',
    [createTcpUdpInputLabel]: 'Create TCPUDP Profile',
    [addPortButtonLabel]: '+ Add Port',
    [poolHeader]: 'Pool',
    [poolInputLabel]: 'Pool',
    [poolGroupInputLabel]: 'Pool Group',
    [createPoolInputLabel]: 'Create Pool',
    [poolInputPlaceholder]: 'Select a Pool',
    [createPoolGroupInputLabel]: 'Create Pool Group',
    [poolGroupInputPlaceholder]: 'Select a Pool Group',
    [ignoreNetworkReachabilityMessage]: 'Ignore network reachability constraints for the server pool',
    [otherSettingsHeader]: 'Other Settings',
    [descriptionInputLabel]: 'Description',
    [sslSettingsHeader]: 'SSL Settings',
    [sslProfileInputLabel]: 'SSL Profile',
    [sslCertificateInputLabel]: 'SSL Certificate',
    [sslProfileInputPlaceholder]: 'Use Parent Profile',
    [tabLabelNetworkSecurity]: 'Network Security',
    [tabLabelHttpSecurity]: 'HTTP Security',
    [httpPolicySetInputLabel]: 'HTTP Policy Set:',
    [httpPolicySetInputPlaceholder]: 'Select HTTP Policy Set',
    [tabLabelHttpRequest]: 'HTTP Request',
    [tabLabelHttpResponse]: 'HTTP Response',
    [tabLabelDnsPolicy]: 'DNS Policy',
    [dnsPoliciesInputLabel]: 'DNS Policies:',
    [dnsPoliciesInputPlaceholder]: 'Select DNS Policy',
    [tabLabelTopologyPolicy]: 'Topology Policy',
    [topologyPolicyInputLabel]: 'Topology Policies:',
    [topologyPolicyInputPlaceholder]: 'Select Topology Policy',
    [tabLabelDataScripts]: 'DataScripts',
    [tabLabelAccess]: 'Access',
    [analyticsProfileInputLabel]: 'Analytics Profile',
    [metricsRealtimeUpdateInputLabel]: 'Metric Update Frequency',
    [realTimeMetricsCheckboxLabel]: 'Real Time Metrics',
    [metricsRealtimeUpdateInputPlaceholder]: 'Duration. Use 0 for Infinite.',
    [metricsRealtimeUpdateMinutesInnerText]: 'min',
    [clientInsightsHeader]: 'Client Insights',
    [clientInsightsInputLabel]: 'Client Insights',
    [includeUrlInputLabel]: 'Include URL',
    [excludeUrlInputLabel]: 'Exclude URL',
    [includeUrlInputPlaceholder]: 'Include all URLs',
    [excludeUrlInputPlaceholder]: 'Do Not Exclude any URLs',
    [clientIpAddressInputLabel]: 'Client IP Address',
    [clientIpAddressInputPlaceholder]: 'Include all Client IP Addresses',
    [performanceLimitSettingsHeader]: 'Performance Limit Settings',
    [performanceLimitCheckboxLabel]: 'Performance Limits',
    [maxThroughputInputLabel]: 'Max Throughput',
    [maxThroughputInputPlaceholder]: 'Unlimited',
    [maxConcurrentConnectionsInputLabel]: 'Max Concurrent Connections',
    [maxConcurrentConnectionsInputPlaceholder]: 'Unlimited',
    [qualityOfServiceHeader]: 'Quality of Service',
    [weightInputLabel]: 'Weight',
    [fairnessInputLabel]: 'Fairness',
    [throughputAndDelayFairnessInputLabel]: 'Throughput And Delay Fairness',
    [throughputFairnessInputLabel]: 'Throughput Fairness',
    [httpBasicAuthenticationHeader]: 'HTTP Basic Authentication',
    [useHttpBasicAuthenticationMessage]: 'Use HTTP Basic Auth to authenticate connecting clients to this Virtual Service.',
    [enableHttpBasicAuthenticationCheckboxLabel]: 'Enable HTTP Basic Authentication',
    [basicRealmInputLabel]: 'Basic Realm',
    [authProfileInputLabel]: 'Auth Profile',
    [createAuthProfileInputLabel]: 'Create Auth Profile',
    [serverNetworkProfileInputLabel]: 'Server Network Profile',
    [serverNetworkProfileInputPlaceholder]: 'None',
    [createServerNetworkProfileInputLabel]: 'Create Network Profile',
    [autoGatewayCheckboxLabel]: 'Auto Gateway',
    [useVipAsSnatCheckboxLabel]: 'Use VIP as SNAT',
    [advertiseVipViaBgpCheckboxLabel]: 'Advertise VIP via BGP',
    [advertiseSnatViaBgpCheckboxLabel]: 'Advertise SNAT via BGP',
    [hostNameTranslationInputLabel]: 'Host Name Translation',
    [seGroupInputLabel]: 'Service Engine Group',
    [activeStandbySeTagInputLabel]: 'Active Standby Service Engine Tag',
    [snatIpAddressInputLabel]: 'SNAT IP Address',
    [removeListeningPortOnVsDownCheckboxLabel]: 'Remove Listening Port when VS Down',
    [trafficCloneProfileInputLabel]: 'Traffic Clone Profile',
    [trafficCloneProfileInputPlaceholder]: 'Select Traffic Clone Profile',
    [scaleoutEcmpCheckboxLabel]: 'Scale out ECMP',
    [cancelButtonLabel]: 'Cancel',
    [saveRuleButtonLabel]: 'Save Rule',
    [saveDataScriptButtonLabel]: 'Save DataScript',
    [saveFilterButtonLabel]: 'Save Filter',
    [nextButtonLabel]: 'Next',
    [saveButtonLabel]: 'Save',
    [previousButtonLabel]: 'Previous',
    [botDetectionPolicyInputLabel]: 'Bot Detection Policy',
    [botDetectionPolicyInputPlaceholder]: 'Select Bot Detection Policy',
    [vsVipInputLabel]: 'VS VIP',
    [vsVipInputPlaceholder]: 'Select VS VIP',
    [createVsVipButtonLabel]: 'Create VS VIP',
    [useAsHorizonPrimaryTunnelProtocolPortsLabel]: 'Use as Horizon PrimaryTunnel Protocol Ports',
    [overrideApplicationProfileLabel]: 'Override Application Profile',
    [overrideApplicationProfileDropdownPlaceholder]: 'Select Application Profile',
};export const ENGLISH = {
    "schema.enum.shmfailure.arp_unresolved.desc": "Unable to resolve ARP for server.",
    "schema.enum.shmfailure.connection_refused.desc": "Connection refused or unable to connect.",
    "schema.enum.shmfailure.connection_timeout.desc": "Connections timed out.",
    "schema.enum.shmfailure.response_code_mismatch.desc": "Unexpected response code from server.",
    "schema.enum.shmfailure.payload_content_mismatch.desc": "Unexpected response data from server.",
    "schema.enum.shmfailure.server_unreachable.desc": "Network down or unreachable.",
    "schema.enum.shmfailure.connection_reset.desc": "Connection reset by server.",
    "schema.enum.shmfailure.connection_error.desc": "Generic connection error.",
    "schema.enum.shmfailure.host_error.desc": "Host down or unreachable.",
    "schema.enum.shmfailure.address_error.desc": "Server address is in use or unavailable.",
    "schema.enum.shmfailure.no_port.desc": "No source port for health monitor.",
    "schema.enum.shmfailure.payload_timeout.desc": "Payload timed out.",
    "schema.enum.shmfailure.no_response.desc": "No response for pings.",
    "schema.enum.shmfailure.no_resources.desc": "Out of resources.",
    "schema.enum.shmfailure.ssl_error.desc": "SSL connection failed.",
    "schema.enum.shmfailure.ssl_cert_error.desc": "SSL certificate validation failed.",
    "schema.enum.shmfailure.port_unreachable.desc": "Server Port Unreachable.",
    "schema.enum.shmfailure.script_error.desc": "Script errors.",
    "schema.enum.shmfailure.other_error.desc": "Remaining unaccounted errors.",
    "schema.enum.shmfailure.server_disabled.desc": "Server is disabled.",
    "schema.enum.shmfailure.remote_state.desc": "State not derived locally.",
    "schema.enum.shmfailure.maintenance_response_code_match.desc": "Response from server contains the maintenance response code configured in health monitor.",
    "schema.enum.shmfailure.maintenance_payload_content_match.desc": "Response from server contains the maintenance message configured in health monitor.",
    "schema.enum.shmfailure.chunked_response_payload_not_found.desc": "Server sent chunked data greater than 2K bytes, response data not found in the 2K bytes.",
    "schema.enum.shmfailure.gslb_pool_member_down.desc": "GSLB pool member service in the site is detected to be down.",
    "schema.enum.shmfailure.gslb_pool_member_disabled.desc": "GSLB pool member service in the site is disabled.",
    "schema.enum.shmfailure.gslb_pool_member_state_unknown.desc": "GSLB pool member service in the remote site is not up.",
    "schema.enum.shmfailure.insufficient_health_monitors_up.desc": "Number of health monitors in operational up state is less than configured minimum.",
    "schema.enum.shmfailure.gslb_pool_member_remote_state_unknown.desc": "GSLB pool member remote state not available (HM sharding is enabled).",
    "schema.enum.shmfailure.response_buffer_overflow.desc": "Server sent data greater than 2K bytes, response data not found in the first 2K bytes.",
    "schema.enum.shmfailure.request_buffer_overflow.desc": "Health Monitor is trying to send a request larger than 2k bytes.",
    "schema.enum.shmfailure.server_authentication_err.desc": "Server authentication error.",
    "schema.enum.shmfailure.initialization_err.desc": "Mail health monitor initialization error.",
    "schema.enum.sslcertificateexpirystatus.ssl_certificate_good.desc": "SSL Certificate is good",
    "schema.enum.sslcertificateexpirystatus.ssl_certificate_expiry_warning.desc": "SSL Certificate is expiring in less than a month",
    "schema.enum.sslcertificateexpirystatus.ssl_certificate_expired.desc": "SSL Certificate has expired",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_init.label": "UPGRADE_INIT",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_init.desc": "Initial State before any Upgrade Operations.",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_in_progress.label": "UPGRADE_IN_PROGRESS",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_in_progress.desc": "Upgrade operations request in progress.",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_completed.label": "UPGRADE_COMPLETED",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_completed.desc": "Upgrade operations completed for the requested node.",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_error.label": "UPGRADE_ERROR",
    "schema.enum.upgradefsmuistate.upgrade_fsm_ui_error.desc": "Upgrade operations are in error.",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_refused.label": "Connection setup failed: client ended connection setup",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_refused.desc": "The connection setup was prematurely stopped by the client, which sent a RST during the TCP three way handshake.",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_refused.label": "Connection setup failed: server refused connection",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_refused.desc": "The connection setup was refused by the server, which sent a RST during the TCP three way handshake.",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_timedout.label": "Connection setup failed: client conn setup timed out",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_timedout.desc": "TCP three way handshake with the client timed out despite multiple retries.",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_timedout.label": "Connection setup failed: server conn setup timed out",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_timedout.desc": "TCP three way handshake with the server timed out despite multiple retries.",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_failed_internal.label": "Connection setup failed: client conn setup failed",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_failed_internal.desc": "Avi was unable to complete the TCP three way handshake with the client due to an internal Avi error.  This may be due to lack of memory or other resource.",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_failed_internal.label": "Connection setup failed: server conn setup failed",
    "schema.enum.avidefinedfilters.adf_server_conn_setup_failed_internal.desc": "Avi was unable to complete the TCP three way handshake with the server due to an internal Avi error.  This may be due to lack of memory or other resource.",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_failed_bad_packet.label": "Connection setup failed: client conn setup failed with bad packet",
    "schema.enum.avidefinedfilters.adf_client_conn_setup_failed_bad_packet.desc": "The connection was dropped due to bad packets received from client during TCP three way handshake.",
    "schema.enum.avidefinedfilters.adf_udp_conn_setup_failed_internal.label": "Client request processing failure: internal failure",
    "schema.enum.avidefinedfilters.adf_udp_conn_setup_failed_internal.desc": "Avi was unable to complete UDP request from the client due to an internal Avi error. This may be due to lack of memory or other resources.",
    "schema.enum.avidefinedfilters.adf_udp_server_conn_setup_failed_internal.label": "Client request processing failure: server conn setup failed",
    "schema.enum.avidefinedfilters.adf_udp_server_conn_setup_failed_internal.desc": "Avi was unable to complete UDP request from the client due to an internal Avi error setting up server connectivity. This may be due to lack of memory or other resources.",
    "schema.enum.avidefinedfilters.adf_client_sent_reset.label": "Connection closed abnormally: client ended connection",
    "schema.enum.avidefinedfilters.adf_client_sent_reset.desc": "Client abnormally terminated the connection by sending a TCP RST.",
    "schema.enum.avidefinedfilters.adf_server_sent_reset.label": "Connection closed abnormally: server ended connection",
    "schema.enum.avidefinedfilters.adf_server_sent_reset.desc": "Server abnormally terminated the connection by sending a TCP RST.",
    "schema.enum.avidefinedfilters.adf_client_conn_timedout.label": "Connection closed abnormally: client connection timed out",
    "schema.enum.avidefinedfilters.adf_client_conn_timedout.desc": "The established TCP connection with the client was closed due to timeout. Despite multiple retry attempts, the client stopped responding to Avi's packets.",
    "schema.enum.avidefinedfilters.adf_server_conn_timedout.label": "Connection closed abnormally: server connection timed out",
    "schema.enum.avidefinedfilters.adf_server_conn_timedout.desc": "The established TCP connection with the server was closed due to timeout.  Despite multiple retry attempts, the server stopped responding to Avi's packets.",
    "schema.enum.avidefinedfilters.adf_user_delete_operation.label": "Connection closed abnormally: conn deleted due to config update",
    "schema.enum.avidefinedfilters.adf_user_delete_operation.desc": "The connection was deleted due to an Avi configuration update.",
    "schema.enum.avidefinedfilters.adf_client_request_timeout.label": "Connection closed abnormally: timed out waiting for HTTP request from client",
    "schema.enum.avidefinedfilters.adf_client_request_timeout.desc": "The connection timed out waiting for the client to send HTTP request.",
    "schema.enum.avidefinedfilters.adf_client_conn_aborted.label": "Connection closed abnormally: connection was prematurely closed by the client",
    "schema.enum.avidefinedfilters.adf_client_conn_aborted.desc": "connection was prematurely closed by the client.",
    "schema.enum.avidefinedfilters.adf_client_ssl_handshake_failure.label": "Connection closed abnormally: connection dropped due to SSL handshake failure",
    "schema.enum.avidefinedfilters.adf_client_ssl_handshake_failure.desc": "The connection dropped due to SSL handshake failure.",
    "schema.enum.avidefinedfilters.adf_client_conn_failed.label": "Connection closed abnormally: connection was closed due to internal error",
    "schema.enum.avidefinedfilters.adf_client_conn_failed.desc": "The connection was closed due to internal error.",
    "schema.enum.avidefinedfilters.adf_server_certificate_verification_failed.label": "Connection closed abnormally: server x509 certificate verification failed",
    "schema.enum.avidefinedfilters.adf_server_certificate_verification_failed.desc": "Validation of the server's x509 certificate failed.",
    "schema.enum.avidefinedfilters.adf_server_side_ssl_handshake_failed.label": "Connection closed abnormally: connection dropped due to server side SSL handshake failure",
    "schema.enum.avidefinedfilters.adf_server_side_ssl_handshake_failed.desc": "The connection dropped due to server side SSL handshake failure.",
    "schema.enum.avidefinedfilters.adf_idle_timedout.label": "Connection closed abnormally: connection idle timed out",
    "schema.enum.avidefinedfilters.adf_idle_timedout.desc": "The established TCP connection was closed due to the TCPprofile's idle timeout.",
    "schema.enum.avidefinedfilters.adf_client_connection_closed_before_request.label": "Connection closed abnormally: Connection was closed before client sent HTTP request",
    "schema.enum.avidefinedfilters.adf_client_connection_closed_before_request.desc": "The connection was closed while waiting for the client to send HTTP request.",
    "schema.enum.avidefinedfilters.adf_client_incomplete_data.label": "Connection closed abnormally: Partial data available for Application. Server not setup.",
    "schema.enum.avidefinedfilters.adf_client_incomplete_data.desc": "The connection was closed with partial data available from the client.",
    "schema.enum.avidefinedfilters.adf_client_conn_stopped.label": "Connection closed abnormally: connection was prematurely closed by the client",
    "schema.enum.avidefinedfilters.adf_client_conn_stopped.desc": "connection was prematurely closed by the client.",
    "schema.enum.avidefinedfilters.adf_client_high_timeout_retransmits.label": "Connection abnormal event: client timeout caused retransmits",
    "schema.enum.avidefinedfilters.adf_client_high_timeout_retransmits.desc": "The TCP connection completed gracefully, but there are a high number of retransmitted packets due to timeouts from Avi to the client. This could be due to lossy network or a slow client.",
    "schema.enum.avidefinedfilters.adf_server_high_timeout_retransmits.label": "Connection abnormal event: server timeout caused retransmits",
    "schema.enum.avidefinedfilters.adf_server_high_timeout_retransmits.desc": "The TCP connection completed gracefully, but there were a high number of retransmitted packets due to timeouts from Avi to the server. This could be due to lossy network or a slow server.",
    "schema.enum.avidefinedfilters.adf_client_high_rx_zero_window_size_events.label": "Connection abnormal event: zero window from client",
    "schema.enum.avidefinedfilters.adf_client_high_rx_zero_window_size_events.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by the client depleted to zero. This means that Avi could not send any more packets until the client opened the TCP window. This is typically due to a slow client.",
    "schema.enum.avidefinedfilters.adf_server_high_rx_zero_window_size_events.label": "Connection abnormal event: zero window from server",
    "schema.enum.avidefinedfilters.adf_server_high_rx_zero_window_size_events.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by the server depleted to zero. This means that Avi could not send any more packets until the server opened  the TCP window. This is typically due to a slow server.",
    "schema.enum.avidefinedfilters.adf_client_rtt_above_sec.label": "Connection abnormal event: client high rtt",
    "schema.enum.avidefinedfilters.adf_client_rtt_above_sec.desc": "The TCP round trip time between Avi and the client is greater than 1 second.",
    "schema.enum.avidefinedfilters.adf_server_rtt_above_500ms.label": "Connection abnormal event: server high rtt",
    "schema.enum.avidefinedfilters.adf_server_rtt_above_500ms.desc": "The TCP round trip time between Avi and the server is greater than 500ms.",
    "schema.enum.avidefinedfilters.adf_client_high_total_retransmits.label": "Connection abnormal event: client high retransmits",
    "schema.enum.avidefinedfilters.adf_client_high_total_retransmits.desc": "The TCP connection completed gracefully, but there were a high number of retransmitted packets from Avi to the client. This may be due to a lossy or congested network.",
    "schema.enum.avidefinedfilters.adf_server_high_total_retransmits.label": "Connection abnormal event: server high retransmits",
    "schema.enum.avidefinedfilters.adf_server_high_total_retransmits.desc": "The TCP connection completed gracefully, but there were a high number of retransmitted packets from Avi to the server. This may be due to a lossy or congested network.",
    "schema.enum.avidefinedfilters.adf_client_high_out_of_orders.label": "Connection abnormal event: client out of order packets",
    "schema.enum.avidefinedfilters.adf_client_high_out_of_orders.desc": "The TCP connection completed gracefully, but Avi received a high number of out of order packets from the client. This is generally due to lossy or congested network or drops by Avi.",
    "schema.enum.avidefinedfilters.adf_server_high_out_of_orders.label": "Connection abnormal event: server out of order packets",
    "schema.enum.avidefinedfilters.adf_server_high_out_of_orders.desc": "The TCP connection completed gracefully, but Avi received a high number of out of order packets from the client. This is generally due to lossy or congested network or drops by Avi.",
    "schema.enum.avidefinedfilters.adf_client_high_tx_zero_window_size_events.label": "Connection abnormal event: zero window to client",
    "schema.enum.avidefinedfilters.adf_client_high_tx_zero_window_size_events.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by Avi to client depleted to zero. This means that client could not send any more packets until Avi opened the TCP window. This is typically due to a slow server.",
    "schema.enum.avidefinedfilters.adf_server_high_tx_zero_window_size_events.label": "Connection abnormal event: zero window to server",
    "schema.enum.avidefinedfilters.adf_server_high_tx_zero_window_size_events.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by Avi to server depleted to zero. This means that server could not send any more packets until Avi opened the TCP window. This is typically due to a slow client.",
    "schema.enum.avidefinedfilters.adf_client_possible_window_stuck.label": "Connection abnormal event: client possible window stuck",
    "schema.enum.avidefinedfilters.adf_client_possible_window_stuck.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by the client was not opened fast enough, which may lead the window to be stuck.",
    "schema.enum.avidefinedfilters.adf_server_possible_window_stuck.label": "Connection abnormal event: server possible window stuck",
    "schema.enum.avidefinedfilters.adf_server_possible_window_stuck.desc": "The TCP connection completed gracefully, but there were instances when the TCP window advertised by the server was not opened fast enough, which may lead the window to be stuck.",
    "schema.enum.avidefinedfilters.adf_server_unanswered_syns.label": "Connection abnormal event: server unanswered syns",
    "schema.enum.avidefinedfilters.adf_server_unanswered_syns.desc": "The TCP connection completed gracefully, but there were some syns sent to backend server were not acked immediately that caused SE to retransmit the syn. This is typically due to busy server.",
    "schema.enum.avidefinedfilters.adf_client_close_connection_on_vs_update.label": "Connection closed abnormally: connection was closed on VS config update",
    "schema.enum.avidefinedfilters.adf_client_close_connection_on_vs_update.desc": "The client connection is closed if vs has close_client_conn_on_config_update enabled and a disruptive config update is done on the virtual server.",
    "schema.enum.avidefinedfilters.adf_client_possible_slow_drain.label": "Connection abnormal event: client has a slow receive rate",
    "schema.enum.avidefinedfilters.adf_client_possible_slow_drain.desc": "The client connection is slow. The packets are drained at a slow rate by the client compared to the incoming rate from the server.",
    "schema.enum.avidefinedfilters.adf_server_possible_slow_drain.label": "Connection abnormal event: server has a slow receive rate",
    "schema.enum.avidefinedfilters.adf_server_possible_slow_drain.desc": "The server connection is slow. The packets are drained at a slow rate by the server compared to the incoming rate from the client.",
    "schema.enum.avidefinedfilters.adf_server_ingress_latency_exceeded.label": "Connection abnormal event: Server side high ingress latency.",
    "schema.enum.avidefinedfilters.adf_server_ingress_latency_exceeded.desc": "Ingress packet processing latency for the server side flow exceeds configured threshold.",
    "schema.enum.avidefinedfilters.adf_server_conn_est_time_exceeded.label": "Connection abnormal event: Server side high connection establishment time.",
    "schema.enum.avidefinedfilters.adf_server_conn_est_time_exceeded.desc": "The connection establishment time for the server side flow exceeds threshold.",
    "schema.enum.avidefinedfilters.adf_client_ingress_latency_exceeded.label": "Connection abnormal event: Client side high ingress latency.",
    "schema.enum.avidefinedfilters.adf_client_ingress_latency_exceeded.desc": "Ingress packet processing latency for the client side flow exceeds configured threshold.",
    "schema.enum.avidefinedfilters.adf_client_conn_est_time_exceeded.label": "Connection abnormal event: Client side high connection establishment time.",
    "schema.enum.avidefinedfilters.adf_client_conn_est_time_exceeded.desc": "The connection establishment time for the client side flow exceeds threshold.",
    "schema.enum.avidefinedfilters.adf_response_code_4xx.label": "Request ended abnormally: response code 4xx",
    "schema.enum.avidefinedfilters.adf_response_code_4xx.desc": "A 4xx 'client error' HTTP response code was sent to the client.",
    "schema.enum.avidefinedfilters.adf_response_code_5xx.label": "Request ended abnormally: response code 5xx",
    "schema.enum.avidefinedfilters.adf_response_code_5xx.desc": "A 5xx 'server error' HTTP response code was sent to the client.",
    "schema.enum.avidefinedfilters.adf_load_balancing_failed.label": "Request ended abnormally: no available servers",
    "schema.enum.avidefinedfilters.adf_load_balancing_failed.desc": "The connection attempt was reset due to no servers available.  This may be because the server connection limits setting was reached, or all servers are in a down state.",
    "schema.enum.avidefinedfilters.adf_datascript_execution_failed.label": "Request ended abnormally: Datascript failed to execute",
    "schema.enum.avidefinedfilters.adf_datascript_execution_failed.desc": "The datascript failed to execute.",
    "schema.enum.avidefinedfilters.adf_request_no_pool.label": "Request ended abnormally: request failed to select pool",
    "schema.enum.avidefinedfilters.adf_request_no_pool.desc": "The request could not be fulfilled by any available pool",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip.label": "Request ended abnormally: Too many requests from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip.desc": "Request dropped because there were too many requests from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri.label": "Request ended abnormally: Too many requests for this URI",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri.desc": "Request dropped because there were too many requests for this URI",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_uri.label": "Request ended abnormally: Too many requests for this URI from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_uri.desc": "Request dropped because there were too many requests for this URI from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_unknown_uri.label": "Request ended abnormally: Too many requests for an unknown URI ",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_unknown_uri.desc": "Request dropped because there were too many requests for this unknown URI",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_bad_uri.label": "Request ended abnormally: Too many requests for a bad URI ",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_bad_uri.desc": "Request dropped because there were too many requests for this bad URI",
    "schema.enum.avidefinedfilters.adf_request_virtual_hosting_app_select_failed.label": "Request ended abnormally: request failed to use a virtual hosting virtual server",
    "schema.enum.avidefinedfilters.adf_request_virtual_hosting_app_select_failed.desc": "The request could not be fulfilled by any virtual server",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_unknown_cip.label": "Request ended abnormally: Too many requests from an unknown client IP ",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_unknown_cip.desc": "Request dropped because there were too many requests from this unknown client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_bad_cip.label": "Request ended abnormally: Too many requests from a bad client IP ",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_bad_cip.desc": "Request dropped because there were too many requests from this bad client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_bad.label": "Request ended abnormally: Too many bad requests from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_bad.desc": "Request dropped because there were too many bad requests from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_bad.label": "Request ended abnormally: Too many bad requests for this URI",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_bad.desc": "Request dropped because there were too many bad requests for this URI",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_uri_bad.label": "Request ended abnormally: Too many bad requests for this URI from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_uri_bad.desc": "Request dropped because there were too many bad requests for this URI from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_req.label": "Request ended abnormally: Too many requests",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_req.desc": "Request dropped because there were too many requests for this virtualservice",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_conn.label": "Connection not allowed: Too many connections from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_client_ip_conn.desc": "Configured rate limiting action taken for this connection from this client IP",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_conn.label": "Connection not allowed: Too many connections",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_conn.desc": "Configured rate limiting action taken for this connection for this virtualservice",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_header.label": "Request ended abnormally: Throttled by the headerbased rate limiter",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_header.desc": "Request dropped because there were too many requests that contain a header or cookie value",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_custom.label": "Request ended abnormally: Throttled by the custom stringbased rate limiter",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_custom.desc": "Request dropped because there were too many requests that map to a custom string",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_scan_bad.label": "Request ended abnormally: Throttled by bad URI scanning rate limiter.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_scan_bad.desc": "Request dropped because there were too many requests to this known bad URI.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_scan_unknown.label": "Request ended abnormally: Throttled by unknown URI scanning rate limiter.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_uri_scan_unknown.desc": "Request dropped because there were too many requests to this unknown URI.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_cip_scan_bad.label": "Request ended abnormally: Throttled by known bad client IP scanning rate limiter.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_cip_scan_bad.desc": "Request dropped because there were too many requests from this known bad client.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_cip_scan_unknown.label": "Request ended abnormally: Throttled by unknown client IP scanning rate limiter.",
    "schema.enum.avidefinedfilters.adf_rate_limit_drop_cip_scan_unknown.desc": "Request dropped because there were too many requests from this unknown client.",
    "schema.enum.avidefinedfilters.adf_http_version_lt_1_0.label": "Request abnormal event: http version 0.9",
    "schema.enum.avidefinedfilters.adf_http_version_lt_1_0.desc": "Client sent request with HTTP Protocol version 0.9.",
    "schema.enum.avidefinedfilters.adf_client_high_response_time.label": "Request abnormal event: high total time",
    "schema.enum.avidefinedfilters.adf_client_high_response_time.desc": "Total time greater than the configured threshold",
    "schema.enum.avidefinedfilters.adf_server_high_response_time.label": "Request abnormal event: high app response time",
    "schema.enum.avidefinedfilters.adf_server_high_response_time.desc": "App response time greater than the configured threshold",
    "schema.enum.avidefinedfilters.adf_persistent_server_change.label": "Request abnormal event: persistent server changed",
    "schema.enum.avidefinedfilters.adf_persistent_server_change.desc": "Persistent server changed",
    "schema.enum.avidefinedfilters.adf_dos_server_bad_gateway.label": "DOS_APP_ERROR: bad gateway",
    "schema.enum.avidefinedfilters.adf_dos_server_bad_gateway.desc": "Potential denial of service attack where a backend network vulnerability is being exploited.",
    "schema.enum.avidefinedfilters.adf_dos_server_gateway_timeout.label": "DOS_APP_ERROR: gateway timeout",
    "schema.enum.avidefinedfilters.adf_dos_server_gateway_timeout.desc": "Potential denial of service attack where a backend network vulnerability is being exploited.",
    "schema.enum.avidefinedfilters.adf_dos_client_sent_reset.label": "DOS_HTTP_STOP: client reset the connection before sending any requests",
    "schema.enum.avidefinedfilters.adf_dos_client_sent_reset.desc": "Potential denial of service attack where client resets connections after having held up connection resources.",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_timeout.label": "DOS_HTTP_TIMEOUT: connection timed out as no requests were received from the client after the connection was established",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_timeout.desc": "Potential denial of service attack where client holds up a connection without sending any requests. Browsers like Chrome are known to keep connections open for short durations of time without sending any requests, in which case this significance would not be triggered.",
    "schema.enum.avidefinedfilters.adf_dos_client_request_timeout.label": "DOS_HTTP_TIMEOUT: request timed out ",
    "schema.enum.avidefinedfilters.adf_dos_client_request_timeout.desc": "Potential denial of service attack where client is sending requests few bytes at a time with no intention of completing the request. This could potentially be Slowloris or Slowbody attack.",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_aborted.label": "DOS_HTTP_STOP: client reset connection abnormally",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_aborted.desc": "Potential denial of service attack where client resets connection after having sent a few bytes of the request holding up request and connection related resources",
    "schema.enum.avidefinedfilters.adf_dos_client_bad_request.label": "DOS_HTTP_ERROR: bad request",
    "schema.enum.avidefinedfilters.adf_dos_client_bad_request.desc": "Potential denial of service attack where client is sending bad requests.",
    "schema.enum.avidefinedfilters.adf_dos_client_request_entity_too_large.label": "DOS_HTTP_ERROR: request body too large",
    "schema.enum.avidefinedfilters.adf_dos_client_request_entity_too_large.desc": "Potential denial of service attack where client is sending requests with body size more than allowed by configuration.",
    "schema.enum.avidefinedfilters.adf_dos_client_request_uri_too_large.label": "DOS_HTTP_ERROR: request uri too large",
    "schema.enum.avidefinedfilters.adf_dos_client_request_uri_too_large.desc": "Potential denial of service attack where client is sending requests with uri length more than allowed by configuration.",
    "schema.enum.avidefinedfilters.adf_dos_client_request_header_too_large.label": "DOS_HTTP_ERROR: request header too large",
    "schema.enum.avidefinedfilters.adf_dos_client_request_header_too_large.desc": "Potential denial of service attack where client is sending requests with header size more than allowed by configuration.",
    "schema.enum.avidefinedfilters.adf_dos_client_closed_request.label": "DOS_HTTP_ERROR: request ended prematurely",
    "schema.enum.avidefinedfilters.adf_dos_client_closed_request.desc": "Potential denial of service attack where client closed the connection in the middle of a request.",
    "schema.enum.avidefinedfilters.adf_dos_ssl_error.label": "DOS_SSL_ERROR: ssl error",
    "schema.enum.avidefinedfilters.adf_dos_ssl_error.desc": "Potential denial of service attack where client is causing SSL errors resulting in resources being exploited.",
    "schema.enum.avidefinedfilters.adf_request_memory_limit_exceeded.label": "Request abnormal event: request memory limit exceeded",
    "schema.enum.avidefinedfilters.adf_request_memory_limit_exceeded.desc": "Maximum memory allocation limit for a single request exceeded.",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_stopped.label": "DOS_HTTP_STOP: client reset connection abnormally",
    "schema.enum.avidefinedfilters.adf_dos_client_conn_stopped.desc": "Potential denial of service attack where client resets connection after having sent a few bytes of the request holding up request and connection related resources",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_verification_failed.label": "Client certificate verification failed: client x509 certificate verification failed",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_verification_failed.desc": "Validation of the client's x509 certificate failed",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_not_yet_valid.label": "Client certificate verification failed: client x509 certificate not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_not_yet_valid.desc": "Client's x509 certificate not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_expired.label": "Client certificate verification failed: client x509 certificate expired",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_expired.desc": "Client's x509 certificate has expired",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_revoked.label": "Client certificate verification failed: client x509 certificate revoked",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_revoked.desc": "Client's x509 certificate has been revoked",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_invalid_ca.label": "Client certificate verification failed: CA x509 certificate invalid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_invalid_ca.desc": "CA's x509 certificate is invalid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_not_present.label": "Client certificate verification failed: Unable to get CRL for a certificate",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_not_present.desc": "Client's x509 certificate CRL not present",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_not_yet_valid.label": "Client certificate verification failed: CRL not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_not_yet_valid.desc": "Client's x509 certificate CRL not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_expired.label": "Client certificate verification failed: CRL has expired",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_expired.desc": "Client's x509 certificate CRL has expired",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_error.label": "Client certificate verification failed: CRL error",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_crl_error.desc": "Client's x509 certificate CRL had error",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_chaining_error.label": "Client certificate verification failed: certificate chaining error",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_chaining_error.desc": "Certificate chain could not be formed correctly",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_internal_error.label": "Client certificate verification failed: internal error ",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_internal_error.desc": "Internal Error",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_format_error.label": "Client certificate verification failed: client x509 certificate had errors",
    "schema.enum.avidefinedfilters.adf_x509_client_certificate_format_error.desc": "Client's x509 certificate has errors",
    "schema.enum.avidefinedfilters.adf_udp_port_not_reachable.label": "Server connectivity failed: server udp port unreachable",
    "schema.enum.avidefinedfilters.adf_udp_port_not_reachable.desc": "ICMP port unreachable was received when client's packet was sent to the server. Either the server is not listening to UDP on the port or duplicate server ip in the network.",
    "schema.enum.avidefinedfilters.adf_udp_conn_timeout.label": "Connection abnormal event: server udp response timed out",
    "schema.enum.avidefinedfilters.adf_udp_conn_timeout.desc": "Server response to client's udp packet timed out.",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_verification_failed.label": "Server certificate verification failed: server x509 certificate verification failed",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_verification_failed.desc": "Validation of the server's x509 certificate failed",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_not_yet_valid.label": "Server certificate verification failed: server x509 certificate not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_not_yet_valid.desc": "Server's x509 certificate not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_expired.label": "Server certificate verification failed: server x509 certificate expired",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_expired.desc": "Server's x509 certificate has expired",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_revoked.label": "Server certificate verification failed: server x509 certificate revoked",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_revoked.desc": "Server's x509 certificate has been revoked",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_invalid_ca.label": "Server certificate verification failed: CA x509 certificate invalid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_invalid_ca.desc": "CA's x509 certificate is invalid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_not_present.label": "Server certificate verification failed: Unable to get CRL for a certificate",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_not_present.desc": "Server's x509 certificate CRL not present",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_not_yet_valid.label": "Server certificate verification failed: CRL not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_not_yet_valid.desc": "Server's x509 certificate CRL not yet valid",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_expired.label": "Server certificate verification failed: CRL has expired",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_expired.desc": "Server's x509 certificate CRL has expired",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_error.label": "Server certificate verification failed: CRL error",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_crl_error.desc": "Server's x509 certificate CRL had error",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_chaining_error.label": "Server certificate verification failed: certificate chaining error",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_chaining_error.desc": "Certificate chain could not be formed correctly",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_internal_error.label": "Server certificate verification failed: internal error ",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_internal_error.desc": "Internal Error",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_format_error.label": "Server certificate verification failed: server x509 certificate had errors",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_format_error.desc": "Server's x509 certificate has errors",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_hostname_error.label": "Server certificate verification failed: hostname did not match with upstream certificate",
    "schema.enum.avidefinedfilters.adf_x509_server_certificate_hostname_error.desc": "Hostname did not match with the upstream certificate",
    "schema.enum.avidefinedfilters.adf_ssl_r_bad_change_cipher_spec.label": "SSL Error: bad change cipher spec ",
    "schema.enum.avidefinedfilters.adf_ssl_r_bad_change_cipher_spec.desc": "Change cipher spec is bad",
    "schema.enum.avidefinedfilters.adf_ssl_r_block_cipher_pad_is_wrong.label": "SSL Error: block cipher pad is wrong ",
    "schema.enum.avidefinedfilters.adf_ssl_r_block_cipher_pad_is_wrong.desc": "Block Cipher Pad is wrong",
    "schema.enum.avidefinedfilters.adf_ssl_r_digest_check_failed.label": "SSL Error: digest check failed ",
    "schema.enum.avidefinedfilters.adf_ssl_r_digest_check_failed.desc": "Digest check failed",
    "schema.enum.avidefinedfilters.adf_ssl_r_error_in_received_cipher_list.label": "SSL Error: error in received cipher list ",
    "schema.enum.avidefinedfilters.adf_ssl_r_error_in_received_cipher_list.desc": "Received cipher list has an error",
    "schema.enum.avidefinedfilters.adf_ssl_r_excessive_message_size.label": "SSL Error: excessive message size ",
    "schema.enum.avidefinedfilters.adf_ssl_r_excessive_message_size.desc": "Message size is excessive",
    "schema.enum.avidefinedfilters.adf_ssl_r_length_mismatch.label": "SSL Error: length mismatch ",
    "schema.enum.avidefinedfilters.adf_ssl_r_length_mismatch.desc": "Length mismatch was detected",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_passed.label": "SSL Error: no ciphers passed ",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_passed.desc": "No ciphers were passed",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_specified.label": "SSL Error: no ciphers specified ",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_specified.desc": "No ciphers were specified",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_compression_specified.label": "SSL Error: no compression specified ",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_compression_specified.desc": "No compression was specified",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_shared_cipher.label": "SSL Error: no shared cipher ",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_shared_cipher.desc": "No shared cipher",
    "schema.enum.avidefinedfilters.adf_ssl_r_record_length_mismatch.label": "SSL Error: record length mismatch ",
    "schema.enum.avidefinedfilters.adf_ssl_r_record_length_mismatch.desc": "Mismatch in record length",
    "schema.enum.avidefinedfilters.adf_ssl_r_parse_tlsext.label": "SSL Error: parse tlsext ",
    "schema.enum.avidefinedfilters.adf_ssl_r_parse_tlsext.desc": "Error parsing tlsext",
    "schema.enum.avidefinedfilters.adf_ssl_r_unexpected_message.label": "SSL Error: unexpected message ",
    "schema.enum.avidefinedfilters.adf_ssl_r_unexpected_message.desc": "Unexpected message",
    "schema.enum.avidefinedfilters.adf_ssl_r_unexpected_record.label": "SSL Error: unexpected record ",
    "schema.enum.avidefinedfilters.adf_ssl_r_unexpected_record.desc": "Unexpected record",
    "schema.enum.avidefinedfilters.adf_ssl_r_unknown_alert_type.label": "SSL Error: unknown alert type ",
    "schema.enum.avidefinedfilters.adf_ssl_r_unknown_alert_type.desc": "Unknown alert type",
    "schema.enum.avidefinedfilters.adf_ssl_r_unknown_protocol.label": "SSL Error: unknown protocol ",
    "schema.enum.avidefinedfilters.adf_ssl_r_unknown_protocol.desc": "Unknown protocol",
    "schema.enum.avidefinedfilters.adf_ssl_r_wrong_version_number.label": "SSL Error: wrong version number ",
    "schema.enum.avidefinedfilters.adf_ssl_r_wrong_version_number.desc": "Wrong version number",
    "schema.enum.avidefinedfilters.adf_ssl_r_decryption_failed_or_bad_record_mac.label": "SSL Error: decryption failed or bad record mac ",
    "schema.enum.avidefinedfilters.adf_ssl_r_decryption_failed_or_bad_record_mac.desc": "Decryption failed or Bad record MAC",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiate_ext_too_long.label": "SSL Error: renegotiate ext too long ",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiate_ext_too_long.desc": "Renegotiate extestions were too long",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiation_encoding_err.label": "SSL Error: renegotiation encoding err ",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiation_encoding_err.desc": "Error in renegotiation encoding",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiation_mismatch.label": "SSL Error: renegotiation mismatch ",
    "schema.enum.avidefinedfilters.adf_ssl_r_renegotiation_mismatch.desc": "Mismatch detected in renegotiation",
    "schema.enum.avidefinedfilters.adf_ssl_r_unsafe_legacy_renegotiation_disabled.label": "SSL Error: unsafe legacy renegotiation disabled ",
    "schema.enum.avidefinedfilters.adf_ssl_r_unsafe_legacy_renegotiation_disabled.desc": "Unsafe legacy renegotiation is disabled",
    "schema.enum.avidefinedfilters.adf_ssl_r_scsv_received_when_renegotiating.label": "SSL Error: scsv received when renegotiating ",
    "schema.enum.avidefinedfilters.adf_ssl_r_scsv_received_when_renegotiating.desc": "SCSV was received when renegotiating",
    "schema.enum.avidefinedfilters.adf_ssl_r_inappropriate_fallback.label": "SSL Error: inappropriate fallback ",
    "schema.enum.avidefinedfilters.adf_ssl_r_inappropriate_fallback.desc": "Inappropriate fallback to a lower version",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_unexpected_message.label": "SSL Error: sslv3 alert unexpected message ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_unexpected_message.desc": "SSLv3 alert  Unexpected Message",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_bad_record_mac.label": "SSL Error: sslv3 alert bad record mac ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_bad_record_mac.desc": "SSLv3 alert  Record with incorrect MAC received",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decryption_failed.label": "SSL Error: tlsv1 alert decryption failed ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decryption_failed.desc": "TLSv1 alert  Decryption failed",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_record_overflow.label": "SSL Error: tlsv1 alert record overflow ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_record_overflow.desc": "TLSv1 alert  Record Overflow",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_decompression_failure.label": "SSL Error: sslv3 alert decompression failure ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_decompression_failure.desc": "SSLv3 alert  Decompression Failure",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_handshake_failure.label": "SSL Error: sslv3 alert handshake failure ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_handshake_failure.desc": "SSLv3 alert  Handshake Failure",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_no_certificate.label": "SSL Error: sslv3 alert no certificate ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_no_certificate.desc": "SSLv3 alert  No Certificate",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_bad_certificate.label": "SSL Error: sslv3 alert bad certificate ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_bad_certificate.desc": "SSLv3 alert  Bad Certificate",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_unsupported_certificate.label": "SSL Error: sslv3 alert unsupported certificate ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_unsupported_certificate.desc": "SSLv3 alert  Unsupported Certificate",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_revoked.label": "SSL Error: sslv3 alert certificate revoked ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_revoked.desc": "SSLv3 alert  Certificate revoked",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_expired.label": "SSL Error: sslv3 alert certificate expired ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_expired.desc": "SSLv3 alert  Certificate expired",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_unknown.label": "SSL Error: sslv3 alert certificate unknown ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_certificate_unknown.desc": "SSLv3 alert  Certificate unknown",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_illegal_parameter.label": "SSL Error: sslv3 alert illegal parameter ",
    "schema.enum.avidefinedfilters.adf_ssl_r_sslv3_alert_illegal_parameter.desc": "SSLv3 alert  Illegal Parameter",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_unknown_ca.label": "SSL Error: tlsv1 alert unknown ca ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_unknown_ca.desc": "TLSv1 alert  CA could not be located or Doesn't match known, trusted CA",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_access_denied.label": "SSL Error: tlsv1 alert access denied ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_access_denied.desc": "TLSv1 alert  Access denied",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decode_error.label": "SSL Error: tlsv1 alert decode error ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decode_error.desc": "TLSv1 alert  Decode error  Field out of specified range or message length incorrect",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decrypt_error.label": "SSL Error: tlsv1 alert decrypt error ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_decrypt_error.desc": "TLSv1 alert  Decrypt error",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_export_restriction.label": "SSL Error: tlsv1 alert export restriction ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_export_restriction.desc": "TLSv1 alert  Export Restriction",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_protocol_version.label": "SSL Error: tlsv1 alert protocol version ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_protocol_version.desc": "TLSv1 alert  Attempt to negotiate with unsupported protocol version",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_insufficient_security.label": "SSL Error: tlsv1 alert insufficient security ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_insufficient_security.desc": "TLSv1 alert  Ciphers not secure enough",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_internal_error.label": "SSL Error: tlsv1 alert internal error ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_internal_error.desc": "TLSv1 alert  Internal Error",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_user_cancelled.label": "SSL Error: tlsv1 alert user cancelled ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_user_cancelled.desc": "TLSv1 alert  User Cancelled",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_no_renegotiation.label": "SSL Error: tlsv1 alert no renegotiation ",
    "schema.enum.avidefinedfilters.adf_ssl_r_tlsv1_alert_no_renegotiation.desc": "TLSv1 alert  No Renegotiation",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_cert_status_revoked.label": "OCSP Alert: The Status of the SSLTLS Certificate is Revoked.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_cert_status_revoked.desc": "The Status of the SSLTLS Certificate is Revoked.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_response_stale.label": "OCSP Alert: The OCSP Response of the certificate used is Stale.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_response_stale.desc": "The OCSP Response of the certificate used is Stale.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_response_unavailable.label": "OCSP Alert: The OCSP Response for the certificate used is unavailable.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_response_unavailable.desc": "The OCSP Response for the certificate used is unavailable.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_cert_status_issuer_revoked.label": "OCSP Alert: OCSP Response is not available as the Issuer certificate is Revoked.",
    "schema.enum.avidefinedfilters.adf_ssl_ocsp_cert_status_issuer_revoked.desc": "OCSP Response is not available as the Issuer certificate is Revoked.",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_available.label": "SSL Error: no ciphers passed.",
    "schema.enum.avidefinedfilters.adf_ssl_r_no_ciphers_available.desc": "No ciphers were available.",
    "schema.enum.avidefinedfilters.adf_client_auth_unknown_user.label": "Auth Error: authentication server did not recognize the user",
    "schema.enum.avidefinedfilters.adf_client_auth_unknown_user.desc": "Authentication server did not recognize the user",
    "schema.enum.avidefinedfilters.adf_client_auth_login_failed.label": "Auth Error: user credentials failed",
    "schema.enum.avidefinedfilters.adf_client_auth_login_failed.desc": "User credentials failed",
    "schema.enum.avidefinedfilters.adf_client_auth_missing_credentials.label": "Auth Error: user login failed due to missing credentials",
    "schema.enum.avidefinedfilters.adf_client_auth_missing_credentials.desc": "User login failed due to missing credentials",
    "schema.enum.avidefinedfilters.adf_client_auth_server_conn_error.label": "Auth Error: authentication server connection error",
    "schema.enum.avidefinedfilters.adf_client_auth_server_conn_error.desc": "Authentication server connection error",
    "schema.enum.avidefinedfilters.adf_client_auth_user_not_authorized.label": "Auth Error: user not authorized for access",
    "schema.enum.avidefinedfilters.adf_client_auth_user_not_authorized.desc": "User not authorized for access",
    "schema.enum.avidefinedfilters.adf_client_auth_timed_out.label": "Auth Error: user authentication timed out",
    "schema.enum.avidefinedfilters.adf_client_auth_timed_out.desc": "User authentication timed out",
    "schema.enum.avidefinedfilters.adf_client_auth_unknown_error.label": "Auth Error: user authentication failed due to unknown error",
    "schema.enum.avidefinedfilters.adf_client_auth_unknown_error.desc": "User authentication failed due to unknown error",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_invalid_query.label": "DNS query failed: invalid DNS query",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_invalid_query.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since the query was malformed or invalid",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_invalid_domain.label": "DNS query failed: DNS query for an excluded domain",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_invalid_domain.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since the query was destined to an excluded domain",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_no_service.label": "DNS query failed: no configured service found",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_no_service.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since there was no configured service",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_gs_down.label": "DNS query failed: global service down",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_gs_down.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since the global service was down",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_no_valid_gs_member.label": "DNS query failed: no valid global service member found ",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_no_valid_gs_member.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since no valid global service member was found",
    "schema.enum.avidefinedfilters.adf_server_dns_error_response.label": "DNS query failed: server returned error response",
    "schema.enum.avidefinedfilters.adf_server_dns_error_response.desc": "Avi Vantage received an error response from the server for  the DNS query received from the client",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_unsupported_query.label": "DNS query failed: unsupported DNS query",
    "schema.enum.avidefinedfilters.adf_client_dns_failed_unsupported_query.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since the query type was not supported",
    "schema.enum.avidefinedfilters.adf_memory_exhausted.label": "Memory Exhausted: system memory exhausted",
    "schema.enum.avidefinedfilters.adf_memory_exhausted.desc": "Avi Vantage was unable to process packets due to system memory exhaustion",
    "schema.enum.avidefinedfilters.adf_client_dns_policy_drop.label": "DNS query: policy drop",
    "schema.enum.avidefinedfilters.adf_client_dns_policy_drop.desc": "Avi Vantage was unable to serve the DNS Query  received from the client, since a configured policy has dropped  the DNS query ",
    "schema.enum.avidefinedfilters.adf_client_dns_rl_policy_hit.label": " DNS query: Request has been flagged by DNS Rate Limit policy rule.",
    "schema.enum.avidefinedfilters.adf_client_dns_rl_policy_hit.desc": "Avi Vantage has marked this Request for rate limiting.",
    "schema.enum.avidefinedfilters.adf_waf_match.label": "WAF Match: WAF matched the transaction",
    "schema.enum.avidefinedfilters.adf_waf_match.desc": "WAF matched the transaction",
    "schema.enum.avidefinedfilters.adf_client_bad_bot_classification.label": "Bot Detection Policy mapping rules classified this client as a bad bot.",
    "schema.enum.avidefinedfilters.adf_client_bad_bot_classification.desc": "Bot Detection Policy mapping rules classified this client as a bad bot.",
    "schema.enum.avidefinedfilters.adf_client_dangerous_bot_classification.label": "Bot Detection Policy mapping rules classified this client as a dangerous bot.",
    "schema.enum.avidefinedfilters.adf_client_dangerous_bot_classification.desc": "Bot Detection Policy mapping rules classified this client as a dangerous bot.",
    "schema.enum.avidefinedfilters.adf_http2_client_timedout.label": "HTTP2 Protocol Error: Client timed out",
    "schema.enum.avidefinedfilters.adf_http2_client_timedout.desc": "Client timed out",
    "schema.enum.avidefinedfilters.adf_http2_proxy_protocol_error.label": "HTTP2 Protocol Error: Proxy protocol error",
    "schema.enum.avidefinedfilters.adf_http2_proxy_protocol_error.desc": "Proxy protocol error",
    "schema.enum.avidefinedfilters.adf_http2_invalid_connection_preface.label": "HTTP2 Protocol Error: Invalid connection preface received",
    "schema.enum.avidefinedfilters.adf_http2_invalid_connection_preface.desc": "Invalid connection preface received",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_data_frame_incorrect_length.label": "HTTP2 Protocol Error: Client sent invalid DATA frame with incorrect frame length  0",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_data_frame_incorrect_length.desc": "Client sent invalid DATA frame with incorrect frame length  0",
    "schema.enum.avidefinedfilters.adf_http2_client_padded_data_frame_with_incorrect_length.label": "HTTP2 Protocol Error: Client sent padded DATA frame with incorrect frame length",
    "schema.enum.avidefinedfilters.adf_http2_client_padded_data_frame_with_incorrect_length.desc": "Client sent padded DATA frame with incorrect frame length",
    "schema.enum.avidefinedfilters.adf_http2_client_violated_conn_flow_control.label": "HTTP2 Flow Control Error: Received DATA frame length from client violated connection's available window size",
    "schema.enum.avidefinedfilters.adf_http2_client_violated_conn_flow_control.desc": "Received DATA frame length from client violated connection's available window size",
    "schema.enum.avidefinedfilters.adf_http2_client_violated_stream_flow_control.label": "HTTP2 Flow Control Error: Received DATA frame length from client violated stream's available window size",
    "schema.enum.avidefinedfilters.adf_http2_client_violated_stream_flow_control.desc": "Received DATA frame length from client violated stream's available window size",
    "schema.enum.avidefinedfilters.adf_http2_client_data_frame_half_closed_stream.label": "HTTP2 Stream Error: Client sent data on a halfclosed stream",
    "schema.enum.avidefinedfilters.adf_http2_client_data_frame_half_closed_stream.desc": "Client sent data on a halfclosed stream",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_with_incorrect_length.label": "HTTP2 Frame Size Error: Client sent HEADERS frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_with_incorrect_length.desc": "Client sent HEADERS frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_with_empty_header_block.label": "HTTP2 Frame Size Error: Client sent HEADERS frame with empty header block",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_with_empty_header_block.desc": "Client sent HEADERS frame with empty header block",
    "schema.enum.avidefinedfilters.adf_http2_client_padded_headers_frame_with_incorrect_length.label": "HTTP2 Protocol Error: Client sent padded HEADERS frame with incorrect frame length",
    "schema.enum.avidefinedfilters.adf_http2_client_padded_headers_frame_with_incorrect_length.desc": "Client sent padded HEADERS frame with incorrect frame length",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_incorrect_identifier.label": "HTTP2 Protocol Error: Client sent HEADERS frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_incorrect_identifier.desc": "Client sent HEADERS frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_stream_incorrect_dependency.label": "HTTP2 Protocol Error: Client sent HEADERS frame for stream with incorrect dependency",
    "schema.enum.avidefinedfilters.adf_http2_client_headers_frame_stream_incorrect_dependency.desc": "Client sent HEADERS frame for stream with incorrect dependency",
    "schema.enum.avidefinedfilters.adf_http2_concurrent_streams_exceeded.label": "HTTP2 Refused Stream Error: Concurrent streams exceeded",
    "schema.enum.avidefinedfilters.adf_http2_concurrent_streams_exceeded.desc": "Concurrent streams exceeded",
    "schema.enum.avidefinedfilters.adf_http2_client_stream_data_before_ack_settings.label": "HTTP2 Refused Stream Error: Client sent stream with data before settings were acknowledged",
    "schema.enum.avidefinedfilters.adf_http2_client_stream_data_before_ack_settings.desc": "Client sent stream with data before settings were acknowledged",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_too_long_size_update.label": "HTTP2 Compression Error: Client sent header block with too long size update value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_too_long_size_update.desc": "Client sent header block with too long size update value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_too_long_header_index.label": "HTTP2 Compression Error: Client sent header block with too long header index value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_too_long_header_index.desc": "Client sent header block with too long header index value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_incorrect_length.label": "HTTP2 Frame Size Error: Client sent header block with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_header_block_incorrect_length.desc": "Client sent header block with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_hpack_table_index.label": "HTTP2 Compression Error: Client sent invalid HPACK table index  0",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_hpack_table_index.desc": "Client sent invalid HPACK table index  0",
    "schema.enum.avidefinedfilters.adf_http2_client_out_of_bound_hpack_table_index.label": "HTTP2 Compression Error: Client sent out of bound HPACK table index",
    "schema.enum.avidefinedfilters.adf_http2_client_out_of_bound_hpack_table_index.desc": "Client sent out of bound HPACK table index",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_table_size_update.label": "HTTP2 Compression Error: Client sent invalid table size update",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_table_size_update.desc": "Client sent invalid table size udpate",
    "schema.enum.avidefinedfilters.adf_http2_client_header_field_too_long_length_value.label": "HTTP2 Compression Error: Client sent header field with too long length value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_field_too_long_length_value.desc": "Client sent header field with too long length value",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_field_size_limit.label": "HTTP2 Frame Size Error: client exceeded compressed header size limit",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_field_size_limit.desc": "Client exceeded compressed header size limit",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_encoded_header_field.label": "HTTP2 Compression Error: Client sent invalid encoded header field",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_encoded_header_field.desc": "Client sent invalid encoded header field",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_header_size_limit.label": "HTTP2 Error: client exceeded total header size limit.",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_header_size_limit.desc": "Client exceeded total header size limit.",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_header_name.label": "HTTP2 Protocol Error: Client sent invalid header name",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_header_name.desc": "Client sent invalid header name",
    "schema.enum.avidefinedfilters.adf_http2_client_header_with_invalid_value.label": "HTTP2 Protocol Error: Client sent header with invalid value",
    "schema.enum.avidefinedfilters.adf_http2_client_header_with_invalid_value.desc": "Client sent header with invalid value",
    "schema.enum.avidefinedfilters.adf_http2_client_unknown_pseudo_header.label": "HTTP2 Protocol Error: Client sent unknown pseudoheader",
    "schema.enum.avidefinedfilters.adf_http2_client_unknown_pseudo_header.desc": "Client sent unknown pseudoheader",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_path_header.label": "HTTP2 Protocol Error: Client sent duplicate :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_path_header.desc": "Client sent duplicate :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_path_header.label": "HTTP2 Protocol Error: Client sent empty :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_path_header.desc": "Client sent empty :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_path_header.label": "HTTP2 Protocol Error: Client sent invalid :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_path_header.desc": "Client sent invalid :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_method_header.label": "HTTP2 Protocol Error: Client sent duplicate :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_method_header.desc": "Client sent duplicate :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_method_header.label": "HTTP2 Protocol Error: Client sent empty :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_method_header.desc": "Client sent empty :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_method_header.label": "HTTP2 Protocol Error: Client sent invalid :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_method_header.desc": "Client sent invalid :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_scheme_header.label": "HTTP2 Protocol Error: Client sent duplicate :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_duplicate_scheme_header.desc": "Client sent duplicate :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_scheme_header.label": "HTTP2 Protocol Error: Client sent empty :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_scheme_header.desc": "Client sent empty :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_method_header.label": "HTTP2 Protocol Error: Client sent no :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_method_header.desc": "Client sent no :method header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_scheme_header.label": "HTTP2 Protocol Error: Client sent no :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_scheme_header.desc": "Client sent no :scheme header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_path_header.label": "HTTP2 Protocol Error: Client sent no :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_no_path_header.desc": "Client sent no :path header",
    "schema.enum.avidefinedfilters.adf_http2_client_prematurely_closed_stream.label": "HTTP2 Miscellaneous Error: Client prematurely closed stream",
    "schema.enum.avidefinedfilters.adf_http2_client_prematurely_closed_stream.desc": "Client prematurely closed stream",
    "schema.enum.avidefinedfilters.adf_http2_client_prematurely_closed_connection.label": "HTTP2 Miscellaneous Error: Client prematurely closed connection",
    "schema.enum.avidefinedfilters.adf_http2_client_prematurely_closed_connection.desc": "Client prematurely closed connection",
    "schema.enum.avidefinedfilters.adf_http2_client_larger_data_body_than_declared.label": "HTTP2 Protocol Error: Client intended to send body data larger than declared",
    "schema.enum.avidefinedfilters.adf_http2_client_larger_data_body_than_declared.desc": "Client intended to send body data larger than declared",
    "schema.enum.avidefinedfilters.adf_http2_client_large_chunked_body.label": "HTTP2 Protocol Error: Client intended to send too large chunked body",
    "schema.enum.avidefinedfilters.adf_http2_client_large_chunked_body.desc": "Client intended to send too large chunked body",
    "schema.enum.avidefinedfilters.adf_http2_negative_window_update.label": "HTTP2 Miscellaneous Error: Negative window update",
    "schema.enum.avidefinedfilters.adf_http2_negative_window_update.desc": "HTTP2 Negative window update",
    "schema.enum.avidefinedfilters.adf_http2_send_window_flow_control_error.label": "HTTP2 Flow Control Error: Send Window larger than allowed",
    "schema.enum.avidefinedfilters.adf_http2_send_window_flow_control_error.desc": "Send Window larger than allowed",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_continuation_frame.label": "HTTP2 Protocol Error: Client sent unexpected CONTINUATION frame",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_continuation_frame.desc": "Client sent unexpected CONTINUATION frame",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_incorrect_length.label": "HTTP2 Protocol Error: Client sent WINDOW_UPDATE frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_incorrect_length.desc": "Client sent WINDOW_UPDATE frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_frame_incorrect_increment.label": "HTTP2 Protocol Error: Client sent WINDOW_UPDATE frame with incorrect window increment 0",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_frame_incorrect_increment.desc": "Client sent WINDOW_UPDATE frame with incorrect window increment 0",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_frame_increment_not_allowed_for_window.label": "HTTP2 Flow Control Error: Client violated flow control for stream by sending WINDOW_UPDATE frame with window increment disallowed for window",
    "schema.enum.avidefinedfilters.adf_http2_client_window_update_frame_increment_not_allowed_for_window.desc": "Client violated flow control for stream by sending WINDOW_UPDATE frame with window increment disallowed for window",
    "schema.enum.avidefinedfilters.adf_http2_client_goaway_frame_incorrect_length.label": "HTTP2 Frame Size Error: Client sent GOAWAY frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_goaway_frame_incorrect_length.desc": "Client sent GOAWAY frame  with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_ping_frame_incorrect_length.label": "HTTP2 Frame Size Error: Client sent PING frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_ping_frame_incorrect_length.desc": "Client sent PING frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_push_promise.label": "HTTP2 Protocol Error: Client sent PUSH PROMISE frame",
    "schema.enum.avidefinedfilters.adf_http2_client_push_promise.desc": "Client sent PUSH PROMISE frame",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_max_frame_size.label": "HTTP2 Protocol Error: Client sent SETTINGS frame with incorrect MAX_FRAME_SIZE",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_max_frame_size.desc": "Client sent SETTINGS frame with incorrect MAX_FRAME_SIZE",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_iniial_window_size.label": "HTTP2 Flow Control Error: Client sent SETTINGS frame with incorrect INITIAL_WINDOW_SIZE value",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_iniial_window_size.desc": "Client sent SETTINGS frame with incorrect INITIAL_WINDOW_SIZE value",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_length.label": "HTTP2 Frame Size Error: Client sent SETTINGS frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_incorrect_length.desc": "Client sent SETTINGS frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_ack_flag_nonzero_length.label": "HTTP2 Frame Size Error: Client sent SETTINGS frame with ACK flag and nonzero length",
    "schema.enum.avidefinedfilters.adf_http2_client_settings_frame_ack_flag_nonzero_length.desc": "Client sent SETTINGS frame with ACK flag and nonzero length",
    "schema.enum.avidefinedfilters.adf_http2_client_rst_stream_frame_incorrect_length.label": "HTTP2 Frame Size Error: Client sent RST_STREAM frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_rst_stream_frame_incorrect_length.desc": "Client sent RST_STREAM frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_rst_stream_frame_incorrect_identifier.label": "HTTP2 Protocol Error: Client sent RST_STREAM frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_rst_stream_frame_incorrect_identifier.desc": "Client sent RST_STREAM frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_dependency.label": "HTTP2 Protocol Error: Client sent PRIORITY frame with incorrect dependency",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_dependency.desc": "Client sent PRIORITY frame with incorrect dependency",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_identifier.label": "HTTP2 Protocol Error: Client sent PRIORITY frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_identifier.desc": "Client sent PRIORITY frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_length.label": "HTTP2 Frame Size Error: Client sent PRIRORITY frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_priority_frame_incorrect_length.desc": "Client sent PRIORITY frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_client_continuation_frame_incorrect_identifier.label": "HTTP2 Protocol Error: Client sent CONTINUATION frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_continuation_frame_incorrect_identifier.desc": "Client sent CONTINUATION frame with incorrect identifier",
    "schema.enum.avidefinedfilters.adf_http2_client_continuation_frame_expected_inappropriate_frame.label": "HTTP2 Protocol Error: Client sent inappropriate frame while CONTINUATION frame was expected",
    "schema.enum.avidefinedfilters.adf_http2_client_continuation_frame_expected_inappropriate_frame.desc": "Client sent inappropriate frame while CONTINUATION frame was expected",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_header.label": "HTTP2 Protocol Error: Client sent invalid header",
    "schema.enum.avidefinedfilters.adf_http2_client_invalid_header.desc": "Client sent invalid header",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_data_frame.label": "HTTP2 Protocol Error: Client sent DATA frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_data_frame.desc": "Client sent DATA frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_rst_frame.label": "HTTP2 Protocol Error: Client sent RST frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_rst_frame.desc": "Client sent RST frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_window_update_frame.label": "HTTP2 Protocol Error: Client sent WINDOW_UPDATE frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_unexpected_window_update_frame.desc": "Client sent WINDOW_UPDATE frame on an idle stream.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_ping_nonzero_id.label": "HTTP2 Protocol Error: Client sent PING frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_ping_nonzero_id.desc": "Client sent PING frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_settings_nonzero_id.label": "HTTP2 Protocol Error: Client sent SETTINGS frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_settings_nonzero_id.desc": "Client sent SETTINGS frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_goaway_nonzero_id.label": "HTTP2 Protocol Error: Client sent GOAWAY frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_goaway_nonzero_id.desc": "Client sent GOAWAY frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_unexpected_pseudo_header.label": "HTTP2 Protocol Error: Client sent a pseudoheader after regular header.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_unexpected_pseudo_header.desc": "Client sent a pseudoheader after regular header.",
    "schema.enum.avidefinedfilters.adf_http2_client_data_frame_incorrect_identifier.label": "HTTP2 Protocol Error: Client sent DATA frame with incorrect identifier.",
    "schema.enum.avidefinedfilters.adf_http2_client_data_frame_incorrect_identifier.desc": "Client sent DATA frame with incorrect identifier.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_connection_specific_hdr.label": "HTTP2 Protocol Error: Client sent connectionspecific headers in header frame.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_connection_specific_hdr.desc": "Client sent connectionspecific headers in header frame.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_incorrect_te_hdr.label": "HTTP2 Protocol Error: Client sent Transfer Encoding header with incorrect value in header frame.",
    "schema.enum.avidefinedfilters.adf_http2_client_header_frame_incorrect_te_hdr.desc": "Client sent TE header with incorrect value in header frame.",
    "schema.enum.avidefinedfilters.adf_http2_client_control_frame_flood_detected.label": "HTTP2 Flood Detected: Too many control frames need to be sent back to client.",
    "schema.enum.avidefinedfilters.adf_http2_client_control_frame_flood_detected.desc": "Too many control frames need to be sent back to client.",
    "schema.enum.avidefinedfilters.adf_http2_frame_to_client_flood_detected.label": "HTTP2 Flood Detected: Too many frames are queued waiting to be sent to client.",
    "schema.enum.avidefinedfilters.adf_http2_frame_to_client_flood_detected.desc": "Too many data frames are queued waiting to be sent to client.",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_data_frame_flood_detected.label": "HTTP2 Flood Detected: Client sent too many empty data frames without End of Stream flag set.",
    "schema.enum.avidefinedfilters.adf_http2_client_empty_data_frame_flood_detected.desc": "Client sent too many empty frames without End of Stream flag set.",
    "schema.enum.avidefinedfilters.adf_http2_client_zero_head_name.label": "HTTP2 Protocol Error: Client sent zero length header name.",
    "schema.enum.avidefinedfilters.adf_http2_client_zero_head_name.desc": "Client sent zero length header name.",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_single_header_size_limit.label": "HTTP2 Error: client exceeded single header size limit.",
    "schema.enum.avidefinedfilters.adf_http2_client_exceeded_http2_max_single_header_size_limit.desc": "Client exceeded single header size limit.",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_datascript_reset_conn.label": "Connection closed abnormally: connection was closed by datascript",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_datascript_reset_conn.desc": "The connection was reset by adatascript installed by user",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_security_action_close_conn.label": "Connection closed abnormally: connection was closed by HTTP policy action",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_security_action_close_conn.desc": "The connection was reset due to a close action in HTTP security policy on the VS.",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_security_rate_limit_action_close_conn.label": "Connection closed abnormally: connection was closed by HTTP policy ratelimit action",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_security_rate_limit_action_close_conn.desc": "The connection was reset due to a close action in HTTP security policy while ratelimiting flows on VS",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_missing_token_action_close_conn.label": "Connection closed abnormally: connection was closed while trying to find the configured tokens in URL",
    "schema.enum.avidefinedfilters.adf_user_delete_operation_http_rule_missing_token_action_close_conn.desc": "The connection was reset on failure to find configured tokens in url",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_host_in_request_line.label": "Request abnormal event: client sent an invalid host in the request line",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_host_in_request_line.desc": "Found an invalid host in the request line while parsing.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_received_version_less_than_10.label": "Request abnormal event: client sent a request with version less than 1.0",
    "schema.enum.avidefinedfilters.adf_http_bad_request_received_version_less_than_10.desc": "Found invalid version less than 1.0 in request.",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_datascript_response_returned_4xx.label": "Datascript error: a datascript attached to the VS returned a 4xx response",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_datascript_response_returned_4xx.desc": "Datascript attached to the VS returned a 4xx response.",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_rum_flagged_invalid_method.label": "Request abnormal event: RUM module cannot handle HTTP request method",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_rum_flagged_invalid_method.desc": "RUM can only handle GET and POST. Incoming request method isn't one of them.",
    "schema.enum.avidefinedfilters.adf_http_content_length_hdr_with_unsupported_method.label": "Request abnormal event: ContentLength header sent on request method with no body semantics.",
    "schema.enum.avidefinedfilters.adf_http_content_length_hdr_with_unsupported_method.desc": "Client sent a ContentLength header on a request, where the method has no defined semantics for a request body. (Like GET or HEAD)",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_unsupported_trace_method.label": "Request abnormal event: client sent HTTP TRACE method which is currently not supported",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_unsupported_trace_method.desc": "Client sent HTTP TRACE method which is currently not supported",
    "schema.enum.avidefinedfilters.adf_http_request_timeout_waiting_for_client.label": "Connection abnormal event: request timed out while waiting for client",
    "schema.enum.avidefinedfilters.adf_http_request_timeout_waiting_for_client.desc": "Request timed out while waiting for client",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_content_length.label": "Request abnormal event: client sent an invalid content length",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_content_length.desc": "Client sent an invalid content length",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_http11_without_host_hdr.label": "Request abnormal event: client sent a HTTP 1.1 request without Host header",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_http11_without_host_hdr.desc": "Client sent a HTTP 1.1 request without Host header",
    "schema.enum.avidefinedfilters.adf_http_bad_request_failed_to_parse_uri.label": "Request abnormal event: client sent a URI which failed to parse",
    "schema.enum.avidefinedfilters.adf_http_bad_request_failed_to_parse_uri.desc": " Failed to parse a URI received from the client",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_line.label": "Request abnormal event: client sent an invalid header line",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_line.desc": "The newline character was missing after the carriage returnin a header line",
    "schema.enum.avidefinedfilters.adf_http_bad_request_error_while_reading_client_headers.label": "Request abnormal event: there was an error while reading client headers",
    "schema.enum.avidefinedfilters.adf_http_bad_request_error_while_reading_client_headers.desc": "There was an error while reading client headers",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_duplicate_header.label": "Request abnormal event: client sent duplicate header",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_duplicate_header.desc": "Among the list of headers sent by client, there was a duplicate",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_host_header.label": "Request abnormal event: client sent invalid host header",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_host_header.desc": "Host header sent by client is invalid",
    "schema.enum.avidefinedfilters.adf_http_not_implemented_client_sent_unknown_transfer_encoding.label": "Request abnormal event: client sent unknown transfer encoding",
    "schema.enum.avidefinedfilters.adf_http_not_implemented_client_sent_unknown_transfer_encoding.desc": "Client sent unknown transfer encoding",
    "schema.enum.avidefinedfilters.adf_http_bad_request_requested_server_name_differs.label": "Request abnormal event: client attempted to request a different server name",
    "schema.enum.avidefinedfilters.adf_http_bad_request_requested_server_name_differs.desc": "Client attempted to request a server name that wasdifferent from the one that was negotiated.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_chunked_body.label": "Request abnormal event: client sent invalid chunked body",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_sent_invalid_chunked_body.desc": "Client sent invalid chunked body",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_in_spdy.label": "Request abnormal event: encountered an invalid header during SPDY header parsing",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_in_spdy.desc": "Encountered an invalid header during SPDY header parsing",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_block_in_spdy.label": "Request abnormal event: client sent invalid header block while processing SPDY stream",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_header_block_in_spdy.desc": "Client sent invalid header block while processing SPDY stream",
    "schema.enum.avidefinedfilters.adf_http_bad_request_data_error_in_spdy.label": "Request abnormal event: error while processing SPDY data",
    "schema.enum.avidefinedfilters.adf_http_bad_request_data_error_in_spdy.desc": "Error while processing SPDY data",
    "schema.enum.avidefinedfilters.adf_http_bad_request_no_method_uri_or_prot_in_req_create_spdy.label": "Request abnormal event: no method or uri or protocol seen while constructing SPDY request",
    "schema.enum.avidefinedfilters.adf_http_bad_request_no_method_uri_or_prot_in_req_create_spdy.desc": "No method or uri or protocol seen while constructing SPDY request",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_prematurely_closed_spdy_stream.label": "Connection closed abnormally: client prematurely closed SPDY stream",
    "schema.enum.avidefinedfilters.adf_http_bad_request_client_prematurely_closed_spdy_stream.desc": "Client prematurely closed SPDY stream",
    "schema.enum.avidefinedfilters.adf_http_bad_request_data_error_in_spdy_read_req_body.label": "Request abnormal event: data error while reading SPDY request body",
    "schema.enum.avidefinedfilters.adf_http_bad_request_data_error_in_spdy_read_req_body.desc": "Data error while reading SPDY request body",
    "schema.enum.avidefinedfilters.adf_http_bad_request_cert_error.label": "SSL Error: client SSL certificate verify error",
    "schema.enum.avidefinedfilters.adf_http_bad_request_cert_error.desc": "Client SSL certificate verify error",
    "schema.enum.avidefinedfilters.adf_http_bad_request_plain_http_request_sent_on_https_port.label": "SSL Error: client sent a plain request on HTTPS port",
    "schema.enum.avidefinedfilters.adf_http_bad_request_plain_http_request_sent_on_https_port.desc": "Client sent a plain request on HTTPS port",
    "schema.enum.avidefinedfilters.adf_http_bad_request_plain_http_request_sent_on_https_port_reset_conn.label": "SSL Error: connection reset because client sent a plain request on HTTPS port",
    "schema.enum.avidefinedfilters.adf_http_bad_request_plain_http_request_sent_on_https_port_reset_conn.desc": "Connection reset because client sent a plain request on HTTPS port",
    "schema.enum.avidefinedfilters.adf_http_bad_request_no_cert_error.label": "SSL Error: client sent no required SSL certificate",
    "schema.enum.avidefinedfilters.adf_http_bad_request_no_cert_error.desc": "Client sent no required SSL certificate",
    "schema.enum.avidefinedfilters.adf_http_bad_request_header_too_large.label": "Request abnormal event: client sent too long request or header",
    "schema.enum.avidefinedfilters.adf_http_bad_request_header_too_large.desc": "Client sent too long request or header",
    "schema.enum.avidefinedfilters.adf_server_high_response_time_l7.label": "Connection abnormal event: HTTP Server took longer than configured threshold to respond",
    "schema.enum.avidefinedfilters.adf_server_high_response_time_l7.desc": "HTTP Server took longer than configured threshold to respond",
    "schema.enum.avidefinedfilters.adf_server_high_response_time_l4.label": "Connection abnormal event: TCP Server took longer than expected to respond",
    "schema.enum.avidefinedfilters.adf_server_high_response_time_l4.desc": "TCP Server took longer than expected to respond",
    "schema.enum.avidefinedfilters.adf_cookie_size_greater_than_max.label": "Request abnormal event: cookie size in the incoming request was greater than the maximum possible size",
    "schema.enum.avidefinedfilters.adf_cookie_size_greater_than_max.desc": "Cookie size in the incoming request was greater than the maximum possible size",
    "schema.enum.avidefinedfilters.adf_cookie_size_less_than_min_cookie_len.label": "Request abnormal event: cookie size in the incoming request was lesser than the minimum expected cookie size",
    "schema.enum.avidefinedfilters.adf_cookie_size_less_than_min_cookie_len.desc": "Cookie size in the incoming request was lesser than the minimum expected cookie size",
    "schema.enum.avidefinedfilters.adf_persistence_profile_keys_not_configured.label": "Persistence Error: persistence Profile Keys were not configured",
    "schema.enum.avidefinedfilters.adf_persistence_profile_keys_not_configured.desc": "Persistence Profile Keys were not configured",
    "schema.enum.avidefinedfilters.adf_persistence_cookie_version_mismatch.label": "Request abnormal event: cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_persistence_cookie_version_mismatch.desc": "Cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_cookie_absent_from_keys_in_persistence_profile.label": "Persistence Error: cookie key is not in the list of keys configured in the persistence profile",
    "schema.enum.avidefinedfilters.adf_cookie_absent_from_keys_in_persistence_profile.desc": "Cookie key is not in the list of keys configured in the persistence profile",
    "schema.enum.avidefinedfilters.adf_gslb_site_persistence_remote_site_down.label": "Persistence Error: request was intended for a remote site, but remote site was down",
    "schema.enum.avidefinedfilters.adf_gslb_site_persistence_remote_site_down.desc": "Request was intended for a remote site, but remote site was down",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_datascript_response_returned_5xx.label": "Datascript Error: a datascript attached to the VS returned a 5xx response.",
    "schema.enum.avidefinedfilters.adf_http_not_allowed_datascript_response_returned_5xx.desc": "A datascript attached to the VS returned a 5xx response.",
    "schema.enum.avidefinedfilters.adf_server_upstream_timeout.label": "Connection abnormal event: HTTP Server took longer than configured time to respond",
    "schema.enum.avidefinedfilters.adf_server_upstream_timeout.desc": "HTTP Server took longer than configured time to respond",
    "schema.enum.avidefinedfilters.adf_server_upstream_read_error.label": "Upstream Error: data error while reading from server",
    "schema.enum.avidefinedfilters.adf_server_upstream_read_error.desc": "Data error while reading from server",
    "schema.enum.avidefinedfilters.adf_server_upstream_resolver_error.label": "Connection abnormal event: can't resolve server address",
    "schema.enum.avidefinedfilters.adf_server_upstream_resolver_error.desc": "Can't resolve server address",
    "schema.enum.avidefinedfilters.adf_sip_invalid_message_from_client.label": "SIP error: Can not parse message from a client",
    "schema.enum.avidefinedfilters.adf_sip_invalid_message_from_client.desc": "Can not parse SIP message sent by a client",
    "schema.enum.avidefinedfilters.adf_sip_message_update_failed.label": "SIP error: Can not update SIP message",
    "schema.enum.avidefinedfilters.adf_sip_message_update_failed.desc": "Can not update SIP message",
    "schema.enum.avidefinedfilters.adf_sip_server_unknown_callid.label": "SIP error: Server sent a SIP message with unknown CallId header",
    "schema.enum.avidefinedfilters.adf_sip_server_unknown_callid.desc": "Server sent a SIP message with unknown CallId header",
    "schema.enum.avidefinedfilters.adf_sip_request_failed.label": "SIP error: request failed",
    "schema.enum.avidefinedfilters.adf_sip_request_failed.desc": "SIP request failed",
    "schema.enum.avidefinedfilters.adf_sip_request_timedout.label": "SIP error: Either app transaction timeout or connection idle timeout occurred in middle of transaction",
    "schema.enum.avidefinedfilters.adf_sip_request_timedout.desc": "SIP request timed out",
    "schema.enum.avidefinedfilters.adf_sip_conn_idle_timedout.label": "SIP Proxy Profile Timeout: connection idle timeout occurred, closing the connection",
    "schema.enum.avidefinedfilters.adf_sip_conn_idle_timedout.desc": "Proxy profile connection timeout occurred",
    "schema.enum.avidefinedfilters.adf_sip_transaction_timedout.label": "SIP Proxy Profile Timeout: transaction timeout occurred, closing server side connection",
    "schema.enum.avidefinedfilters.adf_sip_transaction_timedout.desc": "Proxy profile transaction timeout occurred",
    "schema.enum.avidefinedfilters.adf_sip_svr_udp_port_not_reachable.label": "SIP server connectivity failed: server UDP port unreachable",
    "schema.enum.avidefinedfilters.adf_sip_svr_udp_port_not_reachable.desc": "ICMP port unreachable was received when client's message was sent to the server. Either the server is not listening to UDP on the port or duplicate server IP in the network.",
    "schema.enum.avidefinedfilters.adf_sip_clt_udp_port_not_reachable.label": "SIP client connectivity failed: client UDP port unreachable",
    "schema.enum.avidefinedfilters.adf_sip_clt_udp_port_not_reachable.desc": "ICMP port unreachable was received when server's message was sent to the client. Either the client has closed the UDP port or duplicate client IP in the network.",
    "schema.enum.avidefinedfilters.adf_sip_invalid_message_from_server.label": "SIP error: Can not parse message from server",
    "schema.enum.avidefinedfilters.adf_sip_invalid_message_from_server.desc": "Can not parse SIP message sent by server",
    "schema.enum.avidefinedfilters.adf_l4_datascript_drop.label": "L4 Datascript Action: Drop packet",
    "schema.enum.avidefinedfilters.adf_l4_datascript_drop.desc": "Packet dropped due to L4 Datascript action",
    "schema.enum.avidefinedfilters.adf_datascript_significance.label": "DataScript Significant Log.",
    "schema.enum.avidefinedfilters.adf_datascript_significance.desc": "Request marked significant by DataScript.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_version_mismatch.label": "Request abnormal event: SAML authentication cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_saml_cookie_version_mismatch.desc": "SAML authentication cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_saml_cookie_keys_not_configured.label": "SAML authentication error: cookie keys were not configured in the SAML authentication policy.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_keys_not_configured.desc": "Cookie keys were not configured in the SAML authentication policy.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_absent_from_keys_in_saml_auth_policy.label": "SAML authentication Error: cookie key is not in the list of keys configured in the SAML authentication policy.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_absent_from_keys_in_saml_auth_policy.desc": "Cookie key is not in the list of keys configured in the SAML authentication policy.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_invalid.label": "SAML authentication Error: invalid handshake cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_invalid.desc": "Received an invalid cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_decryption_error.label": "SAML authentication Error: failed to decrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_decryption_error.desc": "Failed to decrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_encryption_error.label": "SAML authentication Error: failed to encrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_encryption_error.desc": "Failed to encrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_decode_error.label": "SAML authentication Error: failed to decode the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_decode_error.desc": "Failed to decode the cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_session_cookie_greater_than_max.label": "SAML warning: SAML assertion attribute value is larger than the maximum session cookie size.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_session_cookie_greater_than_max.desc": "SAML assertion attribute values larger than the maximum session cookie size.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_handshake_cookie_greater_than_max.label": "SAML warning: SAML Handshake cookie is greater than the maximum cookie size.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_handshake_cookie_greater_than_max.desc": "SAML Handshake cookie is greater than the maximum cookie size.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_does_not_match_request_id.label": "SAML authentication error: SAML Assertion does not match Request ID  awaiting response.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_does_not_match_request_id.desc": "SAML authentication error: SAML Assertion does not match Request ID  awaiting response.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_unsupported_method.label": "SAML authentication error: SAML authentication can not be initiated for nonGET methods.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_unsupported_method.desc": "SAML authentication doesn't support any HTTP method other than GET for requests coming in with an expired or invalid session cookie.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_session_cookie_timeout.label": "SAML authentication warning: SAML session cookie has expired. Reauthentication is required.",
    "schema.enum.avidefinedfilters.adf_saml_cookie_session_cookie_timeout.desc": "SAML session cookie has expired. Reauthentication is required.",
    "schema.enum.avidefinedfilters.adf_saml_acs_url_mismatch.label": "SAML authentication error: Assertion Consumer Service (ACS) URL doesn't match the one configured on VS.",
    "schema.enum.avidefinedfilters.adf_saml_acs_url_mismatch.desc": "Assertion Consumer Service (ACS) URL doesn't match the one configured on VS.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_no_body.label": "SAML authentication error: Received an empty assertion from IDP.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_no_body.desc": "Assertion is empty.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_invalid.label": "SAML authentication error: Failed to process SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_invalid.desc": "Failed to process SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_attribute_error.label": "SAML authentication error: Failed to extract attributes from SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_assertion_attribute_error.desc": "Failed to extract attributes from SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_login_error.label": "SAML authentication error: Unable to get SAML login information from lasso server.",
    "schema.enum.avidefinedfilters.adf_saml_login_error.desc": "Unable to get SAML login information from lasso server",
    "schema.enum.avidefinedfilters.adf_saml_decrypt_assertion_failure.label": "SAML authentication error: Failed to decrypt SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_decrypt_assertion_failure.desc": "Failed to decrypt SAML assertion.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_invalid_msg.label": "SAML authentication error: Invalid SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_invalid_msg.desc": "Invalid SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_status_code.label": "SAML authentication error: Status code is missing in the SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_status_code.desc": "Status code is missing in the SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_request_denied.label": "SAML Request Denied: The IDP is able to process the request, but has chosen not to respond due to concerns about the security context of the request message.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_request_denied.desc": "The IDP is able to process the request, but has chosen not to respond due to concerns about the security context of the request message.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_status_not_success.label": "SAML authentication error: Status code is not Success.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_status_not_success.desc": "Status code is not Success.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_unsupported_profile.label": "SAML unsupported profile: Only HTTPPost binding is supported.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_unsupported_profile.desc": "SAML unsupported profile: Only HTTPPost binding is supported.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_response.label": "SAML authentication error: Missing SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_response.desc": "Missing SAML Response.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_assertion_replay.label": "SAML authentication error: SAML Assertion Replay.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_login_error_assertion_replay.desc": "SAML Assertion replay.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_name_identifier.label": "SAML authentication error: Name Identifier is missing from the SAML Assertion.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_name_identifier.desc": "Name Identifier is missing from the SAML Assertion.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_server.label": "SAML authentication error: Lasso server is not available in the Lasso Profile .",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_missing_server.desc": "Lasso server is not available in the Lasso Profile .",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_invalid_request.label": "SAML authentication error: The SAML request received is not SAML P2 AuthN Request.",
    "schema.enum.avidefinedfilters.adf_saml_lasso_profile_error_invalid_request.desc": "The SAML request received is not SAML P2 AuthN Request.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_error.label": "An error occurred during SAML authentication process.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_error.desc": "An error occurred during SAML authentication process.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_rule_nomatch.label": "None of the SAML authentication policy rules matched.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_rule_nomatch.desc": "None of the SAML authentication policy rules matched.",
    "schema.enum.avidefinedfilters.adf_saml_authorization_rule_nomatch.label": "None of the SAML authorization policy rules matched.",
    "schema.enum.avidefinedfilters.adf_saml_authorization_rule_nomatch.desc": "None of the SAML authorization policy rules matched.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_skipped_rule_match.label": "SAML authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_skipped_rule_match.desc": "SAML authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_saml_authorization_failed_rule_match.label": "SAML authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_saml_authorization_failed_rule_match.desc": "SAML authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_disabled_by_ds.label": "SAML authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_saml_authentication_disabled_by_ds.desc": "SAML authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_sso_authentication_rule_nomatch.label": "None of the authentication policy rules matched.",
    "schema.enum.avidefinedfilters.adf_sso_authentication_rule_nomatch.desc": "None of the authentication policy rules matched.",
    "schema.enum.avidefinedfilters.adf_sso_authorization_rule_nomatch.label": "None of the authorization policy rules matched.",
    "schema.enum.avidefinedfilters.adf_sso_authorization_rule_nomatch.desc": "None of the authorization policy rules matched.",
    "schema.enum.avidefinedfilters.adf_sso_authentication_skipped_rule_match.label": "Authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_sso_authentication_skipped_rule_match.desc": "Authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_sso_authorization_failed_rule_match.label": "Authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_sso_authorization_failed_rule_match.desc": "Authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_saml_auth_invalid_post_request.label": "Invalid POST request to single signon url with valid session cookie.",
    "schema.enum.avidefinedfilters.adf_saml_auth_invalid_post_request.desc": "Invalid POST request to single signon url with valid session cookie.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_occurrence.label": "HTTP Server Reselect triggered: At least one server did not respond correctly.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_occurrence.desc": "HTTP Server Reselect was triggered suggesting that at least one server did not respond correctly.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_skip_v1_server_after_sent_v2_req.label": "HTTP Server Reselect triggered: Skip the HTTP1.x server after sending an HTTP2 request.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_skip_v1_server_after_sent_v2_req.desc": "HTTP Server Reselect triggered: Skip the HTTP1.x server after sending an HTTP2 request.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_skip_v2_server_after_sent_v1_req.label": "HTTP Server Reselect triggered: Skip the HTTP2 server after sending an HTTP1.x request.",
    "schema.enum.avidefinedfilters.adf_http_server_reselect_skip_v2_server_after_sent_v1_req.desc": "HTTP Server Reselect triggered: Skip the HTTP2 server after sending an HTTP1.x request.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_report.label": "Request flagged: An HTTP security policy with a 'report only' rate limit action flagged this request.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_report.desc": "The request was flagged by a 'report only' action in an HTTP security policy while ratelimiting flows on VS.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_redirect.label": "Request ended abnormally: Request was redirected by an HTTP security policy with a 'redirect' rate limit action.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_redirect.desc": "The client was redirected by a 'redirect' action in an HTTP security policy while ratelimiting flows on VS.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_response.label": "Request ended abnormally: Request was sent a local response by an HTTP security policy with a 'local response' rate limit action.",
    "schema.enum.avidefinedfilters.adf_http_rule_security_rate_limit_action_response.desc": "A response was sent to the client by a 'local response' action in an HTTP security policy while ratelimiting flows on VS.",
    "schema.enum.avidefinedfilters.adf_http_rule_redirect_action_failed.label": "Redirect error: URI does not contain the tokens specified in rewriteredirect action. Request was sent unmodified.",
    "schema.enum.avidefinedfilters.adf_http_rule_redirect_action_failed.desc": "The request URI does not contain the tokens specified in the redirect action.",
    "schema.enum.avidefinedfilters.adf_http_rule_redirect_action_failed_with_ip_address.label": "Redirect error: URI contains a valid IPv4 address in rewriteredirect action which cannot be tokenized. Request was sent unmodified.",
    "schema.enum.avidefinedfilters.adf_http_rule_redirect_action_failed_with_ip_address.desc": "The request URI contains a valid IPv4 address in the redirect action so URI can't be tokenized.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_unexpected_frame.label": "HTTP2 Protocol Error: Server sent unexpected frame before headers.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_unexpected_frame.desc": "Server sent unexpected frame before headers.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_unknown_stream.label": "HTTP2 Protocol Error: Server sent frame for unknown stream.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_unknown_stream.desc": "Server sent frame for unknown stream.",
    "schema.enum.avidefinedfilters.adf_http2_server_rejected_request_with_error.label": "HTTP2 Protocol Error: Server rejected request.",
    "schema.enum.avidefinedfilters.adf_http2_server_rejected_request_with_error.desc": "Server rejected request.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_with_error.label": "HTTP2 Protocol Error: Server Sent GOAWAY frame with error.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_with_error.desc": "Server Sent GOAWAY frame with error.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_unexpected_push_promise.label": "HTTP2 Protocol Error: Server sent unexpected push promise frame.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_unexpected_push_promise.desc": "Server sent unexpected push promise frame.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_header.label": "HTTP2 Protocol Error: Server sent invalid header.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_header.desc": "Server sent invalid header.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_dup_status_header.label": "HTTP2 Protocol Error: Server sent duplicate status.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_dup_status_header.desc": "Server sent duplicate status.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_status_header.label": "HTTP2 Protocol Error: Server sent invalid status.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_status_header.desc": "Server sent invalid status.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_large_header_name_len.label": "HTTP2 Protocol Error: Server sent header name length larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_large_header_name_len.desc": "Server sent header name length larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_no_status_header.label": "HTTP2 Protocol Error: Didn not receive status from Server.",
    "schema.enum.avidefinedfilters.adf_http2_server_no_status_header.desc": "Did not receive status from Server.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_data_for_unknown_stream.label": "HTTP2 Protocol Error: Server sent data for unknown stream.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_data_for_unknown_stream.desc": "Server sent data for unknown stream.",
    "schema.enum.avidefinedfilters.adf_http2_server_stream_flow_control_violation.label": "HTTP2 Flow Control Error: Server sent DATA frame length which violated stream's available window size.",
    "schema.enum.avidefinedfilters.adf_http2_server_stream_flow_control_violation.desc": "Server sent DATA frame length which violated stream's available window size.",
    "schema.enum.avidefinedfilters.adf_http2_server_conn_flow_control_violation.label": "HTTP2 Flow Control Error: Server sent DATA frame length which violated connection's available window size.",
    "schema.enum.avidefinedfilters.adf_http2_server_conn_flow_control_violation.desc": "Server sent DATA frame length which violated connection's available window size.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_trailer.label": "HTTP2 Protocol Error: Server sent invalid trailer.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_trailer.desc": "Server sent invalid trailer.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_trailer_no_endstream_flag.label": "HTTP2 Protocol Error: Server sent trailer without end stream flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_trailer_no_endstream_flag.desc": "Server sent trailer without end stream flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_short_frame.label": "HTTP2 Frame Size Error: Server sent frame shorter than the expected length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_short_frame.desc": "Server sent frame shorter than the expected length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_long_padding.label": "HTTP2 Frame Size Error: Server sent frame with padding that was too long.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_long_padding.desc": "Server sent frame with padding that was too long.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_large_frame.label": "HTTP2 Frame Size Error: Server sent frame larger than the expected length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_large_frame.desc": "Server sent frame larger than the expected length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_invalid_length.label": "HTTP2 Frame Size Error: Server sent frame with invalid length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_frame_invalid_length.desc": "Server sent frame with invalid length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_truncated_header.label": "HTTP2 Frame Size Error: Server sent truncated header.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_truncated_header.desc": "Server sent truncated header.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_table_index.label": "HTTP2 Compression Error: Server sent invalid HPACK table index.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_table_index.desc": "Server sent invalid HPACK table index.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_table_size_update.label": "HTTP2 Compression Error: Server sent header block with invalid table size update.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_table_size_update.desc": "Server sent header block with invalid table size update.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_table_index_cont_flag.label": "HTTP2 Compression Error: Server sent table index with continuation flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_table_index_cont_flag.desc": "Server sent table index with continuation flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_zero_header_name_len.label": "HTTP2 Protocol Error: Server sent zero header name length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_zero_header_name_len.desc": "Server sent zero header name length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_encoded_header.label": "HTTP2 Compression Error: Server sent invalid encoded header field.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_invalid_encoded_header.desc": "Server sent invalid encoded header field.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_rst_invalid_length.label": "HTTP2 Frame Size Error: Server sent RST_STREAM frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_rst_invalid_length.desc": "Server sent RST_STREAM frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_nonzero_id.label": "HTTP2 Protocol Error: Server sent GOAWAY frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_nonzero_id.desc": "Server sent GOAWAY frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_invalid_len.label": "HTTP2 Frame Size Error: Server sent GOAWAY frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_goaway_invalid_len.desc": "Server sent GOAWAY frame with incorrect length",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_win_update_invalid_len.label": "HTTP2 Protocol Error: Server sent WINDOW_UPDATE frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_win_update_invalid_len.desc": "Server sent WINDOW_UPDATE frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_win_update_large_len.label": "HTTP2 Protocol Error: Server sent WINDOW_UPDATE frame with length larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_win_update_large_len.desc": "Server sent WINDOW_UPDATE frame with length larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_nonzero_id.label": "HTTP2 Protocol Error: Server sent settings frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_nonzero_id.desc": "Server sent settings frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_ack_nonzero_id.label": "HTTP2 Protocol Error: Server sent settings frame with ack flag and nonzero length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_ack_nonzero_id.desc": "Server sent settings frame with ack flag and nonzero length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_invalid_len.label": "HTTP2 Frame Size Error: Server sent SETTINGS frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_settings_invalid_len.desc": "Server sent SETTINGS frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_setting_large_ini_win_size.label": "HTTP2 Frame Size Error: Server sent settings frame with initial window size larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_setting_large_ini_win_size.desc": "Server sent settings frame with initial window size larger than the expected value.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_nonzero_id.label": "HTTP2 Protocol Error: Server sent ping frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_nonzero_id.desc": "Server sent ping frame with nonzero stream id.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_invalid_len.label": "HTTP2 Frame Size Error: Server sent PING frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_invalid_len.desc": "Server sent PING frame with incorrect length.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_ack.label": "HTTP2 Protocol Error: Server sent ping frame with ack flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_sent_ping_ack.desc": "Server sent ping frame with ack flag.",
    "schema.enum.avidefinedfilters.adf_http2_server_no_upstream_keepalive.label": "HTTP2 Protocol Error: Server sent keepalive for unknown connection.",
    "schema.enum.avidefinedfilters.adf_http2_server_no_upstream_keepalive.desc": "Server sent keepalive for unknown connection.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_trailer.label": "HTTP2 Protocol Warning: HTTP2 trailer is not supported on client side yet.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_trailer.desc": "HTTP2 trailer is not supported on client side yet.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_unsupported_protocol_hdr.label": "HTTP2 Protocol Error: Client sent an unsupported protocol header.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_unsupported_protocol_hdr.desc": "Client sent an unsupported protocol header.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_is_not_enabled.label": "HTTP2 Protocol Error: WebSocket is not enabled in the application profile.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_is_not_enabled.desc": "WebSocket is not enabled in the application profile.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_detected.label": "HTTP2 Protocol Info: WebSocket is detected on HTTP2 connection.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_detected.desc": "WebSocket is detected on HTTP2 connection.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_protocol_hdr_with_wrong_method.label": "HTTP2 Protocol Error: Client sent a protocol header with incorrect method.",
    "schema.enum.avidefinedfilters.adf_http2_client_sent_protocol_hdr_with_wrong_method.desc": "Client sent a protocol header with incorrect method.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_version_mismatch.label": "HTTP2 Protocol Error: WebSocket is detected but client and server have different HTTP version.",
    "schema.enum.avidefinedfilters.adf_http2_websocket_version_mismatch.desc": "WebSocket is detected but client and server have different HTTP version.",
    "schema.enum.avidefinedfilters.adf_http2_bad_request_client_sent_no_host_header.label": "Request abnormal event: client sent an HTTP request with no Host header to an HTTP2.0 pool.",
    "schema.enum.avidefinedfilters.adf_http2_bad_request_client_sent_no_host_header.desc": "Client sent a request with no host header to a pool with HTTP2.0 enabled.Host header is required for proxying to HTTP2.0 pools.",
    "schema.enum.avidefinedfilters.adf_http_content_rewrite_empty_string.label": "Content Rewrite abnormal event: Replacement String Variable not defined or provided.",
    "schema.enum.avidefinedfilters.adf_http_content_rewrite_empty_string.desc": "Content Rewrite overwrote a match variable with an empty string because replacement string variable was not defined in the Data Script or provided as a part of an HTTP header.",
    "schema.enum.avidefinedfilters.adf_http2_server_side_ssl_alpn_failure.label": "Connection closed abnormally: SSL ALPN negotiation failure. Server doesn't support HTTPv2.",
    "schema.enum.avidefinedfilters.adf_http2_server_side_ssl_alpn_failure.desc": "Connection closed abnormally: SSL ALPN negotiation failure. Server doesn't support HTTPv2.",
    "schema.enum.avidefinedfilters.adf_http2_server_does_not_support_v2.label": "Connection closed abnormally: Server doesn't support HTTPv2.",
    "schema.enum.avidefinedfilters.adf_http2_server_does_not_support_v2.desc": "Connection closed abnormally: Server doesn't support HTTPv2.",
    "schema.enum.avidefinedfilters.adf_http2_max_requests_exceeded.label": "HTTP2 Refused Stream Error: Max number of requests per connection is exceeded",
    "schema.enum.avidefinedfilters.adf_http2_max_requests_exceeded.desc": "Max number of requests per connection is exceeded",
    "schema.enum.avidefinedfilters.adf_http2_server_control_frame_flood_detected.label": "HTTP2 Server Flood Detected: Server sent too many control frames on one connection.",
    "schema.enum.avidefinedfilters.adf_http2_server_control_frame_flood_detected.desc": "Server sent too many control frames on one connection.",
    "schema.enum.avidefinedfilters.adf_http2_server_exceeded_http2_max_field_size_limit.label": "HTTP2 Server Frame Size Error: Server exceeded compressed header size limit.",
    "schema.enum.avidefinedfilters.adf_http2_server_exceeded_http2_max_field_size_limit.desc": "Server exceeded compressed header size limit.",
    "schema.enum.avidefinedfilters.adf_http2_server_out_of_bound_hpack_table_index.label": "HTTP2 Compression Error: Server sent out of bound HPACK table index.",
    "schema.enum.avidefinedfilters.adf_http2_server_out_of_bound_hpack_table_index.desc": "Server sent out of bound HPACK table index.",
    "schema.enum.avidefinedfilters.adf_http2_client_hpack_large_header.label": "HTTP2 Compression Error: Client sent out of a header which is too big to be added to dynamic table.",
    "schema.enum.avidefinedfilters.adf_http2_client_hpack_large_header.desc": "Client sent out of a header which is too big to be added to dynamic table.",
    "schema.enum.avidefinedfilters.adf_http2_server_hpack_large_header.label": "HTTP2 Compression Error: Server sent out of a header which is too big to be added to dynamic table.",
    "schema.enum.avidefinedfilters.adf_http2_server_hpack_large_header.desc": "Server sent out of a header which is too big to be added to dynamic table.",
    "schema.enum.avidefinedfilters.adf_http2_server_header_block_too_long_header_index.label": "HTTP2 Compression Error: Server sent header block with too long header index value.",
    "schema.enum.avidefinedfilters.adf_http2_server_header_block_too_long_header_index.desc": "Server sent header block with too long header index value.",
    "schema.enum.avidefinedfilters.adf_http2_upstream_no_support_dynamic_table.label": "HTTP2 Upstream Error: Dynamic table is not supported on upstream side.",
    "schema.enum.avidefinedfilters.adf_http2_upstream_no_support_dynamic_table.desc": "Dynamic table is not supported on upstream side.",
    "schema.enum.avidefinedfilters.adf_persistence_app_cookie_invalid_expiry_timestamp.label": "Invalid expiry timestamp in the appcookie sent by server.",
    "schema.enum.avidefinedfilters.adf_persistence_app_cookie_invalid_expiry_timestamp.desc": "Invalid expiry timestamp in the appcookie sent by server.",
    "schema.enum.avidefinedfilters.adf_persistence_cookie_expired.label": "Persistence cookie expired.",
    "schema.enum.avidefinedfilters.adf_persistence_cookie_expired.desc": "Persistence cookie expired.",
    "schema.enum.avidefinedfilters.adf_site_persistence_cookie_expired.label": "Site Persistence cookie expired.",
    "schema.enum.avidefinedfilters.adf_site_persistence_cookie_expired.desc": "Site Persistence cookie expired.",
    "schema.enum.avidefinedfilters.adf_icap_server_high_response_time.label": "ICAP Warning: ICAP server took longer than configured threshold to respond.",
    "schema.enum.avidefinedfilters.adf_icap_server_high_response_time.desc": "ICAP server took longer than configured threshold to respond.",
    "schema.enum.avidefinedfilters.adf_icap_blocked.label": "ICAP Error: Request was blocked by ICAP server.",
    "schema.enum.avidefinedfilters.adf_icap_blocked.desc": "Request was blocked by ICAP server.",
    "schema.enum.avidefinedfilters.adf_icap_modified.label": "ICAP Warning: Content was modified by ICAP server.",
    "schema.enum.avidefinedfilters.adf_icap_modified.desc": "Content was modified by ICAP server.",
    "schema.enum.avidefinedfilters.adf_icap_out_of_memory.label": "ICAP Error: Out of memory when buffering request or ICAP response.",
    "schema.enum.avidefinedfilters.adf_icap_out_of_memory.desc": "Out of memory when buffering request or ICAP response.",
    "schema.enum.avidefinedfilters.adf_icap_timedout.label": "ICAP Error: ICAP processing took longer than configured timeout.",
    "schema.enum.avidefinedfilters.adf_icap_timedout.desc": "ICAP processing took longer than configured timeout.",
    "schema.enum.avidefinedfilters.adf_icap_body_size_bigger_than_configured.label": "ICAP Error: Content size is more than configured allowed size for ICAP processing.",
    "schema.enum.avidefinedfilters.adf_icap_body_size_bigger_than_configured.desc": "Content size is more than configured allowed size for ICAP processing.",
    "schema.enum.avidefinedfilters.adf_icap_connection_error.label": "ICAP Error: Connection to ICAP server failed.",
    "schema.enum.avidefinedfilters.adf_icap_connection_error.desc": "Connection to ICAP server failed.",
    "schema.enum.avidefinedfilters.adf_icap_server_error.label": "ICAP Error: ICAP server responded with 4xx or 5xx status code.",
    "schema.enum.avidefinedfilters.adf_icap_server_error.desc": "ICAP server responded with 4xx or 5xx status code.",
    "schema.enum.avidefinedfilters.adf_icap_failed.label": "ICAP Error: ICAP processing failed due to either ICAP server failure or internal error.",
    "schema.enum.avidefinedfilters.adf_icap_failed.desc": "ICAP processing failed due to either ICAP server failure or internal error.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_request_line.label": "Request abnormal event: Client sent an invalid HTTP1.x request.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_invalid_request_line.desc": "Client sent an invalid HTTP1.x request.",
    "schema.enum.avidefinedfilters.adf_http_bad_response_invalid_request_line.label": "Response abnormal event: Server replied an invalid HTTP1.x response.",
    "schema.enum.avidefinedfilters.adf_http_bad_response_invalid_request_line.desc": "Server replied an invalid HTTP1.x response.",
    "schema.enum.avidefinedfilters.adf_ldap_authentication_disabled_by_ds.label": "LDAP authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_ldap_authentication_disabled_by_ds.desc": "LDAP authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_paa_authentication_disabled_by_ds.label": "PingAccess authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_paa_authentication_disabled_by_ds.desc": "PingAccess authentication is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_bearer_token.label": "Bearer token is not present in the Authorization header.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_bearer_token.desc": "Bearer token is not present in the Authorization header.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_authorization_header.label": "Authorization header is missing in the request.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_authorization_header.desc": "Authorization header is missing in the request.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_query_params.label": "Query parameters are not present in this request.",
    "schema.enum.avidefinedfilters.adf_jwt_missing_query_params.desc": "Query parameters are not present in this request.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_in_query_param.label": "Empty token value in the request query parameters.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_in_query_param.desc": "Empty token value in the request query parameters.",
    "schema.enum.avidefinedfilters.adf_jwt_query_params_missing_token_name.label": "Query parameter with the configured token name does not exist in the request.",
    "schema.enum.avidefinedfilters.adf_jwt_query_params_missing_token_name.desc": "Query parameter with the configured token name does not exist in the request.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_headers.label": "Protected headers section is not present in the JWT.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_headers.desc": "Protected headers section is not present in the JWT.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_payload.label": "Payload section is not present in the JWT.",
    "schema.enum.avidefinedfilters.adf_jwt_empty_token_payload.desc": "Payload section is not present in the JWT.",
    "schema.enum.avidefinedfilters.adf_jwt_aud_claim_null.label": "Audience claim doesn't exist in the JWT payload.",
    "schema.enum.avidefinedfilters.adf_jwt_aud_claim_null.desc": "Audience claim doesn't exist in the JWT payload.",
    "schema.enum.avidefinedfilters.adf_jwt_aud_mismatch.label": "JWT is not issued for this application.",
    "schema.enum.avidefinedfilters.adf_jwt_aud_mismatch.desc": "JWT is not issued for this application.",
    "schema.enum.avidefinedfilters.adf_jwt_issuer_claim_null.label": "Issuer claim doesn't exist in the JWT payload.",
    "schema.enum.avidefinedfilters.adf_jwt_issuer_claim_null.desc": "Issuer claim doesn't exist in the JWT payload.",
    "schema.enum.avidefinedfilters.adf_jwt_unknown_issuer.label": "JWT is issued by an unknown issuer.",
    "schema.enum.avidefinedfilters.adf_jwt_unknown_issuer.desc": "JWT is issued by an unknown issuer.",
    "schema.enum.avidefinedfilters.adf_jwt_kid_null.label": "Kid claim doesn't exist in the JWT Header.",
    "schema.enum.avidefinedfilters.adf_jwt_kid_null.desc": "Kid claim doesn't exist in the JWT Header.",
    "schema.enum.avidefinedfilters.adf_jwt_invalid_kid.label": "JWK corresponding to the kid is not present in the configured JWKS key set.",
    "schema.enum.avidefinedfilters.adf_jwt_invalid_kid.desc": "JWK corresponding to the kid is not present in the configured JWKS key set.",
    "schema.enum.avidefinedfilters.adf_jwt_alg_null.label": "Algorithm claim doesn't exist in the JWT Header.",
    "schema.enum.avidefinedfilters.adf_jwt_alg_null.desc": "Algorithm claim doesn't exist in the JWT Header.",
    "schema.enum.avidefinedfilters.adf_jwt_alg_mismatch.label": "Algorithm with which the JWT is signed is different from that in JWK.",
    "schema.enum.avidefinedfilters.adf_jwt_alg_mismatch.desc": "Algorithm with which the JWT is signed is different from that in JWK.",
    "schema.enum.avidefinedfilters.adf_jwt_not_yet_valid.label": "JWT is not valid yet.",
    "schema.enum.avidefinedfilters.adf_jwt_not_yet_valid.desc": "JWT is not valid yet.",
    "schema.enum.avidefinedfilters.adf_jwt_expired.label": "JWT is expired.",
    "schema.enum.avidefinedfilters.adf_jwt_expired.desc": "JWT is expired.",
    "schema.enum.avidefinedfilters.adf_jwt_signature_verification_failure.label": "JWT Signature verification Failure.",
    "schema.enum.avidefinedfilters.adf_jwt_signature_verification_failure.desc": "JWT Signature verification Failure.",
    "schema.enum.avidefinedfilters.adf_jwt_validation_disabled_by_ds.label": "JWT Validation is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_jwt_validation_disabled_by_ds.desc": "JWT Validation is disabled by the Datascript.",
    "schema.enum.avidefinedfilters.adf_jwt_invalid_jwks.label": "Invalid JWKS configured in the JWTServerProfile.",
    "schema.enum.avidefinedfilters.adf_jwt_invalid_jwks.desc": "Invalid JWKS configured in the JWTServerProfile.",
    "schema.enum.avidefinedfilters.adf_http_connection_strategy_converted.label": "VS Connection Strategy Changed.",
    "schema.enum.avidefinedfilters.adf_http_connection_strategy_converted.desc": "Virtual Service Connection Strategy Changed and Connection Multiplexing disabled.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_authentication_failed.label": "NTLM Authentication Failed.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_authentication_failed.desc": "NTLM Authentication Failed.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_decode_fail.label": "NTLM Negotiation failed in response due to decode failure.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_decode_fail.desc": "NTLM Negotiation failed in response due to decode failure.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_wrong_sig.label": "NTLM Negotiation failed in response due to wrong signature.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_wrong_sig.desc": "NTLM Negotiation failed in response due to wrong signature.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_wrong_message.label": "NTLM Negotiation failed in response due to wrong message type.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_response_wrong_message.desc": "NTLM Negotiation failed in response due to message type.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_decode_fail.label": "NTLM Negotiation failed in request due to decode failure.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_decode_fail.desc": "NTLM Negotiation failed in request due to decode failure.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_wrong_sig.label": "NTLM Negotiation failed in request due to wrong signature.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_wrong_sig.desc": "NTLM Negotiation failed in request due to wrong signature.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_wrong_message.label": "NTLM Negotiation failed in reqeuest due to wrong message type.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_negotiation_request_wrong_message.desc": "NTLM Negotiation failed in request due to message type.",
    "schema.enum.avidefinedfilters.adf_http_unexpected_rum_request.label": "Request abnormal event: Received a RUM request while Client Insights is disabled.",
    "schema.enum.avidefinedfilters.adf_http_unexpected_rum_request.desc": "Received a RUM request while Client Insights is disabled.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_request_queueing_disabled.label": "Request queueing disabled for NTLM connection.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_request_queueing_disabled.desc": "Request queueing disabled for NTLM detected connection.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_server_reselect_disabled.label": "Server Reselect disabled for NTLM connection.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_server_reselect_disabled.desc": "Server Reselect disabled for NTLM detected connection.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_pool_switched.label": "NTLM connection switched to a different pool.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_pool_switched.desc": "NTLM connection switched to a different pool.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_connection_detected.label": "NTLM connection detected.",
    "schema.enum.avidefinedfilters.adf_http_ntlm_connection_detected.desc": "NTLM connection detected.",
    "schema.enum.avidefinedfilters.adf_request_uri_invalid_utf8_format.label": "HTTP Request URI is of invalid UTF8 format.",
    "schema.enum.avidefinedfilters.adf_request_uri_invalid_utf8_format.desc": "HTTP Request URI is of invalid UTF8 format.",
    "schema.enum.avidefinedfilters.adf_request_args_invalid_utf8_format.label": "HTTP Request args are of invalid UTF8 format.",
    "schema.enum.avidefinedfilters.adf_request_args_invalid_utf8_format.desc": "HTTP Request args are of invalid UTF8 format.",
    "schema.enum.avidefinedfilters.adf_request_chunk_mode_with_content_length.label": "Client sent a request with both chunked TransferEncoding and ContentLength headers.",
    "schema.enum.avidefinedfilters.adf_request_chunk_mode_with_content_length.desc": "Client sent a request with both chunked TransferEncoding and ContentLength headers.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_no_http2_settings.label": "H2c Upgrade Error: HTTP2SETTINGS is missed from h2c upgrade request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_no_http2_settings.desc": "HTTP2SETTINGS is missed from h2c upgrade request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_http2_settings_err.label": "H2c Upgrade Error: HTTP2SETTINGS can't be decoded.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_http2_settings_err.desc": "HTTP2SETTINGS can't be decoded.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_request.label": "H2c Upgrade Request: Client sent an h2c upgrade request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_request.desc": "Client sent an h2c upgrade request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_to_http2.label": "H2c Upgrade Request: Request was upgraded to HTTP2.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_to_http2.desc": "Request was upgraded to HTTP2.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_options_request.label": "H2c Upgrade Request: Client sent an OPTIONS request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_options_request.desc": "Client sent an OPTIONS request.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_options_request_with_body.label": "H2c Upgrade Request: Client sent an OPTIONS request with body.",
    "schema.enum.avidefinedfilters.adf_http2_h2c_upgrade_options_request_with_body.desc": "Client sent an OPTIONS request with body.",
    "schema.enum.avidefinedfilters.adf_http2_invalid_version.label": "HTTP2 Protocol Error: Client sent an HTTP1.x request without an h2c upgrade header.",
    "schema.enum.avidefinedfilters.adf_http2_invalid_version.desc": "HTTP2 Protocol Error: Client sent an HTTP1.x request without an h2c upgrade header.",
    "schema.enum.avidefinedfilters.adf_http2_invalid_chunked_body.label": "HTTP2 Protocol Error: client sent an chunked body on HTTP2 port.",
    "schema.enum.avidefinedfilters.adf_http2_invalid_chunked_body.desc": "HTTP2 Protocol Error: client sent an chunked body on HTTP2 port.",
    "schema.enum.avidefinedfilters.adf_server_response_header_too_large.label": "Upstream error: total size of all response headers is larger than the configured value.",
    "schema.enum.avidefinedfilters.adf_server_response_header_too_large.desc": "Upstream error: total size of all response headers is larger than the configured value.",
    "schema.enum.avidefinedfilters.adf_http_client_exceeded_max_header_size_limit.label": "Request abnormal event: client exceeded total header size limit.",
    "schema.enum.avidefinedfilters.adf_http_client_exceeded_max_header_size_limit.desc": "Client exceeded total header size limit.",
    "schema.enum.avidefinedfilters.adf_http_client_exceeded_max_single_header_size_limit.label": "Request abnormal event: client exceeded single header size limit.",
    "schema.enum.avidefinedfilters.adf_http_client_exceeded_max_single_header_size_limit.desc": "Client exceeded single header size limit.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_requested_host_name_does_not_match_servername.label": "Request abnormal event: client attempted to request a server that has a different domain name from the one that was negotiated.",
    "schema.enum.avidefinedfilters.adf_http_bad_request_requested_host_name_does_not_match_servername.desc": "Client attempted to request a server name that has a different domain name from the one that was negotiated.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_request.label": "OAUTH Error: Request is missing a required parameter.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_request.desc": "OAUTH Error: Request is missing a required parameter.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_client.label": "OAUTH Error: Client authentication failed.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_client.desc": "OAUTH Error: Client authentication failed.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_grant.label": "OAUTH Error: The provided authorization grantrefresh tokenredirect uri is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_grant.desc": "OAUTH Error: The provided authorization grantrefresh tokenredirect uri is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_unauthorized_client.label": "OAUTH Error: The authenticated client is not authorized to use this authorization grant type.",
    "schema.enum.avidefinedfilters.adf_oauth_unauthorized_client.desc": "OAUTH Error: The authenticated client is not authorized to use this authorization grant type.",
    "schema.enum.avidefinedfilters.adf_oauth_unauthorized_grant_type.label": "OAUTH Error: The authorization grant type is not supported by the authorization server.",
    "schema.enum.avidefinedfilters.adf_oauth_unauthorized_grant_type.desc": "OAUTH Error: The authorization grant type is not supported by the authorization server.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_scope.label": "OAUTH Error: The requested scope is invalid or unknown.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_scope.desc": "OAUTH Error: The requested scope is invalid or unknown.",
    "schema.enum.avidefinedfilters.adf_oauth_access_denied.label": "OAUTH Error: The authorization server denied the request.",
    "schema.enum.avidefinedfilters.adf_oauth_access_denied.desc": "OAUTH Error: The authorization server denied the request.",
    "schema.enum.avidefinedfilters.adf_oauth_unsupported_response_type.label": "OAUTH Error: Authorization server does not support obtaining an authorization code using this method.",
    "schema.enum.avidefinedfilters.adf_oauth_unsupported_response_type.desc": "OAUTH Error: Authorization server does not support obtaining an authorization code using this method.",
    "schema.enum.avidefinedfilters.adf_oauth_handshake_unauthorized_client.label": "OAUTH Error: The client is not authorized to request an authorization code using this method.",
    "schema.enum.avidefinedfilters.adf_oauth_handshake_unauthorized_client.desc": "OAUTH Error: The client is not authorized to request an authorization code using this method.",
    "schema.enum.avidefinedfilters.adf_oauth_server_error.label": "OAUTH Error: The authorization server encountered an unexpected condition that prevented it from fulfilling the request.",
    "schema.enum.avidefinedfilters.adf_oauth_server_error.desc": "OAUTH Error: The authorization server encountered an unexpected condition that prevented it from fulfilling the request.",
    "schema.enum.avidefinedfilters.adf_oauth_temporarily_unavailable.label": "OAUTH Error: The authorization server is currently unable to handle the requests.",
    "schema.enum.avidefinedfilters.adf_oauth_temporarily_unavailable.desc": "OAUTH Error: The authorization server is currently unable to handle the requests.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_invalid_alg.label": "OAUTH Error: The alg value specified in the OIDC ID token is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_invalid_alg.desc": "OAUTH Error: The alg value specified in the OIDC ID token is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_invalid_at_hash.label": "OAUTH Error: The at_hash value specified in the OIDC ID token is invalid .",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_invalid_at_hash.desc": "OAUTH Error: The at_hash value specified in the OIDC ID token is invalid .",
    "schema.enum.avidefinedfilters.adf_oauth_authorization_failed_rule_match.label": "OAUTH Error: Authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_oauth_authorization_failed_rule_match.desc": "OAUTH Error: Authorization failed due to policy rule match.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_jwt_azp_mismatch.label": "OAUTH Error: The azp claim in the OIDC ID token does not match the client_id.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_jwt_azp_mismatch.desc": "OAUTH Error: The azp claim in the OIDC ID token does not match the client_id.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_jwt_azp_claim_invalid.label": "OAUTH Error: The azp claim in the OIDC ID token is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_oidc_jwt_azp_claim_invalid.desc": "OAUTH Error: The azp claim in the OIDC ID token is invalid.",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_version_mismatch.label": "Request abnormal event: OAUTH Session cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_version_mismatch.desc": "OAUTH Session cookie version in the incoming request does not match the expected version",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_keys_not_configured.label": "OAUTH error: cookie keys were not configured.",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_keys_not_configured.desc": "Cookie keys were not configured.",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_encryption_error.label": "OAUTH authentication Error: failed to encrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_oauth_cookie_encryption_error.desc": "Failed to encrypt the cookie.",
    "schema.enum.avidefinedfilters.adf_oauth_authentication_skipped_rule_match.label": "OAUTH Skipped: OAUTH authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_oauth_authentication_skipped_rule_match.desc": "OAUTH authentication skipped due to policy rules match.",
    "schema.enum.avidefinedfilters.adf_oauth_token_exchange_fail.label": "OAUTH Error: OAUTH token exchange failed.",
    "schema.enum.avidefinedfilters.adf_oauth_token_exchange_fail.desc": "OAUTH token exchange failed.",
    "schema.enum.avidefinedfilters.adf_oauth_userinfo_fail.label": "OAUTH Error: OAUTH Userinfo fetch failed.",
    "schema.enum.avidefinedfilters.adf_oauth_userinfo_fail.desc": "OAUTH Userinfo fetch failed.",
    "schema.enum.avidefinedfilters.adf_oauth_jwks_uri_fail.label": "OAUTH Error: OAUTH JWKs fetch failed.",
    "schema.enum.avidefinedfilters.adf_oauth_jwks_uri_fail.desc": "OAUTH JWKs fetch failed.",
    "schema.enum.avidefinedfilters.adf_oauth_introspect_fail.label": "OAUTH Error: OAUTH token introspection failed.",
    "schema.enum.avidefinedfilters.adf_oauth_introspect_fail.desc": "OAUTH token introspection failed.",
    "schema.enum.avidefinedfilters.adf_oauth_null_cookie.label": "OAUTH Error: OAUTH cookie is absent.",
    "schema.enum.avidefinedfilters.adf_oauth_null_cookie.desc": "OAUTH cookie is absent in the request.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_hs_redirect_uri.label": "OAUTH Error: OAUTH Handshake Cookie received on invalid redirect URI.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_hs_redirect_uri.desc": "OAUTH Handshake Cookie received on invalid redirect URI.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_cookie.label": "OAUTH Error: OAUTH Cookie is invalid or corrupted.",
    "schema.enum.avidefinedfilters.adf_oauth_invalid_cookie.desc": "OAUTH Cookie is invalid or corrupted.",
    "schema.enum.avidefinedfilters.adf_oauth_access_token_inactive.label": "OAUTH Error: OAUTH Access token is inactive.",
    "schema.enum.avidefinedfilters.adf_oauth_access_token_inactive.desc": "OAUTH Access token is inactive.",
    "schema.enum.ocspuistatus.ocsp_ui_status_ok.label": "OCSP status: OK.",
    "schema.enum.ocspuistatus.ocsp_ui_status_ok.desc": "OCSP UI status: OK.",
    "schema.enum.ocspuistatus.ocsp_ui_status_warning.label": "OCSP status: Warning.",
    "schema.enum.ocspuistatus.ocsp_ui_status_warning.desc": "OCSP UI status: Warning.",
    "schema.enum.ocspuistatus.ocsp_ui_status_error.label": "OCSP status: Error.",
    "schema.enum.ocspuistatus.ocsp_ui_status_error.desc": "OCSP UI status: Error.",
    "schema.enum.alertlevel.alert_low.label": "Low",
    "schema.enum.alertlevel.alert_medium.label": "Medium",
    "schema.enum.alertlevel.alert_high.label": "High",
    "schema.enum.albservicemode.mode_unknown.label": "UNKNOWN.",
    "schema.enum.albservicemode.mode_unknown.desc": "Unknown mode.",
    "schema.enum.albservicemode.salesforce.label": "Salesforce",
    "schema.enum.albservicemode.salesforce.desc": "Salesforce mode.",
    "schema.enum.albservicemode.systest.label": "Systest",
    "schema.enum.albservicemode.systest.desc": "Systest mode.",
    "schema.enum.albservicemode.myvmware.label": "MyVmware",
    "schema.enum.albservicemode.myvmware.desc": "My Vmware mode.",
    "schema.enum.avicompressionstatus.no_compression_disabled.label": "Compression not enabled",
    "schema.enum.avicompressionstatus.no_compression_disabled.desc": "Response not compressed since compression was disabled in the application profile",
    "schema.enum.avicompressionstatus.no_compression_gzip_content.label": "Response already compressed",
    "schema.enum.avicompressionstatus.no_compression_gzip_content.desc": "Response not compressed since content was compressed at server",
    "schema.enum.avicompressionstatus.no_compression_content_type.label": "Response not compressed due to content type",
    "schema.enum.avicompressionstatus.no_compression_content_type.desc": "Response not compressed since content type was not identified as compressible",
    "schema.enum.avicompressionstatus.no_compression_custom_filter.label": "Response not compressed due to custom filter",
    "schema.enum.avicompressionstatus.no_compression_custom_filter.desc": "Response not compressed due to application profile compression custom filter",
    "schema.enum.avicompressionstatus.no_compression_auto_filter.label": "Response not compressed due to auto",
    "schema.enum.avicompressionstatus.no_compression_auto_filter.desc": "Response not compressed due to application profile compression type setting auto",
    "schema.enum.avicompressionstatus.no_compression_min_length.label": "Response not compressed due to small content length",
    "schema.enum.avicompressionstatus.no_compression_min_length.desc": "Response not compressed since content length was too small",
    "schema.enum.avicompressionstatus.no_compression_can_be_compressed.label": "Response can be compressed if compression enabled",
    "schema.enum.avicompressionstatus.no_compression_can_be_compressed.desc": "Response content can be compressed if compression is enabled in the application profile",
    "schema.enum.avicompressionstatus.compressed.label": "Response content compressed",
    "schema.enum.avicompressionstatus.compressed.desc": "Response was compressed based on application profile settings",
    "schema.enum.aviclientinsightsstatus.insights_disabled.label": "No client insights",
    "schema.enum.aviclientinsightsstatus.insights_disabled.desc": "Client Insights not collected due to Virtual Service configuration",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_count.label": "No client insights, not sampled due to sampling frequency",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_count.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_type.label": "No client insights, not sampled due to content type",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_type.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_skip_uri.label": "No client insights, not sampled since URL is in skip list",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_skip_uri.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_uri_not_in_list.label": "No client insights, not sampled since URL is not in the sample URL list",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_uri_not_in_list.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_client_ip_not_in_range.label": "No client insights, not sampled since client IP does not match configured value",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_client_ip_not_in_range.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_other.label": "No client insights, not sampled due to other reasons.",
    "schema.enum.aviclientinsightsstatus.no_insights_not_sampled_other.desc": "Client Insights not collected",
    "schema.enum.aviclientinsightsstatus.active_insights_failed.label": "Active client insights failed",
    "schema.enum.aviclientinsightsstatus.active_insights_failed.desc": "Client Insights not collected since script insertion failed",
    "schema.enum.aviclientinsightsstatus.active_insights_enabled.label": "Active client insights enabled on this request",
    "schema.enum.aviclientinsightsstatus.active_insights_enabled.desc": "Client Insights collected using script insertion",
    "schema.enum.aviclientinsightsstatus.passive_insights_enabled.label": "Passive client insights enabled on this request",
    "schema.enum.aviclientinsightsstatus.passive_insights_enabled.desc": "Client Insights collected from the SE",
    "schema.enum.avihttprequeststate.avi_http_request_state_conn_accept.label": "Connection Accepted",
    "schema.enum.avihttprequeststate.avi_http_request_state_waiting_for_request.label": "Waiting for request from client",
    "schema.enum.avihttprequeststate.avi_http_request_state_ssl_handshaking.label": "SSL handshake initiated",
    "schema.enum.avihttprequeststate.avi_http_request_state_processing_spdy.label": "SPDY connection initiated",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_client_req_line.label": "Reading client request line",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_client_req_hdr.label": "Reading client request headers",
    "schema.enum.avihttprequeststate.avi_http_request_state_connect_to_upstream.label": "Connecting to upstream server",
    "schema.enum.avihttprequeststate.avi_http_request_state_send_req_to_upstream.label": "Sending request to upstream server",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_resp_hdr_from_upstream.label": "Reading response headers from upstream server",
    "schema.enum.avihttprequeststate.avi_http_request_state_send_to_client.label": "Sending response to client",
    "schema.enum.avihttprequeststate.avi_http_request_state_keepalive.label": "Connection in keepalive state",
    "schema.enum.avihttprequeststate.avi_http_request_state_proxy_upgraded_conn.label": "Proxying upgraded connection",
    "schema.enum.avihttprequeststate.avi_http_request_state_closing_request.label": "Closing client request",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_from_upstream.label": "Reading from upstream server",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_proxy_protocol.label": "Reading proxy protocol",
    "schema.enum.avihttprequeststate.avi_http_request_state_read_client_pipeline_req_line.label": "Reading client pipeline request line",
    "schema.enum.avihttprequeststate.avi_http_request_state_ssl_handshake_to_upstream.label": "SSL handshake to upstream initiated",
    "schema.enum.avihttprequeststate.avi_http_request_state_waiting_in_connpool_cache.label": "Waiting in connection pool cache",
    "schema.enum.avihttprequeststate.avi_http_request_state_send_response_header_to_client.label": "Sending response header to client",
    "schema.enum.avihttprequeststate.avi_http_request_state_send_response_body_to_client.label": "Sending response body to client",
    "schema.enum.avihttpresponsebodyupdated.not_updated.label": "Response body not modified",
    "schema.enum.avihttpresponsebodyupdated.by_content_rewrite_profile.label": "Configuration in content rewrite profiled modified the response body",
    "schema.enum.avihttpresponsebodyupdated.by_data_script.label": "Data Script modified the response body",
    "schema.enum.grpcstatus.grpc_status_code_ok.label": "OK",
    "schema.enum.grpcstatus.grpc_status_code_ok.desc": "Not an error; Success.",
    "schema.enum.grpcstatus.grpc_status_code_cancelled.label": "Cancelled",
    "schema.enum.grpcstatus.grpc_status_code_cancelled.desc": "The operation was cancelled, typically by the caller.",
    "schema.enum.grpcstatus.grpc_status_code_unknown.label": "Unknown",
    "schema.enum.grpcstatus.grpc_status_code_unknown.desc": "Unknown error.",
    "schema.enum.grpcstatus.grpc_status_code_invalid_argument.label": "Invalid Argument",
    "schema.enum.grpcstatus.grpc_status_code_invalid_argument.desc": "The client specified an invalid argument.",
    "schema.enum.grpcstatus.grpc_status_code_deadline_exceeded.label": "Deadline Exceeded",
    "schema.enum.grpcstatus.grpc_status_code_deadline_exceeded.desc": "The deadline expired before the operation could complete.",
    "schema.enum.grpcstatus.grpc_status_code_not_found.label": "Not Found",
    "schema.enum.grpcstatus.grpc_status_code_not_found.desc": "Some requested entity (e.g., file or directory) was not found.",
    "schema.enum.grpcstatus.grpc_status_code_already_exists.label": "Already Exists",
    "schema.enum.grpcstatus.grpc_status_code_already_exists.desc": "The entity that a client attempted to create (e.g., file or directory) already exists.",
    "schema.enum.grpcstatus.grpc_status_code_permission_denied.label": "Permission Denied",
    "schema.enum.grpcstatus.grpc_status_code_permission_denied.desc": "The caller does not have permission to execute the specified operation.",
    "schema.enum.grpcstatus.grpc_status_code_resource_exhausted.label": "Resource Exhausted",
    "schema.enum.grpcstatus.grpc_status_code_resource_exhausted.desc": "Some resource has been exhausted, perhaps a peruser quota, or perhaps the entire file system is out of space.",
    "schema.enum.grpcstatus.grpc_status_code_failed_precondition.label": "Failed Precondition",
    "schema.enum.grpcstatus.grpc_status_code_failed_precondition.desc": "The operation was rejected because the system is not in a state required for the operation's execution.",
    "schema.enum.grpcstatus.grpc_status_code_stopped.label": "Stopped",
    "schema.enum.grpcstatus.grpc_status_code_stopped.desc": "The operation was prematurely stopped, typically due to a concurrency issue such as a sequencer check failure or transaction prematurely stop.",
    "schema.enum.grpcstatus.grpc_status_code_out_of_range.label": "Out of Range",
    "schema.enum.grpcstatus.grpc_status_code_out_of_range.desc": "The operation was attempted past the valid range.",
    "schema.enum.grpcstatus.grpc_status_code_unimplemented.label": "Unimplemented",
    "schema.enum.grpcstatus.grpc_status_code_unimplemented.desc": "The operation is not implemented or is not supportedenabled in this service.",
    "schema.enum.grpcstatus.grpc_status_code_internal.label": "Internal",
    "schema.enum.grpcstatus.grpc_status_code_internal.desc": "Internal errors. This means that some invariants expected by the underlying system have been broken.",
    "schema.enum.grpcstatus.grpc_status_code_unavailable.label": "Unavailable",
    "schema.enum.grpcstatus.grpc_status_code_unavailable.desc": "The service is currently unavailable.",
    "schema.enum.grpcstatus.grpc_status_code_data_loss.label": "Data Loss",
    "schema.enum.grpcstatus.grpc_status_code_data_loss.desc": "Unrecoverable data loss or corruption.",
    "schema.enum.grpcstatus.grpc_status_code_unauthenticated.label": "Unauthenticated",
    "schema.enum.grpcstatus.grpc_status_code_unauthenticated.desc": "The request does not have valid authentication credentials for the operation.",
    "schema.enum.authstatus.auth_status_no_authentication.label": "No Authentication.",
    "schema.enum.authstatus.auth_status_no_authentication.desc": "Auth Status: No Authentication.",
    "schema.enum.authstatus.auth_status_authentication_success.label": "Authentication Success.",
    "schema.enum.authstatus.auth_status_authentication_success.desc": "Auth Status: Success.",
    "schema.enum.authstatus.auth_status_authentication_failure.label": "Authentication Failure.",
    "schema.enum.authstatus.auth_status_authentication_failure.desc": "Auth Status: Authentication failure.",
    "schema.enum.authstatus.auth_status_unauthorized.label": "Unauthorized.",
    "schema.enum.authstatus.auth_status_unauthorized.desc": "Auth Status: Unauthorized.",
    "schema.enum.authstatus.auth_status_authenticated_request.label": "Authenticated Request.",
    "schema.enum.authstatus.auth_status_authenticated_request.desc": "Auth Status: Authenticated Request.",
    "schema.enum.authstatus.auth_status_authz_failed.label": "Authorization Failed.",
    "schema.enum.authstatus.auth_status_authz_failed.desc": "Auth Status: Authorization Failed.",
    "schema.enum.oauthstate.oauth_state_client_idp_handshake_redirect.label": "Client IDP Handshake.",
    "schema.enum.oauthstate.oauth_state_client_idp_handshake_redirect.desc": "Client IDP Handshake.",
    "schema.enum.oauthstate.oauth_state_client_idp_handshake_fail.label": "Client IDP Handshake failure.",
    "schema.enum.oauthstate.oauth_state_client_idp_handshake_fail.desc": "Client IDP Handshake failure.",
    "schema.enum.oauthstate.oauth_state_token_exchange_request.label": "Code  Token exchange request.",
    "schema.enum.oauthstate.oauth_state_token_exchange_request.desc": "Code  Token exchange request.",
    "schema.enum.oauthstate.oauth_state_token_exchange_response.label": "Code  Token exchange response.",
    "schema.enum.oauthstate.oauth_state_token_exchange_response.desc": "Code  Token exchange response.",
    "schema.enum.oauthstate.oauth_state_token_introspection_request.label": "Token Introspection request.",
    "schema.enum.oauthstate.oauth_state_token_introspection_request.desc": "Token Introspection request.",
    "schema.enum.oauthstate.oauth_state_token_introspection_response.label": "Token Introspection response.",
    "schema.enum.oauthstate.oauth_state_token_introspection_response.desc": "Token Introspection response.",
    "schema.enum.oauthstate.oauth_state_refresh_token_request.label": "Token refresh request.",
    "schema.enum.oauthstate.oauth_state_refresh_token_request.desc": "Token refresh request.",
    "schema.enum.oauthstate.oauth_state_refresh_token_response.label": "Token refresh response.",
    "schema.enum.oauthstate.oauth_state_refresh_token_response.desc": "Token refresh response.",
    "schema.enum.oauthstate.oauth_state_jwks_uri_request.label": "JWKS uri request.",
    "schema.enum.oauthstate.oauth_state_jwks_uri_request.desc": "JWKS uri request.",
    "schema.enum.oauthstate.oauth_state_jwks_uri_response.label": "JWKS uri response.",
    "schema.enum.oauthstate.oauth_state_jwks_uri_response.desc": "JWKS uri response.",
    "schema.enum.oauthstate.oauth_state_userinfo_request.label": "OIDC userinfo request.",
    "schema.enum.oauthstate.oauth_state_userinfo_request.desc": "OIDC userinfo request.",
    "schema.enum.oauthstate.oauth_state_userinfo_response.label": "OIDC userinfo response.",
    "schema.enum.oauthstate.oauth_state_userinfo_response.desc": "OIDC userinfo response.",
    "schema.enum.httpmethod.http_method_get.label": "GET",
    "schema.enum.httpmethod.http_method_get.desc": "HTTP get method",
    "schema.enum.httpmethod.http_method_head.label": "HEAD",
    "schema.enum.httpmethod.http_method_head.desc": "HTTP head method",
    "schema.enum.httpmethod.http_method_put.label": "PUT",
    "schema.enum.httpmethod.http_method_put.desc": "HTTP put method",
    "schema.enum.httpmethod.http_method_delete.label": "DELETE",
    "schema.enum.httpmethod.http_method_delete.desc": "HTTP delete method",
    "schema.enum.httpmethod.http_method_post.label": "POST",
    "schema.enum.httpmethod.http_method_post.desc": "HTTP post method",
    "schema.enum.httpmethod.http_method_options.label": "OPTIONS",
    "schema.enum.httpmethod.http_method_options.desc": "HTTP options method",
    "schema.enum.httpmethod.http_method_trace.label": "TRACE",
    "schema.enum.httpmethod.http_method_trace.desc": "HTTP trace method",
    "schema.enum.httpmethod.http_method_connect.label": "CONNECT",
    "schema.enum.httpmethod.http_method_connect.desc": "HTTP connect method",
    "schema.enum.httpmethod.http_method_patch.label": "PATCH",
    "schema.enum.httpmethod.http_method_patch.desc": "HTTP PATCH method",
    "schema.enum.httpmethod.http_method_propfind.label": "PROPFIND",
    "schema.enum.httpmethod.http_method_propfind.desc": "HTTP PROPFIND method",
    "schema.enum.httpmethod.http_method_proppatch.label": "PROPPATCH",
    "schema.enum.httpmethod.http_method_proppatch.desc": "HTTP PROPPATCH method",
    "schema.enum.httpmethod.http_method_mkcol.label": "MKCOL",
    "schema.enum.httpmethod.http_method_mkcol.desc": "HTTP MKCOL method",
    "schema.enum.httpmethod.http_method_copy.label": "COPY",
    "schema.enum.httpmethod.http_method_copy.desc": "HTTP COPY method",
    "schema.enum.httpmethod.http_method_move.label": "MOVE",
    "schema.enum.httpmethod.http_method_move.desc": "HTTP MOVE method",
    "schema.enum.httpmethod.http_method_lock.label": "LOCK",
    "schema.enum.httpmethod.http_method_lock.desc": "HTTP LOCK method",
    "schema.enum.httpmethod.http_method_unlock.label": "UNLOCK",
    "schema.enum.httpmethod.http_method_unlock.desc": "HTTP UNLOCK method",
    "schema.enum.httpversion.zero_nine.label": "0.9",
    "schema.enum.httpversion.zero_nine.desc": "HTTP protocol version 0.9",
    "schema.enum.httpversion.one_zero.label": "1.0",
    "schema.enum.httpversion.one_zero.desc": "HTTP protocol version 1.0",
    "schema.enum.httpversion.one_one.label": "1.1",
    "schema.enum.httpversion.one_one.desc": "HTTP protocol version 1.1",
    "schema.enum.httpversion.two_zero.label": "2.0",
    "schema.enum.httpversion.two_zero.desc": "HTTP protocol version 2.0",
    "schema.enum.authorizationactionenum.allow_access.desc": "Allow Access on Authorization policy rule match.",
    "schema.enum.authorizationactionenum.close_connection.desc": "Close connection on Authorization policy rule match.",
    "schema.enum.authorizationactionenum.http_local_response.desc": "Send HTTP local response on Authorization policy rule match.",
    "schema.enum.authenticationactionenum.skip_authentication.desc": "Skip Authentication.",
    "schema.enum.authenticationactionenum.use_default_authentication.desc": "Use Default Authentication.",
    "schema.enum.botclassificationtypes.human.label": "Human",
    "schema.enum.botclassificationtypes.human.desc": "Human user.",
    "schema.enum.botclassificationtypes.good_bot.label": "Good Bot",
    "schema.enum.botclassificationtypes.good_bot.desc": "Benign Bot, maybe even wanted bot.",
    "schema.enum.botclassificationtypes.bad_bot.label": "Bad Bot",
    "schema.enum.botclassificationtypes.bad_bot.desc": "Bad Bot.",
    "schema.enum.botclassificationtypes.dangerous_bot.label": "Dangerous Bot",
    "schema.enum.botclassificationtypes.dangerous_bot.desc": "Bot is itself an attack or a threat.",
    "schema.enum.botclassificationtypes.user_defined_bot.label": "Userdefined Bot",
    "schema.enum.botclassificationtypes.user_defined_bot.desc": "Bot category defined by the user.",
    "schema.enum.botclassificationtypes.unknown_client.label": "Unknown",
    "schema.enum.botclassificationtypes.unknown_client.desc": "Bot status is unknown, no classification possible.",
    "schema.enum.botdecisioncomponent.bot_decider_consolidation.label": "Consolidation",
    "schema.enum.botdecisioncomponent.bot_decider_consolidation.desc": "A module that compares the evaluations of all basic components, checks them for plausibility and looks for inconsistencies, discrepancies and contradictions.",
    "schema.enum.botdecisioncomponent.bot_decider_user_agent.label": "UserAgent",
    "schema.enum.botdecisioncomponent.bot_decider_user_agent.desc": "A submodule that checks the UserAgent in an HTTP request.",
    "schema.enum.botdecisioncomponent.bot_decider_ip_reputation.label": "IP reputation",
    "schema.enum.botdecisioncomponent.bot_decider_ip_reputation.desc": "A submodule that checks the reputation of the peer's IP address.",
    "schema.enum.botdecisioncomponent.bot_decider_ip_network_location.label": "IP location",
    "schema.enum.botdecisioncomponent.bot_decider_ip_network_location.desc": "A submodule that checks an IP's ASN information.",
    "schema.enum.botconfidence.low_confidence.label": "Low confidence",
    "schema.enum.botconfidence.low_confidence.desc": "Low confidence.",
    "schema.enum.botconfidence.medium_confidence.label": "Reasonable confidence",
    "schema.enum.botconfidence.medium_confidence.desc": "Medium confidence.",
    "schema.enum.botconfidence.high_confidence.label": "High confidence",
    "schema.enum.botconfidence.high_confidence.desc": "High confidence.",
    "schema.enum.botclientclass.undetermined_client.label": "Unknown",
    "schema.enum.botclientclass.undetermined_client.desc": "No classification could be determined.",
    "schema.enum.botclientclass.human_client.label": "Human being",
    "schema.enum.botclientclass.human_client.desc": "Highlevel classification as a human user.",
    "schema.enum.botclientclass.bot_client.label": "Bot",
    "schema.enum.botclientclass.bot_client.desc": "Highlevel classification as a bot: an automated computer program.",
    "schema.enum.botclienttype.undetermined_client_type.label": "Unknown",
    "schema.enum.botclienttype.undetermined_client_type.desc": "No type could be determined for this client.",
    "schema.enum.botclienttype.web_browser.label": "Web browser",
    "schema.enum.botclienttype.web_browser.desc": "Midlevel classification as a conventional web browser.",
    "schema.enum.botclienttype.in_app_browser.label": "InApp browser",
    "schema.enum.botclienttype.in_app_browser.desc": "Human user visiting a web page via an application that uses a browser's engine, e.g. Thunderbird using Firefox's Gecko engine.",
    "schema.enum.botclienttype.search_engine.label": "Search engine",
    "schema.enum.botclienttype.search_engine.desc": "Webcrawling bot from a known search engine, usually considered a 'good' bot.",
    "schema.enum.botclienttype.impersonator.label": "Impersonator",
    "schema.enum.botclienttype.impersonator.desc": "Usually the result of contradicting information, e.g. UserAgent says Firefox, but IP address says botnet.",
    "schema.enum.botclienttype.spam_source.label": "Spam source",
    "schema.enum.botclienttype.spam_source.desc": "Midlevel classification as a spam source.",
    "schema.enum.botclienttype.web_attacks.label": "Web attacks",
    "schema.enum.botclienttype.web_attacks.desc": "Midlevel classification as a source of Web attacks.",
    "schema.enum.botclienttype.botnet.label": "Botnet",
    "schema.enum.botclienttype.botnet.desc": "A botnet, often used for DDoS (Distributed Denial of Service) attacks.",
    "schema.enum.botclienttype.scanner.label": "Scanner",
    "schema.enum.botclienttype.scanner.desc": "A bot that systematically scans websites, often to use the gained information for competitive advantage.",
    "schema.enum.botclienttype.denial_of_service.label": "Denial of service",
    "schema.enum.botclienttype.denial_of_service.desc": "Denial of Service (DoS) attacks have originated from this client.",
    "schema.enum.botclienttype.cloud_source.label": "Cloud source",
    "schema.enum.botclienttype.cloud_source.desc": "Peer is located inside a known cloud, e.g. AWS; many bots operate on virtual machines inside public clouds.",
    "schema.enum.botclienttype.security_scanner.label": "Security Scanner",
    "schema.enum.botclienttype.security_scanner.desc": "Request comes from a security scanner.",
    "schema.enum.botclienttype.site_monitor.label": "Site Monitor",
    "schema.enum.botclienttype.site_monitor.desc": "Request comes from a site monitor.",
    "schema.enum.botclienttype.generic_application.label": "Application",
    "schema.enum.botclienttype.generic_application.desc": "Request comes from an application other than a browser or an inbrowser app.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_req.label": "HTTP Request Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_req.desc": "Event triggers when the client side http request headers are fully parsed",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp.label": "HTTP Response Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp.desc": "Event triggers when the server side http response status and headers are fully parsed",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp_data.label": "HTTP Response Data Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp_data.desc": "Event triggers when data is received in the http response from the backend server",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_lb_failed.desc": "This event is deprecated. Event triggers when server selection for load balancing the HTTP request fails.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_req_data.label": "HTTP Request Data Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_req_data.desc": "Event triggers when the client side http request data is fully received",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp_failed.label": "HTTP Response Failed Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_resp_failed.desc": "Event triggers when http response from backend server fails",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_lb_done.label": "HTTP LB Done Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_lb_done.desc": "Event triggers after the server selection for load balancing the HTTP request is done",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_auth.label": "HTTP Auth Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_auth.desc": "This is the first event that gets triggered after the client side HTTP request headers are fully parsed and before authenticating the client request.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_post_auth.label": "HTTP Post Auth Event",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_http_post_auth.desc": "Event triggers after the execution of access policies.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_tcp_client_accept.desc": "Event triggers when TCP client connection is accepted",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_ssl_handshake_done.label": "Clientside SSL handshake is done.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_ssl_handshake_done.desc": "Event triggers after clientside SSL handshake is done.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_client_ssl_pre_connect.label": "Client side SSL Handshake start.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_client_ssl_pre_connect.desc": "Event triggers at start of clientside SSL handshake.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_client_ssl_client_hello.label": "Clientside SSL client hello is processed.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_client_ssl_client_hello.desc": "Event triggers after clientside SSL client hello is processed.",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_dns_req.desc": "Event triggers when DNS request received from the client is parsed successfully",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_dns_resp.desc": "Event triggers when DNS response is received from an upstream load balanced DNS server",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_l4_request.label": "First Request from client : L4 Profile",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_l4_request.desc": "Event triggers when first packet from the client is received on L4 profile",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_l4_response.label": "Response from server : L4 Profile",
    "schema.enum.vsdatascriptevent.vs_datascript_evt_l4_response.desc": "Event triggers when response from server is received on L4 profile",
    "schema.enum.ntlmstatus.ntlm_authentication_success.label": "Authentication Success",
    "schema.enum.ntlmstatus.ntlm_authentication_success.desc": "NTLM Status: Authentication Success.",
    "schema.enum.ntlmstatus.ntlm_unauthorized.label": "Unauthorized",
    "schema.enum.ntlmstatus.ntlm_unauthorized.desc": "NTLM Status: Unauthorized.",
    "schema.enum.ntlmstatus.ntlm_negotiation.label": "Negotiation",
    "schema.enum.ntlmstatus.ntlm_negotiation.desc": "NTLM Status: Negotiation.",
    "schema.enum.ntlmstatus.ntlm_authentication_failure.label": "Authentication Failure",
    "schema.enum.ntlmstatus.ntlm_authentication_failure.desc": "NTLM Status: Authentication failure.",
    "schema.enum.ntlmstatus.ntlm_authenticated_requests.label": "Authenticated Requests",
    "schema.enum.ntlmstatus.ntlm_authenticated_requests.desc": "NTLM Status: Authenticated requests.",
    "schema.enum.samlauthstatus.saml_auth_status_unavailable.label": "SAML Authentication status unavailable.",
    "schema.enum.samlauthstatus.saml_auth_status_unavailable.desc": "SAML Auth status: SAML Authentication status unavailable.",
    "schema.enum.samlauthstatus.saml_auth_status_unauth_get_request.label": "SAML Unauthentiated GET request.",
    "schema.enum.samlauthstatus.saml_auth_status_unauth_get_request.desc": "SAML Auth status: SAML Unauthentiated GET request.",
    "schema.enum.samlauthstatus.saml_auth_status_unauth_req_unsupported_method.label": "SAML Unauthentiated request with unsupported method.",
    "schema.enum.samlauthstatus.saml_auth_status_unauth_req_unsupported_method.desc": "SAML Auth status: SAML Authentication is supported only for GET requests.",
    "schema.enum.samlauthstatus.saml_auth_status_auth_request_generated.label": "SAML Authentication request generated to be sent to IDP.",
    "schema.enum.samlauthstatus.saml_auth_status_auth_request_generated.desc": "SAML Auth status: SAML Authentication request generated to be sent to IDP.",
    "schema.enum.samlauthstatus.saml_auth_status_auth_response_received.label": "SAML Authentication response received from IDP.",
    "schema.enum.samlauthstatus.saml_auth_status_auth_response_received.desc": "SAML Auth status: SAML Authentication response received from IDP.",
    "schema.enum.samlauthstatus.saml_auth_status_authenticated_request.label": "SAML Authentiated request.",
    "schema.enum.samlauthstatus.saml_auth_status_authenticated_request.desc": "SAML Auth status: SAML Authentiated request.",
    "schema.enum.samlauthstatus.saml_auth_status_authorization_failed.label": "SAML Authorization failed.",
    "schema.enum.samlauthstatus.saml_auth_status_authorization_failed.desc": "SAML Auth status: SAML Authorization failed.",
    "schema.enum.icapaction.icap_disabled.label": "ICAP processing is not enabled.",
    "schema.enum.icapaction.icap_disabled.desc": "Content was not processed by ICAP server. ICAP processing is not enabled by HTTP security Policy or skipped due to FAIL_OPEN action.",
    "schema.enum.icapaction.icap_passed.label": "Content was allowed by ICAP server.",
    "schema.enum.icapaction.icap_passed.desc": "Content was allowed by ICAP server.",
    "schema.enum.icapaction.icap_modified.label": "Content was modified by ICAP server.",
    "schema.enum.icapaction.icap_modified.desc": "Content was modified by ICAP server.",
    "schema.enum.icapaction.icap_blocked.label": "Content was blocked by ICAP server.",
    "schema.enum.icapaction.icap_blocked.desc": "Content was blocked by ICAP server.",
    "schema.enum.icapaction.icap_failed.label": "Failed to process the content by ICAP server.",
    "schema.enum.icapaction.icap_failed.desc": "Failed to process the content by ICAP server. This can happen due to communication timeout, protocol error, pool error, request size exceed buffer size etc...",
    "schema.enum.icapmethod.icap_method_reqmod.label": "REQMOD",
    "schema.enum.icapmethod.icap_method_reqmod.desc": "ICAP Method for request modification",
    "schema.enum.icapmethod.icap_method_respmod.label": "RESPMOD",
    "schema.enum.icapmethod.icap_method_respmod.desc": "ICAP Method for response modification",
    "schema.enum.icapvendor.icap_vendor_generic.label": "Generic ICAP",
    "schema.enum.icapvendor.icap_vendor_generic.desc": "Generic ICAP implementation which follows RFC 3507. Do not use or assume any vendor extensions. Use this as last resort, if your ICAP vendor is not supported.",
    "schema.enum.icapvendor.icap_vendor_opswat.label": "OPSWAT",
    "schema.enum.icapvendor.icap_vendor_opswat.desc": "ICAP implementation of https:www.opswat.com.",
    "schema.enum.icapvendor.icap_vendor_lastline.label": "NSXDefender",
    "schema.enum.icapvendor.icap_vendor_lastline.desc": "ICAP implementation of https:www.lastline.com.",
    "schema.enum.aviobjecttype.avifalsepositivedetection.label": "AVIFALSEPOSITIVEDETECTION",
    "schema.enum.aviobjecttype.avifalsepositivedetection.desc": "False positive detection",
    "schema.enum.eventid.mgmt_nw_name_changed.desc": "vCenter <vcenter> Existing <existing_nw> New <new_nw>",
    "schema.enum.eventid.discovery_datacenter_del.desc": "vCenter <vcenter> Discovery Datacenter <obj_name> deleted from vCenter",
    "schema.enum.eventid.vinfra_disc_complete.desc": "vCenter <vcenter> Discovery Complete. Num DCs <num_dcs> Num Clusters <num_clusters> Num Hosts <num_hosts> Num VMs <num_vms> Num NWs <num_nws>",
    "schema.enum.eventid.vcenter_address_error.desc": "Unable to contact vCenter <vcenter>",
    "schema.enum.eventid.se_group_cluster_del.desc": "vCenter <vcenter> Cluster <obj_name> deleted from vCenter",
    "schema.enum.eventid.se_group_mgmt_nw_del.desc": "vCenter <vcenter> Management Network <obj_name> deleted from vCenter",
    "schema.enum.eventid.mgmt_nw_del.desc": "vCenter <vcenter> Management Network <obj_name> deleted from vCenter",
    "schema.enum.eventid.vcenter_bad_credentials.desc": "Bad user <name> credentials when logging to vCenter <vcenter>",
    "schema.enum.eventid.esx_host_unreachable.desc": "Avi Controller unable to communicate with hosts in vCenter <vcenter>",
    "schema.enum.eventid.server_deleted.desc": "Server(s) <server_ip> deleted from Virtual Infrastructure",
    "schema.enum.eventid.se_group_host_del.desc": "vCenter <vcenter> Host <obj_name> deleted from vCenter",
    "schema.enum.eventid.vinfra_disc_failure.desc": "vCenter <vcenter> Discovery Failure in retrieving <state>. Retrying.",
    "schema.enum.eventid.esx_host_powered_down.desc": "vCenter <vcenter> Host <name> powered down",
    "schema.enum.eventid.vcenter_version_not_supported.desc": "vCenter <vcenter_name> has a version which is not supported by Avi",
    "schema.enum.eventid.vcenter_connectivity_fail.desc": "Connectivity failed to vCenter <vcenter> Datacenter <datacenter> for Cloud <cloud>",
    "schema.enum.eventid.vcenter_connectivity_success.desc": "Connectivity restored to vCenter <vcenter> Datacenter <datacenter> for Cloud <cloud>",
    "schema.enum.eventid.vcenter_access_slow.desc": "Vcenter <vcenter> access is slow. Login took more than 10 secs",
    "schema.enum.eventid.vcenter_user_role_change.desc": "Vcenter <vcenter> user <user> possible role change",
    "schema.enum.eventid.vcenter_netwqrk_object_limit_reached.desc": "Avi Controller has <current> Network objects. Maximum limit <limit>. <additional_reason>",
    "schema.enum.eventid.se_fatal_error.desc": "Avi Service Engine crashed",
    "schema.enum.eventid.se_heartbeat_failure.desc": "SE Heartbeat failure",
    "schema.enum.eventid.se_marked_down.desc": "SE unreachable  Marked down",
    "schema.enum.eventid.se_vm_deleted.desc": "SE VM deleted from virtual infrastructure",
    "schema.enum.eventid.se_up.desc": "Avi Service Engine connected to Avi Controller",
    "schema.enum.eventid.se_powered_down.desc": "SE powered down by virtual infrastructure",
    "schema.enum.eventid.se_external_hm_restart.desc": "External health monitor process crashed",
    "schema.enum.eventid.se_down.desc": "Service Engine marked down",
    "schema.enum.eventid.se_version_check_failed.desc": "SE version does not match Controller version",
    "schema.enum.eventid.se_upgrading.desc": "Service Engine upgrade in progress",
    "schema.enum.eventid.se_enable_state_changed.desc": "SE enable_state <enable_state>",
    "schema.enum.eventid.se_migrate.desc": "SE migrate_state <migrate_state>",
    "schema.enum.eventid.creating_se.desc": "Creating Service Engine <se_name> for virtual service <vs_name>",
    "schema.enum.eventid.created_se.desc": "Service Engine <se_name> created",
    "schema.enum.eventid.create_se_fail.desc": "Service Engine <se_name> creation failed",
    "schema.enum.eventid.create_se_timeout.desc": "Service Engine <se_name> creation timed out",
    "schema.enum.eventid.deleting_se.desc": "Deleting Service Engine <se_name> ",
    "schema.enum.eventid.deleted_se.desc": "Service Engine <se_name> deleted",
    "schema.enum.eventid.delete_se_fail.desc": "Service Engine <se_name> deletion failed",
    "schema.enum.eventid.add_nw_se.desc": "Network(s) <network_name> added for Virtual Service <vs_name>",
    "schema.enum.eventid.del_nw_se.desc": "Network(s) <network_name> deleted",
    "schema.enum.eventid.vs_add_se.desc": "Virtual service <vs_name> (<ip>) added to Service Engine <se_name>. Role: <type>",
    "schema.enum.eventid.vs_removed_se.desc": "Virtual service <vs_name> (<ip>) removed from Service Engine <se_name>",
    "schema.enum.eventid.add_nw_fail.desc": "Failed to add network(s) <network_name> to SE <se_name> for virtual service <vs_name>. Reason <reason>",
    "schema.enum.eventid.rm_del_network_fail.desc": "Deleting networks from Service Engine failed",
    "schema.enum.eventid.reboot_se.desc": "Rebooting unresponsive Service Engine",
    "schema.enum.eventid.modify_nw.desc": "Network(s) <network_name> modified for virtual service <vs_name>",
    "schema.enum.eventid.modify_nw_fail.desc": "Modify network(s) <network_name> failed on Service Engine <se_name>. Reason <reason>",
    "schema.enum.eventid.vs_se_bootup_fail.desc": "Service Engine <se_name> failed to boot",
    "schema.enum.eventid.vs_se_ip_fail.desc": "SE <se_name> failed to acquire IP address on network(s) <network_name> subnet(s) <subnet>",
    "schema.enum.eventid.no_host_avail.desc": "No host available for placement of new Service Engine virtual machine",
    "schema.enum.eventid.vs_switchover.desc": "VS primary SE switchover successful",
    "schema.enum.eventid.vs_switchover_fail.desc": "VS primary SE switchover failed",
    "schema.enum.eventid.add_vip_vnic.desc": "Virtual service <vs_name> (<ip>) IP added to Service Engine <se_name> NICs. Role: <type>",
    "schema.enum.eventid.del_vip_vnic.desc": "Virtual service <vs_name> (<ip>) IP removed from Service Engine <se_name> NICs",
    "schema.enum.eventid.cc_attach_ip_success.desc": "Attach IP successful for Virtual Service <vs_name><vip_id> on Service Engine <se_name>.",
    "schema.enum.eventid.cc_attach_ip_timedout.desc": "Attach IP timedout for Virtual Service <vs_name><vip_id> on Service Engine <se_name>.",
    "schema.enum.eventid.cc_attach_ip_failure.desc": "Attach IP failed for Virtual Service <vs_name><vip_id> on Service Engine <se_name>. Reason  <reason>",
    "schema.enum.eventid.cc_detach_ip_success.desc": "Detach IP successful for Virtual Service <vs_name><vip_id> on Service Engine <se_name>.",
    "schema.enum.eventid.cc_detach_ip_timedout.desc": "Detach IP timedout for Virtual Service <vs_name><vip_id> on Service Engine <se_name>.",
    "schema.enum.eventid.cc_detach_ip_failure.desc": "Detach IP failed for Virtual Service <vs_name><vip_id> on Service Engine <se_name>. Reason  <reason>",
    "schema.enum.eventid.shared_vip_asymmetric.desc": "Shared VIP with <num_vs> Virtual Services is scaled out asymmetrically",
    "schema.enum.eventid.shared_vip_symmetric.desc": "Shared VIP with <num_vs> Virtual Services is scaled out symmetrically",
    "schema.enum.eventid.new_probable_srvr.desc": "New Server matching filter in network for pool",
    "schema.enum.eventid.vs_scaleout_complete.desc": "Virtual service ScaleOut Done",
    "schema.enum.eventid.vs_scalein_complete.desc": "Virtual service ScaleIn Done",
    "schema.enum.eventid.vs_migrate_started.desc": "Virtual service Migrate Started",
    "schema.enum.eventid.vs_migrate_complete.desc": "Virtual service Migrate Done",
    "schema.enum.eventid.vs_scaleout_failed.desc": "Virtual service ScaleOut Failed",
    "schema.enum.eventid.vs_scalein_failed.desc": "Virtual service ScaleIn Failed",
    "schema.enum.eventid.vs_migrate_failed.desc": "Virtual service Migrate Failed",
    "schema.enum.eventid.vs_awaiting_se.desc": "Service Engine not assigned to this virtual service even after <awaitingse_timeout> seconds",
    "schema.enum.eventid.vs_initial_placement_failed.desc": "Virtual service initial placement on a Service Engine failed",
    "schema.enum.eventid.upgrade_all_se_start.desc": "Starting upgrade of <num_se> Service Engines with <num_vs> virtual services",
    "schema.enum.eventid.upgrade_all_se_done.desc": "Done upgrading <num_se> Service Engines",
    "schema.enum.eventid.upgrade_all_se_not_needed.desc": "Upgrading <num_se> Service Engines not needed",
    "schema.enum.eventid.upgrade_se_start.desc": "Starting upgrade for Service Engine <se_uuid>",
    "schema.enum.eventid.upgrade_se_done.desc": "Service Engine <se_uuid> upgrade done",
    "schema.enum.eventid.upgrade_se_not_needed.desc": "Service Engine <se_uuid> already upgraded",
    "schema.enum.eventid.upgrade_se_suspended.desc": "Service Engine <se_uuid> upgrade suspended",
    "schema.enum.eventid.upgrade_se_vs_scaleout.desc": "Action ScaleOut executed during Service Engine upgrade",
    "schema.enum.eventid.upgrade_se_vs_scalein.desc": "Action ScaleIn executed during Service Engine upgrade",
    "schema.enum.eventid.upgrade_se_vs_migrate.desc": "Action Migrate executed during Service Engine upgrade",
    "schema.enum.eventid.upgrade_se_vs_disrupted.desc": "Virtual service <vs_uuid> upgrade disrupted, Reason <reason>",
    "schema.enum.eventid.rebalance_vs_scaleout.desc": "Action ScaleOut executed during AutoRebalance",
    "schema.enum.eventid.rebalance_vs_scalein.desc": "Action ScaleIn executed during AutoRebalance",
    "schema.enum.eventid.rebalance_vs_migrate.desc": "Action Migrate executed during AutoRebalance",
    "schema.enum.eventid.disable_se_vs_migrate.desc": "Action Migrate executed during DisableSE",
    "schema.enum.eventid.rollback_all_se_start.desc": "Starting rollback of <num_se> Service Engines with <num_vs> virtual services",
    "schema.enum.eventid.rollback_all_se_done.desc": "Done rollback of <num_se> Service Engines",
    "schema.enum.eventid.migrate_se_started.desc": "started migration on disable Service Engine",
    "schema.enum.eventid.migrate_se_restarted.desc": "restarted migration on disable Service Engine",
    "schema.enum.eventid.migrate_se_finished.desc": "successfully migrated all VSs from disable Service Engine",
    "schema.enum.eventid.migrate_se_failed.desc": "failed <num_vs> VS migrations on disable Service Engine",
    "schema.enum.eventid.migrate_se_vs_migrate_started.desc": "started VS <vs_uuid> migration on disable Service Engine",
    "schema.enum.eventid.migrate_se_vs_migrate_finished.desc": "successfully migrated <vs_uuid> VS from disable Service Engine",
    "schema.enum.eventid.migrate_se_vs_migrate_failed.desc": "failed migrating <vs_uuid> VS from disable Service Engine",
    "schema.enum.eventid.vip_scaleout.desc": "Vip ScaleOut",
    "schema.enum.eventid.vip_scaleout_failed.desc": "Vip ScaleOut",
    "schema.enum.eventid.vip_scalein.desc": "Vip ScaleIn",
    "schema.enum.eventid.vip_scalein_failed.desc": "Vip ScaleIn",
    "schema.enum.eventid.server_down.desc": "Server <hostname> (<addr>:<port>) in Pool <pool> is DOWN due to health monitor <shm]> failure",
    "schema.enum.eventid.server_up.desc": "Server <hostname> (<addr>:<port>) in Pool <pool> is UP",
    "schema.enum.eventid.pool_down.desc": "Pool is DOWN",
    "schema.enum.eventid.pool_up.desc": "Pool is UP",
    "schema.enum.eventid.vs_down.desc": "Virtual service is DOWN",
    "schema.enum.eventid.vs_up.desc": "Virtual service is UP",
    "schema.enum.eventid.se_server_disabled.desc": "Server <hostname> (<addr>:<port>) in Pool <pool> was disabled",
    "schema.enum.eventid.vs_conn_limit.desc": "<value> connection(s) dropped due to virtual service connection limit",
    "schema.enum.eventid.vs_throughput_limit.desc": "<value> packet(s) dropped due to virtual service bandwidth limit",
    "schema.enum.eventid.conn_drop_max_syn_tbl.desc": "<value> connection(s) dropped due to SYN table limit",
    "schema.enum.eventid.conn_drop_max_flow_tbl.desc": "<value> connection(s) dropped due to flow table limit",
    "schema.enum.eventid.conn_drop_max_persist_tbl.desc": "<value> connection(s) dropped due to persistence table limit",
    "schema.enum.eventid.conn_drop_pool_lb_failure.desc": "<value> pool load balancing decision(s) failed",
    "schema.enum.eventid.conn_drop_no_conn_mem.desc": "<value> connection(s) dropped due to insuffience memory",
    "schema.enum.eventid.conn_drop_no_pkt_buff.desc": "<value> connection(s) dropped due to low packet buffer.",
    "schema.enum.eventid.pkt_drop_no_pkt_buff.desc": "<value> packet(s) dropped due to low packet buffer",
    "schema.enum.eventid.pkt_buff_alloc_fail.desc": "<value> packet buffer allocation failure(s)",
    "schema.enum.eventid.cache_obj_alloc_fail.desc": "<value> HTTP cacheable objects dropped due to memory allocation failure",
    "schema.enum.eventid.syn_attack.desc": "SYN DDoS Attack",
    "schema.enum.eventid.conn_throttled_memfail_flow_tbl.desc": "<value> connection(s) throttled due to memory failure.",
    "schema.enum.eventid.se_cpu_high.desc": "CPU usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_mem_high.desc": "Memory usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_pkt_buff_high.desc": "Packet buffer usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_persist_tbl_high.desc": "Persistence table usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_conn_mem_high.desc": "Connection memory usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_disk_high.desc": "Disk usage over Threshold <threshold> % Current  <current_value> %",
    "schema.enum.eventid.se_flow_tbl_high.desc": "Flow table usage over Threshold <threshold> % Current  <current_value> %",
    "schema.enum.eventid.se_syn_tbl_high.desc": "SYN table usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.se_vnic_dhcp_ip_alloc_failure.desc": "IP address allocation failure, Service Engine <se_uuid> vNIC <vnic_name> Network <network_uuid> MAC <mac>",
    "schema.enum.eventid.se_vnic_duplicate_ip.desc": "Duplicate  IP vNIC <vnic_name> IP <vnic_ip>  Remote MAC <remote_mac>  Local MAC <local_mac>",
    "schema.enum.eventid.se_syn_cache_usage_high.desc": "SYN cache usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.vm_cpu_high.desc": "CPU usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.vm_mem_high.desc": "Memory usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.vs_se_ha_active.desc": "Virtual service is UP on Service Engine <se_name>",
    "schema.enum.eventid.vs_se_ha_compromised.desc": "Virtual service is DOWN on Service Engine <se_name>:<ha_reason>",
    "schema.enum.eventid.pool_se_ha_active.desc": "Pool is UP on Service Engine <se_name>",
    "schema.enum.eventid.pool_se_ha_compromised.desc": "Pool is DOWN on Service Engine <se_name>:<ha_reason>",
    "schema.enum.eventid.server_down_ha_compromised.desc": "Server <hostname> (<addr>:<port>) down due to health monitor <shm]> failure by at least one but not all Service Engines",
    "schema.enum.eventid.server_up_ha_active.desc": "Server <hostname> (<addr>:<port>) is active",
    "schema.enum.eventid.se_vnic_ip_added.desc": "IP address added to vnic, Service Engine <se_uuid> vNIC <if_name> IP <ip> Mask <mask> Mode <mode> Namespace <ns> Network <network_uuid> MAC <mac>",
    "schema.enum.eventid.se_vnic_ip_removed.desc": "IP address removed from vnic, Service Engine <se_uuid> vNIC <if_name> IP <ip> Mask <mask> Mode <mode> Namespace <ns> Network <network_uuid> MAC <mac>",
    "schema.enum.eventid.gs_member_down.desc": "GslbService Member <addr> is DOWN due to gslb health monitor failure",
    "schema.enum.eventid.gs_member_up.desc": "GslbService Member <addr> (<domain>) is UP",
    "schema.enum.eventid.gs_group_down.desc": "GslbService Group is DOWN",
    "schema.enum.eventid.gs_group_up.desc": "GslbService Group is UP",
    "schema.enum.eventid.gs_down.desc": "GslbService is DOWN",
    "schema.enum.eventid.gs_up.desc": "GslbService is UP",
    "schema.enum.eventid.vip_down.desc": "VIP <addr> is DOWN",
    "schema.enum.eventid.vip_up.desc": "VIP <addr> is UP",
    "schema.enum.eventid.se_geo_db_failure.desc": "Failed to load Geo Database",
    "schema.enum.eventid.vs_geo_db_failure.desc": "Failed to load Geo Database",
    "schema.enum.eventid.se_geo_db_success.desc": "Successfully loaded Geo Database",
    "schema.enum.eventid.vs_geo_db_success.desc": "Successfully loaded Geo Database",
    "schema.enum.eventid.se_ip6_dad_failed.desc": "DAD failed for <dad_ip> on interface <if_name>",
    "schema.enum.eventid.se_ev_vs_rl_config_failed.desc": "Virtual Service rate limiter configuration failed",
    "schema.enum.eventid.se_vs_pkt_buff_high.desc": "Packet buffer usage for the Virtual Service <virtual_service> is over threshold <threshold>%, current value: <current_value>%",
    "schema.enum.eventid.se_discontinuous_time_change.desc": "Time has discontinuously jumped in SE <se_name> (<se_uuid>) from <from_time> to <to_time> with NTP Servers <ntp_servers>",
    "schema.enum.eventid.se_high_ingress_proc_latency.desc": "SE : <se_name> (<se_uuid>) Packet processing latency is high. dispatchercore<dispatcher_core>: <dispatcher_latency_ingress> ms flowcore<flow_core>: <proxy_latency_ingress> ms eventcount: <event_count>",
    "schema.enum.eventid.config_create.desc": "Config <resource_name> create status is <status> (performed by user <user>)",
    "schema.enum.eventid.config_update.desc": "Config <resource_name> update status is <status> (performed by user <user>)",
    "schema.enum.eventid.config_delete.desc": "Config <resource_name> delete status is <status> (performed by <user>)",
    "schema.enum.eventid.user_login.desc": "User <user> login (<status>) from <client_ip> using <client_type>",
    "schema.enum.eventid.user_logout.desc": "User <user> logout from <client_ip>",
    "schema.enum.eventid.config_action.desc": "Action <action_name> executed by <user>",
    "schema.enum.eventid.user_authorized_by_rule.desc": "User <user> was authorized by mapping rule <rule>",
    "schema.enum.eventid.user_not_authorized_by_any_rule.desc": "User <user> not authorized by any mapping rule",
    "schema.enum.eventid.config_se_grp_flavor_update.desc": "Service Engine Group <se_group_name> VM Instance flavor was updated from <old_flv> to <new_flv>",
    "schema.enum.eventid.api_version_deprecated.desc": "<api_version_used> API version, used on path <path> from <client_ip>, is deprecated. Please switch to api version >= <min_supported_api_version>.",
    "schema.enum.eventid.dns_query_error.desc": "<status_message> FQDN  <fqdn>",
    "schema.enum.eventid.ssl_cert_expire.desc": "SSL certificate expires in <days_left> days",
    "schema.enum.eventid.ssl_key_exported.desc": "SSL Private Keys are exported by <user> ",
    "schema.enum.eventid.ssl_cert_renew.desc": "SSL certificate <name> is about to expire. Renewing with the Certificate Management Service",
    "schema.enum.eventid.ssl_cert_renew_failed.desc": "SSL certificate <name> renewal failed. Error was <error>",
    "schema.enum.eventid.ssl_cert_ignored.desc": "SSL Certificate with CN <name> has been ignored. Reason: <reason>",
    "schema.enum.eventid.ssl_cert_revoked.desc": "SSL certificate revoked by OCSP Responder.",
    "schema.enum.eventid.controller_node_joined.desc": "Controller <node_name> joined the Controller cluster",
    "schema.enum.eventid.controller_node_left.desc": "Controller <node_name> left the Controller cluster",
    "schema.enum.eventid.controller_service_failure.desc": "Controller service <service_name> failed",
    "schema.enum.eventid.controller_leader_failover.desc": "Controller cluster leader failover",
    "schema.enum.eventid.controller_warm_reboot.desc": "Controller warm restarted",
    "schema.enum.eventid.controller_service_restored.desc": "Controller service <service_name> restored",
    "schema.enum.eventid.controller_service_critical_failure.desc": "Controller service <service_name> critical failure",
    "schema.enum.eventid.controller_node_shutdown.desc": "Controller <node_name> shutdown initiated",
    "schema.enum.eventid.controller_node_started.desc": "Controller <node_name> started",
    "schema.enum.eventid.cluster_config_failed.desc": "Controller Cluster configuration failed.",
    "schema.enum.eventid.se_secure_key_exchange.desc": "SE <se_ip> initiates secure key exchange with controller <ctlr_public_ip>",
    "schema.enum.eventid.ctlr_secure_key_exchange.desc": "Follower <follower_ip> initiates secure key exchange with leader <leader_ip>",
    "schema.enum.eventid.malformed_secure_key_exchange.desc": "Malformed client type",
    "schema.enum.eventid.system_upgrade_started.desc": "Avi Vantage system upgrade started",
    "schema.enum.eventid.system_upgrade_complete.desc": "Avi Vantage system upgrade complete",
    "schema.enum.eventid.system_upgrade_aborted.desc": "Avi Vantage system upgrade failed and was aborted",
    "schema.enum.eventid.system_rollback_started.desc": "Avi Vantage system rollback started",
    "schema.enum.eventid.system_rollback_complete.desc": "Avi Vantage system rollback complete",
    "schema.enum.eventid.system_rollback_aborted.desc": "Avi Vantage system rollback failed and was aborted",
    "schema.enum.eventid.controller_node_db_replication_failed.desc": "Controller <node_name> failed database replication <failure_count> times",
    "schema.enum.eventid.controller_process_stopped.desc": "Process <process>PID <pid> exceeded memory limits (actual=<memory_used> KBlimit=<limit> KB)",
    "schema.enum.eventid.controller_memory_balancer_deactivated.desc": "Memory Balancer deactivated. Controller memory <controller_memory> GB is less than minimum required (12 GB)",
    "schema.enum.eventid.controller_discontinuous_time_change.desc": "Time has discontinuously jumped in Controller <node_name> from <from_time> to <to_time> with NTP servers <ntp_servers>",
    "schema.enum.eventid.controller_process_stopped_memory_violation.desc": "Controller crossed higher memory limit, usage percent: <controller_memory_usage_percent>. Stopping process <process>PID <pid>",
    "schema.enum.eventid.metric_threshold_up_violation.desc": "Threshold exceeded for metric.",
    "schema.enum.eventid.license_expiry.desc": "License expiry notification.",
    "schema.enum.eventid.anomaly.desc": "Anomalous metric <metric_id> of value <value> and deviation <deviation> ",
    "schema.enum.eventid.license_addition_notif.desc": "License addition.",
    "schema.enum.eventid.license_removal_notif.desc": "License removal.",
    "schema.enum.eventid.metrics_db_disk_full.desc": "Metrics DB Disk usage reached quota <metrics_quota> GB",
    "schema.enum.eventid.metrics_db_queue_full.desc": "Metrics DB queue is full",
    "schema.enum.eventid.metrics_db_queue_healthy.desc": "Metrics DB queue is healthy",
    "schema.enum.eventid.openstack_access_failure.desc": "OpenStack accesssetup failure",
    "schema.enum.eventid.openstack_image_upload_failure.desc": "OpenStack image upload failure",
    "schema.enum.eventid.openstack_se_vm_created.desc": "OpenStack Avi Service Engine created",
    "schema.enum.eventid.openstack_se_vm_deleted.desc": "OpenStack Avi Service Engine deleted",
    "schema.enum.eventid.openstack_se_vm_deletion_detected.desc": "Avi Service Engine deleted in OpenStack",
    "schema.enum.eventid.openstack_se_creation_failure.desc": "Avi Service Engine creation failure",
    "schema.enum.eventid.openstack_se_deletion_failure.desc": "Avi Service Engine deletion failure",
    "schema.enum.eventid.openstack_vnic_addition_failure.desc": "vNIC addition failure",
    "schema.enum.eventid.openstack_vnic_deletion_failure.desc": "vNIC deletion failure",
    "schema.enum.eventid.openstack_ip_detach_failure.desc": "IP detach failure",
    "schema.enum.eventid.openstack_ip_attach_failure.desc": "IP attach failure",
    "schema.enum.eventid.openstack_lbprov_audit_failure.desc": "OpenStack LBaaS audit check failure",
    "schema.enum.eventid.openstack_lbplugin_op_failure.desc": "OpenStack LBaaS plugin operation failure",
    "schema.enum.eventid.openstack_sync_services_failure.desc": "OpenStack sync services failure",
    "schema.enum.eventid.openstack_tenants_deleted.desc": "OpenStack tenants deleted",
    "schema.enum.eventid.openstack_api_version_check_failed.desc": "OpenStack API version check failed",
    "schema.enum.eventid.aws_access_failure.desc": "AWS accesssetup failure",
    "schema.enum.eventid.aws_image_upload_failure.desc": "AWS image upload failure",
    "schema.enum.eventid.aws_sns_access_failure.desc": "AWS SNS accesssetup failed",
    "schema.enum.eventid.aws_sqs_access_failure.desc": "AWS SQS accesssetup failed",
    "schema.enum.eventid.aws_asg_put_notification_configuration_failure.desc": "Adding notification configuration to Autoscaling Group <asg_name> failed",
    "schema.enum.eventid.aws_asg_delete_notification_configuration_failure.desc": "Deleting notification configuration from Autoscaling Group <asg_name> failed",
    "schema.enum.eventid.aws_asg_notification_processing_failure.desc": "Processing AWS Autoscaling Group notification failed",
    "schema.enum.eventid.aws_asg_notification_instance_added.desc": "Instance <instance_ip_addr> added to AWS Autoscaling group <asg_name>",
    "schema.enum.eventid.aws_asg_notification_instance_removed.desc": "Instance <instance_ip_addr> removed from AWS Autoscaling group <asg_name>",
    "schema.enum.eventid.aws_asg_access_failure.desc": "AWS Autoscaling group accesssetup failed",
    "schema.enum.eventid.aws_asg_notification_instance_launch_error.desc": "Failed to launch instance in AWS Autoscaling group <asg_name>",
    "schema.enum.eventid.aws_asg_notification_instance_terminate_error.desc": "Failed to terminate instance <instance_id> in AWS Autoscaling group <asg_name>",
    "schema.enum.eventid.aws_asg_notification_autoscale_group_deleted.desc": "Autoscaling groups  %s deleted from AWS' % pb.asgs",
    "schema.enum.eventid.cloud_autoscaling_config_failure.desc": "Failed to configure autoscaling",
    "schema.enum.eventid.cloud_autoscaling_deconfig_failure.desc": "Failed to deconfigure autoscaling",
    "schema.enum.eventid.cloud_autoscaling_asg_add_failure.desc": "Failed to add autoscaling group %s' % pb.asg_name",
    "schema.enum.eventid.cloud_autoscaling_asg_remove_failure.desc": "Failed to remove autoscaling groups %' % pb.asg_name",
    "schema.enum.eventid.cloud_autoscaling_notification_processing_failure.desc": "Failed to process autoscaling Group notification",
    "schema.enum.eventid.cloud_route_creation_failure.desc": "Failed to CreateUpdate routes on cloud",
    "schema.enum.eventid.cloud_route_remove_failure.desc": "Failed to delete routes on cloud",
    "schema.enum.eventid.cloudstack_access_failure.desc": "CloudStack accesssetup failure",
    "schema.enum.eventid.cloudstack_image_upload_failure.desc": "CloudStack image upload failure",
    "schema.enum.eventid.docker_ucp_access_success.desc": "Docker UCP access success",
    "schema.enum.eventid.docker_ucp_access_failure.desc": "Docker UCP access failure",
    "schema.enum.eventid.docker_ucp_image_upload_failure.desc": "Docker UCP image upload failure",
    "schema.enum.eventid.docker_ucp_image_upload_success.desc": "Docker UCP image upload success",
    "schema.enum.eventid.vca_access_failure.desc": "VCA accesssetup failure",
    "schema.enum.eventid.vca_image_upload_failure.desc": "VCA image upload failure",
    "schema.enum.eventid.ls_access_failure.desc": "LinuxServer accesssetup failure",
    "schema.enum.eventid.ls_image_upload_failure.desc": "LinuxServer image upload failure",
    "schema.enum.eventid.mesos_access_success.desc": "Mesos access success",
    "schema.enum.eventid.mesos_access_failure.desc": "Mesos access failure",
    "schema.enum.eventid.mesos_image_upload_failure.desc": "Mesos image upload failure",
    "schema.enum.eventid.mesos_image_upload_success.desc": "Mesos image upload success",
    "schema.enum.eventid.mesos_created_se.desc": "Created Service Engine",
    "schema.enum.eventid.mesos_create_se_fail.desc": "Service Engine create failed",
    "schema.enum.eventid.mesos_deleted_se.desc": "Service Engine deleted",
    "schema.enum.eventid.mesos_delete_se_fail.desc": "Service Engine delete failed.",
    "schema.enum.eventid.mesos_stopped_se.desc": "Service Engine stopped",
    "schema.enum.eventid.mesos_stop_se_fail.desc": "Service Engine stop failed",
    "schema.enum.eventid.mesos_started_se.desc": "Service Engine started",
    "schema.enum.eventid.mesos_start_se_fail.desc": "Service Engine start failed",
    "schema.enum.eventid.mesos_updated_hosts.desc": "Mesos list of hosts has changed",
    "schema.enum.eventid.cc_se_created.desc": "Service Engine created",
    "schema.enum.eventid.cc_se_creation_failure.desc": "Service Engine creation failure",
    "schema.enum.eventid.cc_se_deleted.desc": "Service Engine deleted",
    "schema.enum.eventid.cc_se_deletion_failure.desc": "Service Engine delete failed",
    "schema.enum.eventid.cc_se_deletion_detected.desc": "Service Engine deleted from cloud",
    "schema.enum.eventid.cc_vnic_addition_failure.desc": "vNIC addition failure",
    "schema.enum.eventid.cc_vnic_deletion_failure.desc": "vNIC delete failed",
    "schema.enum.eventid.cc_ip_attached.desc": "IP address attached to port.",
    "schema.enum.eventid.cc_ip_attach_failure.desc": "IP attach to port failed",
    "schema.enum.eventid.cc_ip_detached.desc": "IP address detached from port",
    "schema.enum.eventid.cc_ip_detach_failure.desc": "IP detach failure.",
    "schema.enum.eventid.cc_sync_services_failure.desc": "Sync services failed",
    "schema.enum.eventid.cc_update_vip_failure.desc": "VS createupdate failed",
    "schema.enum.eventid.cc_delete_vip_failure.desc": "VS delete failed",
    "schema.enum.eventid.cc_config_failure.desc": "Cloud configuration failed",
    "schema.enum.eventid.cc_deconfig_failure.desc": "Cloud deconfiguration failed",
    "schema.enum.eventid.cc_generic_failure.desc": "Cloud generic failure.",
    "schema.enum.eventid.cc_cluster_vip_config_failure.desc": "Cluster VIP configuration in cloud failed",
    "schema.enum.eventid.cc_cluster_vip_deconfig_failure.desc": "Cluster VIP deconfiguration in cloud failed",
    "schema.enum.eventid.cc_marathon_service_port_outside_valid_range.desc": "Application requested a service port outside the range of its Marathon instance",
    "schema.enum.eventid.cc_marathon_service_port_already_in_use.desc": "Application requested a service port already in use.",
    "schema.enum.eventid.cc_vip_dns_register_failure.desc": "DNS registration of VS FQDN in Cloud failed",
    "schema.enum.eventid.cc_tenant_init_failure.desc": "Initialization of tenant in cloud failed",
    "schema.enum.eventid.cc_health_failure.desc": "Cloud health check failed.",
    "schema.enum.eventid.cc_health_ok.desc": "Cloud health check passed.",
    "schema.enum.eventid.cc_se_started.desc": "Service Engine started",
    "schema.enum.eventid.cc_se_start_failure.desc": "Service Engine start failed",
    "schema.enum.eventid.cc_se_stopped.desc": "Service Engine stopped",
    "schema.enum.eventid.cc_se_stop_failure.desc": "Service Engine stop failed",
    "schema.enum.eventid.cc_vip_park_intf_failure.desc": "VIPparking interface createlookup failed",
    "schema.enum.eventid.cc_vip_dns_deregister_failure.desc": "DNS deregistration of VS FQDN in Cloud failed",
    "schema.enum.eventid.cc_vip_dns_validation_failure.desc": "DNS domain validation of VS FQDN in Cloud failed",
    "schema.enum.eventid.cc_vip_dns_register_success.desc": "DNS registration of VS FQDN in Cloud succeeded",
    "schema.enum.eventid.cc_vip_dns_deregister_success.desc": "DNS deregistration of VS FQDN in Cloud succeeded",
    "schema.enum.eventid.aws_route53_access_failure.desc": "AWS Route 53 accesssetup failure",
    "schema.enum.eventid.cc_scale_set_polling_failure.desc": "Scaleset polling failed",
    "schema.enum.eventid.cc_scale_set_polling_success.desc": "Scaleset polling succeeded",
    "schema.enum.eventid.vs_health_change.desc": "Deprecated",
    "schema.enum.eventid.se_health_change.desc": "Deprecated",
    "schema.enum.eventid.pool_health_change.desc": "Deprecated",
    "schema.enum.eventid.server_health_change.desc": "Deprecated",
    "schema.enum.eventid.vs_health_degraded.desc": "Virtual service health score changed from <previous_value> to <value>",
    "schema.enum.eventid.se_health_degraded.desc": "Service Engine health score changed from <previous_value> to <value>",
    "schema.enum.eventid.pool_health_degraded.desc": "Pool health score changed from <previous_value> to <value>",
    "schema.enum.eventid.server_health_degraded.desc": "<sub_resource_prefix> health score changed from <previous_value> to <value>",
    "schema.enum.eventid.duplicate_subnets.desc": "IP subnet : <ip_nw> discovered in multiple networks",
    "schema.enum.eventid.summarized_subnets.desc": "Overlapping subnets detected in the Cloud Infrastructure",
    "schema.enum.eventid.ip_pool_almost_exhausted.desc": "90% of IP Pool configured has been utilized",
    "schema.enum.eventid.ip_pool_exhausted.desc": "100% of IP Pool configured has been utilized",
    "schema.enum.eventid.ip_pool_almost_exhausted_vip.desc": "90% of IP Pool configured for VIPs has been utilized",
    "schema.enum.eventid.ip_pool_exhausted_vip.desc": "100% of IP Pool configured for VIPs has been utilized",
    "schema.enum.eventid.ip_pool_almost_exhausted_se.desc": "90% of IP Pool configured for SEs has been utilized",
    "schema.enum.eventid.ip_pool_exhausted_se.desc": "100% of IP Pool configured for SEs has been utilized",
    "schema.enum.eventid.license_limit_servers.desc": "<current_value>% of total licensed pool servers used",
    "schema.enum.eventid.license_limit_se_vcpus.desc": "<current_value>% of total licensed Service Engine vCPUs(cores) used",
    "schema.enum.eventid.license_limit_throughput.desc": "<current_value>% of total licensed Service Engine throughput used",
    "schema.enum.eventid.license_limit_vs.desc": "<current_value>% of total licensed virtual services used",
    "schema.enum.eventid.license_limit_hosts.desc": "<current_value>% of total licensed hosts used",
    "schema.enum.eventid.license_limit_se_sockets.desc": "<current_value>% of total licensed ServiceEngine sockets used",
    "schema.enum.eventid.license_expired.desc": "License expired.",
    "schema.enum.eventid.burst_resource_consumed.desc": "New burst resources consumed by <se_name>",
    "schema.enum.eventid.burst_resource_expiry_alert.desc": "Burst resource(s) expiring in the next hour. SE will be disabled if it can not attain new license resources",
    "schema.enum.eventid.license_limit_se_service_cores.desc": "<current_value>% of total licensed ServiceEngine service cores used",
    "schema.enum.eventid.container_cloud_access_success.desc": "ContainerCloud access success",
    "schema.enum.eventid.container_cloud_access_failure.desc": "ContainerCloud access failure",
    "schema.enum.eventid.container_cloud_image_upload_failure.desc": "ContainerCloud image upload failure",
    "schema.enum.eventid.container_cloud_image_upload_success.desc": "ContainerCloud image upload success",
    "schema.enum.eventid.container_cloud_created_se.desc": "Created Service Engine",
    "schema.enum.eventid.container_cloud_create_se_fail.desc": "Service Engine create failed",
    "schema.enum.eventid.container_cloud_deleted_se.desc": "Service Engine deleted",
    "schema.enum.eventid.container_cloud_delete_se_fail.desc": "Service Engine delete failed.",
    "schema.enum.eventid.container_cloud_stopped_se.desc": "Service Engine stopped",
    "schema.enum.eventid.container_cloud_stop_se_fail.desc": "Service Engine stop failed",
    "schema.enum.eventid.container_cloud_started_se.desc": "Service Engines started",
    "schema.enum.eventid.container_cloud_start_se_fail.desc": "Service Engine start failed",
    "schema.enum.eventid.container_cloud_updated_hosts.desc": "ContainerCloud list of hosts has changed",
    "schema.enum.eventid.container_cloud_service_success.desc": "ContainerCloud service CRUD success",
    "schema.enum.eventid.container_cloud_service_failure.desc": "ContainerCloud service CRUD failure",
    "schema.enum.eventid.container_cloud_service_incomplete.desc": "ContainerCloud service update incomplete",
    "schema.enum.eventid.container_cloud_healthcheck_se.desc": "Service Engines health check",
    "schema.enum.eventid.container_cloud_healthcheck_se_fail.desc": "Service Engine health check failed",
    "schema.enum.eventid.server_autoscale_out.desc": "ScaleOut of <num_scaleout_servers> server(s) due to <reason>.",
    "schema.enum.eventid.server_autoscale_in.desc": "ScaleIn of <num_scalein_servers> server(s) due to <reason>.",
    "schema.enum.eventid.server_autoscale_out_complete.desc": "<nscaleout> server(s) launch complete.",
    "schema.enum.eventid.server_autoscale_in_complete.desc": "<nscalein> server(s) ScaleIn complete",
    "schema.enum.eventid.server_autoscale_failed.desc": "Server ScaleOut failed",
    "schema.enum.eventid.server_autoscale_in_failed.desc": "Server Scalein failed",
    "schema.enum.eventid.server_autoscale_out_failed.desc": "Server Scaleout failed",
    "schema.enum.eventid.se_gateway_heartbeat_failed.desc": "Ping heartbeat to gateway IP <gateway_ip> vrf <vrf_name> failed ",
    "schema.enum.eventid.se_gateway_heartbeat_success.desc": "Ping heartbeat to gateway IP <gateway_ip> vrf <vrf_name> is successful",
    "schema.enum.eventid.se_vnic_down_event.desc": "VNIC <if_name><linux_name>, MAC <mac> is down",
    "schema.enum.eventid.se_vnic_tx_queue_stall.desc": "VNIC <linux_name>, queue <queue> stall detected",
    "schema.enum.eventid.se_bgp_peer_state_change.desc": "BGP peer <peer_ip> state changed to <peer_state> in vrf <vrf_name>",
    "schema.enum.eventid.se_licensed_bandwidth_exceeded.desc": "Licensed bandwidth exceeded on SE <se_uuid> (<num_pkts_dropped> packets dropped)",
    "schema.enum.eventid.server_autoscale_out_triggered.desc": "Server Scaleout triggered for external orchestration",
    "schema.enum.eventid.server_autoscale_in_triggered.desc": "Server Scalein triggered for external orchestration",
    "schema.enum.eventid.se_bgp_peer_down.desc": "BGP peering to <peer_ip> in vrf <vrf_name> is down.<message>",
    "schema.enum.eventid.pool_auto_deployment_failed.desc": "Pool deployment failed",
    "schema.enum.eventid.pool_auto_deployment_success.desc": "Pool deployment success with ratio <ratio>",
    "schema.enum.eventid.se_vnic_up_event.desc": "VNIC <if_name><linux_name>, MAC <mac> is up",
    "schema.enum.eventid.pool_auto_deployment_update.desc": "Pool deployment progress update with ratio <ratio>",
    "schema.enum.eventid.gslb_site_oper_status.desc": "Site status <details>",
    "schema.enum.eventid.gslb_dns_status.desc": "DNS service status: <details>",
    "schema.enum.eventid.gslb_site_exception_status.desc": "Site exception <details>",
    "schema.enum.eventid.gslb_gs_status.desc": "GS status <details>",
    "schema.enum.eventid.gslb_site_sync_status.desc": "Site sync status is <details>",
    "schema.enum.eventid.scheduler_action_failure.desc": "Scheduler Action Failed",
    "schema.enum.eventid.controller_scheduler_unencrypted_config_export.desc": "Backup Configuration in unencrypted.",
    "schema.enum.eventid.gcp_access_fail.desc": "GCP connection setup failed  reason <reason>",
    "schema.enum.eventid.gcp_se_detected.desc": "Detected a GCP Instance SE <hostname> in project <project> zone <zone> network <network> subnet <subnet>",
    "schema.enum.eventid.gcp_api_fail.desc": "GCP cloud access API failed project <project>, network <network>  reason <reason>",
    "schema.enum.eventid.gcp_subnet_not_found.desc": "Unable to find matching subnet for GCP Instance <hostname> in project <project>, network <network>  reason <reason>",
    "schema.enum.eventid.gcp_subnet_attach_fail.desc": "Unable to attach subnet <subnet> to Service Engine <hostname> in project <project>, network <network>  reason <reason>",
    "schema.enum.eventid.gcp_route_add_fail.desc": "GCP route add failed IP <addr>, next hop <addr>, virtualservice <vs_name> in project <project>, network <network>  reason <reason>",
    "schema.enum.eventid.gcp_route_delete_fail.desc": "GCP route delete failed in IP <addr>, next hop <addr> virtualservice <vs_name> project <project>, network <network>  reason <reason>",
    "schema.enum.eventid.gcp_cloud_router_update_fail.desc": "GCP cloud router update failed for virtualservice <vs_uuid> FIP % in router <fip>",
    "schema.enum.eventid.vip_dns_register_success.desc": "VIP <addr> registered to < '>",
    "schema.enum.eventid.vip_dns_register_failure.desc": "VIP <addr> register failed for < '>",
    "schema.enum.eventid.vip_dns_deregister_success.desc": "VIP <addr> deregistered from < '>",
    "schema.enum.eventid.vip_dns_deregister_failure.desc": "VIP <addr> deregistered failed for < '>",
    "schema.enum.eventid.sync_dns_records_success.desc": "Synchronised virtual service DNS records",
    "schema.enum.eventid.sync_dns_records_failure.desc": "Synchronising virtual service DNS records failed",
    "schema.enum.eventid.flush_dns_records_success.desc": "Flushed virtual service DNS records",
    "schema.enum.eventid.flush_dns_records_failure.desc": "Flushing virtual service DNS records failed",
    "schema.enum.eventid.cc_host_ssh_failure.desc": "SSH to cloud host failed",
    "schema.enum.eventid.cc_host_ssh_success.desc": "SSH to cloud host success",
    "schema.enum.eventid.azure_access_failure.desc": "Azure connection setup failed  reason <reason>",
    "schema.enum.eventid.azure_alb_update_failure.desc": "Azure ALB update failed. Reason %s' % pb.reason",
    "schema.enum.eventid.azure_nic_update_failure.desc": "Azure NIC update failed. Reason %s' % pb.reason",
    "schema.enum.eventid.azure_nic_delete_failure.desc": "Azure NIC delete failed.",
    "schema.enum.eventid.azure_image_upload_failure.desc": "Azure image upload failed.",
    "schema.enum.eventid.vs_fault.desc": "Virtual Service Fault",
    "schema.enum.eventid.se_shm_mem_high.desc": "Shared memory usage is above 80 percent",
    "schema.enum.eventid.se_config_mem_usage_above_limit.desc": "Config memory usage reached threshold limit",
    "schema.enum.eventid.oci_access_failure.desc": "OCI connection setup failed  reason <reason>",
    "schema.enum.eventid.tencent_access_failure.desc": "Tencent connection setup failed  reason <reason>",
    "schema.enum.eventid.controller_cpu_high.desc": "CPU usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.controller_mem_high.desc": "Memory usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.controller_disk_high.desc": "Disk usage over Threshold <threshold> % Current <current_value> %",
    "schema.enum.eventid.albservices_connection_failure.desc": "Connection to ALBServices failed",
    "schema.enum.eventid.albservices_controller_deregistered.desc": "Controller Deregistered from ALBServices",
    "schema.enum.eventid.crs_update.desc": "New CRS data is available on ALBServices.",
    "schema.enum.eventid.crs_deployment_success.desc": "CRS deployed successfully on controller.",
    "schema.enum.eventid.crs_deployment_failure.desc": "Failed to deploy CRS on controller.",
    "schema.enum.eventid.ip_reputation_db_sync_success.desc": "IP Reputation ThreatDb Sync Success",
    "schema.enum.eventid.ip_reputation_db_sync_failure.desc": "IP Reputation ThreatDb Sync Failed",
    "schema.enum.eventid.appsignature_sync_success.desc": "AppSignature Sync Success",
    "schema.enum.eventid.appsignature_sync_failure.desc": "AppSignature Sync Failed",
    "schema.enum.eventid.psm_program_failure.desc": "Unable to program WAF PSM group",
    "schema.enum.eventid.psm_max_param_event.desc": "Maximum number of parameters reached",
    "schema.enum.eventid.psm_max_uri_event.desc": "Maximum number of URIs reached",
    "schema.enum.eventid.sec_mgr_data_error_event.desc": "Database writes failed for SecMgrData.",
    "schema.enum.eventid.uacache_pulse_conn_failed_event.desc": "UACache connection with PULSE Failed.",
    "schema.enum.eventid.albservices_controller_registered.desc": "Controller registered to connected ALBServices.",
    "schema.enum.eventid.albservices_support_case_created.desc": "Support case  <case_number>: <subject>  created on ALBServices.",
    "schema.enum.eventid.albservices_support_case_updated.desc": "Support case  <case_number>: <subject> updated on ALBServices.",
    "schema.enum.eventid.albservices_support_case_file_attachment_triggered.desc": "File upload and attachment for file <file_path> to support case <case_id> triggered.",
    "schema.enum.eventid.albservices_support_case_file_attachment_success.desc": "Successfully uploaded and attached file <file_path> to support case <case_id>.",
    "schema.enum.eventid.albservices_support_case_file_attachment_failure.desc": "File upload and attachment for file <file_path> to support case <case_id> failed.",
    "schema.enum.eventid.nsxt_access_fail.desc": "NSXT connection setup failed  reason <reason>",
    "schema.enum.eventid.vcenter_access_fail.desc": "VCenter connection setup failed  reason <reason>",
    "schema.enum.eventid.nsxt_image_upload_failure.desc": "vCenter SE Image for NSXT Cloud  Upload Failure  Image version: <image_version>, vCenter: <vc_url>",
    "schema.enum.eventid.nsxt_image_delete_failure.desc": "vCenter SE Image for NSXT Cloud  Delete Failure  Image version: <image_version>, vCenter: <vc_url>",
    "schema.enum.eventid.upgrade_controller_started.desc": "Avi Vantage controller upgrade started",
    "schema.enum.eventid.upgrade_se_group_started.desc": "Avi Vantage se group upgrade started",
    "schema.enum.eventid.resume_se_group_started.desc": "Avi Vantage se group resume started",
    "schema.enum.eventid.patch_controller_started.desc": "Avi Vantage controller patch started",
    "schema.enum.eventid.patch_se_group_started.desc": "Avi Vantage se group patch started",
    "schema.enum.eventid.rollback_controller_started.desc": "Avi Vantage controller rollback started",
    "schema.enum.eventid.rollback_se_group_started.desc": "Avi Vantage se group rollback started",
    "schema.enum.eventid.rollbackpatch_controller_started.desc": "Avi Vantage controller rollback patch started",
    "schema.enum.eventid.rollbackpatch_se_group_started.desc": "Avi Vantage se group rollback patch started",
    "schema.enum.eventid.upgrade_controller_complete.desc": "Avi Vantage controller upgrade completed",
    "schema.enum.eventid.upgrade_se_group_complete.desc": "Avi Vantage se group upgrade completed",
    "schema.enum.eventid.patch_controller_complete.desc": "Avi Vantage controller patch completed",
    "schema.enum.eventid.patch_se_group_complete.desc": "Avi Vantage se group patch completed",
    "schema.enum.eventid.rollback_controller_complete.desc": "Avi Vantage controller rollback completed",
    "schema.enum.eventid.rollback_se_group_complete.desc": "Avi Vantage se group rollback completed",
    "schema.enum.eventid.rollbackpatch_controller_complete.desc": "Avi Vantage controller rollback patch completed",
    "schema.enum.eventid.rollbackpatch_se_group_complete.desc": "Avi Vantage se group rollback patch completed",
    "schema.enum.eventid.upgrade_controller_aborted.desc": "Avi Vantage controller upgrade aborted",
    "schema.enum.eventid.patch_controller_aborted.desc": "Avi Vantage controller patch aborted",
    "schema.enum.eventid.upgrade_se_group_suspended.desc": "Avi Vantage se group upgrade suspended",
    "schema.enum.eventid.patch_se_group_suspended.desc": "Avi Vantage se group patch suspended",
    "schema.enum.eventid.rollback_se_group_suspended.desc": "Avi Vantage se group rollback suspended",
    "schema.enum.eventid.rollbackpatch_se_group_suspended.desc": "Avi Vantage se group rollback patch suspended",
    "schema.enum.eventid.upgrade_request.desc": "UpgradeRollbackPatch requested",
    "schema.enum.eventid.license_transaction.desc": "License transaction.",
    "schema.enum.eventid.license_se_reconcile.desc": "License reconciliation.",
    "schema.enum.eventid.license_controller_license_reconcile.desc": "License reconciliation.",
    "schema.enum.eventid.license_tier_switch.desc": "License tier switch from <source_tier> to <destination_tier> <status>. <reason>",
    "schema.enum.eventid.rollback_controller_aborted.desc": "AVI Vantage controller rollback aborted",
    "schema.enum.eventid.rollbackpatch_controller_aborted.desc": "AVI Vantage controller rollback patch aborted",
    "schema.enum.eventid.logagent_streaming_conn_event.desc": "Log agent streaming connection event of type <type> for log agent",
    "schema.enum.eventid.avi_false_positive_detection.label": "FalsePositiveDetection",
    "schema.enum.eventid.avi_false_positive_detection.desc": "False positive detection in VirtualService <vs_name>",
    "schema.enum.eventid.connect_to_metricsmgr_error.desc": "Cannot connect to metricsmgr",
    "schema.enum.eventid.dns_vs_status.desc": "DNS VS status that is participating in GSLB.",
    "schema.enum.eventid.config_version_ack_status.desc": "Federated object config version ACK status.",
    "schema.enum.eventmodule.adapt_repl.label": "Adaptive Replication Module.",
    "schema.enum.eventmodule.adapt_repl.desc": "Adaptive Replication Module.",
    "schema.enum.alertsource.conn_logs.label": "Conn Logs",
    "schema.enum.alertsource.app_logs.label": "App Logs",
    "schema.enum.alertsource.event_logs.label": "Event Logs",
    "schema.enum.alertsource.metrics.label": "Metric Logs",
    "schema.enum.analyticsprofilerespcodeblock.ap_http_rsp_4xx.label": "4XX",
    "schema.enum.analyticsprofilerespcodeblock.ap_http_rsp_5xx.label": "5XX",
    "schema.enum.latencyauditmode.latency_audit_off.label": "Turn Off.",
    "schema.enum.latencyauditmode.latency_audit_off.desc": "Turn off the latency audit.",
    "schema.enum.latencyauditmode.latency_audit_on.label": "Turn On.",
    "schema.enum.latencyauditmode.latency_audit_on.desc": "Turn on the latency audit. Only audit statistics are updated.",
    "schema.enum.latencyauditmode.latency_audit_on_with_sig.label": "Turn on the latency audit with significance.",
    "schema.enum.latencyauditmode.latency_audit_on_with_sig.desc": "Turn on the latency audit, statistics are updated, event and significant logs are generated if configured threshold is breached.",
    "schema.enum.logaction.log_field_remove.desc": "Remove matched field and its value from log.",
    "schema.enum.logaction.log_field_maskoff.desc": "Replace matched field's value with X.",
    "schema.enum.stringoperation.begins_with.label": "Begins with",
    "schema.enum.stringoperation.begins_with.desc": "begins with the configured value(s)",
    "schema.enum.stringoperation.does_not_begin_with.label": "Does not begin with",
    "schema.enum.stringoperation.does_not_begin_with.desc": "does not begin with the configured value(s)",
    "schema.enum.stringoperation.contains.label": "Contains",
    "schema.enum.stringoperation.contains.desc": "contains the configured value(s)",
    "schema.enum.stringoperation.does_not_contain.label": "Does not contain",
    "schema.enum.stringoperation.does_not_contain.desc": "does not contain the configured value(s)",
    "schema.enum.stringoperation.ends_with.label": "Ends with",
    "schema.enum.stringoperation.ends_with.desc": "ends with the configured value(s)",
    "schema.enum.stringoperation.does_not_end_with.label": "Does not end with",
    "schema.enum.stringoperation.does_not_end_with.desc": "does not end with the configured value(s)",
    "schema.enum.stringoperation.equals.label": "Equals",
    "schema.enum.stringoperation.equals.desc": "equals the configured value(s)",
    "schema.enum.stringoperation.does_not_equal.label": "Does not equal",
    "schema.enum.stringoperation.does_not_equal.desc": "does not equal the configured value(s)",
    "schema.enum.stringoperation.regex_match.label": "Regex pattern matches",
    "schema.enum.stringoperation.regex_match.desc": "regex pattern matches with the configured value(s)",
    "schema.enum.stringoperation.regex_does_not_match.label": "Regex pattern does not match",
    "schema.enum.stringoperation.regex_does_not_match.desc": "regex pattern does not match with the configured value(s)",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_udp.label": "UDP",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_udp.desc": "Stream logs as UDP datagrams.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_udp.label": "SyslogoverUDP",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_udp.desc": "Stream logs using Syslog protocol (RFC5424) with UDP as the transport protocol.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_tcp.label": "TCP",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_tcp.desc": "Stream logs over a TCP connection.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_tcp.label": "SyslogoverTCP",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_tcp.desc": "Stream logs using Syslog protocol (RFC5424) with TCP as the transport protocol.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_raw_over_udp.label": "RAW",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_raw_over_udp.desc": "Stream logs as raw bytes (Protobuf serialized message) over UDP.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_tls.label": "TLS",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_tls.desc": "Stream logs over an encrypted TLS channel on top of a TCP connection.",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_tls.label": "SyslogoverTLS",
    "schema.enum.clientlogstreamingprotocol.log_streaming_protocol_syslog_over_tls.desc": "Stream logs Syslog protocol (RFC5424) over an encrypted TLS channel on top of a TCP connection.",
    "schema.enum.logstype.logs_significant_only.label": "Only significant logs",
    "schema.enum.logstype.logs_significant_only.desc": "Only significant logs",
    "schema.enum.logstype.logs_udf_only.label": "Only filtermatching logs",
    "schema.enum.logstype.logs_udf_only.desc": "Only logs that match any client log filters or rules with logging enabled",
    "schema.enum.logstype.logs_udf_significant.label": "Significantfiltermatching logs",
    "schema.enum.logstype.logs_udf_significant.desc": "Logs that are either significant or match any client log filters or rules with logging enabled",
    "schema.enum.logstype.logs_all.label": "All logs",
    "schema.enum.logstype.logs_all.desc": "All logs",
    "schema.enum.logsprocessingtype.logs_processing_none.label": "None",
    "schema.enum.logsprocessingtype.logs_processing_none.desc": "Don't send any logs to the Logs Analytics system. Queries will return 0 logs.",
    "schema.enum.logsprocessingtype.logs_processing_sync_and_index_on_demand.label": "Sync And Index On Demand",
    "schema.enum.logsprocessingtype.logs_processing_sync_and_index_on_demand.desc": "Only upon query, sync logs from SEs to the Logs Analytics system and index them.",
    "schema.enum.logsprocessingtype.logs_processing_auto_sync_and_index.label": "Auto Sync And Index",
    "schema.enum.logsprocessingtype.logs_processing_auto_sync_and_index.desc": "Continuously sync logs from SEs to the Logs Analytics system and index them.",
    "schema.enum.logsprocessingtype.logs_processing_auto_sync_but_index_on_demand.label": "Auto Sync But Index On Demand",
    "schema.enum.logsprocessingtype.logs_processing_auto_sync_but_index_on_demand.desc": "Continuosly sync logs from SEs to the Logs Analytics system but index only when queried.",
    "schema.enum.persistentserverhmdownrecovery.hm_down_pick_new_server.desc": "If a persistent server has been marked down by a health monitor, pick a new server.",
    "schema.enum.persistentserverhmdownrecovery.hm_down_abort_connection.desc": "If persistent server has been marked down by health monitor, close the connection by sending a reset or an HTTP 5xx and  closereset the connection as appropriate to the protocol.",
    "schema.enum.persistentserverhmdownrecovery.hm_down_continue_persistent_server.desc": "Even if persistent server has been marked down by a health monitor, continue sending persisted users to the server, assuming the server may be overwhelmed and slow to respond to health monitors.  New or nonpersisted clients will be sent to alternate servers.",
    "schema.enum.persistenceprofiletype.persistence_type_client_ip_address.desc": "Persist based on the client's IP address.",
    "schema.enum.persistenceprofiletype.persistence_type_http_cookie.desc": "Persist based on an Avi generated HTTP cookie.",
    "schema.enum.persistenceprofiletype.persistence_type_tls.desc": "Persist based on TLS tickets or SSL session.",
    "schema.enum.persistenceprofiletype.persistence_type_custom_http_header.desc": "If the value of a specified HTTP header matches the value in a server's Header field, the request will be sent to that server.  This is a statically defined mapping.",
    "schema.enum.persistenceprofiletype.persistence_type_app_cookie.desc": "Persist using a user or session identifier such as JSessionID included in a server's response.  Avi will persist against a cookie of this name, or one is not found, against an HTTP header of this name.",
    "schema.enum.persistenceprofiletype.persistence_type_gslb_site.desc": "Persist based on site session identififer.",
    "schema.enum.applicationprofiletype.application_profile_type_l4.label": "L4",
    "schema.enum.applicationprofiletype.application_profile_type_l4.desc": "Layer 4 application proxy is enabled for this virtual service.",
    "schema.enum.applicationprofiletype.application_profile_type_http.label": "HTTP",
    "schema.enum.applicationprofiletype.application_profile_type_http.desc": "HTTP application proxy is enabled for this virtual service.",
    "schema.enum.applicationprofiletype.application_profile_type_syslog.label": "SYSLOG",
    "schema.enum.applicationprofiletype.application_profile_type_syslog.desc": "Syslog Layer 4 application proxy is enabled for this virtual service.",
    "schema.enum.applicationprofiletype.application_profile_type_dns.label": "DNS",
    "schema.enum.applicationprofiletype.application_profile_type_dns.desc": "DNS service is enabled for this virtual service. Based on config, this could be a DNS service for GSLB, IPAM or DNS proxy.",
    "schema.enum.applicationprofiletype.application_profile_type_ssl.label": "L4 SSLTLS",
    "schema.enum.applicationprofiletype.application_profile_type_ssl.desc": "SSL application proxy is enabled for this virtual service. This is used for nonHTTP applications that require SSL termination.",
    "schema.enum.applicationprofiletype.application_profile_type_sip.label": "SIP",
    "schema.enum.applicationprofiletype.application_profile_type_sip.desc": "SIP application proxy is enabled for this virtual service.",
    "schema.enum.appservicetype.app_service_type_l7_horizon.label": "HORIZON",
    "schema.enum.appservicetype.app_service_type_l7_horizon.desc": "Layer 7 application proxy and Horizon app.",
    "schema.enum.appservicetype.app_service_type_l4_blast.label": "BLAST",
    "schema.enum.appservicetype.app_service_type_l4_blast.desc": "Layer 4 application proxy and protocol blast.",
    "schema.enum.appservicetype.app_service_type_l4_pcoip.label": "PCoIP",
    "schema.enum.appservicetype.app_service_type_l4_pcoip.desc": "Layer 4 application proxy and protocol PCoIP.",
    "schema.enum.dnserrorresponsetype.dns_error_response_error.label": "Respond to unhandled DNS requests",
    "schema.enum.dnserrorresponsetype.dns_error_response_error.desc": "Respond with a relevant error code e.g. NXDOMAIN response for nonexistent records, empty NOERROR response for unsupported queries, etc.",
    "schema.enum.dnserrorresponsetype.dns_error_response_none.label": "Drop unhandled DNS requests",
    "schema.enum.dnserrorresponsetype.dns_error_response_none.desc": "No response for the client query when an error is encountered. Query is passed through to upstream DNS servers if such a passthrough pool is configured, and no local record exists.",
    "schema.enum.proxyprotocolversion.proxy_protocol_version_1.label": "ProxyProtocolV1",
    "schema.enum.proxyprotocolversion.proxy_protocol_version_1.desc": "Proxy Protocol Version 1",
    "schema.enum.proxyprotocolversion.proxy_protocol_version_2.label": "ProxyProtocolV2",
    "schema.enum.proxyprotocolversion.proxy_protocol_version_2.desc": "Proxy Protocol Version 2",
    "schema.enum.trueclientipindexdirection.left.label": "From Left.",
    "schema.enum.trueclientipindexdirection.left.desc": "From Left.",
    "schema.enum.trueclientipindexdirection.right.label": "From Right.",
    "schema.enum.trueclientipindexdirection.right.desc": "From Right.",
    "schema.enum.httppolicyvar.http_policy_var_client_ip.desc": "Variable to get client IP address of the request",
    "schema.enum.httppolicyvar.http_policy_var_vs_port.desc": "Variable to get virtual service port the request came on",
    "schema.enum.httppolicyvar.http_policy_var_vs_ip.desc": "Variable to get IP address of the virtual service the request came for",
    "schema.enum.httppolicyvar.http_policy_var_http_hdr.desc": "Variable to get value of the HTTP header in the HTTP request",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_fingerprint.desc": "SSL Client Certificate fingerprint",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_serial.desc": "SSL Client Certificate serial number",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_issuer.desc": "SSL Client Certificate Issuer name",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_subject.desc": "SSL Client Certificate Subject name",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_raw.desc": "The whole SSL client certificate in a PEM format",
    "schema.enum.httppolicyvar.http_policy_var_ssl_protocol.desc": "SSL protocol negotiated for this connection",
    "schema.enum.httppolicyvar.http_policy_var_ssl_server_name.desc": "Server name requested through SNI",
    "schema.enum.httppolicyvar.http_policy_var_user_name.desc": "Username obtained from http request using basic auth",
    "schema.enum.httppolicyvar.http_policy_var_ssl_cipher.desc": "Cipher suite used for the SSLTLS connection between the client and virtual service",
    "schema.enum.httppolicyvar.http_policy_var_request_id.desc": "Variable to get request id of the request",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_version.label": "SSL Client Version.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_version.desc": "SSL Client Certificate version.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_sigalg.label": "SSL Client Signature Algorithm.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_sigalg.desc": "SSL Client Certificate signature algorithm.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_notvalidbefore.label": "SSL Client Not Valid Before.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_notvalidbefore.desc": "SSL Client Certificate not before date.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_notvalidafter.label": "SSL Client Not Valid After.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_notvalidafter.desc": "SSL Client Certificate not after date.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_escaped.label": "SSL Client Certificate Escaped.",
    "schema.enum.httppolicyvar.http_policy_var_ssl_client_escaped.desc": "The whole SSL Client Certificate in PEM format and percent encoded.",
    "schema.enum.httppolicyvar.http_policy_var_source_ip.label": "Source IP of the client connection.",
    "schema.enum.httppolicyvar.http_policy_var_source_ip.desc": "Variable to get source IP address of the request.",
    "schema.enum.matchcase.sensitive.label": "Sensitive",
    "schema.enum.matchcase.sensitive.desc": "case sensitive match",
    "schema.enum.matchcase.insensitive.label": "Insensitive",
    "schema.enum.matchcase.insensitive.desc": "case insensitive match",
    "schema.enum.compressiontype.auto_compression.label": "Auto",
    "schema.enum.compressiontype.auto_compression.desc": "Compression actions based on SE state and Content properties",
    "schema.enum.compressiontype.custom_compression.label": "Custom",
    "schema.enum.compressiontype.custom_compression.desc": "Compression actions based on custom compression rules",
    "schema.enum.matchoperation.is_in.label": "Is in",
    "schema.enum.matchoperation.is_in.desc": "is in the configured value(s)",
    "schema.enum.matchoperation.is_not_in.label": "Is not in",
    "schema.enum.matchoperation.is_not_in.desc": "is not in the configured value(s)",
    "schema.enum.compressionfilterlevel.aggressive_compression.label": "Aggressive",
    "schema.enum.compressionfilterlevel.aggressive_compression.desc": "Aggressive compression will use more Avi CPU, but will provide slightly improved compression percentage",
    "schema.enum.compressionfilterlevel.normal_compression.label": "Normal",
    "schema.enum.compressionfilterlevel.normal_compression.desc": "Normal compression level uses some Avi CPU, and provides good compression",
    "schema.enum.compressionfilterlevel.no_compression.label": "None",
    "schema.enum.compressionfilterlevel.no_compression.desc": "No compression",
    "schema.enum.authorizationactionhttpstatuscode.http_response_status_code_401.label": "401",
    "schema.enum.authorizationactionhttpstatuscode.http_response_status_code_401.desc": "401 Unauthorized",
    "schema.enum.authorizationactionhttpstatuscode.http_response_status_code_403.label": "403",
    "schema.enum.authorizationactionhttpstatuscode.http_response_status_code_403.desc": "403 Forbidden",
    "schema.enum.jwtclaimtype.jwt_claim_type_bool.label": "Boolean",
    "schema.enum.jwtclaimtype.jwt_claim_type_int.label": "Integer",
    "schema.enum.jwtclaimtype.jwt_claim_type_string.label": "String",
    "schema.enum.hdrmatchoperation.hdr_exists.label": "Exists",
    "schema.enum.hdrmatchoperation.hdr_exists.desc": "header exists in the HTTP request",
    "schema.enum.hdrmatchoperation.hdr_does_not_exist.label": "Does not exist",
    "schema.enum.hdrmatchoperation.hdr_does_not_exist.desc": "header does not exist in the HTTP request",
    "schema.enum.hdrmatchoperation.hdr_begins_with.label": "Begins with",
    "schema.enum.hdrmatchoperation.hdr_begins_with.desc": "header value begins with the configure value(s)",
    "schema.enum.hdrmatchoperation.hdr_does_not_begin_with.label": "Does not begin with",
    "schema.enum.hdrmatchoperation.hdr_does_not_begin_with.desc": "header value does not begins with the configure value(s)",
    "schema.enum.hdrmatchoperation.hdr_contains.label": "Contains",
    "schema.enum.hdrmatchoperation.hdr_contains.desc": "header value contains configured value(s)",
    "schema.enum.hdrmatchoperation.hdr_does_not_contain.label": "Does not contain",
    "schema.enum.hdrmatchoperation.hdr_does_not_contain.desc": "header value  does not contains configured value(s)",
    "schema.enum.hdrmatchoperation.hdr_ends_with.label": "Ends with",
    "schema.enum.hdrmatchoperation.hdr_ends_with.desc": "header value ends with the configured value(s)",
    "schema.enum.hdrmatchoperation.hdr_does_not_end_with.label": "Does not end with",
    "schema.enum.hdrmatchoperation.hdr_does_not_end_with.desc": "header value does not ends with the configured value(s)",
    "schema.enum.hdrmatchoperation.hdr_equals.label": "Equals",
    "schema.enum.hdrmatchoperation.hdr_equals.desc": "header value equals the configured value(s)",
    "schema.enum.hdrmatchoperation.hdr_does_not_equal.label": "Does not equal",
    "schema.enum.hdrmatchoperation.hdr_does_not_equal.desc": "header value does not equals the configured value(s)",
    "schema.enum.authprofiletype.auth_profile_ldap.label": "LDAP",
    "schema.enum.authprofiletype.auth_profile_ldap.desc": "Auth server type: LDAP",
    "schema.enum.authprofiletype.auth_profile_tacacs_plus.label": "TACACS_PLUS",
    "schema.enum.authprofiletype.auth_profile_tacacs_plus.desc": "Auth server type: TACACS+",
    "schema.enum.authprofiletype.auth_profile_saml.label": "SAML",
    "schema.enum.authprofiletype.auth_profile_saml.desc": "Auth server type: SAML",
    "schema.enum.authprofiletype.auth_profile_pingaccess.label": "PingAccess",
    "schema.enum.authprofiletype.auth_profile_pingaccess.desc": "Auth server type: PingAccess",
    "schema.enum.authprofiletype.auth_profile_jwt.label": "JWT Validation",
    "schema.enum.authprofiletype.auth_profile_jwt.desc": "Auth server type: JWT",
    "schema.enum.authprofiletype.auth_profile_oauth.label": "OAuthOIDC",
    "schema.enum.authprofiletype.auth_profile_oauth.desc": "Auth server type : OAuthOIDC.",
    "schema.enum.authsamlentitytype.auth_saml_cluster_vip.label": "Use Cluster VIP",
    "schema.enum.authsamlentitytype.auth_saml_cluster_vip.desc": "Use Cluster VIP",
    "schema.enum.authsamlentitytype.auth_saml_dns_fqdn.label": "Use DNS FQDN",
    "schema.enum.authsamlentitytype.auth_saml_dns_fqdn.desc": "Use DNS FQDN",
    "schema.enum.authsamlentitytype.auth_saml_app_vs.label": "Use userprovided entity ID",
    "schema.enum.authsamlentitytype.auth_saml_app_vs.desc": "Use userinput entity ID or VSuuid if not input",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_none.label": "None",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_none.desc": "Auth Tacacs+ service: None",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_login.label": "Login",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_login.desc": "Auth Tacacs+ service: Login",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_enable.label": "Enable",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_enable.desc": "Auth Tacacs+ service: Enable",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_ppp.label": "PPP",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_ppp.desc": "Auth Tacacs+ service: PPP",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_arap.label": "ARAP",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_arap.desc": "Auth Tacacs+ service: ARAP",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_pt.label": "PT",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_pt.desc": "Auth Tacacs+ service: PT",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_rcmd.label": "RCMD",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_rcmd.desc": "Auth Tacacs+ service: RCMD",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_x25.label": "X25",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_x25.desc": "Auth Tacacs+ service: X25",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_nasi.label": "NASI",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_nasi.desc": "Auth Tacacs+ service: NASI",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_fwproxy.label": "FWDPROXY",
    "schema.enum.authtacacsplusservice.auth_tacacs_plus_service_fwproxy.desc": "Auth Tacacs+ service: FWDPROXY",
    "schema.enum.authldapsecuritymode.auth_ldap_secure_none.label": "None",
    "schema.enum.authldapsecuritymode.auth_ldap_secure_none.desc": "Auth server security type: None",
    "schema.enum.authldapsecuritymode.auth_ldap_secure_use_ldaps.label": "LDAPS",
    "schema.enum.authldapsecuritymode.auth_ldap_secure_use_ldaps.desc": "Auth server security type: ldaps",
    "schema.enum.authldapsearchscope.auth_ldap_scope_base.label": "Scope Base",
    "schema.enum.authldapsearchscope.auth_ldap_scope_base.desc": "Ldap search at base",
    "schema.enum.authldapsearchscope.auth_ldap_scope_one.label": "Scope One Level",
    "schema.enum.authldapsearchscope.auth_ldap_scope_one.desc": "LDAP search one level",
    "schema.enum.authldapsearchscope.auth_ldap_scope_subtree.label": "Scope Subtree",
    "schema.enum.authldapsearchscope.auth_ldap_scope_subtree.desc": "LDAP search entire subtree",
    "schema.enum.botaction.bot_action_bypass.label": "Bypass",
    "schema.enum.botaction.bot_action_bypass.desc": "Bypass BOT detection.",
    "schema.enum.botaction.bot_action_continue.label": "Continue",
    "schema.enum.botaction.bot_action_continue.desc": "Stop allowlist processing and move on to BOT detection.",
    "schema.enum.geomappingattribute.attribute_ip_prefix.label": "IPprefix",
    "schema.enum.geomappingattribute.attribute_ip_prefix.desc": "IP or prefix value",
    "schema.enum.geomappingattribute.attribute_country_code.label": "Country Code",
    "schema.enum.geomappingattribute.attribute_country_code.desc": "ISO 31661 alpha2 Country Code",
    "schema.enum.geomappingattribute.attribute_country_name.label": "Country Name",
    "schema.enum.geomappingattribute.attribute_country_name.desc": "Country Name",
    "schema.enum.geomappingattribute.attribute_continent_code.label": "Continent Code",
    "schema.enum.geomappingattribute.attribute_continent_code.desc": "Continent Code",
    "schema.enum.geomappingattribute.attribute_continent_name.label": "Continent Name",
    "schema.enum.geomappingattribute.attribute_continent_name.desc": "Continent Name",
    "schema.enum.geomappingattribute.attribute_region_name.label": "Region Name",
    "schema.enum.geomappingattribute.attribute_region_name.desc": "Region Name",
    "schema.enum.geomappingattribute.attribute_city_name.label": "City Name",
    "schema.enum.geomappingattribute.attribute_city_name.desc": "City Name",
    "schema.enum.geomappingattribute.attribute_isp_name.label": "ISP Name",
    "schema.enum.geomappingattribute.attribute_isp_name.desc": "ISP Name",
    "schema.enum.geomappingattribute.attribute_organization_name.label": "Organization Name",
    "schema.enum.geomappingattribute.attribute_organization_name.desc": "Organization Name",
    "schema.enum.geomappingattribute.attribute_as_number.label": "AS Number",
    "schema.enum.geomappingattribute.attribute_as_number.desc": "AS Number",
    "schema.enum.geomappingattribute.attribute_as_name.label": "AS Name",
    "schema.enum.geomappingattribute.attribute_as_name.desc": "AS Name",
    "schema.enum.geomappingattribute.attribute_longitude.label": "Longitude",
    "schema.enum.geomappingattribute.attribute_longitude.desc": "Longitude",
    "schema.enum.geomappingattribute.attribute_latitude.label": "Latitude",
    "schema.enum.geomappingattribute.attribute_latitude.desc": "Latitude",
    "schema.enum.geomappingattribute.attribute_custom_1.label": "Custom 1",
    "schema.enum.geomappingattribute.attribute_custom_1.desc": "Custom 1",
    "schema.enum.geomappingattribute.attribute_custom_2.label": "Custom 2",
    "schema.enum.geomappingattribute.attribute_custom_2.desc": "Custom 2",
    "schema.enum.geomappingattribute.attribute_custom_3.label": "Custom 3",
    "schema.enum.geomappingattribute.attribute_custom_3.desc": "Custom 3",
    "schema.enum.geomappingattribute.attribute_custom_4.label": "Custom 4",
    "schema.enum.geomappingattribute.attribute_custom_4.desc": "Custom 4",
    "schema.enum.geomappingattribute.attribute_custom_5.label": "Custom 5",
    "schema.enum.geomappingattribute.attribute_custom_5.desc": "Custom 5",
    "schema.enum.geomappingattribute.attribute_custom_6.label": "Custom 6",
    "schema.enum.geomappingattribute.attribute_custom_6.desc": "Custom 6",
    "schema.enum.geomappingattribute.attribute_custom_7.label": "Custom 7",
    "schema.enum.geomappingattribute.attribute_custom_7.desc": "Custom 7",
    "schema.enum.geomappingattribute.attribute_custom_8.label": "Custom 8",
    "schema.enum.geomappingattribute.attribute_custom_8.desc": "Custom 8",
    "schema.enum.geomappingattribute.attribute_custom_9.label": "Custom 9",
    "schema.enum.geomappingattribute.attribute_custom_9.desc": "Custom 9",
    "schema.enum.geomappingattribute.attribute_user_defined_mapping.label": "User Defined Mapping",
    "schema.enum.geomappingattribute.attribute_user_defined_mapping.desc": "Mapping of specific values of other geo attributes to a user defined group",
    "schema.enum.ipreputationtype.ip_reputation_type_spam_source.label": "Spam source",
    "schema.enum.ipreputationtype.ip_reputation_type_spam_source.desc": "IP address known to be a spam source. Spam sources include tunneling spam messages through proxy, anomalous SMTP activities or forum spam activities.",
    "schema.enum.ipreputationtype.ip_reputation_type_windows_exploits.label": "Windows exploit",
    "schema.enum.ipreputationtype.ip_reputation_type_windows_exploits.desc": "IP address offering or distributing malware, shell code, rootkits, worms or viruses.",
    "schema.enum.ipreputationtype.ip_reputation_type_web_attacks.label": "Web attacks",
    "schema.enum.ipreputationtype.ip_reputation_type_web_attacks.desc": "IP address known to be source of web attacks, including crosssite scripting, iFrame injection, SQL injection, cross domain injection, or domain password brute force attack.",
    "schema.enum.ipreputationtype.ip_reputation_type_botnets.label": "Botnet",
    "schema.enum.ipreputationtype.ip_reputation_type_botnets.desc": "IP address known to be a bot 'command and control' channel,  or infected machine controlled by a bot master.",
    "schema.enum.ipreputationtype.ip_reputation_type_scanners.label": "Scanner",
    "schema.enum.ipreputationtype.ip_reputation_type_scanners.desc": "IP address known to be a scanner, such as probes, host scan, domain scan and password brute force attack.",
    "schema.enum.ipreputationtype.ip_reputation_type_dos.label": "DoS",
    "schema.enum.ipreputationtype.ip_reputation_type_dos.desc": "DoS or DDoS attack, anomalous sync flood or anomalous traffic detection.",
    "schema.enum.ipreputationtype.ip_reputation_type_reputation.label": "Reputation",
    "schema.enum.ipreputationtype.ip_reputation_type_reputation.desc": "IP address known to be infected with malware or identified to contact malware distribution points.",
    "schema.enum.ipreputationtype.ip_reputation_type_phishing.label": "Phishing",
    "schema.enum.ipreputationtype.ip_reputation_type_phishing.desc": "IP address hosting phishing sites or other kinds of fraud activities such as Ad Click Fraud or Gaming fraud.",
    "schema.enum.ipreputationtype.ip_reputation_type_proxy.label": "Proxy",
    "schema.enum.ipreputationtype.ip_reputation_type_proxy.desc": "IP address providing proxy services.",
    "schema.enum.ipreputationtype.ip_reputation_type_network.label": "Network",
    "schema.enum.ipreputationtype.ip_reputation_type_network.desc": "Network infrastructure IP address.",
    "schema.enum.ipreputationtype.ip_reputation_type_cloud.label": "Cloud",
    "schema.enum.ipreputationtype.ip_reputation_type_cloud.desc": "IP address originating from a cloud.",
    "schema.enum.ipreputationtype.ip_reputation_type_mobile_threats.label": "Mobile threats",
    "schema.enum.ipreputationtype.ip_reputation_type_mobile_threats.desc": "IP addresses of malicious and unwanted mobile applications.",
    "schema.enum.ipreputationtype.ip_reputation_type_tor.label": "Tor proxy",
    "schema.enum.ipreputationtype.ip_reputation_type_tor.desc": "IP addresses acting as exit nodes for the Tor network.",
    "schema.enum.ipreputationtype.ip_reputation_type_all.label": "All threats",
    "schema.enum.ipreputationtype.ip_reputation_type_all.desc": "All threats.",
    "schema.enum.querymatchoperation.query_match_contains.label": "Contains",
    "schema.enum.querymatchoperation.query_match_contains.desc": "contains the configured value(s)",
    "schema.enum.httpprotocol.http.desc": "HTTP Protocol",
    "schema.enum.httpprotocol.https.desc": "Secure HTTP Protocol",
    "schema.enum.cloudtype.cloud_none.label": "No Orchestrator",
    "schema.enum.cloudtype.cloud_none.desc": "No Orchestrator",
    "schema.enum.cloudtype.cloud_vcenter.label": "VMware vCentervSphere ESX",
    "schema.enum.cloudtype.cloud_vcenter.desc": "VMware vCentervSphere ESX",
    "schema.enum.cloudtype.cloud_openstack.label": "OpenStack",
    "schema.enum.cloudtype.cloud_openstack.desc": "OpenStack",
    "schema.enum.cloudtype.cloud_aws.label": "AWS",
    "schema.enum.cloudtype.cloud_aws.desc": "Amazon Web Services",
    "schema.enum.cloudtype.cloud_vca.label": "vCloud Air",
    "schema.enum.cloudtype.cloud_vca.desc": "VMware vCloud Air",
    "schema.enum.cloudtype.cloud_mesos.label": "Mesos",
    "schema.enum.cloudtype.cloud_mesos.desc": "Mesos",
    "schema.enum.cloudtype.cloud_linuxserver.label": "Linux Server",
    "schema.enum.cloudtype.cloud_linuxserver.desc": "Linux Server",
    "schema.enum.cloudtype.cloud_docker_ucp.label": "Docker Universal Control Plane",
    "schema.enum.cloudtype.cloud_docker_ucp.desc": "Docker Universal Control Plane",
    "schema.enum.cloudtype.cloud_rancher.label": "Rancher Cloud",
    "schema.enum.cloudtype.cloud_rancher.desc": "Rancher Cloud",
    "schema.enum.cloudtype.cloud_oshift_k8s.label": "OpenShiftKubernetes Cloud",
    "schema.enum.cloudtype.cloud_oshift_k8s.desc": "OpenShiftKubernetes Cloud",
    "schema.enum.cloudtype.cloud_azure.label": "Azure Cloud",
    "schema.enum.cloudtype.cloud_azure.desc": "Azure Cloud",
    "schema.enum.cloudtype.cloud_gcp.label": "Google Cloud Platform",
    "schema.enum.cloudtype.cloud_gcp.desc": "Google Cloud Platform",
    "schema.enum.cloudtype.cloud_nsxt.label": "NSXT Cloud",
    "schema.enum.cloudtype.cloud_nsxt.desc": "NSXT Cloud",
    "schema.enum.licensetype.lic_cores.label": "Cores",
    "schema.enum.licensetype.lic_cores.desc": "Limit based Cores license type.",
    "schema.enum.licensetype.lic_metered_se_bandwidth.label": "SE Bandwidth",
    "schema.enum.licensetype.lic_metered_se_bandwidth.desc": "Usage based SE Bandwidth license type.",
    "schema.enum.licensetiertype.enterprise.label": "Enterprise",
    "schema.enum.licensetiertype.enterprise.desc": "VMware NSX ALB Enterprise.",
    "schema.enum.licensetiertype.basic.label": "Basic",
    "schema.enum.licensetiertype.basic.desc": "VMware NSX ALB Basic (replacement for NSX LB).",
    "schema.enum.licensetiertype.essentials.label": "Essentials",
    "schema.enum.licensetiertype.essentials.desc": "VMware NSX ALB essentials for Tanzu.",
    "schema.enum.licensetiertype.enterprise_with_cloud_services.label": "Enterprise with Cloud Services",
    "schema.enum.licensetiertype.enterprise_with_cloud_services.desc": "VMware NSX ALB Enterprise with Cloud Services.",
    "schema.enum.nsxttransportzonetype.overlay.label": "OverlayTransportzone",
    "schema.enum.nsxttransportzonetype.overlay.desc": "Nsxt overlay transport zone type.",
    "schema.enum.nsxttransportzonetype.vlan.label": "VlanTransportzone",
    "schema.enum.nsxttransportzonetype.vlan.desc": "Nsxt vlan transport zone type.",
    "schema.enum.nsxttier1segmentconfigmode.tier1_segment_manual.label": "Tier1SegmentManual",
    "schema.enum.nsxttier1segmentconfigmode.tier1_segment_manual.desc": "Nsxt admin configures placement network for tier1s",
    "schema.enum.nsxttier1segmentconfigmode.tier1_segment_automatic.label": "Tier1SegmentAutomatic",
    "schema.enum.nsxttier1segmentconfigmode.tier1_segment_automatic.desc": "Avi controller creates placement segments for tier1s",
    "schema.enum.gcpnetworkconfigmode.inband_management.label": "InbandManagement",
    "schema.enum.gcpnetworkconfigmode.inband_management.desc": "Use InBand Management for network configuration",
    "schema.enum.gcpnetworkconfigmode.one_arm_mode.label": "OneArmMode",
    "schema.enum.gcpnetworkconfigmode.one_arm_mode.desc": "Use One Arm Mode for network configuration",
    "schema.enum.gcpnetworkconfigmode.two_arm_mode.label": "TwoArmMode",
    "schema.enum.gcpnetworkconfigmode.two_arm_mode.desc": "Use Two Arm Mode for network configuration",
    "schema.enum.secreatemethodcontainer.se_create_fleet.desc": "Use Fleet for SE creationdeletionmaintenance",
    "schema.enum.secreatemethodcontainer.se_create_ssh.desc": "Use SSH for SE creationdeletionmaintenance",
    "schema.enum.secreatemethodcontainer.se_create_pod.desc": "Create Avi SEs as OpenShiftKubernetes Pods. Just applicable for OpenShiftKubernetes Cloud",
    "schema.enum.awsencryptionmode.aws_encryption_mode_none.label": "None",
    "schema.enum.awsencryptionmode.aws_encryption_mode_none.desc": "AWS encryption is disabled.",
    "schema.enum.awsencryptionmode.aws_encryption_mode_sse_kms.label": "KMS",
    "schema.enum.awsencryptionmode.aws_encryption_mode_sse_kms.desc": "Use AWS KMS for encryption of AMIEBS and Server Side Encryption with KMS (SSEKMS) for S3.",
    "schema.enum.privilege.no_access.label": "No Access",
    "schema.enum.privilege.read_access.label": "Read Access",
    "schema.enum.privilege.write_access.label": "Write Access",
    "schema.enum.hypervisor.vmware_esx.label": "VMWARE_ESX",
    "schema.enum.hypervisor.vmware_esx.desc": "VMware ESX Hypervisor",
    "schema.enum.hypervisor.kvm.label": "KVM",
    "schema.enum.hypervisor.kvm.desc": "KVM Hypervisor",
    "schema.enum.hypervisor.vmware_vsan.label": "VMWARE_VSAN",
    "schema.enum.hypervisor.vmware_vsan.desc": "VMware ESX Hypervisor with VSAN",
    "schema.enum.hypervisor.xen.label": "Xen",
    "schema.enum.hypervisor.xen.desc": "Xen Hypervisor",
    "schema.enum.interfacelabel.mgmt.label": "Management Label",
    "schema.enum.interfacelabel.mgmt.desc": "Management label for controller interface",
    "schema.enum.interfacelabel.se_secure_channel.label": "SE Secure Channel Label",
    "schema.enum.interfacelabel.se_secure_channel.desc": "SE Secure channel label for controller interface",
    "schema.enum.interfacelabel.hsm.label": "HSM Label",
    "schema.enum.interfacelabel.hsm.desc": "HSM label for controller interface",
    "schema.enum.dnsrecordtype.dns_record_other.desc": "Invalid Record",
    "schema.enum.dnsrecordtype.dns_record_a.desc": "A Record for a host IPv4 address",
    "schema.enum.dnsrecordtype.dns_record_ns.desc": "NS Record for an authoritative name server",
    "schema.enum.dnsrecordtype.dns_record_cname.desc": "CNAME Record for the canonical (real) name of an alias",
    "schema.enum.dnsrecordtype.dns_record_soa.desc": "SOA Record to mark the start of a zone of authority",
    "schema.enum.dnsrecordtype.dns_record_ptr.desc": "PTR Record for the domain name pointer",
    "schema.enum.dnsrecordtype.dns_record_hinfo.desc": "HINFO Record for host information",
    "schema.enum.dnsrecordtype.dns_record_mx.desc": "MX Record for mail exchange",
    "schema.enum.dnsrecordtype.dns_record_txt.desc": "TXT Record for text strings",
    "schema.enum.dnsrecordtype.dns_record_rp.desc": "RP Record",
    "schema.enum.dnsrecordtype.dns_record_dnskey.desc": "KEY Record",
    "schema.enum.dnsrecordtype.dns_record_aaaa.desc": "AAAA Record for a host IPv6 address",
    "schema.enum.dnsrecordtype.dns_record_srv.desc": "SRV Record",
    "schema.enum.dnsrecordtype.dns_record_opt.desc": "OPT Record",
    "schema.enum.dnsrecordtype.dns_record_rrsig.desc": "RRSIG Record",
    "schema.enum.dnsrecordtype.dns_record_axfr.desc": "AXFR Record for a request for a transfer of an entire zone",
    "schema.enum.dnsrecordtype.dns_record_any.desc": "ANY Record",
    "schema.enum.dnsentrytype.dns_entry_pass_through.desc": "Pass through",
    "schema.enum.dnsentrytype.dns_entry_gslb.desc": "GSLB DNS Entry",
    "schema.enum.dnsentrytype.dns_entry_virtualservice.desc": "Virtual Service DNS Entry",
    "schema.enum.dnsentrytype.dns_entry_static.desc": "Static DNS Entry",
    "schema.enum.dnsentrytype.dns_entry_policy.desc": "Response through Policy",
    "schema.enum.dnsentrytype.dns_entry_local.desc": "Local response",
    "schema.enum.dnsopcode.dns_opcode_query.desc": "DNS Query message",
    "schema.enum.dnsopcode.dns_opcode_iquery.desc": "Inverse DNS Query (now obsolete) message",
    "schema.enum.dnsopcode.dns_opcode_status.desc": "DNS Status message",
    "schema.enum.dnsopcode.dns_opcode_notify.desc": "DNS Notify message",
    "schema.enum.dnsopcode.dns_opcode_update.desc": "DNS Update message",
    "schema.enum.dnsrcode.dns_rcode_noerror.label": "NoError",
    "schema.enum.dnsrcode.dns_rcode_noerror.desc": "DNS query completed successfully.",
    "schema.enum.dnsrcode.dns_rcode_formerr.label": "FormErr",
    "schema.enum.dnsrcode.dns_rcode_formerr.desc": "DNS query has formatting error.",
    "schema.enum.dnsrcode.dns_rcode_servfail.label": "ServFail",
    "schema.enum.dnsrcode.dns_rcode_servfail.desc": "DNS server failed to process the DNS query.",
    "schema.enum.dnsrcode.dns_rcode_nxdomain.label": "NXDomain",
    "schema.enum.dnsrcode.dns_rcode_nxdomain.desc": "DNS query failed since the requested domain name does not exist.",
    "schema.enum.dnsrcode.dns_rcode_notimp.label": "NotImp",
    "schema.enum.dnsrcode.dns_rcode_notimp.desc": "DNS query failed since requested functionality in query Opcode is not implemented at the server.",
    "schema.enum.dnsrcode.dns_rcode_refused.label": "Refused",
    "schema.enum.dnsrcode.dns_rcode_refused.desc": "DNS server refused to answer the query for policy or security reasons.",
    "schema.enum.dnsrcode.dns_rcode_yxdomain.label": "YXDomain",
    "schema.enum.dnsrcode.dns_rcode_yxdomain.desc": "DNS query failed since the requested domain name ought not to exist, but exist.",
    "schema.enum.dnsrcode.dns_rcode_yxrrset.label": "YXRRSet",
    "schema.enum.dnsrcode.dns_rcode_yxrrset.desc": "RRSet that ought not to exist, does exist.",
    "schema.enum.dnsrcode.dns_rcode_nxrrset.label": "NXRRSet",
    "schema.enum.dnsrcode.dns_rcode_nxrrset.desc": "RRSet that ought to exist, does not exist.",
    "schema.enum.dnsrcode.dns_rcode_notauth.label": "NotAuth",
    "schema.enum.dnsrcode.dns_rcode_notauth.desc": "DNS server not authoritative for the zone named in the Zone section.",
    "schema.enum.dnsrcode.dns_rcode_notzone.label": "NotZone",
    "schema.enum.dnsrcode.dns_rcode_notzone.desc": "Name not in the zone.",
    "schema.enum.licenseaddon.license_unknown_addon.label": "Unknown",
    "schema.enum.licenseaddon.license_unknown_addon.desc": "Unknown Addon.",
    "schema.enum.licenseaddon.license_legacy_addon.label": "legacy",
    "schema.enum.licenseaddon.license_legacy_addon.desc": "Legacy addon.",
    "schema.enum.licenseunits.unnown_unit.label": "Unknown Unit",
    "schema.enum.licenseunits.unnown_unit.desc": "Unknown Licensing unit.",
    "schema.enum.licenseunits.service_unit.label": "Service Unit",
    "schema.enum.licenseunits.service_unit.desc": "Resources will be licensed based on Service Units",
    "schema.enum.licenseunits.legacy_addon_unit.label": "Legacy Addon Unit",
    "schema.enum.licenseunits.legacy_addon_unit.desc": "Legacy Addons will be licensed with this Licensing Unit.",
    "schema.enum.sefrommarketplace.marketplace.desc": "Deploy SE from Marketplace",
    "schema.enum.sefrommarketplace.image_se.label": "Image",
    "schema.enum.sefrommarketplace.image_se.desc": "Deploy SE from Controller Image",
    "schema.enum.debugvirtualservicehm.debug_vs_hm_none.desc": "Turn off capture for Health Monitor Packets",
    "schema.enum.debugvirtualservicehm.debug_vs_hm_only.desc": "Turn on capture for Health Monitor Packets only",
    "schema.enum.debugvirtualservicehm.debug_vs_hm_include.desc": "Turn on capture for Health Monitor Packets as well",
    "schema.enum.ethertypes.eth_type_ipv4.desc": "Ether type IPv4",
    "schema.enum.iptypes.ip_type_tcp.desc": "IP type TCP",
    "schema.enum.dnstransportprotocol.dns_over_udp.desc": "DNS over UDP",
    "schema.enum.dnstransportprotocol.dns_over_tcp.desc": "DNS over TCP",
    "schema.enum.dnsrulerlactiontype.dns_rl_action_none.label": "Report Only",
    "schema.enum.dnsrulerlactiontype.dns_rl_action_none.desc": "No action for rate limiting.",
    "schema.enum.dnsrulerlactiontype.dns_rl_action_drop_req.label": "Drop",
    "schema.enum.dnsrulerlactiontype.dns_rl_action_drop_req.desc": "Drop rate limited requests.",
    "schema.enum.dnsmessagesection.dns_message_section_question.label": "Question section",
    "schema.enum.dnsmessagesection.dns_message_section_question.desc": "Question section",
    "schema.enum.dnsmessagesection.dns_message_section_answer.label": "Answer section",
    "schema.enum.dnsmessagesection.dns_message_section_answer.desc": "Answer section",
    "schema.enum.dnsmessagesection.dns_message_section_authority.label": "Authority section",
    "schema.enum.dnsmessagesection.dns_message_section_authority.desc": "Authority section",
    "schema.enum.dnsmessagesection.dns_message_section_additional.label": "Additional section",
    "schema.enum.dnsmessagesection.dns_message_section_additional.desc": "Additional section",
    "schema.enum.errorpageformat.error_page_format_html.label": "HTML",
    "schema.enum.errorpageformat.error_page_format_html.desc": "Format of an error page body is HTML",
    "schema.enum.errorpageformat.error_page_format_json.label": "JSON",
    "schema.enum.errorpageformat.error_page_format_json.desc": "Format of an error page body is JSON",
    "schema.enum.gcpvipallocationmode.routes.label": "Routes",
    "schema.enum.gcpvipallocationmode.routes.desc": "Configure Google Cloud VPC Routes for VIP.",
    "schema.enum.gcpvipallocationmode.ilb.label": "ILB",
    "schema.enum.gcpvipallocationmode.ilb.desc": "Configure Google Cloud Internal LoadBalancer for VIP.",
    "schema.enum.geodbfilevendor.vendor_avi_defined.label": "Avidefined",
    "schema.enum.geodbfilevendor.vendor_avi_defined.desc": "The GeoDB file is in an Avidefined format.",
    "schema.enum.replicationmode.replication_mode_continuous.label": "Continuous Replication Mode.",
    "schema.enum.replicationmode.replication_mode_continuous.desc": "Continuous Replication Mode.",
    "schema.enum.replicationmode.replication_mode_manual.label": "Manual Replication Mode.",
    "schema.enum.replicationmode.replication_mode_manual.desc": "Manual Replication Mode.",
    "schema.enum.replicationmode.replication_mode_adaptive.label": "Adaptive Replication Mode.",
    "schema.enum.replicationmode.replication_mode_adaptive.desc": "Adaptive Replication Mode.",
    "schema.enum.gslbipaddrtype.gslb_ip_public.desc": "Public IP Address.",
    "schema.enum.gslbipaddrtype.gslb_ip_private.desc": "Private IP Address.",
    "schema.enum.gslbhealthmonitorproxytype.gslb_health_monitor_proxy_all_members.desc": "The designated site for health monitor proxy shall monitor all private and public members of a given site. ",
    "schema.enum.gslbhealthmonitorproxytype.gslb_health_monitor_proxy_private_members.desc": "The designated site for health monitor proxy shall monitor all private public members of a given site. ",
    "schema.enum.gslbgeolocationsource.gslb_location_src_user_configured.desc": "The location information is provided by the user. ",
    "schema.enum.gslbgeolocationsource.gslb_location_src_inherit_from_site.desc": "The location information is inherited from the site. ",
    "schema.enum.gslbgeolocationsource.gslb_location_src_from_geodb.desc": "The location information is derived by doing a GeoDB lookup. ",
    "schema.enum.sitemembertype.gslb_active_member.desc": "A DNS VS can be configured on an Active member.  Active members will healthstatus monitor other members.  Leader shall replicate configuration to an active member. ",
    "schema.enum.sitemembertype.gslb_passive_member.desc": "A DNS VS cannot be configured on a passive member.  It will not initiate any healthstatus probes to other members. ",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_avi.desc": "The file format is AVI format and a gzip(.gz) package. This file has v4 entries and will be used in GeoDb lookup.",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_maxmind_city.desc": "The file is in Maxmind city format and a zip(.zip) package. When the file is uploaded with this option, only the v4 entries will be used in the GeoDb lookup.",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_maxmind_city_v6.desc": "The file is in Maxmind city format and a zip(.zip) package. When the file is uploaded with this option, only the v6 entries will be used in the GeoDb lookup.",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_maxmind_city_v4_and_v6.desc": "The file is in Maxmind city format and a zip(.zip) package. When the file is uploaded with this option, both the v4 and v6 entries will be used in the GeoDb lookup.",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_avi_v6.desc": "The file format is AVI format and a gzip(.gz) package. This file has v6 entries and will be used in GeoDb lookup.",
    "schema.enum.gslbgeodbfileformat.gslb_geodb_file_format_avi_v4_and_v6.desc": "The file format is AVI format and a gzip(.gz) package. This file has both v4 and v6 entries that will be used in GeoDb lookup.",
    "schema.enum.gslbservicehealthmonitorscope.gslb_service_health_monitor_all_members.desc": "Health monitor probes in dataplane are sent for all the GSLB service members (Avi and thirdparty).",
    "schema.enum.gslbservicehealthmonitorscope.gslb_service_health_monitor_only_non_avi_members.desc": "Health monitor probes in dataplane are sent for thirdparty members of the GSLB service.",
    "schema.enum.gslbservicealgorithm.gslb_service_algorithm_priority.label": "Prioritybased",
    "schema.enum.gslbservicealgorithm.gslb_service_algorithm_priority.desc": "Pick the GSLB pool with the highest priority. ",
    "schema.enum.gslbservicealgorithm.gslb_service_algorithm_geo.label": "Geo locationbased",
    "schema.enum.gslbservicealgorithm.gslb_service_algorithm_geo.desc": "Use the client (LDNS) source IP to choose the GSLB Pool closest by  geographical location. Use this algorithm when the pools are laid   out based on geographical locations, and geodb is configured.",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_none.label": "No Response",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_none.desc": "No response to the client query when the GSLB service is down.",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_all_records.label": "Response with all records",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_all_records.desc": "Respond with all the records to the client query when the GSLB service is down.",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_fallback_ip.label": "Response with Fallback IP",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_fallback_ip.desc": "Respond with the given fallback IP address to the client query when GSLB service is down.",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_empty.label": "Empty Response",
    "schema.enum.gslbservicedownresponsetype.gslb_service_down_response_empty.desc": "Respond with an empty response to the client query when the GSLB service is down.",
    "schema.enum.gslbalgorithm.gslb_algorithm_round_robin.desc": "Direct traffic by linearly cycling through the list of available local virtual services and providing these in response to DNS requests.",
    "schema.enum.gslbalgorithm.gslb_algorithm_consistent_hash.desc": "Use a consistent hash to load balance and persist based on the source ip (LDNS).",
    "schema.enum.gslbalgorithm.gslb_algorithm_geo.desc": "Use the client (LDNS) source IP to choose the VIP closest by geographical location",
    "schema.enum.gslbalgorithm.gslb_algorithm_topology.desc": "Direct traffic to the best server based on the topology policy.If no topology policy is configured, GEO algorithm is used.",
    "schema.enum.hsmtype.hsm_type_safenet_luna.label": "Luna HSM",
    "schema.enum.hsmtype.hsm_type_safenet_luna.desc": "HSM using Safenet Luna device",
    "schema.enum.hsmtype.hsm_type_aws_cloudhsm.label": "AWS CloudHSMv2",
    "schema.enum.hsmtype.hsm_type_aws_cloudhsm.desc": "HSM using AWS Cloud HSM",
    "schema.enum.healthmonitortype.health_monitor_ping.label": "Ping",
    "schema.enum.healthmonitortype.health_monitor_tcp.label": "TCP",
    "schema.enum.healthmonitortype.health_monitor_http.label": "HTTP",
    "schema.enum.healthmonitortype.health_monitor_https.label": "HTTPS",
    "schema.enum.healthmonitortype.health_monitor_external.label": "External",
    "schema.enum.healthmonitortype.health_monitor_udp.label": "UDP",
    "schema.enum.healthmonitortype.health_monitor_dns.label": "DNS",
    "schema.enum.healthmonitortype.health_monitor_sip.label": "SIP",
    "schema.enum.healthmonitortype.health_monitor_radius.label": "RADIUS",
    "schema.enum.healthmonitortype.health_monitor_smtp.label": "SMTP",
    "schema.enum.healthmonitortype.health_monitor_smtps.label": "SMTPS",
    "schema.enum.healthmonitortype.health_monitor_pop3.label": "POP3",
    "schema.enum.healthmonitortype.health_monitor_pop3s.label": "POP3S",
    "schema.enum.healthmonitortype.health_monitor_imap.label": "IMAP",
    "schema.enum.healthmonitortype.health_monitor_imaps.label": "IMAPS",
    "schema.enum.healthmonitortype.health_monitor_ftp.label": "FTP",
    "schema.enum.healthmonitortype.health_monitor_ftps.label": "FTPS",
    "schema.enum.healthmonitortype.health_monitor_ldap.label": "LDAP",
    "schema.enum.healthmonitortype.health_monitor_ldaps.label": "LDAPS",
    "schema.enum.ldapscopetype.ldap_base_mode.label": "Base",
    "schema.enum.ldapscopetype.ldap_base_mode.desc": "Ldap base scope search for information only about base_dn specified inside directory.",
    "schema.enum.ldapscopetype.ldap_one_mode.label": "One",
    "schema.enum.ldapscopetype.ldap_one_mode.desc": "Ldap one scope search for information at one level below the base_dn specified inside directory.",
    "schema.enum.ldapscopetype.ldap_sub_mode.label": "Sub",
    "schema.enum.ldapscopetype.ldap_sub_mode.desc": "Ldap sub scope search for information at all levels below the base_dn specified inside directory.",
    "schema.enum.ftpmodetype.ftp_passive_mode.label": "Passive",
    "schema.enum.ftpmodetype.ftp_passive_mode.desc": "FTP passive data transfer mode.",
    "schema.enum.ftpmodetype.ftp_port_mode.label": "Port",
    "schema.enum.ftpmodetype.ftp_port_mode.desc": "FTP port data transfer mode.",
    "schema.enum.siprequestcode.sip_options.label": "OPTIONS",
    "schema.enum.sipmontransport.sip_udp_proto.label": "UDP",
    "schema.enum.sipmontransport.sip_udp_proto.desc": "Use UDP as transport protocol for SIP health monitoring.",
    "schema.enum.sipmontransport.sip_tcp_proto.label": "TCP",
    "schema.enum.sipmontransport.sip_tcp_proto.desc": "Use TCP as transport protocol for SIP health monitoring.",
    "schema.enum.healthmonitordnsquerytype.dns_query_type.label": "Query Type",
    "schema.enum.healthmonitordnsquerytype.dns_any_type.label": "Any Type",
    "schema.enum.healthmonitordnsquerytype.dns_any_thing.label": "Anything",
    "schema.enum.healthmonitordnsrcode.rcode_no_error.label": "No Error",
    "schema.enum.healthmonitordnsrcode.rcode_anything.label": "Anything",
    "schema.enum.httpresponsecode.http_any.label": "ANY",
    "schema.enum.httpresponsecode.http_1xx.label": "1XX",
    "schema.enum.httpresponsecode.http_2xx.label": "2XX",
    "schema.enum.httpresponsecode.http_3xx.label": "3XX",
    "schema.enum.httpresponsecode.http_4xx.label": "4XX",
    "schema.enum.httpresponsecode.http_5xx.label": "5XX",
    "schema.enum.healthmonitorauthtype.auth_basic.label": "Basic",
    "schema.enum.healthmonitorauthtype.auth_basic.desc": "Basic authentication.",
    "schema.enum.healthmonitorauthtype.auth_ntlm.label": "NTLM",
    "schema.enum.healthmonitorauthtype.auth_ntlm.desc": "NTLM (New Technology LAN Manager) authentication.",
    "schema.enum.httpswitchingactiontype.http_switching_select_pool.desc": "Select a given pool of servers to serve the request",
    "schema.enum.httpswitchingactiontype.http_switching_select_local.desc": "Send local response to the request",
    "schema.enum.httpswitchingactiontype.http_switching_select_poolgroup.desc": "Select a pool group to serve the request",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_200.desc": "200 OK",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_204.desc": "204 No Content",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_403.desc": "403 Forbidden",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_404.desc": "404 Not Found",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_429.desc": "429 Too Many Requests (RFC 6585)",
    "schema.enum.httplocalresponsestatuscode.http_local_response_status_code_501.desc": "501 Not Implemented",
    "schema.enum.httphdractiontype.http_add_hdr.label": "Add header",
    "schema.enum.httphdractiontype.http_add_hdr.desc": "A new header with the new value is added irrespective of the existence of an HTTP header of the given name.",
    "schema.enum.httphdractiontype.http_remove_hdr.label": "Remove header",
    "schema.enum.httphdractiontype.http_remove_hdr.desc": "All the headers of the given name are removed.",
    "schema.enum.httphdractiontype.http_replace_hdr.label": "Replace header",
    "schema.enum.httphdractiontype.http_replace_hdr.desc": "A new header with the new value is added if no header of the given name exists, else existing headers with the given name are removed and a new header with the new value is added.",
    "schema.enum.httpredirectstatuscode.http_redirect_status_code_301.desc": "301 Moved Permanently",
    "schema.enum.httpredirectstatuscode.http_redirect_status_code_302.desc": "302 Found",
    "schema.enum.httpredirectstatuscode.http_redirect_status_code_307.desc": "307 Moved Temporarily (only for HTTP1.1)",
    "schema.enum.uritokentype.uri_token_type_host.desc": "Use host component of the URI as tokens",
    "schema.enum.uritokentype.uri_token_type_path.desc": "Use path component of the URI as tokens",
    "schema.enum.uritokentype.uri_token_type_string.desc": "Use constant string as a token",
    "schema.enum.uritokentype.uri_token_type_string_group.desc": "Use result of StringGroup lookup as a token",
    "schema.enum.uritokentype.uri_token_type_regex.desc": "Use regex captures as a token",
    "schema.enum.httpsecurityactiontype.http_security_action_close_conn.label": "Close Connection",
    "schema.enum.httpsecurityactiontype.http_security_action_close_conn.desc": "Close the TCP connection",
    "schema.enum.httpsecurityactiontype.http_security_action_send_response.label": "Send Response",
    "schema.enum.httpsecurityactiontype.http_security_action_send_response.desc": "Send local HTTP response for the request",
    "schema.enum.httpsecurityactiontype.http_security_action_allow.label": "Allow",
    "schema.enum.httpsecurityactiontype.http_security_action_allow.desc": "Allow the HTTP request",
    "schema.enum.httpsecurityactiontype.http_security_action_redirect_to_https.label": "Redirect to HTTPS",
    "schema.enum.httpsecurityactiontype.http_security_action_redirect_to_https.desc": "Redirect the HTTP request to SSLTLS port",
    "schema.enum.httpsecurityactiontype.http_security_action_rate_limit.label": "Rate Limit",
    "schema.enum.httpsecurityactiontype.http_security_action_rate_limit.desc": "Rate limit the flow to count per time period",
    "schema.enum.httpsecurityactiontype.http_security_action_request_check_icap.label": "Enable ICAP",
    "schema.enum.httpsecurityactiontype.http_security_action_request_check_icap.desc": "Enable ICAP processing for HTTP request",
    "schema.enum.ratelimiteractiontype.rl_action_none.desc": "No action for rate limiting.",
    "schema.enum.ratelimiteractiontype.rl_action_drop_conn.desc": "Drop rate limited syns.",
    "schema.enum.ratelimiteractiontype.rl_action_reset_conn.desc": "Drop rate limited syns and send a reset in case of TCP.",
    "schema.enum.ratelimiteractiontype.rl_action_close_conn.desc": "Close connection when requests get rate limited.",
    "schema.enum.ratelimiteractiontype.rl_action_local_rsp.desc": "Send local response for rate limited requests.",
    "schema.enum.ratelimiteractiontype.rl_action_redirect.desc": "Redirect rate limited requests.",
    "schema.enum.icapfailaction.icap_fail_open.label": "Fail Open",
    "schema.enum.icapfailaction.icap_fail_open.desc": "The transaction will continue despite the failed action.",
    "schema.enum.icapfailaction.icap_fail_closed.label": "Fail Closed",
    "schema.enum.icapfailaction.icap_fail_closed.desc": "The transaction will be terminated and return an error status code to the client.",
    "schema.enum.imagetype.image_type_patch.desc": "This variable tells the image is of patch type ",
    "schema.enum.imagetype.image_type_system.desc": "This variable tells the image is for whole system example: controller.pkg or controller_docker.tar.gz. ",
    "schema.enum.imagetype.image_type_must_check.desc": "This variable tells the image is for pre upgrade checks example: must_checks.pkg .",
    "schema.enum.imagefsmstate.image_fsm_started.label": "Image upload started.",
    "schema.enum.imagefsmstate.image_fsm_started.desc": "Indicates that image upload has started.",
    "schema.enum.imagefsmstate.image_fsm_in_progress.label": "Image upload in progress.",
    "schema.enum.imagefsmstate.image_fsm_in_progress.desc": "Indicates that image upload is in progress.",
    "schema.enum.imagefsmstate.image_fsm_completed.label": "Image upload completed.",
    "schema.enum.imagefsmstate.image_fsm_completed.desc": "Indicates that image upload is completed.",
    "schema.enum.imagefsmstate.image_fsm_failed.label": "Image upload failed.",
    "schema.enum.imagefsmstate.image_fsm_failed.desc": "Indicates that image upload has failed.",
    "schema.enum.ipamdnstype.ipamdns_type_infoblox.label": "Infoblox IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_infoblox.desc": "Infoblox is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_aws.label": "AWS IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_aws.desc": "AWS is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_openstack.label": "OpenStack IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_openstack.desc": "OpenStack is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_infoblox_dns.label": "Infoblox DNS",
    "schema.enum.ipamdnstype.ipamdns_type_infoblox_dns.desc": "Infoblox is the DNS provider",
    "schema.enum.ipamdnstype.ipamdns_type_custom_dns.label": "Custom DNS",
    "schema.enum.ipamdnstype.ipamdns_type_custom_dns.desc": "Customary backend DNS provider like Men & Mice, British Telecom and any other provider with REST API",
    "schema.enum.ipamdnstype.ipamdns_type_oci.label": "Oracle Cloud Infrastructure IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_oci.desc": "Oracle cloud is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_tencent.label": "Tencent IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_tencent.desc": "Tencent is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_internal.label": "Avi Vantage IPAM",
    "schema.enum.ipamdnstype.ipamdns_type_internal.desc": "Avi Vantage is the IPAM provider",
    "schema.enum.ipamdnstype.ipamdns_type_internal_dns.label": "Avi Vantage DNS",
    "schema.enum.ipamdnstype.ipamdns_type_internal_dns.desc": "Avi Vantage is the DNS provider",
    "schema.enum.ipamdnstype.ipamdns_type_aws_dns.label": "AWS Route 53 DNS",
    "schema.enum.ipamdnstype.ipamdns_type_aws_dns.desc": "AWS is the DNS provider",
    "schema.enum.ipamdnstype.ipamdns_type_azure_dns.label": "Azure DNS",
    "schema.enum.ipamdnstype.ipamdns_type_azure_dns.desc": "Azure is the DNS provider",
    "schema.enum.ipreputationvendor.ip_reputation_vendor_webroot.label": "Webroot",
    "schema.enum.ipreputationvendor.ip_reputation_vendor_webroot.desc": "IP reputation information from Webroot.",
    "schema.enum.jwtprofiletype.client_auth.label": "JWT SERVER Profile for Client Auth",
    "schema.enum.jwtprofiletype.client_auth.desc": "JWT Server Profile to be used for client authorization.",
    "schema.enum.jwtprofiletype.controller_internal_auth.label": "JWT Server profile for internal Controller communication use case using symmetric keys.",
    "schema.enum.jwtprofiletype.controller_internal_auth.desc": "JWT Server Profile to be used for Controller to Controller communication using symmetric keys.",
    "schema.enum.l4ruleactionselectpooltype.l4_rule_action_select_pool.label": "Pool",
    "schema.enum.l4ruleactionselectpooltype.l4_rule_action_select_pool.desc": "Select a pool of servers to serve client connect request",
    "schema.enum.l4ruleactionselectpooltype.l4_rule_action_select_poolgroup.label": "Pool Group",
    "schema.enum.l4ruleactionselectpooltype.l4_rule_action_select_poolgroup.desc": "Select a pool group to serve client connect request",
    "schema.enum.natpolicyactiontype.nat_policy_action_type_dynamic_ip_port.label": "Dynamic IP and Port",
    "schema.enum.natpolicyactiontype.nat_policy_action_type_dynamic_ip_port.desc": "Nat both Source IP and Port",
    "schema.enum.staticiptype.static_ips_for_se.label": "SE vNIC",
    "schema.enum.staticiptype.static_ips_for_se.desc": "Static IPs are used for Service Engine vNIC IP allocation only",
    "schema.enum.staticiptype.static_ips_for_vip.label": "VIP",
    "schema.enum.staticiptype.static_ips_for_vip.desc": "Static IPs are used for VIP allocation only",
    "schema.enum.staticiptype.static_ips_for_vip_and_se.label": "VIP and SE vNIC",
    "schema.enum.staticiptype.static_ips_for_vip_and_se.desc": "Static IPs are used for both VIP and Service Engine vNIC IP allocation",
    "schema.enum.protocoltype.protocol_type_tcp_proxy.label": "TCP Proxy",
    "schema.enum.protocoltype.protocol_type_tcp_fast_path.label": "TCP Fast Path",
    "schema.enum.protocoltype.protocol_type_udp_fast_path.label": "UDP Fast Path",
    "schema.enum.protocoltype.protocol_type_udp_proxy.label": "UDP Proxy",
    "schema.enum.dsrtype.dsr_type_l2.desc": "L2 Direct Server Return",
    "schema.enum.dsrtype.dsr_type_l3.desc": "L3 Direct Server Return",
    "schema.enum.encaptype.encap_ipinip.desc": "Encapsulation type IPinIP",
    "schema.enum.oslbprovoptype.pot_get.desc": "All configured LBaaS provider plugins",
    "schema.enum.oslbprovoptype.pot_post.desc": "Create new LBaaS provider plugin",
    "schema.enum.oslbprovoptype.pot_put.desc": "Update existing LBaaS provider plugin",
    "schema.enum.oslbprovoptype.pot_delete.desc": "Delete existing LBaaS provider plugin",
    "schema.enum.lbalgorithm.lb_algorithm_least_connections.desc": "Direct traffic to the servers with the fewest concurrent connections.",
    "schema.enum.lbalgorithm.lb_algorithm_round_robin.desc": "Direct traffic by linearly cycling through the list of available servers.",
    "schema.enum.lbalgorithm.lb_algorithm_fastest_response.desc": "Direct traffic to servers with the fastest response time.",
    "schema.enum.lbalgorithm.lb_algorithm_consistent_hash.desc": "Use a consistent hash to load balance and persist based on the chosen hash key.",
    "schema.enum.lbalgorithm.lb_algorithm_least_load.desc": "Direct traffic to the servers with the least load.",
    "schema.enum.lbalgorithm.lb_algorithm_fewest_servers.desc": "Direct traffic to the fewest servers.",
    "schema.enum.lbalgorithm.lb_algorithm_core_affinity.desc": "Direct traffic to a subset of servers on a core.",
    "schema.enum.lbalgorithm.lb_algorithm_topology.desc": "Direct traffic to the best server based on the topology policy.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_source_ip_address.desc": "Hash based on the client source IP Address.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_source_ip_address_and_port.desc": "Hash based on the client source IP Address and port.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_uri.desc": "Hash based on the URI path.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_custom_header.desc": "Hash based on a custom HTTP header.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_custom_string.desc": "Hash based on a custom string.",
    "schema.enum.lbalgorithmconsistenthash.lb_algorithm_consistent_hash_callid.desc": "Hash based on CallId.",
    "schema.enum.appendportenum.non_default_80_443.label": "Append port to hostname in the host header, if the port is not 80 or 443.",
    "schema.enum.appendportenum.non_default_80_443.desc": "Append port to hostname in the host header, if the port is not 80 or 443.",
    "schema.enum.appendportenum.never.label": "Never include port to the hostname in the host header.",
    "schema.enum.appendportenum.never.desc": "Never include port to the hostname in the host header.",
    "schema.enum.appendportenum.always.label": "Always append port to the hostname in the host header.",
    "schema.enum.appendportenum.always.desc": "Always append port to the hostname in the host header.",
    "schema.enum.serverdisabletype.disallow_new_connection.label": "Allows existing connections to time out according to gracefull disable timeout, but no new connections are allowed.",
    "schema.enum.serverdisabletype.disallow_new_connection.desc": "Allows existing connections to time out according to gracefull disable timeout, but no new connections are allowed.",
    "schema.enum.serverdisabletype.allow_new_connection_if_persistence_present.label": "Accept new connections only if a persistence entry is present until persistence entry times out. Disallow new connections without a matching persistence entry.",
    "schema.enum.serverdisabletype.allow_new_connection_if_persistence_present.desc": "Accept new connections only if a persistence entry is present until persistence entry times out. Disallow new connections without a matching persistence entry.",
    "schema.enum.httpreselectrespcodeblock.http_rsp_4xx.label": "4XX",
    "schema.enum.httpreselectrespcodeblock.http_rsp_5xx.label": "5XX",
    "schema.enum.failactionenum.fail_action_http_redirect.desc": "Send HTTP redirect when pool experiences a failure",
    "schema.enum.failactionenum.fail_action_http_local_rsp.desc": "Send HTTP local response when pool experiences a failure",
    "schema.enum.failactionenum.fail_action_close_conn.desc": "Close Tcp connection when pool experiences a failure",
    "schema.enum.pooldeploymentstate.evaluation_in_progress.desc": "Pool is under evaluation. Once the evaluation is over it will be transitioned to either ACTIVE, DISABLED, or EVALUATION FAILED state",
    "schema.enum.pooldeploymentstate.in_service.desc": "Pool passed the evaluation. It is actively placed in service with ratio 100",
    "schema.enum.pooldeploymentstate.out_of_service.desc": "Pool had previously passed the evaluation. But it is out of service as its traffic ratio is 0",
    "schema.enum.pooldeploymentstate.evaluation_failed.desc": "Pool failed its evaluation. Its traffic ratio is set to zero.",
    "schema.enum.poolgroupdeploymentscheme.blue_green.desc": "BlueGreen based deployment option. In this caseonly one pool is considered the main pool and it has ratio of 100 All other pools will have ratio of 0 if they have been evaluated for deployment and found not fit. Pools that are  under observation will have ratio between 199 as autoscale mgr completes the evaluation",
    "schema.enum.poolgroupdeploymentscheme.canary.desc": "Canary based deployment option. In this caseonly one pool is considered the main pool and it has ratio of 100 All other pools will have ratio of 0 if they have been evaluated for deployment and found not fit. Pools that are  under observation will have ratio between 199 as autoscale mgr completes the evaluation",
    "schema.enum.rolefiltermatchoperation.role_filter_equals.label": "Equals.",
    "schema.enum.rolefiltermatchoperation.role_filter_equals.desc": "Equals the configured value(s).",
    "schema.enum.rolefiltermatchoperation.role_filter_does_not_equal.label": "Does not equal.",
    "schema.enum.rolefiltermatchoperation.role_filter_does_not_equal.desc": "Does not equal the configured value(s).",
    "schema.enum.rolefiltermatchoperation.role_filter_glob_match.label": "Unix styled glob match. Example: prod, prod, clusterprod, etc.",
    "schema.enum.rolefiltermatchoperation.role_filter_glob_match.desc": "Glob matches with the configured value(s).",
    "schema.enum.rolefiltermatchoperation.role_filter_glob_does_not_match.label": "Unix styled glob unmatch. Example: prod, prod, clusterprod, etc.",
    "schema.enum.rolefiltermatchoperation.role_filter_glob_does_not_match.desc": "Does not glob match with the configured value(s).",
    "schema.enum.avipermissionresource.permission_controller.label": "System",
    "schema.enum.avipermissionresource.permission_internal.label": "Internal",
    "schema.enum.avipermissionresource.permission_virtualservice.label": "Virtual Service",
    "schema.enum.avipermissionresource.permission_pool.label": "Pool",
    "schema.enum.avipermissionresource.permission_healthmonitor.label": "Health Monitor",
    "schema.enum.avipermissionresource.permission_networkprofile.label": "Network Profile",
    "schema.enum.avipermissionresource.permission_applicationprofile.label": "Application Profile",
    "schema.enum.avipermissionresource.permission_httppolicyset.label": "HTTP Policy Set",
    "schema.enum.avipermissionresource.permission_ipaddrgroup.label": "IP Address Group",
    "schema.enum.avipermissionresource.permission_stringgroup.label": "String Group",
    "schema.enum.avipermissionresource.permission_sslprofile.label": "SSL Profile",
    "schema.enum.avipermissionresource.permission_sslkeyandcertificate.label": "SSL Key And Certificate",
    "schema.enum.avipermissionresource.permission_networksecuritypolicy.label": "Network Security Policy",
    "schema.enum.avipermissionresource.permission_applicationpersistenceprofile.label": "Application Persistence Profile",
    "schema.enum.avipermissionresource.permission_analyticsprofile.label": "Analytics Profile",
    "schema.enum.avipermissionresource.permission_vsdatascriptset.label": "VS Data Script Set",
    "schema.enum.avipermissionresource.permission_tenant.label": "Tenant",
    "schema.enum.avipermissionresource.permission_pkiprofile.label": "PKI Profile",
    "schema.enum.avipermissionresource.permission_authprofile.label": "Auth Profile",
    "schema.enum.avipermissionresource.permission_cloud.label": "Cloud",
    "schema.enum.avipermissionresource.permission_serviceengine.label": "Service Engine",
    "schema.enum.avipermissionresource.permission_serviceenginegroup.label": "Service Engine Group",
    "schema.enum.avipermissionresource.permission_network.label": "Network",
    "schema.enum.avipermissionresource.permission_systemconfiguration.label": "System Configuration",
    "schema.enum.avipermissionresource.permission_vrfcontext.label": "VRF Context",
    "schema.enum.avipermissionresource.permission_user.label": "User",
    "schema.enum.avipermissionresource.permission_role.label": "Role",
    "schema.enum.avipermissionresource.permission_alert.label": "Alert",
    "schema.enum.avipermissionresource.permission_alertconfig.label": "Alert Config",
    "schema.enum.avipermissionresource.permission_alertemailconfig.label": "Alert Email Config",
    "schema.enum.avipermissionresource.permission_alertsyslogconfig.label": "Alert Syslog Config",
    "schema.enum.avipermissionresource.permission_actiongroupconfig.label": "Action Group Config",
    "schema.enum.avipermissionresource.permission_snmptrapprofile.label": "SNMP Trap Profile",
    "schema.enum.avipermissionresource.permission_upgrade.label": "Upgrade",
    "schema.enum.avipermissionresource.permission_reboot.label": "Reboot",
    "schema.enum.avipermissionresource.permission_techsupport.label": "Techsupport",
    "schema.enum.avipermissionresource.permission_exempt.label": "No Permission Check",
    "schema.enum.avipermissionresource.permission_traffic_capture.label": "Traffic Capture",
    "schema.enum.avipermissionresource.permission_microservicegroup.label": "MicroService Group",
    "schema.enum.avipermissionresource.permission_ipamdnsproviderprofile.label": "IPAM DNS Provider Profile",
    "schema.enum.avipermissionresource.permission_certificatemanagementprofile.label": "Certificate management profile",
    "schema.enum.avipermissionresource.permission_poolgroup.label": "Pool Group",
    "schema.enum.avipermissionresource.permission_prioritylabels.label": "Priority Labels",
    "schema.enum.avipermissionresource.permission_poolgroupdeploymentpolicy.label": "Pool Group Deployment Policy",
    "schema.enum.avipermissionresource.permission_gslb.label": "Gslb",
    "schema.enum.avipermissionresource.permission_gslbservice.label": "Gslb Service",
    "schema.enum.avipermissionresource.permission_gslbgeodbprofile.label": "Gslb GeoDb Profile",
    "schema.enum.avipermissionresource.permission_dnspolicy.label": "DNS Policy",
    "schema.enum.avipermissionresource.permission_trafficcloneprofile.label": "Traffic Clone Profile",
    "schema.enum.avipermissionresource.permission_se_token.label": "Cloud SE token",
    "schema.enum.avipermissionresource.permission_wafpolicy.label": "WAF Policy",
    "schema.enum.avipermissionresource.permission_wafprofile.label": "WAF Profile",
    "schema.enum.avipermissionresource.permission_user_credential.label": "User Credential",
    "schema.enum.avipermissionresource.permission_autoscale.label": "AutoScale",
    "schema.enum.avipermissionresource.permission_customipamdnsprofile.label": "Custom IPAM DNS Profile",
    "schema.enum.avipermissionresource.permission_errorpageprofile.label": "Error Page Profile",
    "schema.enum.avipermissionresource.permission_errorpagebody.label": "Error Page Body",
    "schema.enum.avipermissionresource.permission_l4policyset.label": "L4 Policy Set",
    "schema.enum.avipermissionresource.permission_microservice.label": "MicroService",
    "schema.enum.avipermissionresource.permission_hardwaresecuritymodulegroup.label": "Hardware Security Module Group",
    "schema.enum.avipermissionresource.permission_securitypolicy.label": "SECURITY Policy",
    "schema.enum.avipermissionresource.permission_wafpolicypsmgroup.label": "WafPolicy PSM Group",
    "schema.enum.avipermissionresource.permission_wafpolicypsmgroup.desc": "Permission for WafPolicy PSM Group.",
    "schema.enum.avipermissionresource.permission_pingaccessagent.label": "PingAccess Agent",
    "schema.enum.avipermissionresource.permission_networkservice.label": "Network Service",
    "schema.enum.avipermissionresource.permission_natpolicy.label": "Nat Policy",
    "schema.enum.avipermissionresource.permission_protocolparser.label": "Protocol Parser",
    "schema.enum.avipermissionresource.permission_protocolparser.desc": "Permission for Protocol Parser.",
    "schema.enum.avipermissionresource.permission_ssopolicy.label": "SSO Policy",
    "schema.enum.avipermissionresource.permission_ssopolicy.desc": "Permission for SSO Policy.",
    "schema.enum.avipermissionresource.permission_controllersite.label": "Controller Site",
    "schema.enum.avipermissionresource.permission_controllersite.desc": "Permissions for ControllerSite",
    "schema.enum.avipermissionresource.permission_image.label": "Image upload Operations",
    "schema.enum.avipermissionresource.permission_image.desc": "Permissions for Image upload operations. ",
    "schema.enum.avipermissionresource.permission_upgrade_ops.label": "Upgrade Operations @ system level",
    "schema.enum.avipermissionresource.permission_upgrade_ops.desc": "Permissions for Upgrade operations such as Upgrade, Patch and Rollback applied to controller and segroups.",
    "schema.enum.avipermissionresource.permission_upgrade_segroup_ops.label": "Upgrade Operations @ se group level",
    "schema.enum.avipermissionresource.permission_upgrade_segroup_ops.desc": "Permissions for Upgrade operations such as Upgrade, Patch and Rollback applied to segroups.",
    "schema.enum.avipermissionresource.permission_testsedatastorelevel1.label": "Test SE Datastore Level 1",
    "schema.enum.avipermissionresource.permission_testsedatastorelevel2.label": "Test SE Datastore Level 2",
    "schema.enum.avipermissionresource.permission_testsedatastorelevel3.label": "Test SE Datastore Level 3",
    "schema.enum.avipermissionresource.permission_file_object.label": "Uploaded files",
    "schema.enum.avipermissionresource.permission_file_object.desc": "Permissions for accessing File ObjectsFiles",
    "schema.enum.avipermissionresource.permission_ipreputationdb.label": "IP reputation DB",
    "schema.enum.avipermissionresource.permission_ipreputationdb.desc": "Permissions for accessing IP reputation DB.",
    "schema.enum.avipermissionresource.permission_icap.label": "ICAP configuration",
    "schema.enum.avipermissionresource.permission_icap.desc": "Permission for ICAP configuration.",
    "schema.enum.avipermissionresource.permission_gslbservice_group.label": "Gslb Service Group",
    "schema.enum.avipermissionresource.permission_gslbservice_group.desc": "Permission to enabledisable GslbServicePool or PoolMembers.",
    "schema.enum.avipermissionresource.permission_jwtserverprofile.label": "JWT Server profile configuration",
    "schema.enum.avipermissionresource.permission_jwtserverprofile.desc": "Permission for JWT Server profile configuration.",
    "schema.enum.avipermissionresource.permission_geodb.label": "Geo DB",
    "schema.enum.avipermissionresource.permission_geodb.desc": "Permissions for accessing Geo DB.",
    "schema.enum.avipermissionresource.permission_botdetectionpolicy.label": "Bot Detection Policy configuration",
    "schema.enum.avipermissionresource.permission_botdetectionpolicy.desc": "Permission for BotDetectionPolicy configuration.",
    "schema.enum.avipermissionresource.permission_labelgroup.label": "Label Group",
    "schema.enum.avipermissionresource.permission_labelgroup.desc": "Permission for Label Group.",
    "schema.enum.avipermissionresource.permission_wafcrs.label": "WAF CRS",
    "schema.enum.avipermissionsubresource.subresource_pool_enabled.label": "Pool Enabled",
    "schema.enum.avipermissionsubresource.subresource_pool_enabled.desc": "Allows users to enabledisable the Pool objects",
    "schema.enum.avipermissionsubresource.subresource_pool_servers.label": "Pool Servers",
    "schema.enum.avipermissionsubresource.subresource_pool_servers.desc": "Allows users to addupdateremove Pool servers",
    "schema.enum.avipermissionsubresource.subresource_pool_server_enabled.label": "Pool Server Enabled",
    "schema.enum.avipermissionsubresource.subresource_pool_server_enabled.desc": "Allows users to enabledisable pool servers",
    "schema.enum.avipermissionsubresource.subresource_virtualservice_enabled.label": "Virtual Service Enabled",
    "schema.enum.avipermissionsubresource.subresource_virtualservice_enabled.desc": "Allows users to enabledisable VirtualServices",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_enabled.label": "Gslb Service Enabled",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_enabled.desc": "Allows users to enabledisable GslbService objects",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_groups.label": "Gslb Service Groups",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_groups.desc": "Allows users to update GslbService groups",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_enabled.label": "Gslb Service Group Enabled",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_enabled.desc": "Allows users to enabledisable GslbService groups",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_members.label": "Gslb Service Group Members",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_members.desc": "Allows users to update GslbService group members",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_member_enabled.label": "Gslb Service Group Member Enabled",
    "schema.enum.avipermissionsubresource.subresource_gslbservice_group_member_enabled.desc": "Allows users to enabledisable GslbService group members",
    "schema.enum.schedulerrunmode.run_mode_periodic.label": "Periodic Scheduler",
    "schema.enum.schedulerrunmode.run_mode_at.label": "One Time Scheduler",
    "schema.enum.schedulerrunmode.run_mode_now.label": "Schedule Now",
    "schema.enum.schedulerfrequencyunit.scheduler_frequency_unit_min.label": "Minute(s)",
    "schema.enum.schedulerfrequencyunit.scheduler_frequency_unit_hour.label": "Hour(s)",
    "schema.enum.schedulerfrequencyunit.scheduler_frequency_unit_day.label": "Day(s)",
    "schema.enum.schedulerfrequencyunit.scheduler_frequency_unit_week.label": "Week(s)",
    "schema.enum.schedulerfrequencyunit.scheduler_frequency_unit_month.label": "Month(s)",
    "schema.enum.scheduleraction.scheduler_action_run_a_script.label": "A script is executed when the scheduler is triggered",
    "schema.enum.scheduleraction.scheduler_action_backup.label": "Backup is taken when the scheduler is triggered ",
    "schema.enum.operationmode.detection.desc": "Perform detection of the various attacks on the Virtual Service.",
    "schema.enum.operationmode.mitigation.desc": "Perform detection and mitigation of the various attacks on the Virtual Service.",
    "schema.enum.segrouperrorrecovery.rollback_upgrade_ops_on_error.desc": "Whenever an SE in a SE group hits an error during the upgrade operations, then the upgrade operation is stopped. Automatic rollback is initiated to recover from the errors. ",
    "schema.enum.segrouperrorrecovery.suspend_upgrade_ops_on_error.desc": "Whenever an SE in a SE group hits an error during the upgrade operations, then the upgrade operation is stopped. User will have to correct the error and resume the upgrade operations. ",
    "schema.enum.segrouperrorrecovery.continue_upgrade_ops_on_error.desc": "Whenever an SE in a SE group hits an error during the upgrade operations, then the upgrade operation continues to completion. ",
    "schema.enum.serviceengineenablestate.se_state_enabled.desc": "New Virtual services can be placed",
    "schema.enum.serviceengineenablestate.se_state_disabled_for_placement.desc": "New Virtual services cannot be placed",
    "schema.enum.serviceengineenablestate.se_state_disabled.desc": "New Virtual services cannot be placed and existing ones would be migrated",
    "schema.enum.serviceengineenablestate.se_state_disabled_force.desc": "New Virtual services cannot be placed and existing ones would be migrated or scaled in. Any left over Virtual Services would be forcefully removed from the SE.",
    "schema.enum.hamode.ha_mode_shared_pair.label": "Shared Pair",
    "schema.enum.hamode.ha_mode_shared.label": "Shared",
    "schema.enum.hamode.ha_mode_legacy_active_standby.label": "Legacy Active Standby",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_none.label": "No ingress access",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_none.desc": "No ingress access.",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_all.label": "Ingress access from 00",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_all.desc": "Ingress access from 00.",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_vpc.label": "Ingress access from VPC CIDR (only on Clouds that support VPC construct)",
    "schema.enum.securitygroupingressaccess.sg_ingress_access_vpc.desc": "Ingress access from VPC CIDR (only on Clouds that support VPC construct).",
    "schema.enum.sebandwidthtype.se_bandwidth_unlimited.label": "SE Bandwidth Unlimited",
    "schema.enum.sebandwidthtype.se_bandwidth_unlimited.desc": "SE with Unlimited Bandwidth.",
    "schema.enum.sebandwidthtype.se_bandwidth_25m.label": "SE Bandwidth 25 Mbps",
    "schema.enum.sebandwidthtype.se_bandwidth_25m.desc": "SE with 25 Mbps Bandwidth.",
    "schema.enum.sebandwidthtype.se_bandwidth_200m.label": "SE Bandwidth 200 Mbps",
    "schema.enum.sebandwidthtype.se_bandwidth_200m.desc": "SE with 200 Mbps Bandwidth.",
    "schema.enum.pcaptxmode.pcap_tx_auto.desc": "Automatically determine transmit mode of either socket or tx_ring based on SE resources.",
    "schema.enum.pcaptxmode.pcap_tx_socket.desc": "PCAP_TX_SOCKET: Use socket mode.",
    "schema.enum.pcaptxmode.pcap_tx_ring.desc": "PCAP_TX_RING: Use transmit ring mode.",
    "schema.enum.secpuhtmode.se_cpu_ht_auto.label": "Default mode.",
    "schema.enum.secpuhtmode.se_cpu_ht_auto.desc": "SE automatically determines the best placement. This mode preserves existing behavior in accordance with CPU hyperthreading topology. If the number of data path processes is less than the number of CPUs, this is equivalent to sparse proxy priority mode. For more details, please refer to the SEPlacement KB.",
    "schema.enum.secpuhtmode.se_cpu_ht_sparse_dispatcher_priority.label": "Sparse mode for dispatcher cores.",
    "schema.enum.secpuhtmode.se_cpu_ht_sparse_dispatcher_priority.desc": "This setting provides more priority to dispatcher cores by attempting to place only one datapath process in the physical CPU. Useful when the number of data path processes is less than the number of CPUs. Starts exhausting physical cores and then hyperthreads in numerically descending order of CPU number. For more details, please refer to the SEPlacement KB.",
    "schema.enum.secpuhtmode.se_cpu_ht_sparse_proxy_priority.label": "Sparse mode for proxy cores.",
    "schema.enum.secpuhtmode.se_cpu_ht_sparse_proxy_priority.desc": "This setting provides more priority to proxy (nondispatcher) cores by attempting to place only one datapath process in the physical CPU. Useful when the number of data path processes is less than the number of CPUs. Starts exhausting physical cores and then hyperthreads in numerically ascending order of CPU number. For more details, please refer to the SEPlacement KB.",
    "schema.enum.secpuhtmode.se_cpu_ht_packed_cores.label": "Dense mode.",
    "schema.enum.secpuhtmode.se_cpu_ht_packed_cores.desc": "This setting places dispatcher siblings on the same physical CPU. Each CPU can have two dispatchers or two proxy cores being adjacent to each other. Useful when the number of data path processes is less than the number of CPUs. Starts exhausting hyperthreads serially on each core before moving on to the next physical core. For more details, please refer to the SEPlacement KB.",
    "schema.enum.knitransportprotocol.kni_proto_tcp.label": "TCP",
    "schema.enum.knitransportprotocol.kni_proto_tcp.desc": "TCP Protocol.",
    "schema.enum.knitransportprotocol.kni_proto_udp.label": "UDP",
    "schema.enum.knitransportprotocol.kni_proto_udp.desc": "UDP Protocol.",
    "schema.enum.metricseventthresholdtype.threshold_type_static.label": "Threshold_type_static is the default metrics event type threshold for all MetricsRule objects.",
    "schema.enum.metricseventthresholdtype.threshold_type_static.desc": "This value denotes static threshold type for metrics rules.",
    "schema.enum.metricseventthresholdtype.se_cpu_threshold.label": "SE cpu usage threshold",
    "schema.enum.metricseventthresholdtype.se_cpu_threshold.desc": "This value denotes dynamic threshold type for metrics rules for ServiceEngine CPU usage.",
    "schema.enum.metricseventthresholdtype.se_mem_threshold.label": "SE memory usage threshold",
    "schema.enum.metricseventthresholdtype.se_mem_threshold.desc": "This value denotes dynamic threshold type for metrics rules for ServiceEngine Memory usage.",
    "schema.enum.metricseventthresholdtype.se_disk_threshold.label": "SE disk usage threshold",
    "schema.enum.metricseventthresholdtype.se_disk_threshold.desc": "This value denotes dynamic threshold type for metrics rules for ServiceEngine Disk usage.",
    "schema.enum.metricseventthresholdtype.controller_cpu_threshold.label": "Controller CPU usage threshold",
    "schema.enum.metricseventthresholdtype.controller_cpu_threshold.desc": "This value denotes dynamic threshold type for metrics rules for Controller CPU usage.",
    "schema.enum.metricseventthresholdtype.controller_mem_threshold.label": "Controller memory usage threshold",
    "schema.enum.metricseventthresholdtype.controller_mem_threshold.desc": "This value denotes dynamic threshold type for metrics rules for Controller Memory usage.",
    "schema.enum.metricseventthresholdtype.controller_disk_threshold.label": "Controller disk usage threshold",
    "schema.enum.metricseventthresholdtype.controller_disk_threshold.desc": "This value denotes dynamic threshold type for metrics rules for Controller Disk usage.",
    "schema.enum.attacktype.land.desc": "DoS attack in which the attacker sets the source and destination information of a TCP segment to be the same making a vulnerable machine crash or freeze due to the packet being repeatedly processed by the TCP stack.",
    "schema.enum.attacktype.smurf.desc": "DDoS attack in which large numbers of ICMP packets with the intended victim's spoofed source IP are broadcast to a computer network using an IP Broadcast address.",
    "schema.enum.attacktype.icmp_ping_flood.desc": "DoS attack in which the attacker overwhelms the victim ICMP packets.",
    "schema.enum.attacktype.unkown_protocol.desc": "DoS attack in which the attacker overwhelms the victim's protocol stack from packets with unsupported or unknown protocols.",
    "schema.enum.attacktype.teardrop.desc": "DoS attack in which the attacker sends fragmented packets with incorrect offset andor size leading to overlapping fragments causing vulnerable machines to crash.",
    "schema.enum.attacktype.ip_frag_overrun.desc": "DoS attack in which the attacker sends fragments, which after reassembly have data length that exceeds declared IP data length or the maximum datagram length.",
    "schema.enum.attacktype.ip_frag_toosmall.desc": "DoS attack in which the attacker sends small fragments with incomplete fields in the first segment, overflowing fields in subsequent segments, thus tricking any filters and letting packets through.",
    "schema.enum.attacktype.ip_frag_full.desc": "DoS attack in which the attacker sends excessive number of incomplete fragments exhausting victim's protocol buffers.",
    "schema.enum.attacktype.ip_frag_incomplete.desc": "DoS attack in which the attacker sends incomplete fragments leading to incomplete reassembly of the IP datagram.",
    "schema.enum.attacktype.port_scan.desc": "DoS attack in which the attacker sends connection requests to non listening ports.",
    "schema.enum.attacktype.tcp_non_syn_flood_old.desc": "flood of nonSYN pkts (deprecated)",
    "schema.enum.attacktype.syn_flood.desc": "DoS attack in which the attacker initiates TCP connections but does not complete them, holding upvictim's resources.",
    "schema.enum.attacktype.bad_rst_flood.desc": "DoS attack in which the attacker hijacksclient's connection and resets it by spoofing the sequence numbers.",
    "schema.enum.attacktype.malformed_flood.desc": "DoS attack in which the attacker sends packets with bad flags set after TCP connection closehas been initiated.",
    "schema.enum.attacktype.fake_session.desc": "DoS attack in which the attacker sends packets with wrong sequence numbers for a valid connection.",
    "schema.enum.attacktype.zero_window_stress.desc": "DoS attack in which a zero window is advertised in the last ACK during the 3 way handshake leading tothe victim holding up connections until the window opens up or connections are timedout.",
    "schema.enum.attacktype.small_window_stress.desc": "DoS attack in which the attacker advertises a very small window in the last ACK of the 3 way handshake. Attacker sends a request expecting a big response but the victim's buffers are held up as the receiving window is very small.",
    "schema.enum.attacktype.dos_http_timeout.desc": "DoS attack in which the attacker establishes an L7 connection and does one of the following. 1. Does not send a request 2. Send request header at a very slow pace.3. Send request body at a very slow pace.",
    "schema.enum.attacktype.dos_http_error.desc": "DoS attack in which the attacker sends bad requests some of which include exceeding header size, missing urls and more.",
    "schema.enum.attacktype.dos_http_abort.desc": "DoS attack in which the attacker established an L7 connection and sends Resets during requests.",
    "schema.enum.attacktype.dos_ssl_error.desc": "DoS attack in which the attacker fails to establish and SSH session due to bad ciphers, versions not supported, etc.",
    "schema.enum.attacktype.dos_app_error.desc": "DoS attack in which the attacker requests URLs that are known to beget slow or timedout responses from the victim.",
    "schema.enum.attacktype.dos_req_ip_rl_drop.desc": "Requests dropped due to source IP rate limit",
    "schema.enum.attacktype.dos_req_uri_rl_drop.desc": "Requests dropped due to URL rate limit",
    "schema.enum.attacktype.dos_req_uri_scan_bad_rl_drop.desc": "Requests dropped due to bad URL rate limit",
    "schema.enum.attacktype.dos_req_uri_scan_unknown_rl_drop.desc": "Requests dropped due to unknown URL rate limit",
    "schema.enum.attacktype.dos_req_ip_uri_rl_drop.desc": "Requests dropped due to source IP & URL rate limit",
    "schema.enum.attacktype.dos_conn_ip_rl_drop.desc": "Connections dropped due to source IP rate limit",
    "schema.enum.attacktype.dos_slow_url.desc": "Server response time for a url is high",
    "schema.enum.attacktype.tcp_non_syn_flood.desc": "DoS attack in which the attacker sends non SYN packets before establishing or after closing connections.",
    "schema.enum.attacktype.dos_req_cip_scan_bad_rl_drop.desc": "Requests dropped due to bad client ip rate limit",
    "schema.enum.attacktype.dos_req_cip_scan_unknown_rl_drop.desc": "Requests dropped due to unknown client ip rate limit",
    "schema.enum.attacktype.dos_req_ip_rl_drop_bad.desc": "Requests dropped due to bad source IP rate limit",
    "schema.enum.attacktype.dos_req_uri_rl_drop_bad.desc": "Requests dropped due to bad URL rate limit",
    "schema.enum.attacktype.dos_req_ip_uri_rl_drop_bad.desc": "Requests dropped due to bad source IP & URL rate limit",
    "schema.enum.attacktype.policy_drops.desc": "All drops due to policies. Any connection or request dropped due to L4 security policy, VS connection limit or rules or rate limits are counted towards policy drops. ",
    "schema.enum.attacktype.dos_conn_rl_drop.desc": "Requests dropped due to connection rate limit across client IPs.",
    "schema.enum.attacktype.dos_req_rl_drop.desc": "Requests dropped due to request rate limit across client IPs.",
    "schema.enum.attacktype.dos_req_hdr_rl_drop.desc": "Requests dropped due to header rate limit",
    "schema.enum.attacktype.dos_req_custom_rl_drop.desc": "Requests dropped due to custom rate limit",
    "schema.enum.attacktype.dns_attack_reflection.label": "DNS Reflection",
    "schema.enum.attacktype.dns_attack_reflection.desc": "Unsolicited DNS response received by the DNS virtual service",
    "schema.enum.attacktype.dns_attack_amplification_egress.label": "DNS Amplification Egress",
    "schema.enum.attacktype.dns_attack_amplification_egress.desc": "Incoming queries that may make the VS a vehicle for amplification egress attack",
    "schema.enum.attacktype.tcp_slow_and_low.label": "Slow and low TCP attack",
    "schema.enum.attacktype.tcp_slow_and_low.desc": "Extremely slow client traffic drain rate",
    "schema.enum.attacktype.dns_attack_nxdomain.label": "DNS NxDomain",
    "schema.enum.attacktype.dns_attack_nxdomain.desc": "Incoming queries that get NxDomain responses",
    "schema.enum.snmp_ver.snmp_ver2.label": "SNMP_VER2",
    "schema.enum.snmp_ver.snmp_ver2.desc": "SNMP version 2",
    "schema.enum.snmp_ver.snmp_ver3.label": "SNMP_VER3",
    "schema.enum.snmp_ver.snmp_ver3.desc": "SNMP version 3",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_md5.label": "MD5",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_md5.desc": "MD5 SNMP v3 authentication",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha.label": "SHA",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha.desc": "SHA SNMP v3 authentication",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_224.label": "SHA224",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_224.desc": "SHA224 SNMP v3 authentication",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_256.label": "SHA256",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_256.desc": "SHA256 SNMP v3 authentication",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_384.label": "SHA384",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_384.desc": "SHA384 SNMP v3 authentication",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_512.label": "SHA512",
    "schema.enum.snmp_v3_auth.snmp_v3_auth_sha_512.desc": "SHA512 SNMP v3 authentication",
    "schema.enum.snmp_v3_priv.snmp_v3_priv_des.label": "DES",
    "schema.enum.snmp_v3_priv.snmp_v3_priv_des.desc": "DES privacy for SNMP v3 payload",
    "schema.enum.snmp_v3_priv.snmp_v3_priv_aes.label": "AES",
    "schema.enum.snmp_v3_priv.snmp_v3_priv_aes.desc": "AES privacy for SNMP v3 payload",
    "schema.enum.sslkeyalgorithm.ssl_key_algorithm_rsa.label": "RSA",
    "schema.enum.sslkeyalgorithm.ssl_key_algorithm_ec.label": "EC",
    "schema.enum.sslkeyeccurve.ssl_key_ec_curve_secp256r1.label": "SECP256R1",
    "schema.enum.sslkeyeccurve.ssl_key_ec_curve_secp384r1.label": "SECP384R1",
    "schema.enum.sslkeyeccurve.ssl_key_ec_curve_secp521r1.label": "SECP521R1",
    "schema.enum.sslcertificatestatus.ssl_certificate_finished.desc": "SSL Certificate is good",
    "schema.enum.sslcertificatestatus.ssl_certificate_pending.desc": "Awaiting Certificate import",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_good.label": "OCSP Certificate Status: Certificate is good.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_good.desc": "Certificate status is Good as indicated by OCSP Responder.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_revoked.label": "OCSP Certificate Status: Certificate is revoked.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_revoked.desc": "Certificate status is Revoked as indicated by OCSP Responder.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_unknown.label": "OCSP Certificate Status: Certificate is unknown.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_unknown.desc": "Certificate status is unknown as indicated by OCSP Responder.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_serverfail_err.label": "OCSP Certificate Status: OCSP Responder Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_serverfail_err.desc": "A failure was detected in the OCSP Responder.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_jobdb.label": "OCSP Certificate Status: Job DB Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_jobdb.desc": "A failure was detected in job DB.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_disabled.label": "OCSP Certificate Status: OCSP is disabled.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_disabled.desc": "OCSP Stapling is disabled on this certificate.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_getcert.label": "OCSP Certificate Status: Certificate Chain Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_getcert.desc": "Issuer certificate chain is not complete for this certificate.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_nonvscert.label": "OCSP Certificate Status: Non Application Certificate Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_nonvscert.desc": "Certificate is not a Application Certificate.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_selfsigned.label": "OCSP Certificate Status: Certificate Selfsigned Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_selfsigned.desc": "Certificate is self signed.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_certfinish.label": "OCSP Certificate Status: Certificate not SSL_CERTIFICATE_FINISHED.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_certfinish.desc": "Certificate status is not SSL_CERTIFICATE_FINISHED.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_cacert.label": "OCSP Certificate Status: Root Certificate Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_cacert.desc": "Certificate is a root certificate.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_request.label": "OCSP Certificate Status: OCSP Request Creation Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_request.desc": "Error during OCSP request creation.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_issuer_revoked.label": "OCSP Certificate Status: Issuer certificate is Revoked.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_issuer_revoked.desc": "Issuer certificate is Revoked.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_parse_cert.label": "OCSP Certificate Status: Error during Certificate parsing.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_parse_cert.desc": "Error during Certificate parsing.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_req.label": "OCSP Certificate Status: OCSP HTTP Request Creation Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_req.desc": "Error during creation of HTTP request.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_url_list.label": "OCSP Certificate Status: OCSP responder URL list Parse Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_url_list.desc": "Error during parsing of responder URL list.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_send.label": "OCSP Certificate Status: OCSP HTTP Request Send Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_send.desc": "Error while sending of HTTP request.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_recv.label": "OCSP Certificate Status: OCSP HTTP Response Read Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_recv.desc": "Error while reading of HTTP response.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_resp.label": "OCSP Certificate Status: OCSP HTTP Response Parse Error.",
    "schema.enum.ocsperrorstatus.ocsp_err_certstatus_http_resp.desc": "Error while parsing of HTTP response.",
    "schema.enum.certificatestatus.ocsp_certstatus_good.label": "GOOD",
    "schema.enum.certificatestatus.ocsp_certstatus_revoked.label": "REVOKED",
    "schema.enum.certificatestatus.ocsp_certstatus_unknown.label": "UNKNOWN",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_unspecified.label": "Unspecified.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_unspecified.desc": "OCSP Revocation reason for the certificate is not specified.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_key_compromise.label": "Key Compromise.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_key_compromise.desc": "It is suspected that the subject's private key, or other aspects of the subject validated in the certificate, have been compromised.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_ca_compromise.label": "CA Compromise.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_ca_compromise.desc": "CA certificate is revoked as it is suspected that the subject's private key, or other aspects of the subject validated in the certificate, have been compromised.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_affiliation_changed.label": "Affiliation changed.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_affiliation_changed.desc": "Subject's name or other information in the certificate has been modified.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_superseded.label": "Superseded.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_superseded.desc": "Certificate has been superseded but there is no cause to suspect that the private key has been compromised.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_cessation_of_operation.label": "Cessation of Operation.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_cessation_of_operation.desc": "Certificate is no longer needed for the purpose for which it was issued.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_certificate_hold.label": "Certificate on Hold.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_certificate_hold.desc": "Certificate is temporarilty invalidated until more information is made available.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_remove_from_crl.label": "Remove from CRL.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_remove_from_crl.desc": "Certificate is not revoked.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_privilege_withdrawn.label": "Privilege withdrawn.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_privilege_withdrawn.desc": "Certificate was revoked because a privilege contained within that certificate has been withdrawn.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_aa_compromise.label": "AA Compromise.",
    "schema.enum.certificaterevocationreason.ocsp_revocation_reason_aa_compromise.desc": "OCSP Revocation reason for the certificate is AA Compromise.",
    "schema.enum.ocspresponderurlaction.ocsp_responder_url_failover.label": "FAILOVER",
    "schema.enum.ocspresponderurlaction.ocsp_responder_url_failover.desc": "Used as a Failover URL to the AIA extension contained in the certificate.",
    "schema.enum.ocspresponderurlaction.ocsp_responder_url_override.label": "OVERRIDE",
    "schema.enum.ocspresponderurlaction.ocsp_responder_url_override.desc": "URL configured is used instead of the URL contained in the AIA extension of the certificate.",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_gcm_sha256.label": "ECDHEECDSAAES128GCMSHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_gcm_sha256.desc": "TLS ECDHE ECDSA WITH AES 128 GCM SHA 256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_gcm_sha384.label": "ECDHEECDSAAES256GCMSHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_gcm_sha384.desc": "TLS ECDHE ECDSA WITH AES 256 GCM SHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_gcm_sha256.label": "ECDHERSAAES128GCMSHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_gcm_sha256.desc": "TLS ECDHE RSA WITH AES 128 GCM SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_gcm_sha384.label": "ECDHERSAAES256GCMSHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_gcm_sha384.desc": "TLS ECDHE RSA WITH AES 256 GCM SHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_cbc_sha256.label": "ECDHEECDSAAES128SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_cbc_sha256.desc": "TLS ECDHE ECDSA WITH AES 128 CBC SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_cbc_sha384.label": "ECDHEECDSAAES256SHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_cbc_sha384.desc": "TLS ECDHE ECDSA WITH AES 256 CBC SHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_cbc_sha256.label": "ECDHERSAAES128SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_cbc_sha256.desc": "TLS ECDHE RSA WITH AES 128 CBC SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_cbc_sha384.label": "ECDHERSAAES256SHA384",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_cbc_sha384.desc": "TLS ECDHE RSA WITH AES 256 CBC SHA384",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_gcm_sha256.label": "AES128GCMSHA256",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_gcm_sha256.desc": "TLS RSA WITH AES 128 GCM SHA256",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_gcm_sha384.label": "AES256GCMSHA384",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_gcm_sha384.desc": "TLS RSA WITH AES 256 GCM SHA384",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_cbc_sha256.label": "AES128SHA256",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_cbc_sha256.desc": "TLS RSA WITH AES 128 CBC SHA256",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_cbc_sha256.label": "AES256SHA256",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_cbc_sha256.desc": "TLS RSA WITH AES 256 CBC SHA256",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_cbc_sha.label": "ECDHEECDSAAES128SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_128_cbc_sha.desc": "TLS ECDHE ECDSA WITH AES 128 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_cbc_sha.label": "ECDHEECDSAAES256SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_ecdsa_with_aes_256_cbc_sha.desc": "TLS ECDHE ECDSA WITH AES 256 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_cbc_sha.label": "ECDHERSAAES128SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_128_cbc_sha.desc": "TLS ECDHE RSA WITH AES 128 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_cbc_sha.label": "ECDHERSAAES256SHA",
    "schema.enum.acceptedcipherenums.tls_ecdhe_rsa_with_aes_256_cbc_sha.desc": "TLS ECDHE RSA WITH AES 256 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_cbc_sha.label": "AES128SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_128_cbc_sha.desc": "TLS RSA WITH AES 128 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_cbc_sha.label": "AES256SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_aes_256_cbc_sha.desc": "TLS RSA WITH AES 256 CBC SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_3des_ede_cbc_sha.label": "DESCBC3SHA",
    "schema.enum.acceptedcipherenums.tls_rsa_with_3des_ede_cbc_sha.desc": "TLS RSA WITH 3DES EDE CBC SHA",
    "schema.enum.acceptedcipherenums.tls_aes_256_gcm_sha384.label": "TLS_AES_256_GCM_SHA384",
    "schema.enum.acceptedcipherenums.tls_aes_256_gcm_sha384.desc": "TLS WITH AES 256 GCM SHA384",
    "schema.enum.acceptedcipherenums.tls_chacha20_poly1305_sha256.label": "TLS_CHACHA20_POLY1305_SHA256",
    "schema.enum.acceptedcipherenums.tls_chacha20_poly1305_sha256.desc": "TLS WITH CHACHA20 POLY1305 SHA256",
    "schema.enum.acceptedcipherenums.tls_aes_128_gcm_sha256.label": "TLS_AES_128_GCM_SHA256",
    "schema.enum.acceptedcipherenums.tls_aes_128_gcm_sha256.desc": "TLS WITH AES 128 GCM SHA256",
    "schema.enum.sslprofiletype.ssl_profile_type_application.label": "Application specific SSL Profile",
    "schema.enum.sslprofiletype.ssl_profile_type_system.label": "Controller Portal specific SSL Profile",
    "schema.enum.sslversiontype.ssl_version_sslv3.label": "SSL 3.0",
    "schema.enum.sslversiontype.ssl_version_tls1.label": "TLS 1.0",
    "schema.enum.sslversiontype.ssl_version_tls1_1.label": "TLS 1.1",
    "schema.enum.sslversiontype.ssl_version_tls1_2.label": "TLS 1.2",
    "schema.enum.sslversiontype.ssl_version_tls1_3.label": "TLS 1.3",
    "schema.enum.ssopolicytype.sso_type_saml.label": "SAML",
    "schema.enum.ssopolicytype.sso_type_saml.desc": "SSO Policy Type: SAML",
    "schema.enum.ssopolicytype.sso_type_pingaccess.label": "PingAccess",
    "schema.enum.ssopolicytype.sso_type_pingaccess.desc": "SSO Policy Type: PingAccess",
    "schema.enum.ssopolicytype.sso_type_jwt.label": "JWT",
    "schema.enum.ssopolicytype.sso_type_jwt.desc": "SSO Policy Type: JWT.",
    "schema.enum.ssopolicytype.sso_type_ldap.label": "LDAP",
    "schema.enum.ssopolicytype.sso_type_ldap.desc": "SSO Policy Type: LDAP.",
    "schema.enum.ssopolicytype.sso_type_oauth.label": "OAuthOIDC",
    "schema.enum.ssopolicytype.sso_type_oauth.desc": "SSO Policy Type: OAuthOIDC",
    "schema.enum.stringgrouptype.sg_type_string.label": "String",
    "schema.enum.stringgrouptype.sg_type_string.desc": "StringGroup is a collection of Strings",
    "schema.enum.stringgrouptype.sg_type_keyval.label": "Key & Value",
    "schema.enum.stringgrouptype.sg_type_keyval.desc": "StringGroup is a collection of (Key,Value) pairs",
    "schema.enum.authruleassignment.assign_all.label": "All",
    "schema.enum.authruleassignment.assign_all.desc": "assign all",
    "schema.enum.authruleassignment.assign_from_select_list.label": "Selected",
    "schema.enum.authruleassignment.assign_from_select_list.desc": "assign selected",
    "schema.enum.authruleassignment.assign_matching_group_name.label": "Group name",
    "schema.enum.authruleassignment.assign_matching_group_name.desc": "assign matching group name",
    "schema.enum.authruleassignment.assign_matching_attribute_value.label": "Attribute value",
    "schema.enum.authruleassignment.assign_matching_attribute_value.desc": "assign matching attribute value",
    "schema.enum.authruleassignment.assign_matching_group_regex.label": "Group regex",
    "schema.enum.authruleassignment.assign_matching_group_regex.desc": "assign matching group value from regex",
    "schema.enum.authruleassignment.assign_matching_attribute_regex.label": "Attribute regex",
    "schema.enum.authruleassignment.assign_matching_attribute_regex.desc": "assign matching attribute value from regex",
    "schema.enum.authmatchoperation.auth_match_contains.label": "Contains",
    "schema.enum.authmatchoperation.auth_match_contains.desc": "match succeeds if specific attribute or a group list contains",
    "schema.enum.authmatchoperation.auth_match_does_not_contain.label": "Does Not Contain",
    "schema.enum.authmatchoperation.auth_match_does_not_contain.desc": "match succeeds if specific attribute or a group list does not contain",
    "schema.enum.authmatchoperation.auth_match_regex.label": "Regex",
    "schema.enum.authmatchoperation.auth_match_regex.desc": "match succeeds if regex matches any substring of attribute or group",
    "schema.enum.smtptype.smtp_none.label": "No SMTP",
    "schema.enum.smtptype.smtp_local_host.label": "Local Host",
    "schema.enum.smtptype.smtp_server.label": "SMTP Server",
    "schema.enum.smtptype.smtp_anonymous_server.label": "Anonymous SMTP Server",
    "schema.enum.emailtimezone.utc.label": "UTC",
    "schema.enum.emailtimezone.utc.desc": "UTC",
    "schema.enum.emailtimezone.africa_abidjan.label": "AfricaAbidjan",
    "schema.enum.emailtimezone.africa_abidjan.desc": "AfricaAbidjan",
    "schema.enum.emailtimezone.africa_accra.label": "AfricaAccra",
    "schema.enum.emailtimezone.africa_accra.desc": "AfricaAccra",
    "schema.enum.emailtimezone.africa_addis_ababa.label": "AfricaAddis_Ababa",
    "schema.enum.emailtimezone.africa_addis_ababa.desc": "AfricaAddis_Ababa",
    "schema.enum.emailtimezone.africa_algiers.label": "AfricaAlgiers",
    "schema.enum.emailtimezone.africa_algiers.desc": "AfricaAlgiers",
    "schema.enum.emailtimezone.africa_asmara.label": "AfricaAsmara",
    "schema.enum.emailtimezone.africa_asmara.desc": "AfricaAsmara",
    "schema.enum.emailtimezone.africa_asmera.label": "AfricaAsmera",
    "schema.enum.emailtimezone.africa_asmera.desc": "AfricaAsmera",
    "schema.enum.emailtimezone.africa_bamako.label": "AfricaBamako",
    "schema.enum.emailtimezone.africa_bamako.desc": "AfricaBamako",
    "schema.enum.emailtimezone.africa_bangui.label": "AfricaBangui",
    "schema.enum.emailtimezone.africa_bangui.desc": "AfricaBangui",
    "schema.enum.emailtimezone.africa_banjul.label": "AfricaBanjul",
    "schema.enum.emailtimezone.africa_banjul.desc": "AfricaBanjul",
    "schema.enum.emailtimezone.africa_bissau.label": "AfricaBissau",
    "schema.enum.emailtimezone.africa_bissau.desc": "AfricaBissau",
    "schema.enum.emailtimezone.africa_blantyre.label": "AfricaBlantyre",
    "schema.enum.emailtimezone.africa_blantyre.desc": "AfricaBlantyre",
    "schema.enum.emailtimezone.africa_brazzaville.label": "AfricaBrazzaville",
    "schema.enum.emailtimezone.africa_brazzaville.desc": "AfricaBrazzaville",
    "schema.enum.emailtimezone.africa_bujumbura.label": "AfricaBujumbura",
    "schema.enum.emailtimezone.africa_bujumbura.desc": "AfricaBujumbura",
    "schema.enum.emailtimezone.africa_cairo.label": "AfricaCairo",
    "schema.enum.emailtimezone.africa_cairo.desc": "AfricaCairo",
    "schema.enum.emailtimezone.africa_casablanca.label": "AfricaCasablanca",
    "schema.enum.emailtimezone.africa_casablanca.desc": "AfricaCasablanca",
    "schema.enum.emailtimezone.africa_ceuta.label": "AfricaCeuta",
    "schema.enum.emailtimezone.africa_ceuta.desc": "AfricaCeuta",
    "schema.enum.emailtimezone.africa_conakry.label": "AfricaConakry",
    "schema.enum.emailtimezone.africa_conakry.desc": "AfricaConakry",
    "schema.enum.emailtimezone.africa_dakar.label": "AfricaDakar",
    "schema.enum.emailtimezone.africa_dakar.desc": "AfricaDakar",
    "schema.enum.emailtimezone.africa_dar_es_salaam.label": "AfricaDar_es_Salaam",
    "schema.enum.emailtimezone.africa_dar_es_salaam.desc": "AfricaDar_es_Salaam",
    "schema.enum.emailtimezone.africa_djibouti.label": "AfricaDjibouti",
    "schema.enum.emailtimezone.africa_djibouti.desc": "AfricaDjibouti",
    "schema.enum.emailtimezone.africa_douala.label": "AfricaDouala",
    "schema.enum.emailtimezone.africa_douala.desc": "AfricaDouala",
    "schema.enum.emailtimezone.africa_el_aaiun.label": "AfricaEl_Aaiun",
    "schema.enum.emailtimezone.africa_el_aaiun.desc": "AfricaEl_Aaiun",
    "schema.enum.emailtimezone.africa_freetown.label": "AfricaFreetown",
    "schema.enum.emailtimezone.africa_freetown.desc": "AfricaFreetown",
    "schema.enum.emailtimezone.africa_gaborone.label": "AfricaGaborone",
    "schema.enum.emailtimezone.africa_gaborone.desc": "AfricaGaborone",
    "schema.enum.emailtimezone.africa_harare.label": "AfricaHarare",
    "schema.enum.emailtimezone.africa_harare.desc": "AfricaHarare",
    "schema.enum.emailtimezone.africa_johannesburg.label": "AfricaJohannesburg",
    "schema.enum.emailtimezone.africa_johannesburg.desc": "AfricaJohannesburg",
    "schema.enum.emailtimezone.africa_juba.label": "AfricaJuba",
    "schema.enum.emailtimezone.africa_juba.desc": "AfricaJuba",
    "schema.enum.emailtimezone.africa_kampala.label": "AfricaKampala",
    "schema.enum.emailtimezone.africa_kampala.desc": "AfricaKampala",
    "schema.enum.emailtimezone.africa_khartoum.label": "AfricaKhartoum",
    "schema.enum.emailtimezone.africa_khartoum.desc": "AfricaKhartoum",
    "schema.enum.emailtimezone.africa_kigali.label": "AfricaKigali",
    "schema.enum.emailtimezone.africa_kigali.desc": "AfricaKigali",
    "schema.enum.emailtimezone.africa_kinshasa.label": "AfricaKinshasa",
    "schema.enum.emailtimezone.africa_kinshasa.desc": "AfricaKinshasa",
    "schema.enum.emailtimezone.africa_lagos.label": "AfricaLagos",
    "schema.enum.emailtimezone.africa_lagos.desc": "AfricaLagos",
    "schema.enum.emailtimezone.africa_libreville.label": "AfricaLibreville",
    "schema.enum.emailtimezone.africa_libreville.desc": "AfricaLibreville",
    "schema.enum.emailtimezone.africa_lome.label": "AfricaLome",
    "schema.enum.emailtimezone.africa_lome.desc": "AfricaLome",
    "schema.enum.emailtimezone.africa_luanda.label": "AfricaLuanda",
    "schema.enum.emailtimezone.africa_luanda.desc": "AfricaLuanda",
    "schema.enum.emailtimezone.africa_lubumbashi.label": "AfricaLubumbashi",
    "schema.enum.emailtimezone.africa_lubumbashi.desc": "AfricaLubumbashi",
    "schema.enum.emailtimezone.africa_lusaka.label": "AfricaLusaka",
    "schema.enum.emailtimezone.africa_lusaka.desc": "AfricaLusaka",
    "schema.enum.emailtimezone.africa_malabo.label": "AfricaMalabo",
    "schema.enum.emailtimezone.africa_malabo.desc": "AfricaMalabo",
    "schema.enum.emailtimezone.africa_maputo.label": "AfricaMaputo",
    "schema.enum.emailtimezone.africa_maputo.desc": "AfricaMaputo",
    "schema.enum.emailtimezone.africa_maseru.label": "AfricaMaseru",
    "schema.enum.emailtimezone.africa_maseru.desc": "AfricaMaseru",
    "schema.enum.emailtimezone.africa_mbabane.label": "AfricaMbabane",
    "schema.enum.emailtimezone.africa_mbabane.desc": "AfricaMbabane",
    "schema.enum.emailtimezone.africa_mogadishu.label": "AfricaMogadishu",
    "schema.enum.emailtimezone.africa_mogadishu.desc": "AfricaMogadishu",
    "schema.enum.emailtimezone.africa_monrovia.label": "AfricaMonrovia",
    "schema.enum.emailtimezone.africa_monrovia.desc": "AfricaMonrovia",
    "schema.enum.emailtimezone.africa_nairobi.label": "AfricaNairobi",
    "schema.enum.emailtimezone.africa_nairobi.desc": "AfricaNairobi",
    "schema.enum.emailtimezone.africa_ndjamena.label": "AfricaNdjamena",
    "schema.enum.emailtimezone.africa_ndjamena.desc": "AfricaNdjamena",
    "schema.enum.emailtimezone.africa_niamey.label": "AfricaNiamey",
    "schema.enum.emailtimezone.africa_niamey.desc": "AfricaNiamey",
    "schema.enum.emailtimezone.africa_nouakchott.label": "AfricaNouakchott",
    "schema.enum.emailtimezone.africa_nouakchott.desc": "AfricaNouakchott",
    "schema.enum.emailtimezone.africa_ouagadougou.label": "AfricaOuagadougou",
    "schema.enum.emailtimezone.africa_ouagadougou.desc": "AfricaOuagadougou",
    "schema.enum.emailtimezone.africa_porto_minus_novo.label": "AfricaPortoNovo",
    "schema.enum.emailtimezone.africa_porto_minus_novo.desc": "AfricaPortoNovo",
    "schema.enum.emailtimezone.africa_sao_tome.label": "AfricaSao_Tome",
    "schema.enum.emailtimezone.africa_sao_tome.desc": "AfricaSao_Tome",
    "schema.enum.emailtimezone.africa_timbuktu.label": "AfricaTimbuktu",
    "schema.enum.emailtimezone.africa_timbuktu.desc": "AfricaTimbuktu",
    "schema.enum.emailtimezone.africa_tripoli.label": "AfricaTripoli",
    "schema.enum.emailtimezone.africa_tripoli.desc": "AfricaTripoli",
    "schema.enum.emailtimezone.africa_tunis.label": "AfricaTunis",
    "schema.enum.emailtimezone.africa_tunis.desc": "AfricaTunis",
    "schema.enum.emailtimezone.africa_windhoek.label": "AfricaWindhoek",
    "schema.enum.emailtimezone.africa_windhoek.desc": "AfricaWindhoek",
    "schema.enum.emailtimezone.america_adak.label": "AmericaAdak",
    "schema.enum.emailtimezone.america_adak.desc": "AmericaAdak",
    "schema.enum.emailtimezone.america_anchorage.label": "AmericaAnchorage",
    "schema.enum.emailtimezone.america_anchorage.desc": "AmericaAnchorage",
    "schema.enum.emailtimezone.america_anguilla.label": "AmericaAnguilla",
    "schema.enum.emailtimezone.america_anguilla.desc": "AmericaAnguilla",
    "schema.enum.emailtimezone.america_antigua.label": "AmericaAntigua",
    "schema.enum.emailtimezone.america_antigua.desc": "AmericaAntigua",
    "schema.enum.emailtimezone.america_araguaina.label": "AmericaAraguaina",
    "schema.enum.emailtimezone.america_araguaina.desc": "AmericaAraguaina",
    "schema.enum.emailtimezone.america_argentina_buenos_aires.label": "AmericaArgentinaBuenos_Aires",
    "schema.enum.emailtimezone.america_argentina_buenos_aires.desc": "AmericaArgentinaBuenos_Aires",
    "schema.enum.emailtimezone.america_argentina_catamarca.label": "AmericaArgentinaCatamarca",
    "schema.enum.emailtimezone.america_argentina_catamarca.desc": "AmericaArgentinaCatamarca",
    "schema.enum.emailtimezone.america_argentina_comodrivadavia.label": "AmericaArgentinaComodRivadavia",
    "schema.enum.emailtimezone.america_argentina_comodrivadavia.desc": "AmericaArgentinaComodRivadavia",
    "schema.enum.emailtimezone.america_argentina_cordoba.label": "AmericaArgentinaCordoba",
    "schema.enum.emailtimezone.america_argentina_cordoba.desc": "AmericaArgentinaCordoba",
    "schema.enum.emailtimezone.america_argentina_jujuy.label": "AmericaArgentinaJujuy",
    "schema.enum.emailtimezone.america_argentina_jujuy.desc": "AmericaArgentinaJujuy",
    "schema.enum.emailtimezone.america_argentina_la_rioja.label": "AmericaArgentinaLa_Rioja",
    "schema.enum.emailtimezone.america_argentina_la_rioja.desc": "AmericaArgentinaLa_Rioja",
    "schema.enum.emailtimezone.america_argentina_mendoza.label": "AmericaArgentinaMendoza",
    "schema.enum.emailtimezone.america_argentina_mendoza.desc": "AmericaArgentinaMendoza",
    "schema.enum.emailtimezone.america_argentina_rio_gallegos.label": "AmericaArgentinaRio_Gallegos",
    "schema.enum.emailtimezone.america_argentina_rio_gallegos.desc": "AmericaArgentinaRio_Gallegos",
    "schema.enum.emailtimezone.america_argentina_salta.label": "AmericaArgentinaSalta",
    "schema.enum.emailtimezone.america_argentina_salta.desc": "AmericaArgentinaSalta",
    "schema.enum.emailtimezone.america_argentina_san_juan.label": "AmericaArgentinaSan_Juan",
    "schema.enum.emailtimezone.america_argentina_san_juan.desc": "AmericaArgentinaSan_Juan",
    "schema.enum.emailtimezone.america_argentina_san_luis.label": "AmericaArgentinaSan_Luis",
    "schema.enum.emailtimezone.america_argentina_san_luis.desc": "AmericaArgentinaSan_Luis",
    "schema.enum.emailtimezone.america_argentina_tucuman.label": "AmericaArgentinaTucuman",
    "schema.enum.emailtimezone.america_argentina_tucuman.desc": "AmericaArgentinaTucuman",
    "schema.enum.emailtimezone.america_argentina_ushuaia.label": "AmericaArgentinaUshuaia",
    "schema.enum.emailtimezone.america_argentina_ushuaia.desc": "AmericaArgentinaUshuaia",
    "schema.enum.emailtimezone.america_aruba.label": "AmericaAruba",
    "schema.enum.emailtimezone.america_aruba.desc": "AmericaAruba",
    "schema.enum.emailtimezone.america_asuncion.label": "AmericaAsuncion",
    "schema.enum.emailtimezone.america_asuncion.desc": "AmericaAsuncion",
    "schema.enum.emailtimezone.america_atikokan.label": "AmericaAtikokan",
    "schema.enum.emailtimezone.america_atikokan.desc": "AmericaAtikokan",
    "schema.enum.emailtimezone.america_atka.label": "AmericaAtka",
    "schema.enum.emailtimezone.america_atka.desc": "AmericaAtka",
    "schema.enum.emailtimezone.america_bahia.label": "AmericaBahia",
    "schema.enum.emailtimezone.america_bahia.desc": "AmericaBahia",
    "schema.enum.emailtimezone.america_bahia_banderas.label": "AmericaBahia_Banderas",
    "schema.enum.emailtimezone.america_bahia_banderas.desc": "AmericaBahia_Banderas",
    "schema.enum.emailtimezone.america_barbados.label": "AmericaBarbados",
    "schema.enum.emailtimezone.america_barbados.desc": "AmericaBarbados",
    "schema.enum.emailtimezone.america_belem.label": "AmericaBelem",
    "schema.enum.emailtimezone.america_belem.desc": "AmericaBelem",
    "schema.enum.emailtimezone.america_belize.label": "AmericaBelize",
    "schema.enum.emailtimezone.america_belize.desc": "AmericaBelize",
    "schema.enum.emailtimezone.america_blanc_minus_sablon.label": "AmericaBlancSablon",
    "schema.enum.emailtimezone.america_blanc_minus_sablon.desc": "AmericaBlancSablon",
    "schema.enum.emailtimezone.america_boa_vista.label": "AmericaBoa_Vista",
    "schema.enum.emailtimezone.america_boa_vista.desc": "AmericaBoa_Vista",
    "schema.enum.emailtimezone.america_bogota.label": "AmericaBogota",
    "schema.enum.emailtimezone.america_bogota.desc": "AmericaBogota",
    "schema.enum.emailtimezone.america_boise.label": "AmericaBoise",
    "schema.enum.emailtimezone.america_boise.desc": "AmericaBoise",
    "schema.enum.emailtimezone.america_buenos_aires.label": "AmericaBuenos_Aires",
    "schema.enum.emailtimezone.america_buenos_aires.desc": "AmericaBuenos_Aires",
    "schema.enum.emailtimezone.america_cambridge_bay.label": "AmericaCambridge_Bay",
    "schema.enum.emailtimezone.america_cambridge_bay.desc": "AmericaCambridge_Bay",
    "schema.enum.emailtimezone.america_campo_grande.label": "AmericaCampo_Grande",
    "schema.enum.emailtimezone.america_campo_grande.desc": "AmericaCampo_Grande",
    "schema.enum.emailtimezone.america_cancun.label": "AmericaCancun",
    "schema.enum.emailtimezone.america_cancun.desc": "AmericaCancun",
    "schema.enum.emailtimezone.america_caracas.label": "AmericaCaracas",
    "schema.enum.emailtimezone.america_caracas.desc": "AmericaCaracas",
    "schema.enum.emailtimezone.america_catamarca.label": "AmericaCatamarca",
    "schema.enum.emailtimezone.america_catamarca.desc": "AmericaCatamarca",
    "schema.enum.emailtimezone.america_cayenne.label": "AmericaCayenne",
    "schema.enum.emailtimezone.america_cayenne.desc": "AmericaCayenne",
    "schema.enum.emailtimezone.america_cayman.label": "AmericaCayman",
    "schema.enum.emailtimezone.america_cayman.desc": "AmericaCayman",
    "schema.enum.emailtimezone.america_chicago.label": "AmericaChicago",
    "schema.enum.emailtimezone.america_chicago.desc": "AmericaChicago",
    "schema.enum.emailtimezone.america_chihuahua.label": "AmericaChihuahua",
    "schema.enum.emailtimezone.america_chihuahua.desc": "AmericaChihuahua",
    "schema.enum.emailtimezone.america_coral_harbour.label": "AmericaCoral_Harbour",
    "schema.enum.emailtimezone.america_coral_harbour.desc": "AmericaCoral_Harbour",
    "schema.enum.emailtimezone.america_cordoba.label": "AmericaCordoba",
    "schema.enum.emailtimezone.america_cordoba.desc": "AmericaCordoba",
    "schema.enum.emailtimezone.america_costa_rica.label": "AmericaCosta_Rica",
    "schema.enum.emailtimezone.america_costa_rica.desc": "AmericaCosta_Rica",
    "schema.enum.emailtimezone.america_creston.label": "AmericaCreston",
    "schema.enum.emailtimezone.america_creston.desc": "AmericaCreston",
    "schema.enum.emailtimezone.america_cuiaba.label": "AmericaCuiaba",
    "schema.enum.emailtimezone.america_cuiaba.desc": "AmericaCuiaba",
    "schema.enum.emailtimezone.america_curacao.label": "AmericaCuracao",
    "schema.enum.emailtimezone.america_curacao.desc": "AmericaCuracao",
    "schema.enum.emailtimezone.america_danmarkshavn.label": "AmericaDanmarkshavn",
    "schema.enum.emailtimezone.america_danmarkshavn.desc": "AmericaDanmarkshavn",
    "schema.enum.emailtimezone.america_dawson.label": "AmericaDawson",
    "schema.enum.emailtimezone.america_dawson.desc": "AmericaDawson",
    "schema.enum.emailtimezone.america_dawson_creek.label": "AmericaDawson_Creek",
    "schema.enum.emailtimezone.america_dawson_creek.desc": "AmericaDawson_Creek",
    "schema.enum.emailtimezone.america_denver.label": "AmericaDenver",
    "schema.enum.emailtimezone.america_denver.desc": "AmericaDenver",
    "schema.enum.emailtimezone.america_detroit.label": "AmericaDetroit",
    "schema.enum.emailtimezone.america_detroit.desc": "AmericaDetroit",
    "schema.enum.emailtimezone.america_dominica.label": "AmericaDominica",
    "schema.enum.emailtimezone.america_dominica.desc": "AmericaDominica",
    "schema.enum.emailtimezone.america_edmonton.label": "AmericaEdmonton",
    "schema.enum.emailtimezone.america_edmonton.desc": "AmericaEdmonton",
    "schema.enum.emailtimezone.america_eirunepe.label": "AmericaEirunepe",
    "schema.enum.emailtimezone.america_eirunepe.desc": "AmericaEirunepe",
    "schema.enum.emailtimezone.america_el_salvador.label": "AmericaEl_Salvador",
    "schema.enum.emailtimezone.america_el_salvador.desc": "AmericaEl_Salvador",
    "schema.enum.emailtimezone.america_ensenada.label": "AmericaEnsenada",
    "schema.enum.emailtimezone.america_ensenada.desc": "AmericaEnsenada",
    "schema.enum.emailtimezone.america_fort_nelson.label": "AmericaFort_Nelson",
    "schema.enum.emailtimezone.america_fort_nelson.desc": "AmericaFort_Nelson",
    "schema.enum.emailtimezone.america_fort_wayne.label": "AmericaFort_Wayne",
    "schema.enum.emailtimezone.america_fort_wayne.desc": "AmericaFort_Wayne",
    "schema.enum.emailtimezone.america_fortaleza.label": "AmericaFortaleza",
    "schema.enum.emailtimezone.america_fortaleza.desc": "AmericaFortaleza",
    "schema.enum.emailtimezone.america_glace_bay.label": "AmericaGlace_Bay",
    "schema.enum.emailtimezone.america_glace_bay.desc": "AmericaGlace_Bay",
    "schema.enum.emailtimezone.america_godthab.label": "AmericaGodthab",
    "schema.enum.emailtimezone.america_godthab.desc": "AmericaGodthab",
    "schema.enum.emailtimezone.america_goose_bay.label": "AmericaGoose_Bay",
    "schema.enum.emailtimezone.america_goose_bay.desc": "AmericaGoose_Bay",
    "schema.enum.emailtimezone.america_grand_turk.label": "AmericaGrand_Turk",
    "schema.enum.emailtimezone.america_grand_turk.desc": "AmericaGrand_Turk",
    "schema.enum.emailtimezone.america_grenada.label": "AmericaGrenada",
    "schema.enum.emailtimezone.america_grenada.desc": "AmericaGrenada",
    "schema.enum.emailtimezone.america_guadeloupe.label": "AmericaGuadeloupe",
    "schema.enum.emailtimezone.america_guadeloupe.desc": "AmericaGuadeloupe",
    "schema.enum.emailtimezone.america_guatemala.label": "AmericaGuatemala",
    "schema.enum.emailtimezone.america_guatemala.desc": "AmericaGuatemala",
    "schema.enum.emailtimezone.america_guayaquil.label": "AmericaGuayaquil",
    "schema.enum.emailtimezone.america_guayaquil.desc": "AmericaGuayaquil",
    "schema.enum.emailtimezone.america_guyana.label": "AmericaGuyana",
    "schema.enum.emailtimezone.america_guyana.desc": "AmericaGuyana",
    "schema.enum.emailtimezone.america_halifax.label": "AmericaHalifax",
    "schema.enum.emailtimezone.america_halifax.desc": "AmericaHalifax",
    "schema.enum.emailtimezone.america_havana.label": "AmericaHavana",
    "schema.enum.emailtimezone.america_havana.desc": "AmericaHavana",
    "schema.enum.emailtimezone.america_hermosillo.label": "AmericaHermosillo",
    "schema.enum.emailtimezone.america_hermosillo.desc": "AmericaHermosillo",
    "schema.enum.emailtimezone.america_indiana_indianapolis.label": "AmericaIndianaIndianapolis",
    "schema.enum.emailtimezone.america_indiana_indianapolis.desc": "AmericaIndianaIndianapolis",
    "schema.enum.emailtimezone.america_indiana_knox.label": "AmericaIndianaKnox",
    "schema.enum.emailtimezone.america_indiana_knox.desc": "AmericaIndianaKnox",
    "schema.enum.emailtimezone.america_indiana_marengo.label": "AmericaIndianaMarengo",
    "schema.enum.emailtimezone.america_indiana_marengo.desc": "AmericaIndianaMarengo",
    "schema.enum.emailtimezone.america_indiana_petersburg.label": "AmericaIndianaPetersburg",
    "schema.enum.emailtimezone.america_indiana_petersburg.desc": "AmericaIndianaPetersburg",
    "schema.enum.emailtimezone.america_indiana_tell_city.label": "AmericaIndianaTell_City",
    "schema.enum.emailtimezone.america_indiana_tell_city.desc": "AmericaIndianaTell_City",
    "schema.enum.emailtimezone.america_indiana_vevay.label": "AmericaIndianaVevay",
    "schema.enum.emailtimezone.america_indiana_vevay.desc": "AmericaIndianaVevay",
    "schema.enum.emailtimezone.america_indiana_vincennes.label": "AmericaIndianaVincennes",
    "schema.enum.emailtimezone.america_indiana_vincennes.desc": "AmericaIndianaVincennes",
    "schema.enum.emailtimezone.america_indiana_winamac.label": "AmericaIndianaWinamac",
    "schema.enum.emailtimezone.america_indiana_winamac.desc": "AmericaIndianaWinamac",
    "schema.enum.emailtimezone.america_indianapolis.label": "AmericaIndianapolis",
    "schema.enum.emailtimezone.america_indianapolis.desc": "AmericaIndianapolis",
    "schema.enum.emailtimezone.america_inuvik.label": "AmericaInuvik",
    "schema.enum.emailtimezone.america_inuvik.desc": "AmericaInuvik",
    "schema.enum.emailtimezone.america_iqaluit.label": "AmericaIqaluit",
    "schema.enum.emailtimezone.america_iqaluit.desc": "AmericaIqaluit",
    "schema.enum.emailtimezone.america_jamaica.label": "AmericaJamaica",
    "schema.enum.emailtimezone.america_jamaica.desc": "AmericaJamaica",
    "schema.enum.emailtimezone.america_jujuy.label": "AmericaJujuy",
    "schema.enum.emailtimezone.america_jujuy.desc": "AmericaJujuy",
    "schema.enum.emailtimezone.america_juneau.label": "AmericaJuneau",
    "schema.enum.emailtimezone.america_juneau.desc": "AmericaJuneau",
    "schema.enum.emailtimezone.america_kentucky_louisville.label": "AmericaKentuckyLouisville",
    "schema.enum.emailtimezone.america_kentucky_louisville.desc": "AmericaKentuckyLouisville",
    "schema.enum.emailtimezone.america_kentucky_monticello.label": "AmericaKentuckyMonticello",
    "schema.enum.emailtimezone.america_kentucky_monticello.desc": "AmericaKentuckyMonticello",
    "schema.enum.emailtimezone.america_knox_in.label": "AmericaKnox_IN",
    "schema.enum.emailtimezone.america_knox_in.desc": "AmericaKnox_IN",
    "schema.enum.emailtimezone.america_kralendijk.label": "AmericaKralendijk",
    "schema.enum.emailtimezone.america_kralendijk.desc": "AmericaKralendijk",
    "schema.enum.emailtimezone.america_la_paz.label": "AmericaLa_Paz",
    "schema.enum.emailtimezone.america_la_paz.desc": "AmericaLa_Paz",
    "schema.enum.emailtimezone.america_lima.label": "AmericaLima",
    "schema.enum.emailtimezone.america_lima.desc": "AmericaLima",
    "schema.enum.emailtimezone.america_los_angeles.label": "AmericaLos_Angeles",
    "schema.enum.emailtimezone.america_los_angeles.desc": "AmericaLos_Angeles",
    "schema.enum.emailtimezone.america_louisville.label": "AmericaLouisville",
    "schema.enum.emailtimezone.america_louisville.desc": "AmericaLouisville",
    "schema.enum.emailtimezone.america_lower_princes.label": "AmericaLower_Princes",
    "schema.enum.emailtimezone.america_lower_princes.desc": "AmericaLower_Princes",
    "schema.enum.emailtimezone.america_maceio.label": "AmericaMaceio",
    "schema.enum.emailtimezone.america_maceio.desc": "AmericaMaceio",
    "schema.enum.emailtimezone.america_managua.label": "AmericaManagua",
    "schema.enum.emailtimezone.america_managua.desc": "AmericaManagua",
    "schema.enum.emailtimezone.america_manaus.label": "AmericaManaus",
    "schema.enum.emailtimezone.america_manaus.desc": "AmericaManaus",
    "schema.enum.emailtimezone.america_marigot.label": "AmericaMarigot",
    "schema.enum.emailtimezone.america_marigot.desc": "AmericaMarigot",
    "schema.enum.emailtimezone.america_martinique.label": "AmericaMartinique",
    "schema.enum.emailtimezone.america_martinique.desc": "AmericaMartinique",
    "schema.enum.emailtimezone.america_matamoros.label": "AmericaMatamoros",
    "schema.enum.emailtimezone.america_matamoros.desc": "AmericaMatamoros",
    "schema.enum.emailtimezone.america_mazatlan.label": "AmericaMazatlan",
    "schema.enum.emailtimezone.america_mazatlan.desc": "AmericaMazatlan",
    "schema.enum.emailtimezone.america_mendoza.label": "AmericaMendoza",
    "schema.enum.emailtimezone.america_mendoza.desc": "AmericaMendoza",
    "schema.enum.emailtimezone.america_menominee.label": "AmericaMenominee",
    "schema.enum.emailtimezone.america_menominee.desc": "AmericaMenominee",
    "schema.enum.emailtimezone.america_merida.label": "AmericaMerida",
    "schema.enum.emailtimezone.america_merida.desc": "AmericaMerida",
    "schema.enum.emailtimezone.america_metlakatla.label": "AmericaMetlakatla",
    "schema.enum.emailtimezone.america_metlakatla.desc": "AmericaMetlakatla",
    "schema.enum.emailtimezone.america_mexico_city.label": "AmericaMexico_City",
    "schema.enum.emailtimezone.america_mexico_city.desc": "AmericaMexico_City",
    "schema.enum.emailtimezone.america_miquelon.label": "AmericaMiquelon",
    "schema.enum.emailtimezone.america_miquelon.desc": "AmericaMiquelon",
    "schema.enum.emailtimezone.america_moncton.label": "AmericaMoncton",
    "schema.enum.emailtimezone.america_moncton.desc": "AmericaMoncton",
    "schema.enum.emailtimezone.america_monterrey.label": "AmericaMonterrey",
    "schema.enum.emailtimezone.america_monterrey.desc": "AmericaMonterrey",
    "schema.enum.emailtimezone.america_montevideo.label": "AmericaMontevideo",
    "schema.enum.emailtimezone.america_montevideo.desc": "AmericaMontevideo",
    "schema.enum.emailtimezone.america_montreal.label": "AmericaMontreal",
    "schema.enum.emailtimezone.america_montreal.desc": "AmericaMontreal",
    "schema.enum.emailtimezone.america_montserrat.label": "AmericaMontserrat",
    "schema.enum.emailtimezone.america_montserrat.desc": "AmericaMontserrat",
    "schema.enum.emailtimezone.america_nassau.label": "AmericaNassau",
    "schema.enum.emailtimezone.america_nassau.desc": "AmericaNassau",
    "schema.enum.emailtimezone.america_new_york.label": "AmericaNew_York",
    "schema.enum.emailtimezone.america_new_york.desc": "AmericaNew_York",
    "schema.enum.emailtimezone.america_nipigon.label": "AmericaNipigon",
    "schema.enum.emailtimezone.america_nipigon.desc": "AmericaNipigon",
    "schema.enum.emailtimezone.america_nome.label": "AmericaNome",
    "schema.enum.emailtimezone.america_nome.desc": "AmericaNome",
    "schema.enum.emailtimezone.america_noronha.label": "AmericaNoronha",
    "schema.enum.emailtimezone.america_noronha.desc": "AmericaNoronha",
    "schema.enum.emailtimezone.america_north_dakota_beulah.label": "AmericaNorth_DakotaBeulah",
    "schema.enum.emailtimezone.america_north_dakota_beulah.desc": "AmericaNorth_DakotaBeulah",
    "schema.enum.emailtimezone.america_north_dakota_center.label": "AmericaNorth_DakotaCenter",
    "schema.enum.emailtimezone.america_north_dakota_center.desc": "AmericaNorth_DakotaCenter",
    "schema.enum.emailtimezone.america_north_dakota_new_salem.label": "AmericaNorth_DakotaNew_Salem",
    "schema.enum.emailtimezone.america_north_dakota_new_salem.desc": "AmericaNorth_DakotaNew_Salem",
    "schema.enum.emailtimezone.america_ojinaga.label": "AmericaOjinaga",
    "schema.enum.emailtimezone.america_ojinaga.desc": "AmericaOjinaga",
    "schema.enum.emailtimezone.america_panama.label": "AmericaPanama",
    "schema.enum.emailtimezone.america_panama.desc": "AmericaPanama",
    "schema.enum.emailtimezone.america_pangnirtung.label": "AmericaPangnirtung",
    "schema.enum.emailtimezone.america_pangnirtung.desc": "AmericaPangnirtung",
    "schema.enum.emailtimezone.america_paramaribo.label": "AmericaParamaribo",
    "schema.enum.emailtimezone.america_paramaribo.desc": "AmericaParamaribo",
    "schema.enum.emailtimezone.america_phoenix.label": "AmericaPhoenix",
    "schema.enum.emailtimezone.america_phoenix.desc": "AmericaPhoenix",
    "schema.enum.emailtimezone.america_port_minus_au_minus_prince.label": "AmericaPortauPrince",
    "schema.enum.emailtimezone.america_port_minus_au_minus_prince.desc": "AmericaPortauPrince",
    "schema.enum.emailtimezone.america_port_of_spain.label": "AmericaPort_of_Spain",
    "schema.enum.emailtimezone.america_port_of_spain.desc": "AmericaPort_of_Spain",
    "schema.enum.emailtimezone.america_porto_acre.label": "AmericaPorto_Acre",
    "schema.enum.emailtimezone.america_porto_acre.desc": "AmericaPorto_Acre",
    "schema.enum.emailtimezone.america_porto_velho.label": "AmericaPorto_Velho",
    "schema.enum.emailtimezone.america_porto_velho.desc": "AmericaPorto_Velho",
    "schema.enum.emailtimezone.america_puerto_rico.label": "AmericaPuerto_Rico",
    "schema.enum.emailtimezone.america_puerto_rico.desc": "AmericaPuerto_Rico",
    "schema.enum.emailtimezone.america_punta_arenas.label": "AmericaPunta_Arenas",
    "schema.enum.emailtimezone.america_punta_arenas.desc": "AmericaPunta_Arenas",
    "schema.enum.emailtimezone.america_rainy_river.label": "AmericaRainy_River",
    "schema.enum.emailtimezone.america_rainy_river.desc": "AmericaRainy_River",
    "schema.enum.emailtimezone.america_rankin_inlet.label": "AmericaRankin_Inlet",
    "schema.enum.emailtimezone.america_rankin_inlet.desc": "AmericaRankin_Inlet",
    "schema.enum.emailtimezone.america_recife.label": "AmericaRecife",
    "schema.enum.emailtimezone.america_recife.desc": "AmericaRecife",
    "schema.enum.emailtimezone.america_regina.label": "AmericaRegina",
    "schema.enum.emailtimezone.america_regina.desc": "AmericaRegina",
    "schema.enum.emailtimezone.america_resolute.label": "AmericaResolute",
    "schema.enum.emailtimezone.america_resolute.desc": "AmericaResolute",
    "schema.enum.emailtimezone.america_rio_branco.label": "AmericaRio_Branco",
    "schema.enum.emailtimezone.america_rio_branco.desc": "AmericaRio_Branco",
    "schema.enum.emailtimezone.america_rosario.label": "AmericaRosario",
    "schema.enum.emailtimezone.america_rosario.desc": "AmericaRosario",
    "schema.enum.emailtimezone.america_santa_isabel.label": "AmericaSanta_Isabel",
    "schema.enum.emailtimezone.america_santa_isabel.desc": "AmericaSanta_Isabel",
    "schema.enum.emailtimezone.america_santarem.label": "AmericaSantarem",
    "schema.enum.emailtimezone.america_santarem.desc": "AmericaSantarem",
    "schema.enum.emailtimezone.america_santiago.label": "AmericaSantiago",
    "schema.enum.emailtimezone.america_santiago.desc": "AmericaSantiago",
    "schema.enum.emailtimezone.america_santo_domingo.label": "AmericaSanto_Domingo",
    "schema.enum.emailtimezone.america_santo_domingo.desc": "AmericaSanto_Domingo",
    "schema.enum.emailtimezone.america_sao_paulo.label": "AmericaSao_Paulo",
    "schema.enum.emailtimezone.america_sao_paulo.desc": "AmericaSao_Paulo",
    "schema.enum.emailtimezone.america_scoresbysund.label": "AmericaScoresbysund",
    "schema.enum.emailtimezone.america_scoresbysund.desc": "AmericaScoresbysund",
    "schema.enum.emailtimezone.america_shiprock.label": "AmericaShiprock",
    "schema.enum.emailtimezone.america_shiprock.desc": "AmericaShiprock",
    "schema.enum.emailtimezone.america_sitka.label": "AmericaSitka",
    "schema.enum.emailtimezone.america_sitka.desc": "AmericaSitka",
    "schema.enum.emailtimezone.america_st_barthelemy.label": "AmericaSt_Barthelemy",
    "schema.enum.emailtimezone.america_st_barthelemy.desc": "AmericaSt_Barthelemy",
    "schema.enum.emailtimezone.america_st_johns.label": "AmericaSt_Johns",
    "schema.enum.emailtimezone.america_st_johns.desc": "AmericaSt_Johns",
    "schema.enum.emailtimezone.america_st_kitts.label": "AmericaSt_Kitts",
    "schema.enum.emailtimezone.america_st_kitts.desc": "AmericaSt_Kitts",
    "schema.enum.emailtimezone.america_st_lucia.label": "AmericaSt_Lucia",
    "schema.enum.emailtimezone.america_st_lucia.desc": "AmericaSt_Lucia",
    "schema.enum.emailtimezone.america_st_thomas.label": "AmericaSt_Thomas",
    "schema.enum.emailtimezone.america_st_thomas.desc": "AmericaSt_Thomas",
    "schema.enum.emailtimezone.america_st_vincent.label": "AmericaSt_Vincent",
    "schema.enum.emailtimezone.america_st_vincent.desc": "AmericaSt_Vincent",
    "schema.enum.emailtimezone.america_swift_current.label": "AmericaSwift_Current",
    "schema.enum.emailtimezone.america_swift_current.desc": "AmericaSwift_Current",
    "schema.enum.emailtimezone.america_tegucigalpa.label": "AmericaTegucigalpa",
    "schema.enum.emailtimezone.america_tegucigalpa.desc": "AmericaTegucigalpa",
    "schema.enum.emailtimezone.america_thule.label": "AmericaThule",
    "schema.enum.emailtimezone.america_thule.desc": "AmericaThule",
    "schema.enum.emailtimezone.america_thunder_bay.label": "AmericaThunder_Bay",
    "schema.enum.emailtimezone.america_thunder_bay.desc": "AmericaThunder_Bay",
    "schema.enum.emailtimezone.america_tijuana.label": "AmericaTijuana",
    "schema.enum.emailtimezone.america_tijuana.desc": "AmericaTijuana",
    "schema.enum.emailtimezone.america_toronto.label": "AmericaToronto",
    "schema.enum.emailtimezone.america_toronto.desc": "AmericaToronto",
    "schema.enum.emailtimezone.america_tortola.label": "AmericaTortola",
    "schema.enum.emailtimezone.america_tortola.desc": "AmericaTortola",
    "schema.enum.emailtimezone.america_vancouver.label": "AmericaVancouver",
    "schema.enum.emailtimezone.america_vancouver.desc": "AmericaVancouver",
    "schema.enum.emailtimezone.america_virgin.label": "AmericaVirgin",
    "schema.enum.emailtimezone.america_virgin.desc": "AmericaVirgin",
    "schema.enum.emailtimezone.america_whitehorse.label": "AmericaWhitehorse",
    "schema.enum.emailtimezone.america_whitehorse.desc": "AmericaWhitehorse",
    "schema.enum.emailtimezone.america_winnipeg.label": "AmericaWinnipeg",
    "schema.enum.emailtimezone.america_winnipeg.desc": "AmericaWinnipeg",
    "schema.enum.emailtimezone.america_yakutat.label": "AmericaYakutat",
    "schema.enum.emailtimezone.america_yakutat.desc": "AmericaYakutat",
    "schema.enum.emailtimezone.america_yellowknife.label": "AmericaYellowknife",
    "schema.enum.emailtimezone.america_yellowknife.desc": "AmericaYellowknife",
    "schema.enum.emailtimezone.antarctica_casey.label": "AntarcticaCasey",
    "schema.enum.emailtimezone.antarctica_casey.desc": "AntarcticaCasey",
    "schema.enum.emailtimezone.antarctica_davis.label": "AntarcticaDavis",
    "schema.enum.emailtimezone.antarctica_davis.desc": "AntarcticaDavis",
    "schema.enum.emailtimezone.antarctica_dumontdurville.label": "AntarcticaDumontDUrville",
    "schema.enum.emailtimezone.antarctica_dumontdurville.desc": "AntarcticaDumontDUrville",
    "schema.enum.emailtimezone.antarctica_macquarie.label": "AntarcticaMacquarie",
    "schema.enum.emailtimezone.antarctica_macquarie.desc": "AntarcticaMacquarie",
    "schema.enum.emailtimezone.antarctica_mawson.label": "AntarcticaMawson",
    "schema.enum.emailtimezone.antarctica_mawson.desc": "AntarcticaMawson",
    "schema.enum.emailtimezone.antarctica_mcmurdo.label": "AntarcticaMcMurdo",
    "schema.enum.emailtimezone.antarctica_mcmurdo.desc": "AntarcticaMcMurdo",
    "schema.enum.emailtimezone.antarctica_palmer.label": "AntarcticaPalmer",
    "schema.enum.emailtimezone.antarctica_palmer.desc": "AntarcticaPalmer",
    "schema.enum.emailtimezone.antarctica_rothera.label": "AntarcticaRothera",
    "schema.enum.emailtimezone.antarctica_rothera.desc": "AntarcticaRothera",
    "schema.enum.emailtimezone.antarctica_south_pole.label": "AntarcticaSouth_Pole",
    "schema.enum.emailtimezone.antarctica_south_pole.desc": "AntarcticaSouth_Pole",
    "schema.enum.emailtimezone.antarctica_syowa.label": "AntarcticaSyowa",
    "schema.enum.emailtimezone.antarctica_syowa.desc": "AntarcticaSyowa",
    "schema.enum.emailtimezone.antarctica_troll.label": "AntarcticaTroll",
    "schema.enum.emailtimezone.antarctica_troll.desc": "AntarcticaTroll",
    "schema.enum.emailtimezone.antarctica_vostok.label": "AntarcticaVostok",
    "schema.enum.emailtimezone.antarctica_vostok.desc": "AntarcticaVostok",
    "schema.enum.emailtimezone.arctic_longyearbyen.label": "ArcticLongyearbyen",
    "schema.enum.emailtimezone.arctic_longyearbyen.desc": "ArcticLongyearbyen",
    "schema.enum.emailtimezone.asia_aden.label": "AsiaAden",
    "schema.enum.emailtimezone.asia_aden.desc": "AsiaAden",
    "schema.enum.emailtimezone.asia_almaty.label": "AsiaAlmaty",
    "schema.enum.emailtimezone.asia_almaty.desc": "AsiaAlmaty",
    "schema.enum.emailtimezone.asia_amman.label": "AsiaAmman",
    "schema.enum.emailtimezone.asia_amman.desc": "AsiaAmman",
    "schema.enum.emailtimezone.asia_anadyr.label": "AsiaAnadyr",
    "schema.enum.emailtimezone.asia_anadyr.desc": "AsiaAnadyr",
    "schema.enum.emailtimezone.asia_aqtau.label": "AsiaAqtau",
    "schema.enum.emailtimezone.asia_aqtau.desc": "AsiaAqtau",
    "schema.enum.emailtimezone.asia_aqtobe.label": "AsiaAqtobe",
    "schema.enum.emailtimezone.asia_aqtobe.desc": "AsiaAqtobe",
    "schema.enum.emailtimezone.asia_ashgabat.label": "AsiaAshgabat",
    "schema.enum.emailtimezone.asia_ashgabat.desc": "AsiaAshgabat",
    "schema.enum.emailtimezone.asia_ashkhabad.label": "AsiaAshkhabad",
    "schema.enum.emailtimezone.asia_ashkhabad.desc": "AsiaAshkhabad",
    "schema.enum.emailtimezone.asia_atyrau.label": "AsiaAtyrau",
    "schema.enum.emailtimezone.asia_atyrau.desc": "AsiaAtyrau",
    "schema.enum.emailtimezone.asia_baghdad.label": "AsiaBaghdad",
    "schema.enum.emailtimezone.asia_baghdad.desc": "AsiaBaghdad",
    "schema.enum.emailtimezone.asia_bahrain.label": "AsiaBahrain",
    "schema.enum.emailtimezone.asia_bahrain.desc": "AsiaBahrain",
    "schema.enum.emailtimezone.asia_baku.label": "AsiaBaku",
    "schema.enum.emailtimezone.asia_baku.desc": "AsiaBaku",
    "schema.enum.emailtimezone.asia_bangkok.label": "AsiaBangkok",
    "schema.enum.emailtimezone.asia_bangkok.desc": "AsiaBangkok",
    "schema.enum.emailtimezone.asia_barnaul.label": "AsiaBarnaul",
    "schema.enum.emailtimezone.asia_barnaul.desc": "AsiaBarnaul",
    "schema.enum.emailtimezone.asia_beirut.label": "AsiaBeirut",
    "schema.enum.emailtimezone.asia_beirut.desc": "AsiaBeirut",
    "schema.enum.emailtimezone.asia_bishkek.label": "AsiaBishkek",
    "schema.enum.emailtimezone.asia_bishkek.desc": "AsiaBishkek",
    "schema.enum.emailtimezone.asia_brunei.label": "AsiaBrunei",
    "schema.enum.emailtimezone.asia_brunei.desc": "AsiaBrunei",
    "schema.enum.emailtimezone.asia_calcutta.label": "AsiaCalcutta",
    "schema.enum.emailtimezone.asia_calcutta.desc": "AsiaCalcutta",
    "schema.enum.emailtimezone.asia_chita.label": "AsiaChita",
    "schema.enum.emailtimezone.asia_chita.desc": "AsiaChita",
    "schema.enum.emailtimezone.asia_choibalsan.label": "AsiaChoibalsan",
    "schema.enum.emailtimezone.asia_choibalsan.desc": "AsiaChoibalsan",
    "schema.enum.emailtimezone.asia_chongqing.label": "AsiaChongqing",
    "schema.enum.emailtimezone.asia_chongqing.desc": "AsiaChongqing",
    "schema.enum.emailtimezone.asia_chungking.label": "AsiaChungking",
    "schema.enum.emailtimezone.asia_chungking.desc": "AsiaChungking",
    "schema.enum.emailtimezone.asia_colombo.label": "AsiaColombo",
    "schema.enum.emailtimezone.asia_colombo.desc": "AsiaColombo",
    "schema.enum.emailtimezone.asia_dacca.label": "AsiaDacca",
    "schema.enum.emailtimezone.asia_dacca.desc": "AsiaDacca",
    "schema.enum.emailtimezone.asia_damascus.label": "AsiaDamascus",
    "schema.enum.emailtimezone.asia_damascus.desc": "AsiaDamascus",
    "schema.enum.emailtimezone.asia_dhaka.label": "AsiaDhaka",
    "schema.enum.emailtimezone.asia_dhaka.desc": "AsiaDhaka",
    "schema.enum.emailtimezone.asia_dili.label": "AsiaDili",
    "schema.enum.emailtimezone.asia_dili.desc": "AsiaDili",
    "schema.enum.emailtimezone.asia_dubai.label": "AsiaDubai",
    "schema.enum.emailtimezone.asia_dubai.desc": "AsiaDubai",
    "schema.enum.emailtimezone.asia_dushanbe.label": "AsiaDushanbe",
    "schema.enum.emailtimezone.asia_dushanbe.desc": "AsiaDushanbe",
    "schema.enum.emailtimezone.asia_famagusta.label": "AsiaFamagusta",
    "schema.enum.emailtimezone.asia_famagusta.desc": "AsiaFamagusta",
    "schema.enum.emailtimezone.asia_gaza.label": "AsiaGaza",
    "schema.enum.emailtimezone.asia_gaza.desc": "AsiaGaza",
    "schema.enum.emailtimezone.asia_harbin.label": "AsiaHarbin",
    "schema.enum.emailtimezone.asia_harbin.desc": "AsiaHarbin",
    "schema.enum.emailtimezone.asia_hebron.label": "AsiaHebron",
    "schema.enum.emailtimezone.asia_hebron.desc": "AsiaHebron",
    "schema.enum.emailtimezone.asia_ho_chi_minh.label": "AsiaHo_Chi_Minh",
    "schema.enum.emailtimezone.asia_ho_chi_minh.desc": "AsiaHo_Chi_Minh",
    "schema.enum.emailtimezone.asia_hong_kong.label": "AsiaHong_Kong",
    "schema.enum.emailtimezone.asia_hong_kong.desc": "AsiaHong_Kong",
    "schema.enum.emailtimezone.asia_hovd.label": "AsiaHovd",
    "schema.enum.emailtimezone.asia_hovd.desc": "AsiaHovd",
    "schema.enum.emailtimezone.asia_irkutsk.label": "AsiaIrkutsk",
    "schema.enum.emailtimezone.asia_irkutsk.desc": "AsiaIrkutsk",
    "schema.enum.emailtimezone.asia_istanbul.label": "AsiaIstanbul",
    "schema.enum.emailtimezone.asia_istanbul.desc": "AsiaIstanbul",
    "schema.enum.emailtimezone.asia_jakarta.label": "AsiaJakarta",
    "schema.enum.emailtimezone.asia_jakarta.desc": "AsiaJakarta",
    "schema.enum.emailtimezone.asia_jayapura.label": "AsiaJayapura",
    "schema.enum.emailtimezone.asia_jayapura.desc": "AsiaJayapura",
    "schema.enum.emailtimezone.asia_jerusalem.label": "AsiaJerusalem",
    "schema.enum.emailtimezone.asia_jerusalem.desc": "AsiaJerusalem",
    "schema.enum.emailtimezone.asia_kabul.label": "AsiaKabul",
    "schema.enum.emailtimezone.asia_kabul.desc": "AsiaKabul",
    "schema.enum.emailtimezone.asia_kamchatka.label": "AsiaKamchatka",
    "schema.enum.emailtimezone.asia_kamchatka.desc": "AsiaKamchatka",
    "schema.enum.emailtimezone.asia_karachi.label": "AsiaKarachi",
    "schema.enum.emailtimezone.asia_karachi.desc": "AsiaKarachi",
    "schema.enum.emailtimezone.asia_kashgar.label": "AsiaKashgar",
    "schema.enum.emailtimezone.asia_kashgar.desc": "AsiaKashgar",
    "schema.enum.emailtimezone.asia_kathmandu.label": "AsiaKathmandu",
    "schema.enum.emailtimezone.asia_kathmandu.desc": "AsiaKathmandu",
    "schema.enum.emailtimezone.asia_katmandu.label": "AsiaKatmandu",
    "schema.enum.emailtimezone.asia_katmandu.desc": "AsiaKatmandu",
    "schema.enum.emailtimezone.asia_khandyga.label": "AsiaKhandyga",
    "schema.enum.emailtimezone.asia_khandyga.desc": "AsiaKhandyga",
    "schema.enum.emailtimezone.asia_kolkata.label": "AsiaKolkata",
    "schema.enum.emailtimezone.asia_kolkata.desc": "AsiaKolkata",
    "schema.enum.emailtimezone.asia_krasnoyarsk.label": "AsiaKrasnoyarsk",
    "schema.enum.emailtimezone.asia_krasnoyarsk.desc": "AsiaKrasnoyarsk",
    "schema.enum.emailtimezone.asia_kuala_lumpur.label": "AsiaKuala_Lumpur",
    "schema.enum.emailtimezone.asia_kuala_lumpur.desc": "AsiaKuala_Lumpur",
    "schema.enum.emailtimezone.asia_kuching.label": "AsiaKuching",
    "schema.enum.emailtimezone.asia_kuching.desc": "AsiaKuching",
    "schema.enum.emailtimezone.asia_kuwait.label": "AsiaKuwait",
    "schema.enum.emailtimezone.asia_kuwait.desc": "AsiaKuwait",
    "schema.enum.emailtimezone.asia_macao.label": "AsiaMacao",
    "schema.enum.emailtimezone.asia_macao.desc": "AsiaMacao",
    "schema.enum.emailtimezone.asia_macau.label": "AsiaMacau",
    "schema.enum.emailtimezone.asia_macau.desc": "AsiaMacau",
    "schema.enum.emailtimezone.asia_magadan.label": "AsiaMagadan",
    "schema.enum.emailtimezone.asia_magadan.desc": "AsiaMagadan",
    "schema.enum.emailtimezone.asia_makassar.label": "AsiaMakassar",
    "schema.enum.emailtimezone.asia_makassar.desc": "AsiaMakassar",
    "schema.enum.emailtimezone.asia_manila.label": "AsiaManila",
    "schema.enum.emailtimezone.asia_manila.desc": "AsiaManila",
    "schema.enum.emailtimezone.asia_muscat.label": "AsiaMuscat",
    "schema.enum.emailtimezone.asia_muscat.desc": "AsiaMuscat",
    "schema.enum.emailtimezone.asia_nicosia.label": "AsiaNicosia",
    "schema.enum.emailtimezone.asia_nicosia.desc": "AsiaNicosia",
    "schema.enum.emailtimezone.asia_novokuznetsk.label": "AsiaNovokuznetsk",
    "schema.enum.emailtimezone.asia_novokuznetsk.desc": "AsiaNovokuznetsk",
    "schema.enum.emailtimezone.asia_novosibirsk.label": "AsiaNovosibirsk",
    "schema.enum.emailtimezone.asia_novosibirsk.desc": "AsiaNovosibirsk",
    "schema.enum.emailtimezone.asia_omsk.label": "AsiaOmsk",
    "schema.enum.emailtimezone.asia_omsk.desc": "AsiaOmsk",
    "schema.enum.emailtimezone.asia_oral.label": "AsiaOral",
    "schema.enum.emailtimezone.asia_oral.desc": "AsiaOral",
    "schema.enum.emailtimezone.asia_phnom_penh.label": "AsiaPhnom_Penh",
    "schema.enum.emailtimezone.asia_phnom_penh.desc": "AsiaPhnom_Penh",
    "schema.enum.emailtimezone.asia_pontianak.label": "AsiaPontianak",
    "schema.enum.emailtimezone.asia_pontianak.desc": "AsiaPontianak",
    "schema.enum.emailtimezone.asia_pyongyang.label": "AsiaPyongyang",
    "schema.enum.emailtimezone.asia_pyongyang.desc": "AsiaPyongyang",
    "schema.enum.emailtimezone.asia_qatar.label": "AsiaQatar",
    "schema.enum.emailtimezone.asia_qatar.desc": "AsiaQatar",
    "schema.enum.emailtimezone.asia_qostanay.label": "AsiaQostanay",
    "schema.enum.emailtimezone.asia_qostanay.desc": "AsiaQostanay",
    "schema.enum.emailtimezone.asia_qyzylorda.label": "AsiaQyzylorda",
    "schema.enum.emailtimezone.asia_qyzylorda.desc": "AsiaQyzylorda",
    "schema.enum.emailtimezone.asia_rangoon.label": "AsiaRangoon",
    "schema.enum.emailtimezone.asia_rangoon.desc": "AsiaRangoon",
    "schema.enum.emailtimezone.asia_riyadh.label": "AsiaRiyadh",
    "schema.enum.emailtimezone.asia_riyadh.desc": "AsiaRiyadh",
    "schema.enum.emailtimezone.asia_saigon.label": "AsiaSaigon",
    "schema.enum.emailtimezone.asia_saigon.desc": "AsiaSaigon",
    "schema.enum.emailtimezone.asia_sakhalin.label": "AsiaSakhalin",
    "schema.enum.emailtimezone.asia_sakhalin.desc": "AsiaSakhalin",
    "schema.enum.emailtimezone.asia_samarkand.label": "AsiaSamarkand",
    "schema.enum.emailtimezone.asia_samarkand.desc": "AsiaSamarkand",
    "schema.enum.emailtimezone.asia_seoul.label": "AsiaSeoul",
    "schema.enum.emailtimezone.asia_seoul.desc": "AsiaSeoul",
    "schema.enum.emailtimezone.asia_shanghai.label": "AsiaShanghai",
    "schema.enum.emailtimezone.asia_shanghai.desc": "AsiaShanghai",
    "schema.enum.emailtimezone.asia_singapore.label": "AsiaSingapore",
    "schema.enum.emailtimezone.asia_singapore.desc": "AsiaSingapore",
    "schema.enum.emailtimezone.asia_srednekolymsk.label": "AsiaSrednekolymsk",
    "schema.enum.emailtimezone.asia_srednekolymsk.desc": "AsiaSrednekolymsk",
    "schema.enum.emailtimezone.asia_taipei.label": "AsiaTaipei",
    "schema.enum.emailtimezone.asia_taipei.desc": "AsiaTaipei",
    "schema.enum.emailtimezone.asia_tashkent.label": "AsiaTashkent",
    "schema.enum.emailtimezone.asia_tashkent.desc": "AsiaTashkent",
    "schema.enum.emailtimezone.asia_tbilisi.label": "AsiaTbilisi",
    "schema.enum.emailtimezone.asia_tbilisi.desc": "AsiaTbilisi",
    "schema.enum.emailtimezone.asia_tehran.label": "AsiaTehran",
    "schema.enum.emailtimezone.asia_tehran.desc": "AsiaTehran",
    "schema.enum.emailtimezone.asia_tel_aviv.label": "AsiaTel_Aviv",
    "schema.enum.emailtimezone.asia_tel_aviv.desc": "AsiaTel_Aviv",
    "schema.enum.emailtimezone.asia_thimbu.label": "AsiaThimbu",
    "schema.enum.emailtimezone.asia_thimbu.desc": "AsiaThimbu",
    "schema.enum.emailtimezone.asia_thimphu.label": "AsiaThimphu",
    "schema.enum.emailtimezone.asia_thimphu.desc": "AsiaThimphu",
    "schema.enum.emailtimezone.asia_tokyo.label": "AsiaTokyo",
    "schema.enum.emailtimezone.asia_tokyo.desc": "AsiaTokyo",
    "schema.enum.emailtimezone.asia_tomsk.label": "AsiaTomsk",
    "schema.enum.emailtimezone.asia_tomsk.desc": "AsiaTomsk",
    "schema.enum.emailtimezone.asia_ujung_pandang.label": "AsiaUjung_Pandang",
    "schema.enum.emailtimezone.asia_ujung_pandang.desc": "AsiaUjung_Pandang",
    "schema.enum.emailtimezone.asia_ulaanbaatar.label": "AsiaUlaanbaatar",
    "schema.enum.emailtimezone.asia_ulaanbaatar.desc": "AsiaUlaanbaatar",
    "schema.enum.emailtimezone.asia_ulan_bator.label": "AsiaUlan_Bator",
    "schema.enum.emailtimezone.asia_ulan_bator.desc": "AsiaUlan_Bator",
    "schema.enum.emailtimezone.asia_urumqi.label": "AsiaUrumqi",
    "schema.enum.emailtimezone.asia_urumqi.desc": "AsiaUrumqi",
    "schema.enum.emailtimezone.asia_ust_minus_nera.label": "AsiaUstNera",
    "schema.enum.emailtimezone.asia_ust_minus_nera.desc": "AsiaUstNera",
    "schema.enum.emailtimezone.asia_vientiane.label": "AsiaVientiane",
    "schema.enum.emailtimezone.asia_vientiane.desc": "AsiaVientiane",
    "schema.enum.emailtimezone.asia_vladivostok.label": "AsiaVladivostok",
    "schema.enum.emailtimezone.asia_vladivostok.desc": "AsiaVladivostok",
    "schema.enum.emailtimezone.asia_yakutsk.label": "AsiaYakutsk",
    "schema.enum.emailtimezone.asia_yakutsk.desc": "AsiaYakutsk",
    "schema.enum.emailtimezone.asia_yangon.label": "AsiaYangon",
    "schema.enum.emailtimezone.asia_yangon.desc": "AsiaYangon",
    "schema.enum.emailtimezone.asia_yekaterinburg.label": "AsiaYekaterinburg",
    "schema.enum.emailtimezone.asia_yekaterinburg.desc": "AsiaYekaterinburg",
    "schema.enum.emailtimezone.asia_yerevan.label": "AsiaYerevan",
    "schema.enum.emailtimezone.asia_yerevan.desc": "AsiaYerevan",
    "schema.enum.emailtimezone.atlantic_azores.label": "AtlanticAzores",
    "schema.enum.emailtimezone.atlantic_azores.desc": "AtlanticAzores",
    "schema.enum.emailtimezone.atlantic_bermuda.label": "AtlanticBermuda",
    "schema.enum.emailtimezone.atlantic_bermuda.desc": "AtlanticBermuda",
    "schema.enum.emailtimezone.atlantic_canary.label": "AtlanticCanary",
    "schema.enum.emailtimezone.atlantic_canary.desc": "AtlanticCanary",
    "schema.enum.emailtimezone.atlantic_cape_verde.label": "AtlanticCape_Verde",
    "schema.enum.emailtimezone.atlantic_cape_verde.desc": "AtlanticCape_Verde",
    "schema.enum.emailtimezone.atlantic_faeroe.label": "AtlanticFaeroe",
    "schema.enum.emailtimezone.atlantic_faeroe.desc": "AtlanticFaeroe",
    "schema.enum.emailtimezone.atlantic_faroe.label": "AtlanticFaroe",
    "schema.enum.emailtimezone.atlantic_faroe.desc": "AtlanticFaroe",
    "schema.enum.emailtimezone.atlantic_jan_mayen.label": "AtlanticJan_Mayen",
    "schema.enum.emailtimezone.atlantic_jan_mayen.desc": "AtlanticJan_Mayen",
    "schema.enum.emailtimezone.atlantic_madeira.label": "AtlanticMadeira",
    "schema.enum.emailtimezone.atlantic_madeira.desc": "AtlanticMadeira",
    "schema.enum.emailtimezone.atlantic_reykjavik.label": "AtlanticReykjavik",
    "schema.enum.emailtimezone.atlantic_reykjavik.desc": "AtlanticReykjavik",
    "schema.enum.emailtimezone.atlantic_south_georgia.label": "AtlanticSouth_Georgia",
    "schema.enum.emailtimezone.atlantic_south_georgia.desc": "AtlanticSouth_Georgia",
    "schema.enum.emailtimezone.atlantic_st_helena.label": "AtlanticSt_Helena",
    "schema.enum.emailtimezone.atlantic_st_helena.desc": "AtlanticSt_Helena",
    "schema.enum.emailtimezone.atlantic_stanley.label": "AtlanticStanley",
    "schema.enum.emailtimezone.atlantic_stanley.desc": "AtlanticStanley",
    "schema.enum.emailtimezone.australia_act.label": "AustraliaACT",
    "schema.enum.emailtimezone.australia_act.desc": "AustraliaACT",
    "schema.enum.emailtimezone.australia_adelaide.label": "AustraliaAdelaide",
    "schema.enum.emailtimezone.australia_adelaide.desc": "AustraliaAdelaide",
    "schema.enum.emailtimezone.australia_brisbane.label": "AustraliaBrisbane",
    "schema.enum.emailtimezone.australia_brisbane.desc": "AustraliaBrisbane",
    "schema.enum.emailtimezone.australia_broken_hill.label": "AustraliaBroken_Hill",
    "schema.enum.emailtimezone.australia_broken_hill.desc": "AustraliaBroken_Hill",
    "schema.enum.emailtimezone.australia_canberra.label": "AustraliaCanberra",
    "schema.enum.emailtimezone.australia_canberra.desc": "AustraliaCanberra",
    "schema.enum.emailtimezone.australia_currie.label": "AustraliaCurrie",
    "schema.enum.emailtimezone.australia_currie.desc": "AustraliaCurrie",
    "schema.enum.emailtimezone.australia_darwin.label": "AustraliaDarwin",
    "schema.enum.emailtimezone.australia_darwin.desc": "AustraliaDarwin",
    "schema.enum.emailtimezone.australia_eucla.label": "AustraliaEucla",
    "schema.enum.emailtimezone.australia_eucla.desc": "AustraliaEucla",
    "schema.enum.emailtimezone.australia_hobart.label": "AustraliaHobart",
    "schema.enum.emailtimezone.australia_hobart.desc": "AustraliaHobart",
    "schema.enum.emailtimezone.australia_lhi.label": "AustraliaLHI",
    "schema.enum.emailtimezone.australia_lhi.desc": "AustraliaLHI",
    "schema.enum.emailtimezone.australia_lindeman.label": "AustraliaLindeman",
    "schema.enum.emailtimezone.australia_lindeman.desc": "AustraliaLindeman",
    "schema.enum.emailtimezone.australia_lord_howe.label": "AustraliaLord_Howe",
    "schema.enum.emailtimezone.australia_lord_howe.desc": "AustraliaLord_Howe",
    "schema.enum.emailtimezone.australia_melbourne.label": "AustraliaMelbourne",
    "schema.enum.emailtimezone.australia_melbourne.desc": "AustraliaMelbourne",
    "schema.enum.emailtimezone.australia_nsw.label": "AustraliaNSW",
    "schema.enum.emailtimezone.australia_nsw.desc": "AustraliaNSW",
    "schema.enum.emailtimezone.australia_north.label": "AustraliaNorth",
    "schema.enum.emailtimezone.australia_north.desc": "AustraliaNorth",
    "schema.enum.emailtimezone.australia_perth.label": "AustraliaPerth",
    "schema.enum.emailtimezone.australia_perth.desc": "AustraliaPerth",
    "schema.enum.emailtimezone.australia_queensland.label": "AustraliaQueensland",
    "schema.enum.emailtimezone.australia_queensland.desc": "AustraliaQueensland",
    "schema.enum.emailtimezone.australia_south.label": "AustraliaSouth",
    "schema.enum.emailtimezone.australia_south.desc": "AustraliaSouth",
    "schema.enum.emailtimezone.australia_sydney.label": "AustraliaSydney",
    "schema.enum.emailtimezone.australia_sydney.desc": "AustraliaSydney",
    "schema.enum.emailtimezone.australia_tasmania.label": "AustraliaTasmania",
    "schema.enum.emailtimezone.australia_tasmania.desc": "AustraliaTasmania",
    "schema.enum.emailtimezone.australia_victoria.label": "AustraliaVictoria",
    "schema.enum.emailtimezone.australia_victoria.desc": "AustraliaVictoria",
    "schema.enum.emailtimezone.australia_west.label": "AustraliaWest",
    "schema.enum.emailtimezone.australia_west.desc": "AustraliaWest",
    "schema.enum.emailtimezone.australia_yancowinna.label": "AustraliaYancowinna",
    "schema.enum.emailtimezone.australia_yancowinna.desc": "AustraliaYancowinna",
    "schema.enum.emailtimezone.brazil_acre.label": "BrazilAcre",
    "schema.enum.emailtimezone.brazil_acre.desc": "BrazilAcre",
    "schema.enum.emailtimezone.brazil_denoronha.label": "BrazilDeNoronha",
    "schema.enum.emailtimezone.brazil_denoronha.desc": "BrazilDeNoronha",
    "schema.enum.emailtimezone.brazil_east.label": "BrazilEast",
    "schema.enum.emailtimezone.brazil_east.desc": "BrazilEast",
    "schema.enum.emailtimezone.brazil_west.label": "BrazilWest",
    "schema.enum.emailtimezone.brazil_west.desc": "BrazilWest",
    "schema.enum.emailtimezone.cet.label": "CET",
    "schema.enum.emailtimezone.cet.desc": "CET",
    "schema.enum.emailtimezone.cst6cdt.label": "CST6CDT",
    "schema.enum.emailtimezone.cst6cdt.desc": "CST6CDT",
    "schema.enum.emailtimezone.canada_atlantic.label": "CanadaAtlantic",
    "schema.enum.emailtimezone.canada_atlantic.desc": "CanadaAtlantic",
    "schema.enum.emailtimezone.canada_central.label": "CanadaCentral",
    "schema.enum.emailtimezone.canada_central.desc": "CanadaCentral",
    "schema.enum.emailtimezone.canada_eastern.label": "CanadaEastern",
    "schema.enum.emailtimezone.canada_eastern.desc": "CanadaEastern",
    "schema.enum.emailtimezone.canada_mountain.label": "CanadaMountain",
    "schema.enum.emailtimezone.canada_mountain.desc": "CanadaMountain",
    "schema.enum.emailtimezone.canada_newfoundland.label": "CanadaNewfoundland",
    "schema.enum.emailtimezone.canada_newfoundland.desc": "CanadaNewfoundland",
    "schema.enum.emailtimezone.canada_pacific.label": "CanadaPacific",
    "schema.enum.emailtimezone.canada_pacific.desc": "CanadaPacific",
    "schema.enum.emailtimezone.canada_saskatchewan.label": "CanadaSaskatchewan",
    "schema.enum.emailtimezone.canada_saskatchewan.desc": "CanadaSaskatchewan",
    "schema.enum.emailtimezone.canada_yukon.label": "CanadaYukon",
    "schema.enum.emailtimezone.canada_yukon.desc": "CanadaYukon",
    "schema.enum.emailtimezone.chile_continental.label": "ChileContinental",
    "schema.enum.emailtimezone.chile_continental.desc": "ChileContinental",
    "schema.enum.emailtimezone.chile_easterisland.label": "ChileEasterIsland",
    "schema.enum.emailtimezone.chile_easterisland.desc": "ChileEasterIsland",
    "schema.enum.emailtimezone.cuba.label": "Cuba",
    "schema.enum.emailtimezone.cuba.desc": "Cuba",
    "schema.enum.emailtimezone.eet.label": "EET",
    "schema.enum.emailtimezone.eet.desc": "EET",
    "schema.enum.emailtimezone.est.label": "EST",
    "schema.enum.emailtimezone.est.desc": "EST",
    "schema.enum.emailtimezone.est5edt.label": "EST5EDT",
    "schema.enum.emailtimezone.est5edt.desc": "EST5EDT",
    "schema.enum.emailtimezone.egypt.label": "Egypt",
    "schema.enum.emailtimezone.egypt.desc": "Egypt",
    "schema.enum.emailtimezone.eire.label": "Eire",
    "schema.enum.emailtimezone.eire.desc": "Eire",
    "schema.enum.emailtimezone.etc_gmt.label": "EtcGMT",
    "schema.enum.emailtimezone.etc_gmt.desc": "EtcGMT",
    "schema.enum.emailtimezone.etc_gmt_plus_0.label": "EtcGMT+0",
    "schema.enum.emailtimezone.etc_gmt_plus_0.desc": "EtcGMT+0",
    "schema.enum.emailtimezone.etc_gmt_plus_1.label": "EtcGMT+1",
    "schema.enum.emailtimezone.etc_gmt_plus_1.desc": "EtcGMT+1",
    "schema.enum.emailtimezone.etc_gmt_plus_10.label": "EtcGMT+10",
    "schema.enum.emailtimezone.etc_gmt_plus_10.desc": "EtcGMT+10",
    "schema.enum.emailtimezone.etc_gmt_plus_11.label": "EtcGMT+11",
    "schema.enum.emailtimezone.etc_gmt_plus_11.desc": "EtcGMT+11",
    "schema.enum.emailtimezone.etc_gmt_plus_12.label": "EtcGMT+12",
    "schema.enum.emailtimezone.etc_gmt_plus_12.desc": "EtcGMT+12",
    "schema.enum.emailtimezone.etc_gmt_plus_2.label": "EtcGMT+2",
    "schema.enum.emailtimezone.etc_gmt_plus_2.desc": "EtcGMT+2",
    "schema.enum.emailtimezone.etc_gmt_plus_3.label": "EtcGMT+3",
    "schema.enum.emailtimezone.etc_gmt_plus_3.desc": "EtcGMT+3",
    "schema.enum.emailtimezone.etc_gmt_plus_4.label": "EtcGMT+4",
    "schema.enum.emailtimezone.etc_gmt_plus_4.desc": "EtcGMT+4",
    "schema.enum.emailtimezone.etc_gmt_plus_5.label": "EtcGMT+5",
    "schema.enum.emailtimezone.etc_gmt_plus_5.desc": "EtcGMT+5",
    "schema.enum.emailtimezone.etc_gmt_plus_6.label": "EtcGMT+6",
    "schema.enum.emailtimezone.etc_gmt_plus_6.desc": "EtcGMT+6",
    "schema.enum.emailtimezone.etc_gmt_plus_7.label": "EtcGMT+7",
    "schema.enum.emailtimezone.etc_gmt_plus_7.desc": "EtcGMT+7",
    "schema.enum.emailtimezone.etc_gmt_plus_8.label": "EtcGMT+8",
    "schema.enum.emailtimezone.etc_gmt_plus_8.desc": "EtcGMT+8",
    "schema.enum.emailtimezone.etc_gmt_plus_9.label": "EtcGMT+9",
    "schema.enum.emailtimezone.etc_gmt_plus_9.desc": "EtcGMT+9",
    "schema.enum.emailtimezone.etc_gmt_minus_0.label": "EtcGMT0",
    "schema.enum.emailtimezone.etc_gmt_minus_0.desc": "EtcGMT0",
    "schema.enum.emailtimezone.etc_gmt_minus_1.label": "EtcGMT1",
    "schema.enum.emailtimezone.etc_gmt_minus_1.desc": "EtcGMT1",
    "schema.enum.emailtimezone.etc_gmt_minus_10.label": "EtcGMT10",
    "schema.enum.emailtimezone.etc_gmt_minus_10.desc": "EtcGMT10",
    "schema.enum.emailtimezone.etc_gmt_minus_11.label": "EtcGMT11",
    "schema.enum.emailtimezone.etc_gmt_minus_11.desc": "EtcGMT11",
    "schema.enum.emailtimezone.etc_gmt_minus_12.label": "EtcGMT12",
    "schema.enum.emailtimezone.etc_gmt_minus_12.desc": "EtcGMT12",
    "schema.enum.emailtimezone.etc_gmt_minus_13.label": "EtcGMT13",
    "schema.enum.emailtimezone.etc_gmt_minus_13.desc": "EtcGMT13",
    "schema.enum.emailtimezone.etc_gmt_minus_14.label": "EtcGMT14",
    "schema.enum.emailtimezone.etc_gmt_minus_14.desc": "EtcGMT14",
    "schema.enum.emailtimezone.etc_gmt_minus_2.label": "EtcGMT2",
    "schema.enum.emailtimezone.etc_gmt_minus_2.desc": "EtcGMT2",
    "schema.enum.emailtimezone.etc_gmt_minus_3.label": "EtcGMT3",
    "schema.enum.emailtimezone.etc_gmt_minus_3.desc": "EtcGMT3",
    "schema.enum.emailtimezone.etc_gmt_minus_4.label": "EtcGMT4",
    "schema.enum.emailtimezone.etc_gmt_minus_4.desc": "EtcGMT4",
    "schema.enum.emailtimezone.etc_gmt_minus_5.label": "EtcGMT5",
    "schema.enum.emailtimezone.etc_gmt_minus_5.desc": "EtcGMT5",
    "schema.enum.emailtimezone.etc_gmt_minus_6.label": "EtcGMT6",
    "schema.enum.emailtimezone.etc_gmt_minus_6.desc": "EtcGMT6",
    "schema.enum.emailtimezone.etc_gmt_minus_7.label": "EtcGMT7",
    "schema.enum.emailtimezone.etc_gmt_minus_7.desc": "EtcGMT7",
    "schema.enum.emailtimezone.etc_gmt_minus_8.label": "EtcGMT8",
    "schema.enum.emailtimezone.etc_gmt_minus_8.desc": "EtcGMT8",
    "schema.enum.emailtimezone.etc_gmt_minus_9.label": "EtcGMT9",
    "schema.enum.emailtimezone.etc_gmt_minus_9.desc": "EtcGMT9",
    "schema.enum.emailtimezone.etc_gmt0.label": "EtcGMT0",
    "schema.enum.emailtimezone.etc_gmt0.desc": "EtcGMT0",
    "schema.enum.emailtimezone.etc_greenwich.label": "EtcGreenwich",
    "schema.enum.emailtimezone.etc_greenwich.desc": "EtcGreenwich",
    "schema.enum.emailtimezone.etc_uct.label": "EtcUCT",
    "schema.enum.emailtimezone.etc_uct.desc": "EtcUCT",
    "schema.enum.emailtimezone.etc_utc.label": "EtcUTC",
    "schema.enum.emailtimezone.etc_utc.desc": "EtcUTC",
    "schema.enum.emailtimezone.etc_universal.label": "EtcUniversal",
    "schema.enum.emailtimezone.etc_universal.desc": "EtcUniversal",
    "schema.enum.emailtimezone.etc_zulu.label": "EtcZulu",
    "schema.enum.emailtimezone.etc_zulu.desc": "EtcZulu",
    "schema.enum.emailtimezone.europe_amsterdam.label": "EuropeAmsterdam",
    "schema.enum.emailtimezone.europe_amsterdam.desc": "EuropeAmsterdam",
    "schema.enum.emailtimezone.europe_andorra.label": "EuropeAndorra",
    "schema.enum.emailtimezone.europe_andorra.desc": "EuropeAndorra",
    "schema.enum.emailtimezone.europe_astrakhan.label": "EuropeAstrakhan",
    "schema.enum.emailtimezone.europe_astrakhan.desc": "EuropeAstrakhan",
    "schema.enum.emailtimezone.europe_athens.label": "EuropeAthens",
    "schema.enum.emailtimezone.europe_athens.desc": "EuropeAthens",
    "schema.enum.emailtimezone.europe_belfast.label": "EuropeBelfast",
    "schema.enum.emailtimezone.europe_belfast.desc": "EuropeBelfast",
    "schema.enum.emailtimezone.europe_belgrade.label": "EuropeBelgrade",
    "schema.enum.emailtimezone.europe_belgrade.desc": "EuropeBelgrade",
    "schema.enum.emailtimezone.europe_berlin.label": "EuropeBerlin",
    "schema.enum.emailtimezone.europe_berlin.desc": "EuropeBerlin",
    "schema.enum.emailtimezone.europe_bratislava.label": "EuropeBratislava",
    "schema.enum.emailtimezone.europe_bratislava.desc": "EuropeBratislava",
    "schema.enum.emailtimezone.europe_brussels.label": "EuropeBrussels",
    "schema.enum.emailtimezone.europe_brussels.desc": "EuropeBrussels",
    "schema.enum.emailtimezone.europe_bucharest.label": "EuropeBucharest",
    "schema.enum.emailtimezone.europe_bucharest.desc": "EuropeBucharest",
    "schema.enum.emailtimezone.europe_budapest.label": "EuropeBudapest",
    "schema.enum.emailtimezone.europe_budapest.desc": "EuropeBudapest",
    "schema.enum.emailtimezone.europe_busingen.label": "EuropeBusingen",
    "schema.enum.emailtimezone.europe_busingen.desc": "EuropeBusingen",
    "schema.enum.emailtimezone.europe_chisinau.label": "EuropeChisinau",
    "schema.enum.emailtimezone.europe_chisinau.desc": "EuropeChisinau",
    "schema.enum.emailtimezone.europe_copenhagen.label": "EuropeCopenhagen",
    "schema.enum.emailtimezone.europe_copenhagen.desc": "EuropeCopenhagen",
    "schema.enum.emailtimezone.europe_dublin.label": "EuropeDublin",
    "schema.enum.emailtimezone.europe_dublin.desc": "EuropeDublin",
    "schema.enum.emailtimezone.europe_gibraltar.label": "EuropeGibraltar",
    "schema.enum.emailtimezone.europe_gibraltar.desc": "EuropeGibraltar",
    "schema.enum.emailtimezone.europe_guernsey.label": "EuropeGuernsey",
    "schema.enum.emailtimezone.europe_guernsey.desc": "EuropeGuernsey",
    "schema.enum.emailtimezone.europe_helsinki.label": "EuropeHelsinki",
    "schema.enum.emailtimezone.europe_helsinki.desc": "EuropeHelsinki",
    "schema.enum.emailtimezone.europe_isle_of_man.label": "EuropeIsle_of_Man",
    "schema.enum.emailtimezone.europe_isle_of_man.desc": "EuropeIsle_of_Man",
    "schema.enum.emailtimezone.europe_istanbul.label": "EuropeIstanbul",
    "schema.enum.emailtimezone.europe_istanbul.desc": "EuropeIstanbul",
    "schema.enum.emailtimezone.europe_jersey.label": "EuropeJersey",
    "schema.enum.emailtimezone.europe_jersey.desc": "EuropeJersey",
    "schema.enum.emailtimezone.europe_kaliningrad.label": "EuropeKaliningrad",
    "schema.enum.emailtimezone.europe_kaliningrad.desc": "EuropeKaliningrad",
    "schema.enum.emailtimezone.europe_kiev.label": "EuropeKiev",
    "schema.enum.emailtimezone.europe_kiev.desc": "EuropeKiev",
    "schema.enum.emailtimezone.europe_kirov.label": "EuropeKirov",
    "schema.enum.emailtimezone.europe_kirov.desc": "EuropeKirov",
    "schema.enum.emailtimezone.europe_lisbon.label": "EuropeLisbon",
    "schema.enum.emailtimezone.europe_lisbon.desc": "EuropeLisbon",
    "schema.enum.emailtimezone.europe_ljubljana.label": "EuropeLjubljana",
    "schema.enum.emailtimezone.europe_ljubljana.desc": "EuropeLjubljana",
    "schema.enum.emailtimezone.europe_london.label": "EuropeLondon",
    "schema.enum.emailtimezone.europe_london.desc": "EuropeLondon",
    "schema.enum.emailtimezone.europe_luxembourg.label": "EuropeLuxembourg",
    "schema.enum.emailtimezone.europe_luxembourg.desc": "EuropeLuxembourg",
    "schema.enum.emailtimezone.europe_madrid.label": "EuropeMadrid",
    "schema.enum.emailtimezone.europe_madrid.desc": "EuropeMadrid",
    "schema.enum.emailtimezone.europe_malta.label": "EuropeMalta",
    "schema.enum.emailtimezone.europe_malta.desc": "EuropeMalta",
    "schema.enum.emailtimezone.europe_mariehamn.label": "EuropeMariehamn",
    "schema.enum.emailtimezone.europe_mariehamn.desc": "EuropeMariehamn",
    "schema.enum.emailtimezone.europe_minsk.label": "EuropeMinsk",
    "schema.enum.emailtimezone.europe_minsk.desc": "EuropeMinsk",
    "schema.enum.emailtimezone.europe_monaco.label": "EuropeMonaco",
    "schema.enum.emailtimezone.europe_monaco.desc": "EuropeMonaco",
    "schema.enum.emailtimezone.europe_moscow.label": "EuropeMoscow",
    "schema.enum.emailtimezone.europe_moscow.desc": "EuropeMoscow",
    "schema.enum.emailtimezone.europe_nicosia.label": "EuropeNicosia",
    "schema.enum.emailtimezone.europe_nicosia.desc": "EuropeNicosia",
    "schema.enum.emailtimezone.europe_oslo.label": "EuropeOslo",
    "schema.enum.emailtimezone.europe_oslo.desc": "EuropeOslo",
    "schema.enum.emailtimezone.europe_paris.label": "EuropeParis",
    "schema.enum.emailtimezone.europe_paris.desc": "EuropeParis",
    "schema.enum.emailtimezone.europe_podgorica.label": "EuropePodgorica",
    "schema.enum.emailtimezone.europe_podgorica.desc": "EuropePodgorica",
    "schema.enum.emailtimezone.europe_prague.label": "EuropePrague",
    "schema.enum.emailtimezone.europe_prague.desc": "EuropePrague",
    "schema.enum.emailtimezone.europe_riga.label": "EuropeRiga",
    "schema.enum.emailtimezone.europe_riga.desc": "EuropeRiga",
    "schema.enum.emailtimezone.europe_rome.label": "EuropeRome",
    "schema.enum.emailtimezone.europe_rome.desc": "EuropeRome",
    "schema.enum.emailtimezone.europe_samara.label": "EuropeSamara",
    "schema.enum.emailtimezone.europe_samara.desc": "EuropeSamara",
    "schema.enum.emailtimezone.europe_san_marino.label": "EuropeSan_Marino",
    "schema.enum.emailtimezone.europe_san_marino.desc": "EuropeSan_Marino",
    "schema.enum.emailtimezone.europe_sarajevo.label": "EuropeSarajevo",
    "schema.enum.emailtimezone.europe_sarajevo.desc": "EuropeSarajevo",
    "schema.enum.emailtimezone.europe_saratov.label": "EuropeSaratov",
    "schema.enum.emailtimezone.europe_saratov.desc": "EuropeSaratov",
    "schema.enum.emailtimezone.europe_simferopol.label": "EuropeSimferopol",
    "schema.enum.emailtimezone.europe_simferopol.desc": "EuropeSimferopol",
    "schema.enum.emailtimezone.europe_skopje.label": "EuropeSkopje",
    "schema.enum.emailtimezone.europe_skopje.desc": "EuropeSkopje",
    "schema.enum.emailtimezone.europe_sofia.label": "EuropeSofia",
    "schema.enum.emailtimezone.europe_sofia.desc": "EuropeSofia",
    "schema.enum.emailtimezone.europe_stockholm.label": "EuropeStockholm",
    "schema.enum.emailtimezone.europe_stockholm.desc": "EuropeStockholm",
    "schema.enum.emailtimezone.europe_tallinn.label": "EuropeTallinn",
    "schema.enum.emailtimezone.europe_tallinn.desc": "EuropeTallinn",
    "schema.enum.emailtimezone.europe_tirane.label": "EuropeTirane",
    "schema.enum.emailtimezone.europe_tirane.desc": "EuropeTirane",
    "schema.enum.emailtimezone.europe_tiraspol.label": "EuropeTiraspol",
    "schema.enum.emailtimezone.europe_tiraspol.desc": "EuropeTiraspol",
    "schema.enum.emailtimezone.europe_ulyanovsk.label": "EuropeUlyanovsk",
    "schema.enum.emailtimezone.europe_ulyanovsk.desc": "EuropeUlyanovsk",
    "schema.enum.emailtimezone.europe_uzhgorod.label": "EuropeUzhgorod",
    "schema.enum.emailtimezone.europe_uzhgorod.desc": "EuropeUzhgorod",
    "schema.enum.emailtimezone.europe_vaduz.label": "EuropeVaduz",
    "schema.enum.emailtimezone.europe_vaduz.desc": "EuropeVaduz",
    "schema.enum.emailtimezone.europe_vatican.label": "EuropeVatican",
    "schema.enum.emailtimezone.europe_vatican.desc": "EuropeVatican",
    "schema.enum.emailtimezone.europe_vienna.label": "EuropeVienna",
    "schema.enum.emailtimezone.europe_vienna.desc": "EuropeVienna",
    "schema.enum.emailtimezone.europe_vilnius.label": "EuropeVilnius",
    "schema.enum.emailtimezone.europe_vilnius.desc": "EuropeVilnius",
    "schema.enum.emailtimezone.europe_volgograd.label": "EuropeVolgograd",
    "schema.enum.emailtimezone.europe_volgograd.desc": "EuropeVolgograd",
    "schema.enum.emailtimezone.europe_warsaw.label": "EuropeWarsaw",
    "schema.enum.emailtimezone.europe_warsaw.desc": "EuropeWarsaw",
    "schema.enum.emailtimezone.europe_zagreb.label": "EuropeZagreb",
    "schema.enum.emailtimezone.europe_zagreb.desc": "EuropeZagreb",
    "schema.enum.emailtimezone.europe_zaporozhye.label": "EuropeZaporozhye",
    "schema.enum.emailtimezone.europe_zaporozhye.desc": "EuropeZaporozhye",
    "schema.enum.emailtimezone.europe_zurich.label": "EuropeZurich",
    "schema.enum.emailtimezone.europe_zurich.desc": "EuropeZurich",
    "schema.enum.emailtimezone.gb_.label": "GB",
    "schema.enum.emailtimezone.gb_.desc": "GB",
    "schema.enum.emailtimezone.gb_minus_eire.label": "GBEire",
    "schema.enum.emailtimezone.gb_minus_eire.desc": "GBEire",
    "schema.enum.emailtimezone.gmt.label": "GMT",
    "schema.enum.emailtimezone.gmt.desc": "GMT",
    "schema.enum.emailtimezone.gmt_plus_0.label": "GMT+0",
    "schema.enum.emailtimezone.gmt_plus_0.desc": "GMT+0",
    "schema.enum.emailtimezone.gmt_minus_0.label": "GMT0",
    "schema.enum.emailtimezone.gmt_minus_0.desc": "GMT0",
    "schema.enum.emailtimezone.gmt0.label": "GMT0",
    "schema.enum.emailtimezone.gmt0.desc": "GMT0",
    "schema.enum.emailtimezone.greenwich.label": "Greenwich",
    "schema.enum.emailtimezone.greenwich.desc": "Greenwich",
    "schema.enum.emailtimezone.hst.label": "HST",
    "schema.enum.emailtimezone.hst.desc": "HST",
    "schema.enum.emailtimezone.hongkong.label": "Hongkong",
    "schema.enum.emailtimezone.hongkong.desc": "Hongkong",
    "schema.enum.emailtimezone.iceland.label": "Iceland",
    "schema.enum.emailtimezone.iceland.desc": "Iceland",
    "schema.enum.emailtimezone.indian_antananarivo.label": "IndianAntananarivo",
    "schema.enum.emailtimezone.indian_antananarivo.desc": "IndianAntananarivo",
    "schema.enum.emailtimezone.indian_chagos.label": "IndianChagos",
    "schema.enum.emailtimezone.indian_chagos.desc": "IndianChagos",
    "schema.enum.emailtimezone.indian_christmas.label": "IndianChristmas",
    "schema.enum.emailtimezone.indian_christmas.desc": "IndianChristmas",
    "schema.enum.emailtimezone.indian_cocos.label": "IndianCocos",
    "schema.enum.emailtimezone.indian_cocos.desc": "IndianCocos",
    "schema.enum.emailtimezone.indian_comoro.label": "IndianComoro",
    "schema.enum.emailtimezone.indian_comoro.desc": "IndianComoro",
    "schema.enum.emailtimezone.indian_kerguelen.label": "IndianKerguelen",
    "schema.enum.emailtimezone.indian_kerguelen.desc": "IndianKerguelen",
    "schema.enum.emailtimezone.indian_mahe.label": "IndianMahe",
    "schema.enum.emailtimezone.indian_mahe.desc": "IndianMahe",
    "schema.enum.emailtimezone.indian_maldives.label": "IndianMaldives",
    "schema.enum.emailtimezone.indian_maldives.desc": "IndianMaldives",
    "schema.enum.emailtimezone.indian_mauritius.label": "IndianMauritius",
    "schema.enum.emailtimezone.indian_mauritius.desc": "IndianMauritius",
    "schema.enum.emailtimezone.indian_mayotte.label": "IndianMayotte",
    "schema.enum.emailtimezone.indian_mayotte.desc": "IndianMayotte",
    "schema.enum.emailtimezone.indian_reunion.label": "IndianReunion",
    "schema.enum.emailtimezone.indian_reunion.desc": "IndianReunion",
    "schema.enum.emailtimezone.iran.label": "Iran",
    "schema.enum.emailtimezone.iran.desc": "Iran",
    "schema.enum.emailtimezone.israel.label": "Israel",
    "schema.enum.emailtimezone.israel.desc": "Israel",
    "schema.enum.emailtimezone.jamaica.label": "Jamaica",
    "schema.enum.emailtimezone.jamaica.desc": "Jamaica",
    "schema.enum.emailtimezone.japan.label": "Japan",
    "schema.enum.emailtimezone.japan.desc": "Japan",
    "schema.enum.emailtimezone.kwajalein.label": "Kwajalein",
    "schema.enum.emailtimezone.kwajalein.desc": "Kwajalein",
    "schema.enum.emailtimezone.libya.label": "Libya",
    "schema.enum.emailtimezone.libya.desc": "Libya",
    "schema.enum.emailtimezone.met.label": "MET",
    "schema.enum.emailtimezone.met.desc": "MET",
    "schema.enum.emailtimezone.mst.label": "MST",
    "schema.enum.emailtimezone.mst.desc": "MST",
    "schema.enum.emailtimezone.mst7mdt.label": "MST7MDT",
    "schema.enum.emailtimezone.mst7mdt.desc": "MST7MDT",
    "schema.enum.emailtimezone.mexico_bajanorte.label": "MexicoBajaNorte",
    "schema.enum.emailtimezone.mexico_bajanorte.desc": "MexicoBajaNorte",
    "schema.enum.emailtimezone.mexico_bajasur.label": "MexicoBajaSur",
    "schema.enum.emailtimezone.mexico_bajasur.desc": "MexicoBajaSur",
    "schema.enum.emailtimezone.mexico_general.label": "MexicoGeneral",
    "schema.enum.emailtimezone.mexico_general.desc": "MexicoGeneral",
    "schema.enum.emailtimezone.nz.label": "NZ",
    "schema.enum.emailtimezone.nz.desc": "NZ",
    "schema.enum.emailtimezone.nz_minus_chat.label": "NZCHAT",
    "schema.enum.emailtimezone.nz_minus_chat.desc": "NZCHAT",
    "schema.enum.emailtimezone.navajo.label": "Navajo",
    "schema.enum.emailtimezone.navajo.desc": "Navajo",
    "schema.enum.emailtimezone.prc.label": "PRC",
    "schema.enum.emailtimezone.prc.desc": "PRC",
    "schema.enum.emailtimezone.pst8pdt.label": "PST8PDT",
    "schema.enum.emailtimezone.pst8pdt.desc": "PST8PDT",
    "schema.enum.emailtimezone.pacific_apia.label": "PacificApia",
    "schema.enum.emailtimezone.pacific_apia.desc": "PacificApia",
    "schema.enum.emailtimezone.pacific_auckland.label": "PacificAuckland",
    "schema.enum.emailtimezone.pacific_auckland.desc": "PacificAuckland",
    "schema.enum.emailtimezone.pacific_bougainville.label": "PacificBougainville",
    "schema.enum.emailtimezone.pacific_bougainville.desc": "PacificBougainville",
    "schema.enum.emailtimezone.pacific_chatham.label": "PacificChatham",
    "schema.enum.emailtimezone.pacific_chatham.desc": "PacificChatham",
    "schema.enum.emailtimezone.pacific_chuuk.label": "PacificChuuk",
    "schema.enum.emailtimezone.pacific_chuuk.desc": "PacificChuuk",
    "schema.enum.emailtimezone.pacific_easter.label": "PacificEaster",
    "schema.enum.emailtimezone.pacific_easter.desc": "PacificEaster",
    "schema.enum.emailtimezone.pacific_efate.label": "PacificEfate",
    "schema.enum.emailtimezone.pacific_efate.desc": "PacificEfate",
    "schema.enum.emailtimezone.pacific_enderbury.label": "PacificEnderbury",
    "schema.enum.emailtimezone.pacific_enderbury.desc": "PacificEnderbury",
    "schema.enum.emailtimezone.pacific_fakaofo.label": "PacificFakaofo",
    "schema.enum.emailtimezone.pacific_fakaofo.desc": "PacificFakaofo",
    "schema.enum.emailtimezone.pacific_fiji.label": "PacificFiji",
    "schema.enum.emailtimezone.pacific_fiji.desc": "PacificFiji",
    "schema.enum.emailtimezone.pacific_funafuti.label": "PacificFunafuti",
    "schema.enum.emailtimezone.pacific_funafuti.desc": "PacificFunafuti",
    "schema.enum.emailtimezone.pacific_galapagos.label": "PacificGalapagos",
    "schema.enum.emailtimezone.pacific_galapagos.desc": "PacificGalapagos",
    "schema.enum.emailtimezone.pacific_gambier.label": "PacificGambier",
    "schema.enum.emailtimezone.pacific_gambier.desc": "PacificGambier",
    "schema.enum.emailtimezone.pacific_guadalcanal.label": "PacificGuadalcanal",
    "schema.enum.emailtimezone.pacific_guadalcanal.desc": "PacificGuadalcanal",
    "schema.enum.emailtimezone.pacific_guam.label": "PacificGuam",
    "schema.enum.emailtimezone.pacific_guam.desc": "PacificGuam",
    "schema.enum.emailtimezone.pacific_honolulu.label": "PacificHonolulu",
    "schema.enum.emailtimezone.pacific_honolulu.desc": "PacificHonolulu",
    "schema.enum.emailtimezone.pacific_johnston.label": "PacificJohnston",
    "schema.enum.emailtimezone.pacific_johnston.desc": "PacificJohnston",
    "schema.enum.emailtimezone.pacific_kiritimati.label": "PacificKiritimati",
    "schema.enum.emailtimezone.pacific_kiritimati.desc": "PacificKiritimati",
    "schema.enum.emailtimezone.pacific_kosrae.label": "PacificKosrae",
    "schema.enum.emailtimezone.pacific_kosrae.desc": "PacificKosrae",
    "schema.enum.emailtimezone.pacific_kwajalein.label": "PacificKwajalein",
    "schema.enum.emailtimezone.pacific_kwajalein.desc": "PacificKwajalein",
    "schema.enum.emailtimezone.pacific_majuro.label": "PacificMajuro",
    "schema.enum.emailtimezone.pacific_majuro.desc": "PacificMajuro",
    "schema.enum.emailtimezone.pacific_marquesas.label": "PacificMarquesas",
    "schema.enum.emailtimezone.pacific_marquesas.desc": "PacificMarquesas",
    "schema.enum.emailtimezone.pacific_midway.label": "PacificMidway",
    "schema.enum.emailtimezone.pacific_midway.desc": "PacificMidway",
    "schema.enum.emailtimezone.pacific_nauru.label": "PacificNauru",
    "schema.enum.emailtimezone.pacific_nauru.desc": "PacificNauru",
    "schema.enum.emailtimezone.pacific_niue.label": "PacificNiue",
    "schema.enum.emailtimezone.pacific_niue.desc": "PacificNiue",
    "schema.enum.emailtimezone.pacific_norfolk.label": "PacificNorfolk",
    "schema.enum.emailtimezone.pacific_norfolk.desc": "PacificNorfolk",
    "schema.enum.emailtimezone.pacific_noumea.label": "PacificNoumea",
    "schema.enum.emailtimezone.pacific_noumea.desc": "PacificNoumea",
    "schema.enum.emailtimezone.pacific_pago_pago.label": "PacificPago_Pago",
    "schema.enum.emailtimezone.pacific_pago_pago.desc": "PacificPago_Pago",
    "schema.enum.emailtimezone.pacific_palau.label": "PacificPalau",
    "schema.enum.emailtimezone.pacific_palau.desc": "PacificPalau",
    "schema.enum.emailtimezone.pacific_pitcairn.label": "PacificPitcairn",
    "schema.enum.emailtimezone.pacific_pitcairn.desc": "PacificPitcairn",
    "schema.enum.emailtimezone.pacific_pohnpei.label": "PacificPohnpei",
    "schema.enum.emailtimezone.pacific_pohnpei.desc": "PacificPohnpei",
    "schema.enum.emailtimezone.pacific_ponape.label": "PacificPonape",
    "schema.enum.emailtimezone.pacific_ponape.desc": "PacificPonape",
    "schema.enum.emailtimezone.pacific_port_moresby.label": "PacificPort_Moresby",
    "schema.enum.emailtimezone.pacific_port_moresby.desc": "PacificPort_Moresby",
    "schema.enum.emailtimezone.pacific_rarotonga.label": "PacificRarotonga",
    "schema.enum.emailtimezone.pacific_rarotonga.desc": "PacificRarotonga",
    "schema.enum.emailtimezone.pacific_saipan.label": "PacificSaipan",
    "schema.enum.emailtimezone.pacific_saipan.desc": "PacificSaipan",
    "schema.enum.emailtimezone.pacific_samoa.label": "PacificSamoa",
    "schema.enum.emailtimezone.pacific_samoa.desc": "PacificSamoa",
    "schema.enum.emailtimezone.pacific_tahiti.label": "PacificTahiti",
    "schema.enum.emailtimezone.pacific_tahiti.desc": "PacificTahiti",
    "schema.enum.emailtimezone.pacific_tarawa.label": "PacificTarawa",
    "schema.enum.emailtimezone.pacific_tarawa.desc": "PacificTarawa",
    "schema.enum.emailtimezone.pacific_tongatapu.label": "PacificTongatapu",
    "schema.enum.emailtimezone.pacific_tongatapu.desc": "PacificTongatapu",
    "schema.enum.emailtimezone.pacific_truk.label": "PacificTruk",
    "schema.enum.emailtimezone.pacific_truk.desc": "PacificTruk",
    "schema.enum.emailtimezone.pacific_wake.label": "PacificWake",
    "schema.enum.emailtimezone.pacific_wake.desc": "PacificWake",
    "schema.enum.emailtimezone.pacific_wallis.label": "PacificWallis",
    "schema.enum.emailtimezone.pacific_wallis.desc": "PacificWallis",
    "schema.enum.emailtimezone.pacific_yap.label": "PacificYap",
    "schema.enum.emailtimezone.pacific_yap.desc": "PacificYap",
    "schema.enum.emailtimezone.poland.label": "Poland",
    "schema.enum.emailtimezone.poland.desc": "Poland",
    "schema.enum.emailtimezone.portugal.label": "Portugal",
    "schema.enum.emailtimezone.portugal.desc": "Portugal",
    "schema.enum.emailtimezone.roc.label": "ROC",
    "schema.enum.emailtimezone.roc.desc": "ROC",
    "schema.enum.emailtimezone.rok.label": "ROK",
    "schema.enum.emailtimezone.rok.desc": "ROK",
    "schema.enum.emailtimezone.singapore.label": "Singapore",
    "schema.enum.emailtimezone.singapore.desc": "Singapore",
    "schema.enum.emailtimezone.turkey.label": "Turkey",
    "schema.enum.emailtimezone.turkey.desc": "Turkey",
    "schema.enum.emailtimezone.uct.label": "UCT",
    "schema.enum.emailtimezone.uct.desc": "UCT",
    "schema.enum.emailtimezone.us_alaska.label": "USAlaska",
    "schema.enum.emailtimezone.us_alaska.desc": "USAlaska",
    "schema.enum.emailtimezone.us_aleutian.label": "USAleutian",
    "schema.enum.emailtimezone.us_aleutian.desc": "USAleutian",
    "schema.enum.emailtimezone.us_arizona.label": "USArizona",
    "schema.enum.emailtimezone.us_arizona.desc": "USArizona",
    "schema.enum.emailtimezone.us_central.label": "USCentral",
    "schema.enum.emailtimezone.us_central.desc": "USCentral",
    "schema.enum.emailtimezone.us_east_minus_indiana.label": "USEastIndiana",
    "schema.enum.emailtimezone.us_east_minus_indiana.desc": "USEastIndiana",
    "schema.enum.emailtimezone.us_eastern.label": "USEastern",
    "schema.enum.emailtimezone.us_eastern.desc": "USEastern",
    "schema.enum.emailtimezone.us_hawaii.label": "USHawaii",
    "schema.enum.emailtimezone.us_hawaii.desc": "USHawaii",
    "schema.enum.emailtimezone.us_indiana_minus_starke.label": "USIndianaStarke",
    "schema.enum.emailtimezone.us_indiana_minus_starke.desc": "USIndianaStarke",
    "schema.enum.emailtimezone.us_michigan.label": "USMichigan",
    "schema.enum.emailtimezone.us_michigan.desc": "USMichigan",
    "schema.enum.emailtimezone.us_mountain.label": "USMountain",
    "schema.enum.emailtimezone.us_mountain.desc": "USMountain",
    "schema.enum.emailtimezone.us_pacific.label": "USPacific",
    "schema.enum.emailtimezone.us_pacific.desc": "USPacific",
    "schema.enum.emailtimezone.us_samoa.label": "USSamoa",
    "schema.enum.emailtimezone.us_samoa.desc": "USSamoa",
    "schema.enum.emailtimezone.universal.label": "Universal",
    "schema.enum.emailtimezone.universal.desc": "Universal",
    "schema.enum.emailtimezone.w_minus_su.label": "WSU",
    "schema.enum.emailtimezone.w_minus_su.desc": "WSU",
    "schema.enum.emailtimezone.wet.label": "WET",
    "schema.enum.emailtimezone.wet.desc": "WET",
    "schema.enum.emailtimezone.zulu.label": "Zulu",
    "schema.enum.emailtimezone.zulu.desc": "Zulu",
    "schema.enum.ntpauthalgorithm.ntp_auth_algorithm_md5.label": "MD5",
    "schema.enum.ntpauthalgorithm.ntp_auth_algorithm_md5.desc": "MD5 Message Digest",
    "schema.enum.ntpauthalgorithm.ntp_auth_algorithm_sha1.label": "SHA1",
    "schema.enum.ntpauthalgorithm.ntp_auth_algorithm_sha1.desc": "SHA1 Message Digest",
    "schema.enum.upgradefsmstate.upgrade_fsm_init.desc": "Initial State before any Upgrade Operations.",
    "schema.enum.upgradefsmstate.upgrade_fsm_started.desc": "Upgrade operations request accepted.",
    "schema.enum.upgradefsmstate.upgrade_fsm_waiting.desc": "Upgrade operations request waiting to be picked up by upgrade service.",
    "schema.enum.upgradefsmstate.upgrade_fsm_in_progress.desc": "Upgrade operations request in progress. ",
    "schema.enum.upgradefsmstate.upgrade_fsm_enqueued.desc": "Upgrade operations request enqueued to workers.",
    "schema.enum.upgradefsmstate.upgrade_fsm_error.desc": "Upgrade operations is in error. ",
    "schema.enum.upgradefsmstate.upgrade_fsm_suspended.desc": "Upgrade operations is suspended.",
    "schema.enum.upgradefsmstate.upgrade_fsm_enqueue_failed.desc": "Upgrade operations request enqueue failed to workers.",
    "schema.enum.upgradefsmstate.upgrade_fsm_paused.desc": "Upgrade operations have been paused.",
    "schema.enum.upgradefsmstate.upgrade_fsm_completed.desc": "Upgrade operations completed for the requested node.",
    "schema.enum.upgradefsmstate.upgrade_fsm_abort_in_progress.desc": "Upgrade abort in progress due to error encountered.",
    "schema.enum.upgradefsmstate.upgrade_fsm_aborted.desc": "Upgrade abort complete.",
    "schema.enum.upgradefsmstate.upgrade_fsm_se_upgrade_in_progress.desc": "Upgrade FSM State when controller is waiting for se upgrade to complete.",
    "schema.enum.upgradefsmstate.upgrade_fsm_controller_completed.desc": "Upgrade FSM State when basic controller upgrade is completed.",
    "schema.enum.upgradefsmstate.upgrade_fsm_dummy_3.desc": "Upgrade FSM State for future use",
    "schema.enum.upgradefsmstate.upgrade_fsm_dummy_4.desc": "Upgrade FSM State for future use",
    "schema.enum.upgradefsmstate.upgrade_fsm_dummy_5.desc": "Upgrade FSM State for future use",
    "schema.enum.cloudstate.cloud_state_unknown.desc": "Cloud state unknown",
    "schema.enum.cloudstate.cloud_state_in_progress.desc": "Cloud configuration in progress",
    "schema.enum.cloudstate.cloud_state_failed.desc": "Cloud configuration failed",
    "schema.enum.cloudstate.cloud_state_placement_ready.desc": "Cloud ready for Virtual Service placement",
    "schema.enum.cloudstate.cloud_state_deleting.desc": "Cloud is in the process of deconfiguration",
    "schema.enum.cloudstate.cloud_state_not_connected.desc": "Cloud Infrastructure connection closed",
    "schema.enum.seflowdist.load_aware.desc": "Distribute flows based on SE load.",
    "schema.enum.seflowdist.consistent_hash_source_ip_address.desc": "Distribute flows based on consistent hash of client IP.",
    "schema.enum.seflowdist.consistent_hash_source_ip_address_and_port.desc": "Distribute flows based on consistent hash of client IP and Port.",
    "schema.enum.flowlabeltype.no_label.desc": "No label.",
    "schema.enum.flowlabeltype.application_label.desc": "Application logic based label.",
    "schema.enum.flowlabeltype.service_label.desc": "Use Service label.",
    "schema.enum.vhtype.vs_type_vh_sni.label": "SNI",
    "schema.enum.vhtype.vs_type_vh_sni.desc": "Virtual Hosting VS of type SNI.",
    "schema.enum.vhtype.vs_type_vh_enhanced.label": "Enhanced Virtual Hosting",
    "schema.enum.vhtype.vs_type_vh_enhanced.desc": "Virtual Hosting VS of type Enhanced.",
    "schema.enum.accesstokentype.access_token_type_jwt.label": "JWT access token.",
    "schema.enum.accesstokentype.access_token_type_jwt.desc": "Access token is a JWT.",
    "schema.enum.accesstokentype.access_token_type_opaque.label": "Opaque access token.",
    "schema.enum.accesstokentype.access_token_type_opaque.desc": "Access token is opaque.",
    "schema.enum.jwtlocation.jwt_location_authorization_header.label": "Authorization Header",
    "schema.enum.jwtlocation.jwt_location_authorization_header.desc": "JWT sent in the authorizarion header of the request as a bearer token.",
    "schema.enum.jwtlocation.jwt_location_query_param.label": "Query Param",
    "schema.enum.jwtlocation.jwt_location_query_param.desc": "JWT sent in the request query params.",
    "schema.enum.dnsrecordresponsealgorithm.dns_record_response_round_robin.desc": "Linearly cycle through the list of configured entries in the DNS record to provide in response to DNS requests.",
    "schema.enum.dnsrecordresponsealgorithm.dns_record_response_consistent_hash.desc": "Use a hash of the source IP (LDNS) to pick from the list of configured entries in the DNS record to provide in response to DNS requests.",
    "schema.enum.clientinsights.no_insights.label": "No Insights",
    "schema.enum.clientinsights.passive.label": "Passive",
    "schema.enum.clientinsights.active.label": "Active",
    "schema.enum.debugvrfflag.debug_vrf_bgp.label": "bgp",
    "schema.enum.debugvrfflag.debug_vrf_bgp.desc": "BGP protocol debug logs",
    "schema.enum.debugvrfflag.debug_vrf_quagga.label": "quagga",
    "schema.enum.debugvrfflag.debug_vrf_quagga.desc": "Quagga config debug logs",
    "schema.enum.debugvrfflag.debug_vrf_all.label": "all",
    "schema.enum.debugvrfflag.debug_vrf_all.desc": "Turn on all logs for this vrf",
    "schema.enum.debugvrfflag.debug_vrf_none.label": "none",
    "schema.enum.debugvrfflag.debug_vrf_none.desc": "Turn off all logs for this vrf",
    "schema.enum.selectortype.selector_ipam.label": "IPAM",
    "schema.enum.selectortype.selector_ipam.desc": "Selector for IPAM networks",
    "schema.enum.wafmode.waf_mode_detection_only.label": "Detection",
    "schema.enum.wafmode.waf_mode_detection_only.desc": "WAF rules are processed but HTTP transactions are not intercepted, even when rules are configured to do so.",
    "schema.enum.wafmode.waf_mode_enforcement.label": "Enforcement",
    "schema.enum.wafmode.waf_mode_enforcement.desc": "WAF rules are processed and HTTP transactions are intercepted, as per the rules.",
    "schema.enum.wafphase.waf_phase_connection.label": "connection phase",
    "schema.enum.wafphase.waf_phase_connection.desc": "Executed before request header phase. Only the client IP is available.",
    "schema.enum.wafphase.waf_phase_request_header.label": "request header phase",
    "schema.enum.wafphase.waf_phase_request_header.desc": "Executed when the HTTP request headers are available.",
    "schema.enum.wafphase.waf_phase_request_body.label": "request body phase",
    "schema.enum.wafphase.waf_phase_request_body.desc": "Executed when the HTTP request body is available.",
    "schema.enum.wafphase.waf_phase_response_header.label": "response header phase",
    "schema.enum.wafphase.waf_phase_response_header.desc": "Executed when the HTTP response headers are available.",
    "schema.enum.wafphase.waf_phase_response_body.label": "request body phase",
    "schema.enum.wafphase.waf_phase_response_body.desc": "Executed when the HTTP response body is available.",
    "schema.enum.wafphase.waf_phase_logging.label": "logging phase",
    "schema.enum.wafphase.waf_phase_logging.desc": "Executed after full is HTTP request is handled.",
    "schema.enum.wafparanoialevel.waf_paranoia_level_low.label": "Low (1)",
    "schema.enum.wafparanoialevel.waf_paranoia_level_low.desc": "All rules with a paranoialevel tag greater than 1 will be excluded.",
    "schema.enum.wafparanoialevel.waf_paranoia_level_medium.label": "Medium (2)",
    "schema.enum.wafparanoialevel.waf_paranoia_level_medium.desc": "All rules with a paranoialevel tag greater than 2 will be excluded.",
    "schema.enum.wafparanoialevel.waf_paranoia_level_high.label": "High (3)",
    "schema.enum.wafparanoialevel.waf_paranoia_level_high.desc": "All rules with a paranoialevel tag greater than 3 will be excluded.",
    "schema.enum.wafparanoialevel.waf_paranoia_level_extreme.label": "Extreme (4)",
    "schema.enum.wafparanoialevel.waf_paranoia_level_extreme.desc": "All rules with a paranoialevel tag greater than 4 will be excluded.",
    "schema.enum.waffailuremode.waf_failure_mode_open.label": "Open",
    "schema.enum.waffailuremode.waf_failure_mode_open.desc": "When WAF processing of a request fails, allow the request.",
    "schema.enum.waffailuremode.waf_failure_mode_closed.label": "Closed",
    "schema.enum.waffailuremode.waf_failure_mode_closed.desc": "When WAF processing of a request fails, rejectflag the request.",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_bypass.label": "BYPASS",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_bypass.desc": "Unconditionally allow the request in WAF. This will deactivate WAF processing for this request.",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_detection_mode.label": "DETECTION MODE",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_detection_mode.desc": "Run WAF policy, but never block the request. This effectively behaves as if the whole policy and all rules were in DETECTION mode.",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_continue.label": "CONTINUE",
    "schema.enum.wafpolicyallowlistaction.waf_policy_allowlist_action_continue.desc": "Stop allowlist processing and continue with WAF policy.",
    "schema.enum.wafaction.waf_action_no_op.label": "No operation",
    "schema.enum.wafaction.waf_action_no_op.desc": "No operation.",
    "schema.enum.wafaction.waf_action_block.label": "Block",
    "schema.enum.wafaction.waf_action_block.desc": "Depending on the WAF mode, the request is either rejected or flagged.",
    "schema.enum.wafaction.waf_action_allow_parameter.label": "Allow parameter",
    "schema.enum.wafaction.waf_action_allow_parameter.desc": "The parameter is marked as good.",
    "schema.enum.wafvariable.waf_variable_args.label": "ARGS",
    "schema.enum.wafvariable.waf_variable_args.desc": "The ARGS collection. Can have a subelement.",
    "schema.enum.wafvariable.waf_variable_args_get.label": "ARGS_GET",
    "schema.enum.wafvariable.waf_variable_args_get.desc": "The ARGS_GET collection. Can have a subelement.",
    "schema.enum.wafvariable.waf_variable_args_post.label": "ARGS_POST",
    "schema.enum.wafvariable.waf_variable_args_post.desc": "The ARGS_POST collection. Can have a subelement.",
    "schema.enum.wafvariable.waf_variable_args_names.label": "ARGS_NAMES",
    "schema.enum.wafvariable.waf_variable_args_names.desc": "The ARGS_NAMES collection. Can have a subelement.",
    "schema.enum.wafvariable.waf_variable_request_cookies.label": "REQUEST_COOKIES",
    "schema.enum.wafvariable.waf_variable_request_cookies.desc": "The REQUEST_COOKIES collection. Can have a subelement.",
    "schema.enum.wafvariable.waf_variable_query_string.label": "QUERY_STRING",
    "schema.enum.wafvariable.waf_variable_query_string.desc": "The QUERY_STRING variable.",
    "schema.enum.wafvariable.waf_variable_request_basename.label": "REQUEST_BASENAME",
    "schema.enum.wafvariable.waf_variable_request_basename.desc": "The REQUEST_BASENAME variable.",
    "schema.enum.wafvariable.waf_variable_request_uri.label": "REQUEST_URI",
    "schema.enum.wafvariable.waf_variable_request_uri.desc": "The REQUEST_URI variable.",
    "schema.enum.wafvariable.waf_variable_path_info.label": "PATH_INFO",
    "schema.enum.wafvariable.waf_variable_path_info.desc": "The PATH_INFO variable. This is the part of the REQUEST_URI before the QUERY_ARGS.",
    "schema.enum.wafdatafiletype.waf_datafile_pm_from_file.label": "WAF pmFromFile operator data",
    "schema.enum.wafdatafiletype.waf_datafile_pm_from_file.desc": "File to be used with WAF pmFromFile operator.",
    "schema.enum.wafdatafiletype.waf_datafile_dtd.label": "DTD",
    "schema.enum.wafdatafiletype.waf_datafile_dtd.desc": "File to be used with WAF validateDTD operator.",
    "schema.enum.wafdatafiletype.waf_datafile_xsd.label": "XSD",
    "schema.enum.wafdatafiletype.waf_datafile_xsd.desc": "File to be used with WAF validateSchema operator.",
    "schema.enum.httpresponsecodes.http_response_code_0.label": "Not Applicable",
    "schema.enum.httpresponsecodes.http_response_code_100.label": "Continue",
    "schema.enum.httpresponsecodes.http_response_code_101.label": "Switching Protocols",
    "schema.enum.httpresponsecodes.http_response_code_200.label": "OK",
    "schema.enum.httpresponsecodes.http_response_code_201.label": "Created",
    "schema.enum.httpresponsecodes.http_response_code_202.label": "Accepted",
    "schema.enum.httpresponsecodes.http_response_code_203.label": "NonAuthoritative Information",
    "schema.enum.httpresponsecodes.http_response_code_204.label": "No Content",
    "schema.enum.httpresponsecodes.http_response_code_205.label": "Reset Content",
    "schema.enum.httpresponsecodes.http_response_code_206.label": "Partial Content",
    "schema.enum.httpresponsecodes.http_response_code_300.label": "Multiple Choices",
    "schema.enum.httpresponsecodes.http_response_code_301.label": "Moved Permanently",
    "schema.enum.httpresponsecodes.http_response_code_302.label": "Found",
    "schema.enum.httpresponsecodes.http_response_code_303.label": "See Other",
    "schema.enum.httpresponsecodes.http_response_code_304.label": "Not Modified",
    "schema.enum.httpresponsecodes.http_response_code_305.label": "Use Proxy",
    "schema.enum.httpresponsecodes.http_response_code_307.label": "Temporary Redirect",
    "schema.enum.httpresponsecodes.http_response_code_400.label": "Bad Request",
    "schema.enum.httpresponsecodes.http_response_code_401.label": "Unauthorized",
    "schema.enum.httpresponsecodes.http_response_code_402.label": "Payment Required",
    "schema.enum.httpresponsecodes.http_response_code_403.label": "Forbidden",
    "schema.enum.httpresponsecodes.http_response_code_404.label": "Not Found",
    "schema.enum.httpresponsecodes.http_response_code_405.label": "Method Not Allowed",
    "schema.enum.httpresponsecodes.http_response_code_406.label": "Not Acceptable",
    "schema.enum.httpresponsecodes.http_response_code_407.label": "Proxy Authentication Required",
    "schema.enum.httpresponsecodes.http_response_code_408.label": "Request Timeout",
    "schema.enum.httpresponsecodes.http_response_code_409.label": "Conflict",
    "schema.enum.httpresponsecodes.http_response_code_410.label": "Gone",
    "schema.enum.httpresponsecodes.http_response_code_411.label": "Length Required",
    "schema.enum.httpresponsecodes.http_response_code_412.label": "Precondition Failed",
    "schema.enum.httpresponsecodes.http_response_code_413.label": "Payload Too Large",
    "schema.enum.httpresponsecodes.http_response_code_414.label": "URI Too Long",
    "schema.enum.httpresponsecodes.http_response_code_415.label": "Unsupported Media Type",
    "schema.enum.httpresponsecodes.http_response_code_416.label": "Range Not Satisfiable",
    "schema.enum.httpresponsecodes.http_response_code_417.label": "Expectation Failed",
    "schema.enum.httpresponsecodes.http_response_code_426.label": "Upgrade Required",
    "schema.enum.httpresponsecodes.http_response_code_470.label": "Avi Closed Connection",
    "schema.enum.httpresponsecodes.http_response_code_470.desc": "Internal code used by Avi to close the TCP connection",
    "schema.enum.httpresponsecodes.http_response_code_475.label": "Client Closed Connection",
    "schema.enum.httpresponsecodes.http_response_code_475.desc": "Client closed the TCP connection before Avi could send any HTTP response to the HTTP request",
    "schema.enum.httpresponsecodes.http_response_code_500.label": "Internal Server Error",
    "schema.enum.httpresponsecodes.http_response_code_501.label": "Not Implemented",
    "schema.enum.httpresponsecodes.http_response_code_502.label": "Bad Gateway",
    "schema.enum.httpresponsecodes.http_response_code_503.label": "Service Unavailable",
    "schema.enum.httpresponsecodes.http_response_code_504.label": "Gateway Timeout",
    "schema.enum.httpresponsecodes.http_response_code_505.label": "HTTP Version Not Supported",
    "schema.enum.wafrequestparser.waf_request_parser_urlencoded.label": "URL Encoded",
    "schema.enum.wafrequestparser.waf_request_parser_urlencoded.desc": "WAF request body parser for URL encoded data (applicationxwwwformurlencoded ContentType).",
    "schema.enum.wafrequestparser.waf_request_parser_multipart.label": "Multipart",
    "schema.enum.wafrequestparser.waf_request_parser_multipart.desc": "WAF request body parser for multipart form data (ContentType multipartformdata).",
    "schema.enum.wafrequestparser.waf_request_parser_json.label": "JSON",
    "schema.enum.wafrequestparser.waf_request_parser_json.desc": "WAF request body parser for JSON data.",
    "schema.enum.wafrequestparser.waf_request_parser_xml.label": "XML",
    "schema.enum.wafrequestparser.waf_request_parser_xml.desc": "WAF request body parser for XML data.",
    "schema.enum.wafrequestparser.waf_request_parser_handle_as_string.label": "As String",
    "schema.enum.wafrequestparser.waf_request_parser_handle_as_string.desc": "WAF request body parser that does not attempt to interpret the body of incoming requests in any way and does not set ARGS WAF variables. However REQUEST_BODY variable is set to the value of request body data.",
    "schema.enum.wafrequestparser.waf_request_parser_do_not_parse.label": "Do Not Parse",
    "schema.enum.wafrequestparser.waf_request_parser_do_not_parse.desc": "WAF request body parser that does not attempt to parse incoming requests and does not set any WAF variables, effectively turning off WAF protection for a given content type. Use ctl:forceRequestBodyVariable in custom signature rule to set REQUEST_BODY variable if it is needed.",
    "schema.pb.actiongroupconfig.email_config_uuid.desc": "Select the Email Notification configuration to use when sending alerts via email.",
    "schema.pb.actiongroupconfig.syslog_config_uuid.desc": "Select the Syslog Notification configuration to use when sending alerts via Syslog.",
    "schema.pb.actiongroupconfig.action_script_config_uuid.desc": "reference of the action script configuration to be used",
    "schema.pb.actiongroupconfig.external_only.desc": "Generate Alert only to external destinations",
    "schema.pb.actiongroupconfig.snmp_trap_profile_uuid.desc": "Select the SNMP Trap Notification to use when sending alerts via SNMP Trap.",
    "schema.pb.actiongroupconfig.autoscale_trigger_notification.desc": "Trigger Notification to AutoScale Manager",
    "schema.pb.actiongroupconfig.level.desc": "When an alert is generated, mark its priority via the Alert Level.",
    "schema.pb.actiongroupconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.configpbattributes.version.desc": "Protobuf version number. Gets incremented if there is se Diff of federated diff in config pbs.This field will be a monotonically increasing number indicating the number of Config Update operations.",
    "schema.pb.albservicesconfig.portal_url.desc": "The FQDN or IP address of the customer portal.",
    "schema.pb.albservicesconfig.polling_interval.desc": "Time interval in minutes.",
    "schema.pb.albservicesconfig.asset_contact.desc": "Information about the default contact for this controller cluster.",
    "schema.pb.albservicesconfig.feature_opt_in_status.desc": "Information about the portal features opted in for controller.",
    "schema.pb.albservicesconfig.use_split_proxy.desc": "By default, pulse uses proxy added in system configuration. If pulse needs to use a seperate proxy, set this flag to true and configure split proxy configuration.",
    "schema.pb.albservicesconfig.split_proxy_configuration.desc": "Split proxy configuration to connect external pulse services.",
    "schema.pb.albservicesconfig.ip_reputation_config.desc": "Default values to be used for IP Reputation sync.",
    "schema.pb.albservicesconfig.use_tls.desc": "Secure the controller to PULSE communication over TLS",
    "schema.pb.albservicesconfig.mode.desc": "Mode helps log collection and upload.",
    "schema.pb.albservicesconfig.app_signature_config.desc": "Default values to be used for Application Signature sync.",
    "schema.pb.albservicesconfig.user_agent_db_config.desc": "Default values to be used for user agent DB Service.",
    "schema.pb.albservicesconfig.waf_config.desc": "Default values to be used for pulse waf management.",
    "schema.pb.albservicesconfig.case_config.desc": "Default values to be used for pulse case management.",
    "schema.pb.albservicesconfig.saas_licensing_config.desc": "Saas licensing configuration.",
    "schema.pb.albservicesconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.caseconfig.enable_auto_case_creation_on_controller_failure.desc": "Enable proactive support case creation when a controller failure occurs.",
    "schema.pb.caseconfig.enable_auto_case_creation_on_se_failure.desc": "Enable proactive support case creation when a service engine failure occurs.",
    "schema.pb.caseconfig.enable_cleanup_of_attached_files.desc": "Enable cleanup of successfully attached files to support case.",
    "schema.pb.wafcrsconfig.enable_auto_download_waf_signatures.desc": "Enable to automatically download new WAF signaturesCRS version to the Controller.",
    "schema.pb.wafcrsconfig.enable_waf_signatures_notifications.desc": "Enable event notifications when new WAF signaturesCRS versions are available.",
    "schema.pb.useragentdbconfig.allowed_batch_size.desc": "Batch query limit.",
    "schema.pb.appsignatureconfig.app_signature_sync_interval.desc": "Application Signature db sync interval in minutes.",
    "schema.pb.ipreputationconfig.ip_reputation_sync_interval.desc": "IP reputation db sync interval in minutes.",
    "schema.pb.ipreputationconfig.ip_reputation_file_object_expiry_duration.desc": "IP reputation db file object expiry duration in days.",
    "schema.pb.proxyconfiguration.host.desc": "Proxy hostname or IP address",
    "schema.pb.proxyconfiguration.port.desc": "Proxy port",
    "schema.pb.proxyconfiguration.username.desc": "Username for proxy",
    "schema.pb.proxyconfiguration.password.desc": "Password for proxy",
    "schema.pb.albservicesuser.name.desc": "Name of the portal user.",
    "schema.pb.albservicesuser.email.desc": "Email ID of the portal user.",
    "schema.pb.albservicesuser.account_name.desc": "Name of primary account of the portal user.",
    "schema.pb.albservicesuser.account_id.desc": "ID of primary account of the portal user.",
    "schema.pb.albservicesuser.managed_accounts.desc": "Information about all the accounts managed by user in the customer portal.",
    "schema.pb.albservicesuser.phone.desc": "Phone number of the user.",
    "schema.pb.albservicesaccount.name.desc": "Account to which the customer portal user belongs.",
    "schema.pb.albservicesaccount.id.desc": "ID of an Account in the customer portal.",
    "schema.pb.albservicesaccount.users.desc": "Information about users within the account in the customer portal.",
    "schema.pb.alert.level.desc": "Resolved Alert Type",
    "schema.pb.alert.state.desc": "State of the alert. It would be active when createdIt would be changed to state read when read by the admin",
    "schema.pb.alert.timestamp.desc": "Unix Timestamp of the last throttling in seconds",
    "schema.pb.alert.obj_uuid.desc": "UUID of the resource",
    "schema.pb.alert.obj_key.desc": "UUID of the resource",
    "schema.pb.alert.obj_name.desc": "Name of the resource",
    "schema.pb.alert.throttle_count.desc": "Number of times it was throttled",
    "schema.pb.alert.last_throttle_timestamp.desc": "Unix Timestamp of the last throttling in seconds",
    "schema.pb.alert.related_uuids.desc": "related uuids for the connection log. Only Log agent needs to fill this. Server uuid should be in formatpool_uuidipport. In case of no port is set for server it shouldstill be operational port for the server",
    "schema.pb.alert.event_pages.desc": "List of event pages this alert is associated with",
    "schema.pb.alert.summary.desc": "summary of alert based on alert config",
    "schema.pb.alert.description.desc": "alert generation criteria",
    "schema.pb.alert.action_script_output.desc": "Output of the alert action script",
    "schema.pb.applicationlog.client_ip.desc": "IPv4 address of the client. When true client IP feature is enabled, this will be derived from the header configured in the true client IP feature, if present in the request",
    "schema.pb.applicationlog.significant_log.desc": "List of enums which indicate why a log is significant",
    "schema.pb.applicationlog.datascript_log.desc": "Log created by the invocations of the DataScript api avi.vs.log()",
    "schema.pb.applicationlog.headers_sent_to_server.desc": "Request headers sent to backend server",
    "schema.pb.applicationlog.headers_received_from_server.desc": "Response headers received from backend server",
    "schema.pb.applicationlog.server_ssl_session_id.desc": "SSL session id for the backend connection.",
    "schema.pb.applicationlog.server_connection_reused.desc": "Flag to indicate if connection from the connection pool was reused",
    "schema.pb.applicationlog.server_ssl_session_reused.desc": "Flag to indicate if SSL session was reused.",
    "schema.pb.applicationlog.waf_log.desc": "Presence of waf_log indicates that atleast 1 WAF rule was hit for the transaction",
    "schema.pb.applicationlog.client_ip6.desc": "IPv6 address of the client.",
    "schema.pb.applicationlog.vs_ip6.desc": "Virtual IPv6 address of the VS.",
    "schema.pb.applicationlog.server_ip6.desc": "IPv6 address of the Server.",
    "schema.pb.applicationlog.server_conn_src_ip6.desc": "IPv6 address used to connect to Server.",
    "schema.pb.applicationlog.request_id.desc": "Unique HTTP Request ID ",
    "schema.pb.applicationlog.request_served_locally_remote_site_down.desc": "Flag to indicate if request was served locally because the remote site was down",
    "schema.pb.applicationlog.http2_stream_id.desc": "Stream identifier corresponding to an HTTP2 request.",
    "schema.pb.applicationlog.cipher_bytes.desc": "Byte stream of client cipher list sent on SSL_R_NO_SHARED_CIPHER error.",
    "schema.pb.applicationlog.client_cipher_list.desc": "List of ciphers sent by client in TLSSSL Client Hello. Only sent when TLS handshake fails due to no shared cipher.",
    "schema.pb.applicationlog.client_log_filter_name.desc": "Name of the Client Log Filter applied",
    "schema.pb.applicationlog.saml_authentication_used.desc": "SAML authentication is used.",
    "schema.pb.applicationlog.saml_session_cookie_valid.desc": "SAML authentication session cookie is valid.",
    "schema.pb.applicationlog.saml_auth_request_generated.desc": "SAML authentication request is generated.",
    "schema.pb.applicationlog.saml_auth_response_received.desc": "SAML authentication response is received.",
    "schema.pb.applicationlog.saml_auth_session_id.desc": "SAML authentication session ID.",
    "schema.pb.applicationlog.servers_tried.desc": "Number of servers tried during server reselect before the response is sent back.",
    "schema.pb.applicationlog.paa_log.desc": "Logs for the PingAccess authentication process.",
    "schema.pb.applicationlog.cache_disabled_by_ds.desc": "Cache fetch and store is disabled by the Datascript policies.",
    "schema.pb.applicationlog.grpc_status.desc": "GRPC response status sent in the GRPC trailer.",
    "schema.pb.applicationlog.ocsp_status_resp_sent.desc": "OCSP Certificate Status response sent in the SSLTLS connection handshake.",
    "schema.pb.applicationlog.critical_error_encountered.desc": "Critical error encountered during request processing.",
    "schema.pb.applicationlog.grpc_service_name.desc": "The service called by the gRPC request.",
    "schema.pb.applicationlog.grpc_method_name.desc": "The method called by the gRPC request.",
    "schema.pb.applicationlog.grpc_status_reason_phrase.desc": "The reason phrase corresponding to the gRPC status code.",
    "schema.pb.applicationlog.icap_log.desc": "Log for the ICAP processing.",
    "schema.pb.applicationlog.saml_log.desc": "Logs for the SAML authenticationauthorization process.",
    "schema.pb.applicationlog.jwt_log.desc": "Logs for the JWT Validation process.",
    "schema.pb.applicationlog.ntlm_log.desc": "NTLM autodetection logs.",
    "schema.pb.applicationlog.oob_log.desc": "Logs for HTTP OutOfBand Requests",
    "schema.pb.applicationlog.session_id.desc": "Field set by datascript using avi.vs.set_session_id().",
    "schema.pb.applicationlog.bot_management_log.desc": "Logs related to Bot detection.",
    "schema.pb.applicationlog.max_ingress_latency_fe.desc": "Maximum packet processing latency for the frontend flow.",
    "schema.pb.applicationlog.avg_ingress_latency_fe.desc": "Average packet processing latency for the frontend flow.",
    "schema.pb.applicationlog.conn_est_time_fe.desc": "TCP connection establishment time for the frontend flow.",
    "schema.pb.applicationlog.max_ingress_latency_be.desc": "Maximum packet processing latency for the backend flow.",
    "schema.pb.applicationlog.avg_ingress_latency_be.desc": "Average packet processing latency for the backend flow.",
    "schema.pb.applicationlog.conn_est_time_be.desc": "TCP connection establishment time for the backend flow.",
    "schema.pb.applicationlog.source_ip.desc": "Source IP of the client connection to the VS. This can be different from client IP when true client IP feature is enabled.",
    "schema.pb.applicationlog.source_ip6.desc": "IPv6 address of the source of the client connection to the VS. This can be different from client IPv6 address when true client IP feature is enabled.",
    "schema.pb.applicationlog.oauth_log.desc": "Logs related to OAuth requests.",
    "schema.pb.applicationlog.auth_status.desc": "Set the Session Authentication Status.",
    "schema.pb.oauthlog.token_exchange_subrequest.desc": "Subrequest info related to the code exchange flow.",
    "schema.pb.oauthlog.token_introspection_subrequest.desc": "Subrequest info related to Token Introspection.",
    "schema.pb.oauthlog.token_refresh_subrequest.desc": "Subrequest info related to refresh access Token flow.",
    "schema.pb.oauthlog.jwks_subrequest.desc": "Subrequest info related to fetching jwks keys from jwks uri endpoint.",
    "schema.pb.oauthlog.oauth_state.desc": "OAuth state.",
    "schema.pb.oauthlog.is_session_cookie_expired.desc": "OAuth SessionCookie expired.",
    "schema.pb.oauthlog.authn_rule_match.desc": "Authentication policy rule match.",
    "schema.pb.oauthlog.authz_rule_match.desc": "Authorization policy rule match.",
    "schema.pb.oauthlog.state.desc": "OAuth request State to avoid CSRF atatcks.",
    "schema.pb.oauthlog.userinfo_subrequest.desc": "Subrequest info related to fetching userinfo from userinfo endpoint.",
    "schema.pb.oauthsubrequestlog.sub_request_log.desc": "Subrequest info related to the Oauth flow.",
    "schema.pb.oauthsubrequestlog.error_code.desc": "Error code.",
    "schema.pb.oauthsubrequestlog.error_description.desc": "Error description.",
    "schema.pb.subrequestlog.method.desc": "The HTTP method of the subrequest.",
    "schema.pb.subrequestlog.http_version.desc": "The HTTP version of the subrequest.",
    "schema.pb.subrequestlog.uri_path.desc": "The URI path of the subrequest.",
    "schema.pb.subrequestlog.uri_query.desc": "The URI query of the subrequest.",
    "schema.pb.subrequestlog.http_response_code.desc": "The HTTP response code received from the server.",
    "schema.pb.subrequestlog.pool_name.desc": "The name of the pool that was used for the subrequest.",
    "schema.pb.subrequestlog.pool_uuid.desc": "The uuid of the pool that was used for the subrequest.",
    "schema.pb.subrequestlog.server_name.desc": "The name of the server that was used for the subrequest.",
    "schema.pb.subrequestlog.server_ip.desc": "The IP of the server that was used for the subrequest.",
    "schema.pb.subrequestlog.server_port.desc": "The port of the server that was used for the subrequest.",
    "schema.pb.subrequestlog.source_port.desc": "The source port for this request.",
    "schema.pb.subrequestlog.headers_sent_to_server.desc": "Request headers sent to the server",
    "schema.pb.subrequestlog.headers_received_from_server.desc": "Response headers received from the server",
    "schema.pb.subrequestlog.request_length.desc": "Length of the request sent in bytes.",
    "schema.pb.subrequestlog.response_length.desc": "Length of the response received in bytes.",
    "schema.pb.subrequestlog.total_time.desc": "Total time taken to process the Oauth Subrequest. This is the time taken from the 1st byte of the request sent to the last byte of the response received.",
    "schema.pb.authzrulematch.rule_name.desc": "Name of the matched Authorization rule.",
    "schema.pb.authzrulematch.rule_action.desc": "Name of the executed Authorization rule Action.",
    "schema.pb.authnrulematch.rule_name.desc": "Name of the matched Authentication rule.",
    "schema.pb.authnrulematch.rule_action.desc": "Name of the executed Authentication rule Action.",
    "schema.pb.botmanagementlog.results.desc": "The evaluation results of the various bot module components.",
    "schema.pb.botmanagementlog.classification.desc": "The final classification of the bot management module.",
    "schema.pb.botclassification.type.desc": "One of the systemdefined Bot classification types.",
    "schema.pb.botclassification.user_defined_type.desc": "If 'type' has BotClassificationTypes value 'USER_DEFINED', this is the userdefined value.",
    "schema.pb.botevaluationresult.component.desc": "The component of the bot module that made this evaluation.",
    "schema.pb.botevaluationresult.identification.desc": "The resulting Bot Identification.",
    "schema.pb.botevaluationresult.confidence.desc": "The confidence of this evaluation.",
    "schema.pb.botevaluationresult.notes.desc": "Additional notes for this result.",
    "schema.pb.botidentification.class.desc": "The Bot Client Class of this identification.",
    "schema.pb.botidentification.type.desc": "The Bot Client Type of this identification.",
    "schema.pb.botidentification.identifier.desc": "A freeform string to identify the client.",
    "schema.pb.outofbandrequestlog.ds_req_logs.desc": "Logs for outofband requests sent from the DataScript.",
    "schema.pb.dsrequestlog.ds_name.desc": "Name of the DataScript where this request was called.",
    "schema.pb.dsrequestlog.event.desc": "DataScript event where outofband request was sent.",
    "schema.pb.dsrequestlog.http_response_code.desc": "The HTTP response code received from the external server.",
    "schema.pb.dsrequestlog.http_version.desc": "The HTTP version of the outofband request.",
    "schema.pb.dsrequestlog.method.desc": "The HTTP method of the outofband request.",
    "schema.pb.dsrequestlog.uri_path.desc": "The URI path of the outofband request.",
    "schema.pb.dsrequestlog.uri_query.desc": "The URI query of the outofband request.",
    "schema.pb.dsrequestlog.pool_name.desc": "The name of the pool that was used for the request.",
    "schema.pb.dsrequestlog.pool_uuid.desc": "The uuid of the pool that was used for the request.",
    "schema.pb.dsrequestlog.server_name.desc": "The name of the server that was used for the request.",
    "schema.pb.dsrequestlog.server_ip.desc": "The IP of the server that was used for the request.",
    "schema.pb.dsrequestlog.server_port.desc": "The port of the server that was used for the request.",
    "schema.pb.dsrequestlog.source_port.desc": "The source port for this request.",
    "schema.pb.dsrequestlog.servers_tried.desc": "Number of servers tried during server reselect before the response is sent back.",
    "schema.pb.dsrequestlog.headers_sent_to_server.desc": "Request headers sent to the server",
    "schema.pb.dsrequestlog.headers_received_from_server.desc": "Response headers received from the server",
    "schema.pb.dsrequestlog.request_length.desc": "Length of the request sent in bytes.",
    "schema.pb.dsrequestlog.response_length.desc": "Length of the response received in bytes.",
    "schema.pb.dsrequestlog.total_time.desc": "Total time taken to process the OutofBand request. This is the time taken from the 1st byte of the request sent to the last byte of the response received.",
    "schema.pb.ntlmlog.ntlm_detected.desc": "Set to true, if request is detected to be NTLM.",
    "schema.pb.ntlmlog.ntlm_status.desc": "Set the NTLM Status.",
    "schema.pb.jwtlog.is_jwt_verified.desc": "Set to true, if JWT validation is successful.",
    "schema.pb.jwtlog.authn_rule_match.desc": "Authentication policy rule match.",
    "schema.pb.jwtlog.authz_rule_match.desc": "Authorization policy rule match.",
    "schema.pb.jwtlog.token_payload.desc": "JWT token payload.",
    "schema.pb.samllog.is_saml_authentication_used.desc": "Set to True if SAML Authentication is used.",
    "schema.pb.samllog.saml_authn_rule_match.desc": "SAML Authentication rule match.",
    "schema.pb.samllog.saml_authz_rule_match.desc": "SAML Authorization rule match.",
    "schema.pb.samllog.saml_auth_status.desc": "Saml Authentication Status.",
    "schema.pb.samllog.saml_session_cookie_expired.desc": "Is set when SAML session cookie is expired.",
    "schema.pb.samllog.userid.desc": "SAML userid.",
    "schema.pb.samllog.saml_attribute_lists.desc": "SAML Attribute list.",
    "schema.pb.samlattribute.attr_name.desc": "SAML Attribute name.",
    "schema.pb.samlattribute.attr_values.desc": "SAML Attribute values.",
    "schema.pb.samlauthzrulematch.saml_authz_matched_rule_name.desc": "Name of the matched SAML Authorization rule.",
    "schema.pb.samlauthzrulematch.saml_authz_matched_rule_action.desc": "Name of the executed SAML Authorization rule Action.",
    "schema.pb.samlauthnrulematch.saml_authn_matched_rule_name.desc": "Name of the matched SAML Authentication rule.",
    "schema.pb.samlauthnrulematch.saml_authn_matched_rule_action.desc": "Name of the executed SAML Authentication rule Action.",
    "schema.pb.icaplog.action.desc": "Denotes whether the content was processed by ICAP server and an action was taken.",
    "schema.pb.icaplog.request_logs.desc": "Logs for the HTTP request's content sent to the ICAP server.",
    "schema.pb.icaprequestlog.icap_response_code.desc": "The response code received from the ICAP server.",
    "schema.pb.icaprequestlog.icap_method.desc": "The ICAP method of the request.",
    "schema.pb.icaprequestlog.http_response_code.desc": "The HTTP response code received from the ICAP server. HTTP response code is only available if content is blocked.",
    "schema.pb.icaprequestlog.http_method.desc": "The HTTP method of the request.",
    "schema.pb.icaprequestlog.icap_absolute_uri.desc": "The absolute ICAP uri of the request.",
    "schema.pb.icaprequestlog.complete_body_sent.desc": "Complete request body from client was sent to The ICAP server.",
    "schema.pb.icaprequestlog.modified_content_length.desc": "ContentLength of the modified content from ICAP server.",
    "schema.pb.icaprequestlog.pool_name.desc": "The name of the pool that was used for the request.",
    "schema.pb.icaprequestlog.pool_uuid.desc": "The uuid of the pool that was used for the request.",
    "schema.pb.icaprequestlog.source_port.desc": "Source port for this connection",
    "schema.pb.icaprequestlog.latency.desc": "Latency added due to ICAP processing. This is the time taken from 1st byte of ICAP request sent to last byte of ICAP response received.",
    "schema.pb.icaprequestlog.icap_headers_sent_to_server.desc": "ICAP request headers sent to ICAP server.",
    "schema.pb.icaprequestlog.icap_headers_received_from_server.desc": "ICAP response headers received from ICAP server.",
    "schema.pb.icaprequestlog.action.desc": "Denotes whether the content was processed by ICAP server and an action was taken.",
    "schema.pb.icaprequestlog.icap_server_port.desc": "ICAP server port for this connection.",
    "schema.pb.icaprequestlog.icap_server_ip.desc": "ICAP server IP for this connection.",
    "schema.pb.icaprequestlog.vendor.desc": "Selected ICAP vendor for the request.",
    "schema.pb.icaprequestlog.opswat_log.desc": "ICAP log specific to OPSWAT.",
    "schema.pb.icaprequestlog.nsx_defender_log.desc": "ICAP log specific to NSX Defender.",
    "schema.pb.icapnsxdefenderlog.score.desc": "Score associated with the uploaded file, if known, value is in between 0 and 100.",
    "schema.pb.icapnsxdefenderlog.task_uuid.desc": "The NSX Defender task UUID associated with the analysis of the file. It is possible to use this UUID in order to access the analysis details from the NSX Defender PortalManager Web UI. URL to access this information is https:user.lastline.comportal#analysttask<uuid>overview.",
    "schema.pb.icapnsxdefenderlog.status_url.desc": "URL to get details from NSXDefender for the request",
    "schema.pb.icapopswatlog.reason.desc": "Blocking reason for the content. It is available only if content was scanned by ICAP server and some violations were found.",
    "schema.pb.icapopswatlog.threat_id.desc": "Short description of the threat found in the content. Available only if content was scanned by ICAP server and some violations were found.",
    "schema.pb.icapopswatlog.violations.desc": "Threat found in the content. Available only if content was scanned by ICAP server and some violations were found.",
    "schema.pb.eventlog.reason_code.desc": "Reason code for generating the event. This would be added to the alert where it would say alert generated  on event with reason <reason code>",
    "schema.pb.eventlog.details_summary.desc": "Summary of event details",
    "schema.pb.eventlog.related_uuids.desc": "related objects corresponding to the events",
    "schema.pb.eventlog.event_description.desc": "Event Description for each Event  in the table view",
    "schema.pb.eventlog.event_pages.desc": "Pages in which event should come up",
    "schema.pb.alertconfig.name.desc": "Name of the alert configuration",
    "schema.pb.alertconfig.summary.desc": "Summary of reason why alert is generated",
    "schema.pb.alertconfig.description.desc": "A custom description field.",
    "schema.pb.alertconfig.alert_rule.desc": "list of filters matching on events or client logs used for triggering alerts.",
    "schema.pb.alertconfig.threshold.desc": "An alert is created only when the number of events meets or exceeds this number within the chosen time frame.",
    "schema.pb.alertconfig.throttle.desc": "Alerts are suppressed (throttled) for this duration of time since the last alert was raised for this alert config.",
    "schema.pb.alertconfig.rolling_window.desc": "Only if the Number of Events is reached or exceeded within the Time Window will an alert be generated.",
    "schema.pb.alertconfig.expiry_time.desc": "An alert is expired and deleted after the expiry time has elapsed.  The original event triggering the alert remains in the event's log.",
    "schema.pb.alertconfig.source.desc": "Signifies system events or the type of client logsused in this alert configuration",
    "schema.pb.alertconfig.obj_uuid.desc": "UUID of the resource for which alert was raised",
    "schema.pb.alertconfig.category.desc": "Determines whether an alert is raised immediately when event occurs (realtime) or after specified number of events occurs within rolling time window.",
    "schema.pb.alertconfig.enabled.desc": "Enable or disable this alert config from generating new alerts.",
    "schema.pb.alertconfig.action_group_uuid.desc": "The alert config will trigger the selected alert action, which can send notifications and execute a controlscript.",
    "schema.pb.alertconfig.autoscale_alert.desc": "This alert config applies to auto scale alerts",
    "schema.pb.alertconfig.object_type.desc": "The object type to which the Alert Config is associated with. Valid object types are  Virtual Service, Pool, Service Engine",
    "schema.pb.alertconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.alertemailconfig.name.desc": "A userfriendly name of the email notification service",
    "schema.pb.alertemailconfig.to_emails.desc": "Alerts are sent to the comma separated list of  email recipients",
    "schema.pb.alertemailconfig.cc_emails.desc": "Alerts are copied to the comma separated list of  email recipients",
    "schema.pb.alertemailconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.alertruleevent.event_id.desc": "When the selected event occurs, trigger this alert.",
    "schema.pb.alertrulemetric.metric_id.desc": "Metric Id for the Alert. Eg. l4_client.avg_complete_conns",
    "schema.pb.alertrulemetric.duration.desc": "Evaluation window for the Metrics",
    "schema.pb.alertmetricthreshold.threshold.desc": "Metric threshold for comparison",
    "schema.pb.alertscriptconfig.name.desc": "A userfriendly name of the Script",
    "schema.pb.alertscriptconfig.action_script.desc": "User Defined Alert Action Script. Please refer to kb.avinetworks.com for more information.",
    "schema.pb.alertscriptconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.alertsyslogconfig.name.desc": "A userfriendly name of the syslog notification",
    "schema.pb.alertsyslogconfig.syslog_servers.desc": "The list of syslog servers",
    "schema.pb.alertsyslogconfig.description.desc": "User defined description for alert syslog config",
    "schema.pb.alertsyslogconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.alertsyslogserver.syslog_server.desc": "The destination Syslog server IP address or hostname.",
    "schema.pb.alertsyslogserver.syslog_server_port.desc": "The destination Syslog server's service port.",
    "schema.pb.alertsyslogserver.udp.desc": "Network protocol to establish syslog session",
    "schema.pb.alertsyslogserver.format.desc": "Syslog output format  legacy, RFC 5424, JSON",
    "schema.pb.alertsyslogserver.tls_enable.desc": "Enable TLS to the syslog server",
    "schema.pb.alertsyslogserver.ssl_key_and_certificate_uuid.desc": "Select a certificate and key which will be used to authenticate to the syslog server",
    "schema.pb.alertsyslogserver.pkiprofile_uuid.desc": "Select the PKIProfile containing a CA or list of CA chainswhich will validate the certificate of the syslog server",
    "schema.pb.alertsyslogserver.anon_auth.desc": "Enable anonymous authentication of Syslog Serverwhich will disable server certificate authentication",
    "schema.pb.analyticsprofile.uuid.desc": "UUID of the analytics profile.",
    "schema.pb.analyticsprofile.name.desc": "The name of the analytics profile.",
    "schema.pb.analyticsprofile.apdex_response_threshold.desc": "If a client receives an HTTP response in less than the Satisfactory Latency Threshold, the request is considered Satisfied. It is considered Tolerated if it is not Satisfied and less than Tolerated Latency Factor multiplied by the Satisfactory Latency Threshold. Greater than this number and the client's request is considered Frustrated.",
    "schema.pb.analyticsprofile.apdex_response_tolerated_factor.desc": "Client tolerated response latency factor. Client must receive a response within this factor times the satisfactory threshold (apdex_response_threshold) to be considered tolerated",
    "schema.pb.analyticsprofile.apdex_server_response_threshold.desc": "A server HTTP response is considered Satisfied if latency is less than the Satisfactory Latency Threshold. The response is considered tolerated when it is greater than Satisfied but less than the Tolerated Latency Factor  S_Latency.  Greater than this number and the server response is considered Frustrated.",
    "schema.pb.analyticsprofile.apdex_server_response_tolerated_factor.desc": "Server tolerated response latency factor. Servermust response within this factor times the satisfactory threshold (apdex_server_response_threshold) to be considered tolerated",
    "schema.pb.analyticsprofile.apdex_rtt_threshold.desc": "Satisfactory client to Avi Round Trip Time(RTT).",
    "schema.pb.analyticsprofile.apdex_rtt_tolerated_factor.desc": "Tolerated client to Avi Round Trip Time(RTT) factor.  It is a multiple of apdex_rtt_tolerated_factor.",
    "schema.pb.analyticsprofile.apdex_server_rtt_threshold.desc": "Satisfactory client to Avi Round Trip Time(RTT).",
    "schema.pb.analyticsprofile.apdex_server_rtt_tolerated_factor.desc": "Tolerated client to Avi Round Trip Time(RTT) factor.  It is a multiple of apdex_rtt_tolerated_factor.",
    "schema.pb.analyticsprofile.apdex_rum_threshold.desc": "If a client is able to load a page in less than the Satisfactory Latency Threshold, the PageLoad is considered Satisfied.  It is considered tolerated if it is greater than Satisfied but less than the Tolerated Latency multiplied by Satisifed Latency. Greater than this number and the client's request is considered Frustrated.  A PageLoad includes the time for DNS lookup, download of all HTTP objects, and page render time.",
    "schema.pb.analyticsprofile.apdex_rum_tolerated_factor.desc": "Virtual service threshold factor for tolerated Page Load Time (PLT) as multiple of apdex_rum_threshold.",
    "schema.pb.analyticsprofile.conn_lossy_total_rexmt_threshold.desc": "A connection between client and Avi is considered lossy when more than this percentage of packets are retransmitted.",
    "schema.pb.analyticsprofile.conn_lossy_timeo_rexmt_threshold.desc": "A connection between client and Avi is considered lossy when more than this percentage of packets are retransmitted due to timeout.",
    "schema.pb.analyticsprofile.conn_lossy_ooo_threshold.desc": "A connection between client and Avi is considered lossy when more than this percentage of out of order packets are received.",
    "schema.pb.analyticsprofile.conn_lossy_zero_win_size_event_threshold.desc": "A client connection is considered lossy when percentage of times a packet could not be trasmitted due to TCP zero window is above this threshold.",
    "schema.pb.analyticsprofile.conn_server_lossy_total_rexmt_threshold.desc": "A connection between Avi and server is considered lossy when more than this percentage of packets are retransmitted.",
    "schema.pb.analyticsprofile.conn_server_lossy_timeo_rexmt_threshold.desc": "A connection between Avi and server is considered lossy when more than this percentage of packets are retransmitted due to timeout.",
    "schema.pb.analyticsprofile.conn_server_lossy_ooo_threshold.desc": "A connection between Avi and server is considered lossy when more than this percentage of out of order packets are received.",
    "schema.pb.analyticsprofile.conn_server_lossy_zero_win_size_event_threshold.desc": "A server connection is considered lossy when percentage of times a packet could not be trasmitted due to TCP zero window is above this threshold.",
    "schema.pb.analyticsprofile.exclude_client_close_before_request_as_error.desc": "Exclude client closed connection before an HTTP request could be completed from being classified as an error.",
    "schema.pb.analyticsprofile.exclude_tcp_reset_as_error.desc": "Exclude TCP resets by client from the list of potential errors.",
    "schema.pb.analyticsprofile.exclude_server_tcp_reset_as_error.desc": "Exclude server TCP reset from errors.  It is common for applications like MS Exchange.",
    "schema.pb.analyticsprofile.exclude_persistence_change_as_error.desc": "Exclude persistence server changed while load balancing' from the list of errors.",
    "schema.pb.analyticsprofile.exclude_syn_retransmit_as_error.desc": "Exclude 'server unanswered syns' from the list of errors.",
    "schema.pb.analyticsprofile.exclude_invalid_dns_query_as_error.desc": "Exclude invalid dns queries from the list of errors.",
    "schema.pb.analyticsprofile.exclude_invalid_dns_domain_as_error.desc": "Exclude dns queries to domains outside the domains configured in the DNS application profile from the list of errors.",
    "schema.pb.analyticsprofile.exclude_no_dns_record_as_error.desc": "Exclude queries to domains that did not have configured servicesrecords from the list of errors.",
    "schema.pb.analyticsprofile.exclude_unsupported_dns_query_as_error.desc": "Exclude unsupported dns queries from the list of errors.",
    "schema.pb.analyticsprofile.hs_performance_boost.desc": "Adds free performance score credits to health score. It can be used for compensating health score for known slow applications.",
    "schema.pb.analyticsprofile.hs_max_anomaly_penalty.desc": "Maximum penalty that may be deducted from health score for anomalies.",
    "schema.pb.analyticsprofile.hs_max_resources_penalty.desc": "Maximum penalty that may be deducted from health score for high resource utilization.",
    "schema.pb.analyticsprofile.hs_max_security_penalty.desc": "Maximum penalty that may be deducted from health score based on security assessment.",
    "schema.pb.analyticsprofile.hs_security_nonpfs_penalty.desc": "Penalty for allowing nonPFS handshakes.",
    "schema.pb.analyticsprofile.hs_security_weak_signature_algo_penalty.desc": "Penalty for allowing weak signature algorithm(s).",
    "schema.pb.analyticsprofile.hs_security_ssl30_score.desc": "Score assigned when supporting SSL3.0 encryption protocol",
    "schema.pb.analyticsprofile.hs_security_tls10_score.desc": "Score assigned when supporting TLS1.0 encryption protocol",
    "schema.pb.analyticsprofile.hs_security_tls11_score.desc": "Score assigned when supporting TLS1.1 encryption protocol",
    "schema.pb.analyticsprofile.hs_security_tls12_score.desc": "Score assigned when supporting TLS1.2 encryption protocol",
    "schema.pb.analyticsprofile.hs_event_throttle_window.desc": "Time window (in secs) within which only unique health change events should occur",
    "schema.pb.analyticsprofile.hs_min_dos_rate.desc": "DoS connection rate below which the DoS security assessment will not kick in.",
    "schema.pb.analyticsprofile.hs_security_certscore_expired.desc": "Score assigned when the certificate has expired",
    "schema.pb.analyticsprofile.hs_security_certscore_le07d.desc": "Score assigned when the certificate expires in less than or equal to 7 days",
    "schema.pb.analyticsprofile.hs_security_certscore_le30d.desc": "Score assigned when the certificate expires in less than or equal to 30 days",
    "schema.pb.analyticsprofile.hs_security_certscore_gt30d.desc": "Score assigned when the certificate expires in more than 30 days",
    "schema.pb.analyticsprofile.hs_security_cipherscore_eq000b.desc": "Score assigned when the minimum cipher strength is 0 bits",
    "schema.pb.analyticsprofile.hs_security_cipherscore_lt128b.desc": "Score assigned when the minimum cipher strength is less than 128 bits",
    "schema.pb.analyticsprofile.hs_security_cipherscore_ge128b.desc": "Score assigned when the minimum cipher strength is greater than equal to 128 bits",
    "schema.pb.analyticsprofile.hs_security_selfsignedcert_penalty.desc": "Deprecated",
    "schema.pb.analyticsprofile.hs_security_encalgo_score_rc4.desc": "Score assigned when RC4 algorithm is used for encryption.",
    "schema.pb.analyticsprofile.hs_security_encalgo_score_none.desc": "Score assigned when no algorithm is used for encryption.",
    "schema.pb.analyticsprofile.hs_security_chain_invalidity_penalty.desc": "Penalty for allowing certificates with invalid chain.",
    "schema.pb.analyticsprofile.hs_security_hsts_penalty.desc": "Penalty for not enabling HSTS.",
    "schema.pb.analyticsprofile.hs_pscore_traffic_threshold_l4_client.desc": "Threshold number of connections in 5min, below which apdexr, apdexc, rum_apdex, and other network quality metrics are not computed.",
    "schema.pb.analyticsprofile.hs_pscore_traffic_threshold_l4_server.desc": "Threshold number of connections in 5min, below which apdexr, apdexc, rum_apdex, and other network quality metrics are not computed.",
    "schema.pb.analyticsprofile.exclude_gs_down_as_error.desc": "Exclude queries to GSLB services that are operationally down from the list of errors.",
    "schema.pb.analyticsprofile.exclude_no_valid_gs_member_as_error.desc": "Exclude queries to GSLB services that have no available members from the list of errors.",
    "schema.pb.analyticsprofile.client_log_config.desc": "Configure which logs are sent to the Avi Controller from SEs and how they are processed.",
    "schema.pb.analyticsprofile.client_log_streaming_config.desc": "Configure to stream logs to an external server.",
    "schema.pb.analyticsprofile.exclude_http_error_codes.desc": "List of HTTP status codes to be excluded from being classified as an error.  Error connections or responses impacts health score, are included as significant logs, and may be classified as part of a DoS attack.",
    "schema.pb.analyticsprofile.ranges.desc": "List of HTTP status code ranges to be excluded from being classified as an error.",
    "schema.pb.analyticsprofile.resp_code_block.desc": "Block of HTTP response codes to be excluded from being classified as an error.",
    "schema.pb.analyticsprofile.exclude_server_dns_error_as_error.desc": "Exclude server dns error response from the list of errors.",
    "schema.pb.analyticsprofile.exclude_dns_policy_drop_as_significant.desc": "Exclude dns policy drops from the list of errors.",
    "schema.pb.analyticsprofile.ondemand_metrics_idle_timeout.desc": "This flag sets the time duration of no live data traffic after which Virtual Service metrics processing is suspended. It is applicable only when enable_ondemand_metrics is set to false.",
    "schema.pb.analyticsprofile.sensitive_log_profile.desc": "Rules applied to the HTTP application log for filtering sensitive information.",
    "schema.pb.analyticsprofile.sip_log_depth.desc": "Maximum number of SIP messages added in logs for a SIP transaction. By default, this value is 20.",
    "schema.pb.analyticsprofile.exclude_sip_error_codes.desc": "List of SIP status codes to be excluded from being classified as an error.",
    "schema.pb.analyticsprofile.healthscore_max_server_limit.desc": "Skips health score computation of pool servers when number of servers in a pool is more than this setting.",
    "schema.pb.analyticsprofile.enable_advanced_analytics.desc": "Enables Advanced Analytics features like Anomaly detection. If set to false, anomaly computation (and associated rulesevents) for VS, Pool and Server metrics will be deactivated. However, setting it to false reduces cpu and memory requirements for Analytics subsystem.",
    "schema.pb.analyticsprofile.hs_security_tls13_score.desc": "Score assigned when supporting TLS1.3 encryption protocol.",
    "schema.pb.analyticsprofile.exclude_revoked_ocsp_responses_as_error.desc": "Exclude the Revoked OCSP certificate status responses from the list of errors.",
    "schema.pb.analyticsprofile.exclude_stale_ocsp_responses_as_error.desc": "Exclude the Stale OCSP certificate status responses from the list of errors.",
    "schema.pb.analyticsprofile.exclude_issuer_revoked_ocsp_responses_as_error.desc": "Exclude the IssuerRevoked OCSP Responses from the list of errors.",
    "schema.pb.analyticsprofile.exclude_unavailable_ocsp_responses_as_error.desc": "Exclude the unavailable OCSP Responses from the list of errors.",
    "schema.pb.analyticsprofile.hs_security_ocsp_revoked_score.desc": "Score assigned when OCSP Certificate Status is set to Revoked or Issuer Revoked.",
    "schema.pb.analyticsprofile.enable_adaptive_config.desc": "Enable adaptive configuration for optimizing resource usage.",
    "schema.pb.analyticsprofile.enable_vs_analytics.desc": "Enable VirtualService (frontend) Analytics. This flag enables metrics and healthscore for Virtualservice.",
    "schema.pb.analyticsprofile.enable_server_analytics.desc": "Enables analytics on backend servers. This may be desired in container environment when there are large number of ephemeral servers. Additionally, no healthscore of servers is computed when server analytics is enabled.",
    "schema.pb.analyticsprofile.enable_se_analytics.desc": "Enable node (service engine) level analytics forvs metrics",
    "schema.pb.analyticsprofile.enable_ondemand_metrics.desc": "Virtual Service (VS) metrics are processed only when there is live data traffic on the VS. In case, VS is idle for a period of time as specified by ondemand_metrics_idle_timeout then metrics processing is suspended for that VS.",
    "schema.pb.analyticsprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.analyticsprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.analyticsprofile.latency_audit_props.desc": "Influence the audit of ingress latency and connection establishement time.",
    "schema.pb.latencyauditproperties.latency_audit_mode.desc": "Audit dispatcher to proxy latency.",
    "schema.pb.latencyauditproperties.latency_threshold.desc": "Maximum latency threshold between dispatcher and proxy.",
    "schema.pb.latencyauditproperties.conn_est_audit_mode.desc": "Audit TCP connection establishment time.",
    "schema.pb.latencyauditproperties.conn_est_threshold.desc": "Maximum threshold for connection establishment time.",
    "schema.pb.rolefiltermatchlabel.key.desc": "Key for filter match.",
    "schema.pb.rolefiltermatchlabel.values.desc": "Values for filter match. Multiple values will be evaluated as OR. Example: key = value1 OR key = value2. Behavior for match is key =  if this field is empty.",
    "schema.pb.sensitivelogprofile.header_field_rules.desc": "Match sensitive header fields in HTTP application log.",
    "schema.pb.sensitivelogprofile.waf_field_rules.desc": "Match sensitive WAF log fields in HTTP application log.",
    "schema.pb.sensitivelogprofile.uri_query_field_rules.desc": "Match sensitive URI query params in HTTP application log. Query params from the URI are extracted and checked for matching sensitive parameter names. A successful match will mask the parameter values in accordance with this rule action.",
    "schema.pb.sensitivefieldrule.name.desc": "Name of the rule",
    "schema.pb.sensitivefieldrule.index.desc": "Index of the rule",
    "schema.pb.sensitivefieldrule.enabled.desc": "Enable rule to match the sensitive fields.",
    "schema.pb.sensitivefieldrule.match.desc": "Criterion to use for matching in the Log.",
    "schema.pb.sensitivefieldrule.action.desc": "Action for the matched log field, for instance the matched field can be removed or masked off.",
    "schema.pb.stringmatch.match_criteria.desc": "Criterion to use for string matching the HTTP request",
    "schema.pb.stringmatch.match_str.desc": "String value(s)",
    "schema.pb.stringmatch.string_group_uuids.desc": "UUID of the string group(s)",
    "schema.pb.httpstatusrange.begin.desc": "Starting HTTP response status code",
    "schema.pb.httpstatusrange.end.desc": "Ending HTTP response status code",
    "schema.pb.clientlogstreamingconfig.external_server.desc": "IP address or hostnames (FQDNs) of destination servers. If an FQDN is provided, this should be resolvable on Avi Service Engines. Multiple servers are supported by furnishing a commaseparated list of IP addresses or host names, for example, 11.11.11.11,23.12.12.4. Optionally, a separate port can be specified for each external server in the list, for example, 11.11.11.11:234,12.12.12.12:343.",
    "schema.pb.clientlogstreamingconfig.external_server_port.desc": "The service port to use for the external servers. If multiple external servers have been specified, the single port number specified here will apply to all those servers for which an explicit port number has not been specified in the external server list.",
    "schema.pb.clientlogstreamingconfig.protocol.desc": "Protocol to use for streaming logs.",
    "schema.pb.clientlogstreamingconfig.log_types_to_send.desc": "Type of logs to stream to the external server. Default is LOGS_ALL, i.e., send all logs.",
    "schema.pb.clientlogstreamingconfig.max_logs_per_second.desc": "Maximum number of logs per second streamed to the remote server. By default, 100 logs per second are streamed. Set this to zero(0) to not enforce any limit.",
    "schema.pb.clientlogstreamingconfig.syslog_config.desc": "Syslog configuration if a Syslogbased protocol is specified for streaming.",
    "schema.pb.clientlogstreamingconfig.format_config.desc": "Configuration to specify the format of streamed logs. By default, each log is encoded in JSON format.",
    "schema.pb.streamingsyslogconfig.facility.desc": "Facility value, as defined in RFC5424, must be between 0 and 23 inclusive.",
    "schema.pb.streamingsyslogconfig.significant_log_severity.desc": "Severity code, as defined in RFC5424, for significant logs. This must be between 0 and 7 inclusive.",
    "schema.pb.streamingsyslogconfig.filtered_log_severity.desc": "Severity code, as defined in RFC5424, for filtered logs. This must be between 0 and 7 inclusive.",
    "schema.pb.streamingsyslogconfig.non_significant_log_severity.desc": "Severity code, as defined in RFC5424, for nonsignificant logs. This must be between 0 and 7 inclusive.",
    "schema.pb.streamingsyslogconfig.hostname.desc": "String to use as the hostname in the syslog messages. This string can contain only printable ASCII characters (hex 21 to hex 7E; no space allowed).",
    "schema.pb.clientlogconfiguration.enable_significant_log_collection.desc": "Enable significant log collection. By default, this flag is enabled, which means that Avi SEs collect significant logs and forward them to Controller for further processing. For example, these logs correspond to error conditions such as when the response code for a request is 500. Users can deactivate this flag to turn off default significant log collection.",
    "schema.pb.clientlogconfiguration.significant_log_processing.desc": "Significant logs are processed by the Logs Analytics system according to this setting.",
    "schema.pb.clientlogconfiguration.filtered_log_processing.desc": "Filtered logs are logs that match any client log filters or rules with logging enabled. Such logs are processed by the Logs Analytics system according to this setting.",
    "schema.pb.clientlogconfiguration.non_significant_log_processing.desc": "Logs that are neither significant nor filtered, are processed by the Logs Analytics system according to this setting.",
    "schema.pb.applicationpersistenceprofile.uuid.desc": "UUID of the persistence profile.",
    "schema.pb.applicationpersistenceprofile.name.desc": "A userfriendly name for the persistence profile.",
    "schema.pb.applicationpersistenceprofile.server_hm_down_recovery.desc": "Specifies behavior when a persistent server has been marked down by a health monitor.",
    "schema.pb.applicationpersistenceprofile.persistence_type.desc": "Method used to persist clients to the same server for a duration of time or a session.",
    "schema.pb.applicationpersistenceprofile.ip_persistence_profile.desc": "Specifies the Client IP Persistence profile parameters.",
    "schema.pb.applicationpersistenceprofile.hdr_persistence_profile.desc": "Specifies the custom HTTP Header Persistence profile parameters.",
    "schema.pb.applicationpersistenceprofile.app_cookie_persistence_profile.desc": "Specifies the Application Cookie Persistence profile parameters.",
    "schema.pb.applicationpersistenceprofile.http_cookie_persistence_profile.desc": "Specifies the HTTP Cookie Persistence profile parameters.",
    "schema.pb.applicationpersistenceprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.applicationpersistenceprofile.is_federated.desc": "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controllercluster and its associated serviceengines.  If the field is set to true, then the object is replicated across the federation.  ",
    "schema.pb.applicationpersistenceprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.httpcookiepersistenceprofile.encryption_key.desc": "Key name to use for cookie encryption",
    "schema.pb.httpcookiepersistenceprofile.cookie_name.desc": "HTTP cookie name for cookie persistence",
    "schema.pb.httpcookiepersistenceprofile.timeout.desc": "The maximum lifetime of any session cookie. No value or 'zero' indicates no timeout.",
    "schema.pb.httpcookiepersistenceprofile.always_send_cookie.desc": "If no persistence cookie was received from the client, always send it.",
    "schema.pb.httpcookiepersistenceprofile.http_only.desc": "Sets the HttpOnly attribute in the cookie. Setting this helps to prevent the client side scripts from accessing this cookie, if supported by browser.",
    "schema.pb.httpcookiepersistenceprofile.is_persistent_cookie.desc": "When True, the cookie used is a persistent cookie, i.e. the cookie shouldn't be used at the end of the timeout. By default, it is set to false, making the cookie a session cookie, which allows clients to use it even after the timeout, if the session is still open.",
    "schema.pb.appcookiepersistenceprofile.prst_hdr_name.desc": "Header or cookie name for application cookie persistence",
    "schema.pb.appcookiepersistenceprofile.timeout.desc": "The length of time after a client's connections have closed before expiring the client's persistence to a server.",
    "schema.pb.appcookiepersistenceprofile.encryption_key.desc": "Key to use for cookie encryption",
    "schema.pb.hdrpersistenceprofile.prst_hdr_name.desc": "Header name for custom header persistence",
    "schema.pb.ippersistenceprofile.ip_persistent_timeout.desc": "The length of time after a client's connections have closed before expiring the client's persistence to a server.",
    "schema.pb.ippersistenceprofile.ip_mask.desc": "Mask to be applied on client IP. This may be used to persist clients from a subnet to the same server. When set to 0, all requests are sent to the same server.",
    "schema.pb.applicationprofile.uuid.desc": "UUID of the application profile.",
    "schema.pb.applicationprofile.name.desc": "The name of the application profile.",
    "schema.pb.applicationprofile.type.desc": "Specifies which application layer proxy is enabled for the virtual service.",
    "schema.pb.applicationprofile.http_profile.desc": "Specifies the HTTP application proxy profile parameters.",
    "schema.pb.applicationprofile.dos_rl_profile.desc": "Specifies various security related controls for virtual service.",
    "schema.pb.applicationprofile.tcp_app_profile.desc": "Specifies the TCP application proxy profile parameters.",
    "schema.pb.applicationprofile.dns_service_profile.desc": "Specifies various DNS service related controls for virtual service.",
    "schema.pb.applicationprofile.preserve_client_ip.desc": "Specifies if client IP needs to be preserved for backend connection. Not compatible with Connection Multiplexing.",
    "schema.pb.applicationprofile.preserve_client_port.desc": "Specifies if we need to preserve client port while preserving client IP for backend connections.",
    "schema.pb.applicationprofile.sip_service_profile.desc": "Specifies various SIP service related controls for virtual service.",
    "schema.pb.applicationprofile.cloud_config_cksum.desc": "Checksum of application profiles. Internally set by cloud connector.",
    "schema.pb.applicationprofile.created_by.desc": "Name of the application profile creator.",
    "schema.pb.applicationprofile.preserve_dest_ip_port.desc": "Specifies if destination IP and port needs to be preserved for backend connection.",
    "schema.pb.applicationprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.applicationprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.applicationprofile.app_service_type.desc": "Specifies app service type for an application.",
    "schema.pb.sipserviceapplicationprofile.transaction_timeout.desc": "SIP transaction timeout in seconds.",
    "schema.pb.dnsserviceapplicationprofile.num_dns_ip.desc": "Specifies the number of IP addresses returned by the DNS Service. Enter 0 to return all IP addresses",
    "schema.pb.dnsserviceapplicationprofile.ttl.desc": "Specifies the TTL value (in seconds) for records served by DNS Service",
    "schema.pb.dnsserviceapplicationprofile.error_response.desc": "Drop or respond to client when the DNS service encounters an error processing a client query. By default, such a request is dropped without any response, or passed through to a passthrough pool, if configured. When set to respond, an appropriate response is sent to client, e.g. NXDOMAIN response for nonexistent records, empty NOERROR response for unsupported queries, etc.",
    "schema.pb.dnsserviceapplicationprofile.domain_names.desc": "Subdomain names serviced by this Virtual Service. These are configured as EndsWith semantics",
    "schema.pb.dnsserviceapplicationprofile.edns.desc": "Enable DNS service to be aware of EDNS (Extension mechanism for DNS). EDNS extensions are parsed and shown in logs. For GSLB services, the EDNS client subnet option can be used to influence Load Balancing.",
    "schema.pb.dnsserviceapplicationprofile.edns_client_subnet_prefix_len.desc": "Specifies the IP address prefix length to use in the EDNS client subnet (ECS) option. When the incoming request does not have any ECS option and the prefix length is specified, an ECS option is inserted in the request passed to upstream server. If the incoming request already has an ECS option, the prefix length (and correspondingly the address) in the ECS option is updated, with the minimum of the prefix length present in the incoming and the configured prefix length, before passing the request to upstream server.",
    "schema.pb.dnsserviceapplicationprofile.dns_over_tcp_enabled.desc": "Enable DNS queryresponse over TCP. This enables analytics for passthrough queries as well.",
    "schema.pb.dnsserviceapplicationprofile.aaaa_empty_response.desc": "Respond to AAAA queries with empty response when there are only IPV4 records",
    "schema.pb.dnsserviceapplicationprofile.ecs_stripping_enabled.desc": "Enable stripping of EDNS client subnet (ecs) option towards client if DNS service inserts ecs option in the DNS query towards upstream servers.",
    "schema.pb.dnsserviceapplicationprofile.negative_caching_ttl.desc": "Specifies the TTL value (in seconds) for SOA (Start of Authority) (corresponding to a authoritative domain owned by this DNS Virtual Service) record's minimum TTL served by the DNS Virtual Service",
    "schema.pb.dnsserviceapplicationprofile.name_server.desc": "The <domainname>  of the name server that was the original or primary source of data for this zone. This field is used in SOA records (mname) pertaining to all domain names specified as authoritative domain names. If not configured, domain name is used as name server in SOA response.",
    "schema.pb.dnsserviceapplicationprofile.admin_email.desc": "Email address of the administrator responsible for this zone . This field is used in SOA records (rname) pertaining to all domain names specified as authoritative domain names. If not configured, the default value 'hostmaster' is used in SOA responses.",
    "schema.pb.dnsserviceapplicationprofile.dns_zones.desc": "DNS zones hosted on this Virtual Service.",
    "schema.pb.dnszone.domain_name.desc": "Domain name authoritatively serviced by this Virtual Service. Queries for FQDNs that are sub domains of this domain and do not have any DNS record in Avi are dropped or NXDomain response sent. For domains which are present, SOA parameters are sent in answer section of response if query type is SOA.",
    "schema.pb.dnszone.name_server.desc": "The primary name server for this zone. This field is used in SOA records as mname (RFC 1035). If not configured, it is inherited from the DNS service profile. If even that is not configured, the domain name is used instead.",
    "schema.pb.dnszone.admin_email.desc": "Email address of the administrator responsible for this zone. This field is used in SOA records as rname (RFC 1035). If not configured, it is inherited from the DNS service profile.",
    "schema.pb.tcpapplicationprofile.proxy_protocol_enabled.desc": "EnableDisable the usage of proxy protocol to convey client connection information to the backend servers.  Valid only for L4 application profiles and TCP proxy.",
    "schema.pb.tcpapplicationprofile.proxy_protocol_version.desc": "Version of proxy protocol to be used to convey client connection information to the backend servers.",
    "schema.pb.tcpapplicationprofile.ssl_client_certificate_mode.desc": "Specifies whether the client side verification is set to none, request or require.",
    "schema.pb.tcpapplicationprofile.pki_profile_uuid.desc": "Select the PKI profile to be associated with the Virtual Service. This profile defines the Certificate Authority and Revocation List.",
    "schema.pb.httpapplicationprofile.connection_multiplexing_enabled.desc": "Allows HTTP requests, not just TCP connections, to be load balanced across servers.  Proxied TCP connections to servers may be reused by multiple clients to improve performance. Not compatible with Preserve Client IP.",
    "schema.pb.httpapplicationprofile.xff_enabled.desc": "The client's original IP address is inserted into an HTTP request header sent to the server.  Servers may use this address for logging or other purposes, rather than Avi's source NAT address used in the Avi to server IP connection.",
    "schema.pb.httpapplicationprofile.xff_alternate_name.desc": "Provide a custom name for the XForwardedFor header sent to the servers.",
    "schema.pb.httpapplicationprofile.hsts_enabled.desc": "Inserts HTTP StrictTransportSecurity header in the HTTPS response.  HSTS can help mitigate maninthemiddle attacks by telling browsers that support HSTS that they should only access this site via HTTPS.",
    "schema.pb.httpapplicationprofile.hsts_max_age.desc": "Number of days for which the client should regard this virtual service as a known HSTS host.",
    "schema.pb.httpapplicationprofile.hsts_subdomains_enabled.desc": "Insert the 'includeSubdomains' directive in the HTTP StrictTransportSecurity header. Adding the includeSubdomains directive signals the UserAgent that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",
    "schema.pb.httpapplicationprofile.secure_cookie_enabled.desc": "Mark server cookies with the 'Secure' attribute.  Client browsers will not send a cookie marked as secure over an unencrypted connection.  If Avi is terminating SSL from clients and passing it as HTTP to the server, the server may return cookies without the secure flag set.",
    "schema.pb.httpapplicationprofile.httponly_enabled.desc": "Mark HTTP cookies as HTTPonly.  This helps mitigate cross site scripting attacks as browsers will not allow these cookies to be read by third parties, such as javascript.",
    "schema.pb.httpapplicationprofile.http_to_https.desc": "Client requests received via HTTP will be redirected to HTTPS.",
    "schema.pb.httpapplicationprofile.server_side_redirect_to_https.desc": "When terminating client SSL sessions at Avi, servers may incorrectly send redirect to clients as HTTP.  This option will rewrite the server's redirect responses for this virtual service from HTTP to HTTPS.",
    "schema.pb.httpapplicationprofile.x_forwarded_proto_enabled.desc": "Insert an XForwardedProto header in the request sent to the server.  When the client connects via SSL, Avi terminates the SSL, and then forwards the requests to the servers via HTTP, so the servers can determine the original protocol via this header.  In this example, the value will be 'https'.",
    "schema.pb.httpapplicationprofile.compression_profile.desc": "HTTP Compression settings to use with this HTTP Profile.",
    "schema.pb.httpapplicationprofile.post_accept_timeout.desc": "The max allowed length of time between a client establishing a TCP connection and Avi receives the first byte of the client's HTTP request.",
    "schema.pb.httpapplicationprofile.client_header_timeout.desc": "The maximum length of time allowed for a client to transmit an entire request header. This helps mitigate various forms of SlowLoris attacks.",
    "schema.pb.httpapplicationprofile.client_body_timeout.desc": "The maximum length of time allowed between consecutive read operations for a client request body. The value '0' specifies no timeout. This setting generally impacts the length of time allowed for a client to send a POST.",
    "schema.pb.httpapplicationprofile.keepalive_timeout.desc": "The max idle time allowed between HTTP requests over a Keepalive connection.",
    "schema.pb.httpapplicationprofile.client_max_header_size.desc": "Maximum size in Kbytes of a single HTTP header in the client request.",
    "schema.pb.httpapplicationprofile.client_max_request_size.desc": "Maximum size in Kbytes of all the client HTTP request headers.This value can be overriden by client_max_header_size if that is larger.",
    "schema.pb.httpapplicationprofile.client_max_body_size.desc": "Maximum size for the client request body.  This limits the size of the client data that can be uploadedposted as part of a single HTTP Request.  Default 0 => Unlimited.",
    "schema.pb.httpapplicationprofile.cache_config.desc": "HTTP Caching config to use with this HTTP Profile.",
    "schema.pb.httpapplicationprofile.max_rps_unknown_uri.desc": "Maximum unknown URIs per second.",
    "schema.pb.httpapplicationprofile.max_rps_cip.desc": "Maximum requests per second per client IP.",
    "schema.pb.httpapplicationprofile.max_rps_uri.desc": "Maximum requests per second per URI.",
    "schema.pb.httpapplicationprofile.max_rps_cip_uri.desc": "Maximum requests per second per client IP and URI.",
    "schema.pb.httpapplicationprofile.ssl_client_certificate_action.desc": "Set of matchaction rules that govern what happens when the client certificate request is enabled",
    "schema.pb.httpapplicationprofile.ssl_client_certificate_mode.desc": "Specifies whether the client side verification is set to none, request or require.",
    "schema.pb.httpapplicationprofile.pki_profile_uuid.desc": "Select the PKI profile to be associated with the Virtual Service. This profile defines the Certificate Authority and Revocation List.",
    "schema.pb.httpapplicationprofile.websockets_enabled.desc": "Enable Websockets proxy for traffic from clients to the virtual service. Connections to this VS start in HTTP mode. If the client requests an Upgrade to Websockets, and the server responds back with success, then the connection is upgraded to WebSockets mode. ",
    "schema.pb.httpapplicationprofile.max_rps_unknown_cip.desc": "Maximum unknown client IPs per second.",
    "schema.pb.httpapplicationprofile.max_bad_rps_cip.desc": "Maximum bad requests per second per client IP.",
    "schema.pb.httpapplicationprofile.max_bad_rps_uri.desc": "Maximum bad requests per second per URI.",
    "schema.pb.httpapplicationprofile.max_bad_rps_cip_uri.desc": "Maximum bad requests per second per client IP and URI.",
    "schema.pb.httpapplicationprofile.keepalive_header.desc": "Send HTTP 'KeepAlive' header to the client. By default, the timeout specified in the 'KeepAlive Timeout' field will be used unless the 'Use App Keepalive Timeout' flag is set, in which case the timeout sent by the application will be honored.",
    "schema.pb.httpapplicationprofile.use_app_keepalive_timeout.desc": "Use 'KeepAlive' header timeout sent by application instead of sending the HTTP KeepAlive Timeout.",
    "schema.pb.httpapplicationprofile.allow_dots_in_header_name.desc": "Allow use of dot (.) in HTTP header names, for instance Header.app.special: PickAppVersionX.",
    "schema.pb.httpapplicationprofile.disable_keepalive_posts_msie6.desc": "Disable keepalive client side connections for older browsers based off MS Internet Explorer 6.0 (MSIE6). For some applications, this might break NTLM authentication for older clients based off MSIE6. For such applications, set this option to false to allow keepalive connections.",
    "schema.pb.httpapplicationprofile.enable_request_body_buffering.desc": "Enable request body buffering for POST requests. If enabled, max buffer size is set to lower of 32M or the value (nonzero) configured in client_max_body_size.",
    "schema.pb.httpapplicationprofile.enable_fire_and_forget.desc": "Enable support for fire and forget feature. If enabled, request from client is forwarded to server even if client prematurely closes the connection",
    "schema.pb.httpapplicationprofile.max_response_headers_size.desc": "Maximum size in Kbytes of all the HTTP response headers.",
    "schema.pb.httpapplicationprofile.respond_with_100_continue.desc": "Avi will respond with 100Continue response if Expect: 100Continue header received from client",
    "schema.pb.httpapplicationprofile.enable_request_body_metrics.desc": "Enable HTTP request body metrics. If enabled, requests from clients are parsed and relevant statistics about them are gathered. Currently, it processes HTTP POST requests with ContentType applicationxwwwformurlencoded or multipartformdata, and adds the number of detected parameters to the l7_client.http_params_count. This is an experimental feature and it may have performance impact. Use it when detailed information about the number of HTTP POST parameters is needed, e.g. for WAF sizing.",
    "schema.pb.httpapplicationprofile.fwd_close_hdr_for_bound_connections.desc": "Forward the Connection: Close header coming from backend server to the client if connectionswitching is enabled, i.e. frontend and backend connections are bound together",
    "schema.pb.httpapplicationprofile.max_keepalive_requests.desc": "The max number of HTTP requests that can be sent over a KeepAlive connection. '0' means unlimited.",
    "schema.pb.httpapplicationprofile.disable_sni_hostname_check.desc": "Disable strict check between TLS servername and HTTP Host name",
    "schema.pb.httpapplicationprofile.reset_conn_http_on_ssl_port.desc": "If enabled, an HTTP request on an SSL port will result in connection close instead of a 400 response.",
    "schema.pb.httpapplicationprofile.http_upstream_buffer_size.desc": "Size of HTTP buffer in kB.",
    "schema.pb.httpapplicationprofile.enable_chunk_merge.desc": "Enable chunk body merge for chunked transfer encoding response.",
    "schema.pb.httpapplicationprofile.http2_profile.desc": "Specifies the HTTP2 specific application profile parameters.",
    "schema.pb.httpapplicationprofile.detect_ntlm_app.desc": "Detect NTLM apps based on the HTTP Response from the server. Once detected, connection multiplexing will be disabled for that connection.",
    "schema.pb.httpapplicationprofile.use_true_client_ip.desc": "Detect client IP from user specified header.",
    "schema.pb.httpapplicationprofile.true_client_ip.desc": "Detect client IP from user specified header at the configured index in the specified direction.",
    "schema.pb.httpapplicationprofile.pass_through_x_accel_headers.desc": "Pass through XACCEL headers.",
    "schema.pb.trueclientipconfig.headers.desc": "Headers to derive client IP from. The header value needs to be a commaseparated list of IP addresses. If none specified and use_true_client_ip is set to true, it will use XForwardedFor header, if present.",
    "schema.pb.trueclientipconfig.index_in_header.desc": "Position in the configured direction, in the specified header's value, to be used to set true client IP. If the value is greater than the number of IP addresses in the header, then the last IP address in the configured direction in the header will be used.",
    "schema.pb.trueclientipconfig.direction.desc": "Denotes the end from which to count the IPs in the specified header value.",
    "schema.pb.sslclientrequestheader.request_header.desc": "If this header exists, reset the connection. If the ssl variable is specified, add a header with this value",
    "schema.pb.sslclientrequestheader.request_header_value.desc": "Set the request header with the value as indicated by this SSL variable. Eg. send the whole certificate in PEM format",
    "schema.pb.httpcacheconfig.enabled.desc": "Enabledisable HTTP object caching.When enabling caching for the first time, SE Group app_cache_percent must be set to allocate shared memory required for caching (A service engine restart is needed after settingresetting the SE group value).",
    "schema.pb.httpcacheconfig.xcache_header.desc": "Add an XCache header to content served from cache, which indicates to the client that the object was served from an intermediate cache.",
    "schema.pb.httpcacheconfig.age_header.desc": "Add an Age header to content served from cache, which indicates to the client the number of seconds the object has been in the cache.",
    "schema.pb.httpcacheconfig.date_header.desc": "If a Date header was not added by the server, add a Date header to the object served from cache.  This indicates to the client when the object was originally sent by the server to the cache.",
    "schema.pb.httpcacheconfig.min_object_size.desc": "Minimum size of an object to store in the cache.",
    "schema.pb.httpcacheconfig.max_object_size.desc": "Maximum size of an object to store in the cache.",
    "schema.pb.httpcacheconfig.default_expire.desc": "Default expiration time of cache objects received from the server without a CacheControl expiration header.  This value may be overwritten by the Heuristic Expire setting.",
    "schema.pb.httpcacheconfig.heuristic_expire.desc": "If a response object from the server does not include the CacheControl header, but does include a LastModified header, the system will use this time to calculate the CacheControl expiration.  If unable to solicit an LastModified header, then the system will fall back to the Cache Expire Time value.",
    "schema.pb.httpcacheconfig.max_cache_size.desc": "Max size, in bytes, of the cache.  The default, zero, indicates auto configuration.",
    "schema.pb.httpcacheconfig.query_cacheable.desc": "Allow caching of objects whose URI included a query argument.  When disabled, these objects are not cached.  When enabled, the request must match the URI query to be considered a hit.",
    "schema.pb.httpcacheconfig.mime_types_list.desc": "Allowlist of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to ",
    "schema.pb.httpcacheconfig.mime_types_group_uuids.desc": "Allowlist string group of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to ",
    "schema.pb.httpcacheconfig.aggressive.desc": "Enabledisable caching objects without CacheControl headers",
    "schema.pb.httpcacheconfig.uri_non_cacheable.desc": "Noncacheable URI configuration with match criteria.",
    "schema.pb.httpcacheconfig.ignore_request_cache_control.desc": "Ignore client's cache control headers when fetching or storing from and to the cache.",
    "schema.pb.httpcacheconfig.mime_types_block_lists.desc": "Blocklist of noncacheable mime types",
    "schema.pb.httpcacheconfig.mime_types_block_group_uuids.desc": "Blocklist string group of noncacheable mime types",
    "schema.pb.pathmatch.match_criteria.desc": "Criterion to use for matching the path in the HTTP request URI.",
    "schema.pb.pathmatch.match_case.desc": "Case sensitivity to use for the matching",
    "schema.pb.pathmatch.match_str.desc": "String values",
    "schema.pb.pathmatch.string_group_uuids.desc": "UUID of the string group(s)",
    "schema.pb.compressionprofile.compression.desc": "Compress HTTP response content if it wasn't already compressed.",
    "schema.pb.compressionprofile.remove_accept_encoding_header.desc": "Offload compression from the servers to AVI. Saves compute cycles on the servers.",
    "schema.pb.compressionprofile.compressible_content_uuid.desc": "Compress only content types listed in this string group. Content types not present in this list are not compressed.",
    "schema.pb.compressionprofile.type.desc": "Compress content automatically or add custom filters to define compressible content and compression levels.",
    "schema.pb.compressionprofile.filter.desc": "Custom filters used when auto compression is not selected.",
    "schema.pb.compressionprofile.buf_num.desc": "Number of buffers to use for compression output.",
    "schema.pb.compressionprofile.buf_size.desc": "Size of each buffer used for compression output, this should ideally be a multiple of pagesize.",
    "schema.pb.compressionprofile.level_normal.desc": "Level of compression to apply on content selected for normal compression.",
    "schema.pb.compressionprofile.level_aggressive.desc": "Level of compression to apply on content selected for aggressive compression.",
    "schema.pb.compressionprofile.window_size.desc": "window size used by compression, rounded to the last power of 2.",
    "schema.pb.compressionprofile.hash_size.desc": "hash size used by compression, rounded to the last power of 2.",
    "schema.pb.compressionprofile.min_length.desc": "Minimum response content length to enable compression",
    "schema.pb.compressionprofile.max_low_rtt.desc": "If client RTT is higher than this threshold, enable normal compression on the response.",
    "schema.pb.compressionprofile.min_high_rtt.desc": "If client RTT is higher than this threshold, enable aggressive compression on the response.  ",
    "schema.pb.compressionprofile.mobile_str_uuid.desc": "Values that identify mobile browsers in order to enable aggressive compression.",
    "schema.pb.compressionfilter.match.desc": "Whether to apply Filter when group criteria is matched or not",
    "schema.pb.ipaddrrange.begin.desc": "Starting IP address of the range",
    "schema.pb.ipaddrrange.end.desc": "Ending IP address of the range",
    "schema.pb.ipaddr.addr.desc": "IP address",
    "schema.pb.authorizationpolicy.authz_rules.desc": "Authorization Policy Rules",
    "schema.pb.authorizationrule.name.desc": "Name of the rule",
    "schema.pb.authorizationrule.index.desc": "Index of the Authorization Policy rule",
    "schema.pb.authorizationrule.enable.desc": "Enable or disable the rule",
    "schema.pb.authorizationrule.match.desc": "Authorization match criteria for the rule.",
    "schema.pb.authorizationrule.action.desc": "Authorization action when rule is matched.",
    "schema.pb.authorizationaction.type.desc": "Defines the action taken when an authorization policy rule is matched. By default, access is allowed to the requested resource.",
    "schema.pb.authorizationaction.status_code.desc": "HTTP status code to use for local response when an policy rule is matched.",
    "schema.pb.authorizationmatch.attr_matches.desc": "Attributes whose values need to be matched ",
    "schema.pb.authorizationmatch.path.desc": "PathsURLs to be matched.",
    "schema.pb.authorizationmatch.host_hdr.desc": "Host header value to be matched.",
    "schema.pb.authorizationmatch.method.desc": "HTTP methods to be matched.",
    "schema.pb.authorizationmatch.access_token.desc": "Access Token claims to be matched.",
    "schema.pb.jwtmatch.token_name.desc": "Token for which the claims need to be validated.",
    "schema.pb.jwtmatch.matches.desc": "Claims whose values need to be matched.",
    "schema.pb.jwtclaimmatch.name.desc": "JWT Claim name to be validated.",
    "schema.pb.jwtclaimmatch.is_mandatory.desc": "Specified Claim should be present in the JWT.",
    "schema.pb.jwtclaimmatch.validate.desc": "Specifies whether to validate the Claim value.",
    "schema.pb.jwtclaimmatch.type.desc": "Specifies the type of the Claim.",
    "schema.pb.jwtclaimmatch.int_match.desc": "Integer value against which the claim is matched.",
    "schema.pb.jwtclaimmatch.bool_match.desc": "Boolean value against which the claim is matched.",
    "schema.pb.jwtclaimmatch.string_match.desc": "String values against which the claim is matched.",
    "schema.pb.methodmatch.match_criteria.desc": "Criterion to use for HTTP method matching the method in the HTTP request",
    "schema.pb.methodmatch.methods.desc": "Configure HTTP method(s)",
    "schema.pb.hosthdrmatch.match_criteria.desc": "Criterion to use for the host header value match",
    "schema.pb.hosthdrmatch.match_case.desc": "Case sensitivity to use for the match",
    "schema.pb.hosthdrmatch.value.desc": "String value(s) in the host header",
    "schema.pb.authattributematch.attribute_name.desc": "Attribute name whose values will be looked up in the access lists.",
    "schema.pb.authattributematch.attribute_value_list.desc": "Attribute Values used to determine access when authentication applies.",
    "schema.pb.authprofile.uuid.desc": "UUID of the Auth Profile.",
    "schema.pb.authprofile.name.desc": "Name of the Auth Profile.",
    "schema.pb.authprofile.type.desc": "Type of the Auth Profile.",
    "schema.pb.authprofile.ldap.desc": "LDAP server and directory settings.",
    "schema.pb.authprofile.http.desc": "HTTP user authentication params.",
    "schema.pb.authprofile.tacacs_plus.desc": "TACACS+ settings",
    "schema.pb.authprofile.saml.desc": "SAML settings",
    "schema.pb.authprofile.pa_agent_uuid.desc": "PingAccessAgent uuid",
    "schema.pb.authprofile.jwt_profile_uuid.desc": "JWTServerProfile to be used for authentication.",
    "schema.pb.authprofile.oauth_profile.desc": "OAuth Profile  Common endpoint information.",
    "schema.pb.authprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.authprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.oauthprofile.authorization_endpoint.desc": "URL of authorization server.",
    "schema.pb.oauthprofile.token_endpoint.desc": "URL of token exchange server.",
    "schema.pb.oauthprofile.introspection_endpoint.desc": "URL of token introspection server.",
    "schema.pb.oauthprofile.jwks_uri.desc": "JWKS URL of the endpoint that hosts the public keys that can be used to verify any JWT issued by the authorization server.",
    "schema.pb.oauthprofile.jwks_timeout.desc": "Lifetime of the cached JWKS keys.",
    "schema.pb.oauthprofile.issuer.desc": "Uniquely identifiable name of the Token Issuer.",
    "schema.pb.oauthprofile.pool_uuid.desc": "Pool object to interface with Authorization Server endpoints.",
    "schema.pb.oauthprofile.oauth_resp_buffer_sz.desc": "Buffering size for the responses from the OAUTH enpoints.",
    "schema.pb.oauthprofile.userinfo_endpoint.desc": "URL of the Userinfo Endpoint.",
    "schema.pb.samlsettings.idp.desc": "Configure remote Identity provider settings",
    "schema.pb.samlsettings.sp.desc": "Configure service provider settings for the Controller",
    "schema.pb.samlserviceprovidersettings.saml_entity_type.desc": "Type of SAML endpoint",
    "schema.pb.samlserviceprovidersettings.fqdn.desc": "FQDN if entity type is DNS_FQDN ",
    "schema.pb.samlserviceprovidersettings.sp_nodes.desc": "Service Provider node information",
    "schema.pb.samlserviceprovidersettings.org_name.desc": "Service Provider Organization Name",
    "schema.pb.samlserviceprovidersettings.org_display_name.desc": "Service Provider Organization Display Name",
    "schema.pb.samlserviceprovidersettings.org_url.desc": "Service Provider Organization URL",
    "schema.pb.samlserviceprovidersettings.tech_contact_name.desc": "Service Provider technical contact name",
    "schema.pb.samlserviceprovidersettings.tech_contact_email.desc": "Service Provider technical contact email",
    "schema.pb.samlserviceprovidernode.name.desc": "Refers to the Cluster name identifier (Virtual IP or FQDN).",
    "schema.pb.samlserviceprovidernode.entity_id.desc": "Globally unique entityID for this node. Entity ID on the IDP should match this.",
    "schema.pb.samlserviceprovidernode.single_signon_url.desc": "Single Signon URL to be programmed on the IDP.",
    "schema.pb.samlserviceprovidernode.signing_ssl_key_and_certificate_uuid.desc": "Service Engines will use this SSL certificate to sign assertions going to the IdP.",
    "schema.pb.samlidentityprovidersettings.metadata.desc": "SAML IDP metadata",
    "schema.pb.tacacsplusauthsettings.server.desc": "TACACS+ server IP address or FQDN.",
    "schema.pb.tacacsplusauthsettings.port.desc": "TACACS+ server listening port",
    "schema.pb.tacacsplusauthsettings.password.desc": "TACACS+ server shared secret",
    "schema.pb.tacacsplusauthsettings.service.desc": "TACACS+ service",
    "schema.pb.tacacsplusauthsettings.authorization_attrs.desc": "TACACS+ authorization attribute value pairs",
    "schema.pb.authtacacsplusattributevaluepair.name.desc": "attribute name",
    "schema.pb.authtacacsplusattributevaluepair.value.desc": "attribute value",
    "schema.pb.authtacacsplusattributevaluepair.mandatory.desc": "mandatory",
    "schema.pb.authprofilehttpclientparams.request_header.desc": "Insert an HTTP header.  This field is used to define the header name.  The value of the header is set to the client's HTTP Auth user ID.",
    "schema.pb.authprofilehttpclientparams.cache_expiration_time.desc": "The max allowed length of time a clients authentication is cached",
    "schema.pb.authprofilehttpclientparams.require_user_groups.desc": "A user should be a member of these groups.  Each group is defined by the DN.  For example, CN=testgroup,OU=groups,dc=example,dc=avinetworks,DC=com",
    "schema.pb.ldapauthsettings.server.desc": "LDAP server IP address or Hostname. Use IP address if an auth profile is used to configure Virtual Service.",
    "schema.pb.ldapauthsettings.port.desc": "Query the LDAP servers on this port.",
    "schema.pb.ldapauthsettings.security_mode.desc": "LDAP connection security mode.",
    "schema.pb.ldapauthsettings.base_dn.desc": "The LDAP base DN.  For example, avinetworks.com would be DC=avinetworks,DC=com",
    "schema.pb.ldapauthsettings.bind_as_administrator.desc": "LDAP administrator credentials are used to search for users and group memberships.",
    "schema.pb.ldapauthsettings.settings.desc": "LDAP full directory configuration with administrator credentials",
    "schema.pb.ldapauthsettings.user_bind.desc": "LDAP anonymous bind configuration",
    "schema.pb.ldapauthsettings.email_attribute.desc": "LDAP attribute that refers to user email",
    "schema.pb.ldapauthsettings.full_name_attribute.desc": "LDAP attribute that refers to user's full name",
    "schema.pb.ldapuserbindsettings.dn_template.desc": "LDAP user DN pattern is used to bind LDAP user after replacing the user token with real username.",
    "schema.pb.ldapuserbindsettings.token.desc": "LDAP token is replaced with real user name in the user DN pattern.",
    "schema.pb.ldapuserbindsettings.user_id_attribute.desc": "LDAP user id attribute is the login attribute that uniquely identifies a single user record.",
    "schema.pb.ldapuserbindsettings.user_attributes.desc": "LDAP user attributes to fetch on a successful user bind.",
    "schema.pb.ldapdirectorysettings.admin_bind_dn.desc": "LDAP Admin User DN. Administrator credentials are required to search for users under user search DN or groups under group search DN.",
    "schema.pb.ldapdirectorysettings.password.desc": "LDAP Admin User Password",
    "schema.pb.ldapdirectorysettings.user_search_dn.desc": "LDAP user search DN is the root of search for a given user in the LDAP directory. Only user records present in this LDAP directory subtree will be validated.",
    "schema.pb.ldapdirectorysettings.user_search_scope.desc": "LDAP user search scope defines how deep to search for the user starting from user search DN.",
    "schema.pb.ldapdirectorysettings.user_id_attribute.desc": "LDAP user id attribute is the login attribute that uniquely identifies a single user record.",
    "schema.pb.ldapdirectorysettings.user_attributes.desc": "LDAP user attributes to fetch on a successful user bind.",
    "schema.pb.ldapdirectorysettings.group_search_dn.desc": "LDAP group search DN is the root of search for a given group in the LDAP directory. Only matching groups present in this LDAP directory subtree will be checked for user membership.",
    "schema.pb.ldapdirectorysettings.group_member_attribute.desc": "LDAP group attribute that identifies each of the group members.",
    "schema.pb.ldapdirectorysettings.group_search_scope.desc": "LDAP group search scope defines how deep to search for the group starting from the group search DN.",
    "schema.pb.ldapdirectorysettings.group_member_is_full_dn.desc": "Group member entries contain full DNs instead of just user id attribute values",
    "schema.pb.ldapdirectorysettings.group_filter.desc": "Group filter is used to identify groups during search",
    "schema.pb.ldapdirectorysettings.ignore_referrals.desc": "During user or group search, ignore searching referrals.",
    "schema.pb.autoscalelaunchconfig.image_id.desc": "Unique ID of the Amazon Machine Image (AMI)  or OpenStack VM ID.",
    "schema.pb.autoscalelaunchconfig.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.autoscalelaunchconfig.use_external_asg.desc": "If set to True, ServerAutoscalePolicy will use the autoscaling group (external_autoscaling_groups) from Pool to perform scale up and scale down. Pool should have single autoscaling group configured.",
    "schema.pb.autoscalelaunchconfig.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.autoscalemesossettings.force.desc": "Apply scaleout even when there are deployments inprogress.",
    "schema.pb.autoscaleopenstacksettings.heat_scale_up_url.desc": "Avi Controller will use this URL to scale upthe pool. Cloud connector will automatically update the membership. This is an alpha feature.",
    "schema.pb.autoscaleopenstacksettings.heat_scale_down_url.desc": "Avi Controller will use this URL to scale downthe pool. Cloud connector will automatically update the membership. This is an alpha feature.",
    "schema.pb.backup.file_name.desc": "The file name of backup.",
    "schema.pb.backup.timestamp.desc": "Unix Timestamp of when the backup file is created",
    "schema.pb.backup.local_file_url.desc": "URL to download the backup file",
    "schema.pb.backup.remote_file_url.desc": "URL to download the backup file",
    "schema.pb.backup.scheduler_uuid.desc": "Scheduler Information",
    "schema.pb.backup.backup_config_uuid.desc": "BackupConfiguration Information",
    "schema.pb.backupconfiguration.name.desc": "Name of backup configuration.",
    "schema.pb.backupconfiguration.save_local.desc": "Local Backup",
    "schema.pb.backupconfiguration.maximum_backups_stored.desc": "Rotate the backup files based on this count.",
    "schema.pb.backupconfiguration.upload_to_remote_host.desc": "Remote Backup",
    "schema.pb.backupconfiguration.ssh_user_uuid.desc": "Access Credentials for remote destination.",
    "schema.pb.backupconfiguration.remote_directory.desc": "Directory at remote destination with write permission for ssh user.",
    "schema.pb.backupconfiguration.remote_hostname.desc": "Remote Destination.",
    "schema.pb.backupconfiguration.backup_passphrase.desc": "Default passphrase for configuration export and periodic backup.",
    "schema.pb.backupconfiguration.backup_file_prefix.desc": "Prefix of the exported configuration file",
    "schema.pb.backupconfiguration.upload_to_s3.desc": "Cloud Backup",
    "schema.pb.backupconfiguration.aws_access_key.desc": "AWS Access Key ID.",
    "schema.pb.backupconfiguration.aws_secret_access.desc": "AWS Secret Access Key.",
    "schema.pb.backupconfiguration.aws_bucket_id.desc": "AWS bucket.",
    "schema.pb.backupconfiguration.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.botdetectionpolicy.uuid.desc": "A unique identifier to this Bot Detection Policy.",
    "schema.pb.botdetectionpolicy.tenant_uuid.desc": "The unique identifier of the tenant to which this policy belongs.",
    "schema.pb.botdetectionpolicy.name.desc": "The name of this Bot Detection Policy.",
    "schema.pb.botdetectionpolicy.description.desc": "Humanreadable description of this Bot Detection Policy.",
    "schema.pb.botdetectionpolicy.allow_list.desc": "Allow the user to skip BotManagement for selected requests.",
    "schema.pb.botdetectionpolicy.ip_reputation_detector.desc": "The IP reputation configuration used in this policy.",
    "schema.pb.botdetectionpolicy.ip_location_detector.desc": "The IP location configuration used in this policy.",
    "schema.pb.botdetectionpolicy.user_agent_detector.desc": "The UserAgent configuration used in this policy.",
    "schema.pb.botdetectionpolicy.user_consolidator_uuid.desc": "The userprovided ruleset for consolidating the results of different decider phases. This runs before the system consolidator. If it successfully sets a consolidation, the system consolidator will not change it.",
    "schema.pb.botdetectionpolicy.system_consolidator_uuid.desc": "The installation provides an updated ruleset for consolidating the results of different decider phases.",
    "schema.pb.botdetectionpolicy.user_bot_mapping_uuid.desc": "Userdefined rules for classification. These are applied before the system classification rules. If a rule matches, processing terminates and the systemdefined rules will not run.",
    "schema.pb.botdetectionpolicy.system_bot_mapping_uuid.desc": "Systemdefined rules for classification.",
    "schema.pb.botconfiguseragent.enabled.desc": "Whether User Agentbased Bot detection is enabled.",
    "schema.pb.botconfigiplocation.enabled.desc": "If this is enabled, IP location information is used to determine if a client is a known search engine bot, comes from the cloud, etc.",
    "schema.pb.botconfigiplocation.ip_location_db_uuid.desc": "The UUID of the GeoIP database to use.",
    "schema.pb.botconfigiplocation.system_cloud_providers_uuid.desc": "The systemdefined cloud providers.",
    "schema.pb.botconfigiplocation.system_search_engines_uuid.desc": "The systemdefined search engines.",
    "schema.pb.botconfigipreputation.enabled.desc": "Whether IP reputationbased Bot detection is enabled.",
    "schema.pb.botconfigipreputation.ip_reputation_db_uuid.desc": "The UUID of the IP reputation DB to use.",
    "schema.pb.botconfigipreputation.system_ip_reputation_mapping_uuid.desc": "The systemprovided mapping from IP reputation types to Bot types.",
    "schema.pb.botallowlist.rules.desc": "Allow rules to control which requests undergo BOT detection.",
    "schema.pb.botallowrule.index.desc": "Rules are processed in order of this index field.",
    "schema.pb.botallowrule.name.desc": "A name describing the rule in a short form.",
    "schema.pb.botallowrule.condition.desc": "The condition to match.",
    "schema.pb.botallowrule.action.desc": "The action to take.",
    "schema.pb.matchtarget.client_ip.desc": "Configure client ip addresses",
    "schema.pb.matchtarget.vs_port.desc": "Configure virtual service ports",
    "schema.pb.matchtarget.protocol.desc": "Configure the type of HTTP protocol",
    "schema.pb.matchtarget.method.desc": "Configure HTTP methods",
    "schema.pb.matchtarget.version.desc": "Configure versions of the HTTP protocol",
    "schema.pb.matchtarget.path.desc": "Configure request paths",
    "schema.pb.matchtarget.query.desc": "Configure request query",
    "schema.pb.matchtarget.hdrs.desc": "Configure HTTP header(s). All configured headers must match.",
    "schema.pb.matchtarget.cookie.desc": "Configure HTTP cookie(s)",
    "schema.pb.matchtarget.host_hdr.desc": "Configure the host header",
    "schema.pb.matchtarget.ip_reputation_type.desc": "Configure IP reputation",
    "schema.pb.matchtarget.geo_matches.desc": "Configure the geo information",
    "schema.pb.matchtarget.bot_detection_result.desc": "Configure the bot classification result",
    "schema.pb.matchtarget.source_ip.desc": "Configure source ip addresses.",
    "schema.pb.ipaddrmatch.match_criteria.desc": "Criterion to use for IP address matching the HTTP request",
    "schema.pb.ipaddrmatch.addrs.desc": "IP address(es)",
    "schema.pb.ipaddrmatch.ranges.desc": "IP address range(s)",
    "schema.pb.ipaddrmatch.prefixes.desc": "IP address prefix(es)",
    "schema.pb.ipaddrmatch.group_uuids.desc": "UUID of IP address group(s)",
    "schema.pb.botdetectionmatch.match_operation.desc": "Match criteria.",
    "schema.pb.botdetectionmatch.classifications.desc": "Bot classification types.",
    "schema.pb.geomatch.match_operation.desc": "Match criteria.",
    "schema.pb.geomatch.attribute.desc": "The Geo data type to match on.",
    "schema.pb.geomatch.values.desc": "The values to match.",
    "schema.pb.ipreputationtypematch.match_operation.desc": "Match criteria.",
    "schema.pb.ipreputationtypematch.reputation_types.desc": "IP reputation type.",
    "schema.pb.cookiematch.match_criteria.desc": "Criterion to use for matching the cookie in the HTTP request",
    "schema.pb.cookiematch.name.desc": "Name of the cookie",
    "schema.pb.cookiematch.match_case.desc": "Case sensitivity to use for the match",
    "schema.pb.cookiematch.value.desc": "String value in the cookie",
    "schema.pb.hdrmatch.match_criteria.desc": "Criterion to use for matching headers in the HTTP request",
    "schema.pb.hdrmatch.hdr.desc": "Name of the HTTP header whose value is to be matched",
    "schema.pb.hdrmatch.match_case.desc": "Case sensitivity to use for the match",
    "schema.pb.hdrmatch.value.desc": "String values to match in the HTTP header",
    "schema.pb.querymatch.match_criteria.desc": "Criterion to use for matching the query in HTTP request URI",
    "schema.pb.querymatch.match_case.desc": "Case sensitivity to use for the match",
    "schema.pb.querymatch.match_str.desc": "String value(s)",
    "schema.pb.querymatch.string_group_uuids.desc": "UUID of the string group(s)",
    "schema.pb.httpversionmatch.match_criteria.desc": "Criterion to use for HTTP version matching the version used in the HTTP request",
    "schema.pb.httpversionmatch.versions.desc": "HTTP protocol version",
    "schema.pb.protocolmatch.match_criteria.desc": "Criterion to use for protocol matching the HTTP request",
    "schema.pb.protocolmatch.protocols.desc": "HTTP or HTTPS protocol",
    "schema.pb.portmatch.match_criteria.desc": "Criterion to use for port matching the HTTP request",
    "schema.pb.portmatch.ports.desc": "Listening TCP port(s)",
    "schema.pb.botipreputationtypemapping.uuid.desc": "A unique identifier of this mapping.",
    "schema.pb.botipreputationtypemapping.tenant_uuid.desc": "The unique identifier of the tenant to which this mapping belongs.",
    "schema.pb.botipreputationtypemapping.name.desc": "The name of this mapping.",
    "schema.pb.botipreputationtypemapping.ip_reputation_mappings.desc": "Map every IPReputationType to a bot type (can be unknown).",
    "schema.pb.ipreputationtypemapping.ip_reputation_type.desc": "The type of IP reputation that is mapped to a Bot Identification.",
    "schema.pb.ipreputationtypemapping.bot_identification.desc": "The Bot Identification to which the IP reputation type is mapped.",
    "schema.pb.botmapping.uuid.desc": "A unique identifier for this mapping.",
    "schema.pb.botmapping.tenant_uuid.desc": "The unique identifier of the tenant to which this mapping belongs.",
    "schema.pb.botmapping.name.desc": "The name of this mapping.",
    "schema.pb.botmapping.mapping_rules.desc": "Rules for bot classification.",
    "schema.pb.botmappingrule.index.desc": "Rules are processed in order of this index field.",
    "schema.pb.botmappingrule.name.desc": "A name describing the rule in a short form.",
    "schema.pb.botmappingrule.classification.desc": "The assigned classification for this client.",
    "schema.pb.botmappingrule.match.desc": "How to match the request: all the specified properties must be fulfilled.",
    "schema.pb.botmappingrulematchtarget.component_matcher.desc": "The component for which this mapping is used.",
    "schema.pb.botmappingrulematchtarget.class_matcher.desc": "How to match the BotClientClass.",
    "schema.pb.botmappingrulematchtarget.type_matcher.desc": "How to match the BotClientType.",
    "schema.pb.botmappingrulematchtarget.identifier_matcher.desc": "The list of bot identifier names and how they're matched.",
    "schema.pb.botmappingrulematchtarget.client_ip.desc": "Configure client ip addresses.",
    "schema.pb.botmappingrulematchtarget.method.desc": "Configure HTTP methods.",
    "schema.pb.botmappingrulematchtarget.path.desc": "Configure request paths.",
    "schema.pb.botmappingrulematchtarget.hdrs.desc": "Configure HTTP header(s). All configured headers must match.",
    "schema.pb.botmappingrulematchtarget.host_hdr.desc": "Configure the host header.",
    "schema.pb.bottypematcher.op.desc": "The match operation.",
    "schema.pb.bottypematcher.client_types.desc": "The list of client types.",
    "schema.pb.botclassmatcher.op.desc": "The match operation.",
    "schema.pb.botclassmatcher.client_classes.desc": "The list of client classes.",
    "schema.pb.certificatemanagementprofile.name.desc": "Name of the PKI Profile",
    "schema.pb.certificatemanagementprofile.run_script_uuid.desc": "Alert script config object for certificate management profile.",
    "schema.pb.certificatemanagementprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.certificatemanagementprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.cloud.vtype.desc": "Cloud type",
    "schema.pb.cloud.gcp_configuration.desc": "Google Cloud Platform Configuration",
    "schema.pb.cloud.nsxt_configuration.desc": "NSXT Cloud Platform Configuration",
    "schema.pb.cloud.dhcp_enabled.desc": "Select the IP address management scheme",
    "schema.pb.cloud.mtu.desc": "MTU setting for the cloud",
    "schema.pb.cloud.prefer_static_routes.desc": "Prefer static routes over interface routes during VirtualService placement.",
    "schema.pb.cloud.enable_vip_static_routes.desc": "Use static routes for VIP side network resolution during VirtualService placement.",
    "schema.pb.cloud.obj_name_prefix.desc": "Default prefix for all automatically created objects in this cloud. This prefix can be overridden by the SEGroup template.",
    "schema.pb.cloud.license_type.desc": "If no license type is specified then default license enforcement for the cloud type is chosen. The default mappings are Container Cloud is Max Ses, OpenStack and VMware is cores and linux it is Sockets.",
    "schema.pb.cloud.ipam_provider_uuid.desc": "Ipam Profile for the cloud.",
    "schema.pb.cloud.dns_provider_uuid.desc": "DNS Profile for the cloud.",
    "schema.pb.cloud.east_west_ipam_provider_uuid.desc": "Ipam Profile for EastWest services. Warning  Please use virtual subnets in this IPAM profile that do not conflict with the underlay networks or any overlay networks in the cluster. For example in AWS and GCP, 169.254.0.016 is used for storing instance metadata. Hence, it should not be used in this profile.",
    "schema.pb.cloud.east_west_dns_provider_uuid.desc": "DNS Profile for EastWest services.",
    "schema.pb.cloud.custom_tags.desc": "Custom tags for all Avi created resources in the cloud infrastructure.",
    "schema.pb.cloud.state_based_dns_registration.desc": "DNS records for VIPs are addeddeleted based on the operational state of the VIPs.",
    "schema.pb.cloud.ip6_autocfg_enabled.desc": "Enable IPv6 auto configuration",
    "schema.pb.cloud.dns_resolution_on_se.desc": "By default, pool member FQDNs are resolved on the Controller. When this is set, pool member FQDNs are instead resolved on Service Engines in this cloud. This is useful in scenarios where pool member FQDNs can only be resolved from Service Engines and not from the Controller.",
    "schema.pb.cloud.enable_vip_on_all_interfaces.desc": "Enable VIP on all data interfaces for the Cloud.",
    "schema.pb.cloud.maintenance_mode.desc": "Cloud is in maintenance mode.",
    "schema.pb.cloud.license_tier.desc": "Specifies the default license tier which would be used by new SE Groups. This field by default inherits the value from system configuration.",
    "schema.pb.cloud.autoscale_polling_interval.desc": "CloudConnector polling interval in seconds for external autoscale groups, minimum 60 seconds.",
    "schema.pb.cloud.se_group_template_uuid.desc": "The Service Engine Group to use as template.",
    "schema.pb.cloud.vmc_deployment.desc": "This deployment is VMware on AWS cloud.",
    "schema.pb.cloud.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.cloud.dns_resolvers.desc": "DNS resolver for the cloud.",
    "schema.pb.dnsresolver.resolver_name.desc": "Unique name for resolver config.",
    "schema.pb.dnsresolver.nameserver_ips.desc": "Name server IPv4 addresses",
    "schema.pb.dnsresolver.fixed_ttl.desc": "If configured, this value used for refreshing the DNS entries.Overrides both received_ttl and min_ttl. The entries are refreshed only on fixed_ttleven when received_ttl is less than fixed_ttl.",
    "schema.pb.dnsresolver.min_ttl.desc": "If configured, the min_ttl overrides the ttl from responses when ttl < min_ttl,effectively ttl = max(recieved_ttl, min_ttl)",
    "schema.pb.dnsresolver.use_mgmt.desc": "If enabled, DNS resolution is performed via management network.",
    "schema.pb.nsxtconfiguration.nsxt_url.desc": "NSXT manager hostname or IP address.",
    "schema.pb.nsxtconfiguration.nsxt_credentials_uuid.desc": "Credentials to access NSXT manager",
    "schema.pb.nsxtconfiguration.site_id.desc": "Site where transport zone belongs to.",
    "schema.pb.nsxtconfiguration.enforcementpoint_id.desc": "Enforcement point is where the rules of a policy to apply.",
    "schema.pb.nsxtconfiguration.domain_id.desc": "Domain where NSGroup objects belongs to.",
    "schema.pb.nsxtconfiguration.automate_dfw_rules.desc": "Automatically create DFW rules for VirtualService in NSXT Manager.",
    "schema.pb.nsxtconfiguration.management_network_config.desc": "Management network configuration for Avi Service Engines.",
    "schema.pb.nsxtconfiguration.data_network_config.desc": "Data network configuration for Avi Service Engines.",
    "schema.pb.datanetworkconfig.tz_type.desc": "Data transport zone type overlay or vlan.",
    "schema.pb.datanetworkconfig.transport_zone.desc": "Data transport zone path for Avi Service Engines. Example infrasitesdefaultenforcementpointsdefaulttransportzonesxxxxxxxxxx.",
    "schema.pb.datanetworkconfig.vlan_segments.desc": "Data vlan segments path to use for Avi Service Engines. Example infrasegmentsvlanls. This should be set only when transport zone is of type VLAN.",
    "schema.pb.datanetworkconfig.tier1_segment_config.desc": "Nsxt tier1 segment configuration for Avi Service Engine data path. This should be set only when transport zone is of type OVERLAY.",
    "schema.pb.nsxttier1segmentconfig.segment_config_mode.desc": "Config Mode for selecting the placement logical segments for Avi ServiceEngine data path",
    "schema.pb.nsxttier1segmentconfig.manual.desc": "Avi Admin selects an available logical segment (created by NSXT admin) associated with a Tier1 LR.",
    "schema.pb.nsxttier1segmentconfig.automatic.desc": "Avi controller creates and manages logical segments for a Tier1 LR.",
    "schema.pb.nsxttier1segmentautomaticmode.tier1_lr_ids.desc": "Tier1 logical router IDs",
    "schema.pb.nsxttier1segmentautomaticmode.nsxt_segment_subnet.desc": "Uber IP subnet for the logical segments created automatically by Avi controller.",
    "schema.pb.nsxttier1segmentautomaticmode.num_se_per_segment.desc": "The number of SE data vNic's that can be connected to the Avi logical segment.",
    "schema.pb.nsxttier1segmentmanualmode.tier1_lrs.desc": "Tier1 logical router placement information.",
    "schema.pb.managementnetworkconfig.tz_type.desc": "Management transport zone type overlay or vlan.",
    "schema.pb.managementnetworkconfig.transport_zone.desc": "Management transport zone path for Avi Service Engines. Example infrasitesdefaultenforcementpointsdefaulttransportzonesxxxxxxxxxx.",
    "schema.pb.managementnetworkconfig.vlan_segment.desc": "Management vlan segment path to use for Avi Service Engines. Example infrasegmentsvlanls. This should be set only when transport zone is of type VLAN.",
    "schema.pb.managementnetworkconfig.overlay_segment.desc": "Management overlay segment to use for Avi Service Engines. This should be set only when transport zone is of type OVERLAY.",
    "schema.pb.tier1logicalrouterinfo.tier1_lr_id.desc": "Tier1 logical router path. Example infratier1sT101.",
    "schema.pb.tier1logicalrouterinfo.segment_id.desc": "Overlay segment path. Example infrasegmentsSegWebT101.",
    "schema.pb.tier1logicalrouterinfo.locale_service.desc": "Localeservices configuration, holds T1 edgecluster information. When VirtualService is enabled with preserve client IP, ServiceInsertion VirtualEndpoint will be created in this localeservice. By default Avi controller picks default localeservice on T1. If more than one localeservices are present, this will be used for resolving the same. Example localeservice path  infratier1sLondon_Tier1Gateway1localeservicesLondon_Tier1LocalServices1.",
    "schema.pb.gcpconfiguration.cloud_credentials_uuid.desc": "Credentials to access Google Cloud Platform APIs",
    "schema.pb.gcpconfiguration.region_name.desc": "Google Cloud Platform Region Name where Service Engines will be spawned.",
    "schema.pb.gcpconfiguration.zones.desc": "Google Cloud Platform Zones where Service Engines will be distributed for HA.",
    "schema.pb.gcpconfiguration.se_project_id.desc": "Google Cloud Platform Project ID where Service Engines will be spawned.",
    "schema.pb.gcpconfiguration.network_config.desc": "Google Cloud Platform VPC Network configuration for the Service Engines.",
    "schema.pb.gcpconfiguration.firewall_target_tags.desc": "Firewall rule network target tags which will be applied on Service Engines to allow ingress and egress traffic for Service Engines.",
    "schema.pb.gcpconfiguration.gcs_project_id.desc": "Google Cloud Storage Project ID where Service Engine image will be uploaded. This image will be deleted once the image is created in Google compute images. By default, Service Engine Project ID will be used.",
    "schema.pb.gcpconfiguration.gcs_bucket_name.desc": "Google Cloud Storage Bucket Name where Service Engine image will be uploaded. This image will be deleted once the image is created in Google compute images. By default, a bucket will be created if this field is not specified.",
    "schema.pb.gcpconfiguration.vip_allocation_strategy.desc": "VIP allocation strategy defines how the VIPs will be created in Google Cloud.",
    "schema.pb.gcpconfiguration.encryption_keys.desc": "Encryption Keys for Google Cloud Services.",
    "schema.pb.gcpconfiguration.gcp_service_account_email.desc": "Email of GCP Service Account to be associated to the Service Engines.",
    "schema.pb.gcpnetworkconfig.config.desc": "Config Mode for Google Cloud network configuration",
    "schema.pb.gcpnetworkconfig.inband.desc": "Configure InBand Management as Google Cloud network configuration. In this configuration the data network and management network for Service Engines will be same.",
    "schema.pb.gcpnetworkconfig.one_arm.desc": "Configure One Arm Mode as Google Cloud network configuration. In this configuration the data network and the management network for the Service Engines will be separated.",
    "schema.pb.gcpnetworkconfig.two_arm.desc": "Configure Two Arm Mode as Google Cloud network configuration. In this configuration the frontend data network, backend data network and the management network for the Service Engines will be separated.",
    "schema.pb.gcptwoarmmode.frontend_data_vpc_subnet_name.desc": "Service Engine Frontend Data Network Subnet Name.",
    "schema.pb.gcptwoarmmode.frontend_data_vpc_project_id.desc": "Project ID of the Service Engine Frontend Data Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcptwoarmmode.management_vpc_subnet_name.desc": "Service Engine Management Network Subnet Name.",
    "schema.pb.gcptwoarmmode.backend_data_vpc_subnet_name.desc": "Service Engine Backend Data Network Subnet Name.",
    "schema.pb.gcptwoarmmode.frontend_data_vpc_network_name.desc": "Service Engine Frontend Data Network Name.",
    "schema.pb.gcptwoarmmode.management_vpc_network_name.desc": "Service Engine Management Network Name.",
    "schema.pb.gcptwoarmmode.backend_data_vpc_network_name.desc": "Service Engine Backend Data Network Name.",
    "schema.pb.gcptwoarmmode.management_vpc_project_id.desc": "Project ID of the Service Engine Management Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcptwoarmmode.backend_data_vpc_project_id.desc": "Project ID of the Service Engine Backend Data Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcponearmmode.data_vpc_subnet_name.desc": "Service Engine Data Network Subnet Name.",
    "schema.pb.gcponearmmode.data_vpc_project_id.desc": "Project ID of the Service Engine Data Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcponearmmode.management_vpc_subnet_name.desc": "Service Engine Management Network Subnet Name.",
    "schema.pb.gcponearmmode.data_vpc_network_name.desc": "Service Engine Data Network Name.",
    "schema.pb.gcponearmmode.management_vpc_network_name.desc": "Service Engine Management Network Name.",
    "schema.pb.gcponearmmode.management_vpc_project_id.desc": "Project ID of the Service Engine Management Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcpinbandmanagement.vpc_subnet_name.desc": "Service Engine Network Subnet Name.",
    "schema.pb.gcpinbandmanagement.vpc_project_id.desc": "Project ID of the Service Engine Network. By default, Service Engine Project ID will be used.",
    "schema.pb.gcpinbandmanagement.vpc_network_name.desc": "Service Engine Network Name.",
    "schema.pb.azureconfiguration.subscription_id.desc": "Subscription Id for the Azure subscription",
    "schema.pb.azureconfiguration.cloud_credentials_uuid.desc": "Credentials to access azure cloud",
    "schema.pb.azureconfiguration.location.desc": "Azure location where this cloud will be located",
    "schema.pb.azureconfiguration.network_info.desc": "Azure virtual network and subnet information",
    "schema.pb.azureconfiguration.resource_group.desc": "Azure resource group dedicated for Avi Controller. Avi Controller will create all its resources in this resource group.",
    "schema.pb.azureconfiguration.use_azure_dns.desc": "Azure is the DNS provider",
    "schema.pb.azureconfiguration.use_enhanced_ha.desc": "Use Azure's enhanced HA features. This needs a public IP to be associated with the VIP. ",
    "schema.pb.azureconfiguration.use_managed_disks.desc": "Use Azure managed disks for SE storage",
    "schema.pb.azureconfiguration.availability_zones.desc": "Availability zones to be used in Azure",
    "schema.pb.azureconfiguration.use_standard_alb.desc": "Use Standard SKU Azure Load Balancer. By default Basic SKU Load Balancer is used.",
    "schema.pb.azureconfiguration.des_id.desc": "Disks Encryption Set resourceid (des_id) to encrypt se image and managed disk using customermanagedkeys.",
    "schema.pb.azurenetworkinfo.virtual_network_id.desc": "Virtual network where Virtual IPs will belong.",
    "schema.pb.azurenetworkinfo.se_network_id.desc": "Id of the Azure subnet where Avi Controller will create the Service Engines. ",
    "schema.pb.azurenetworkinfo.management_network_id.desc": "Id of the Azure subnet used as management network for the Service Engines. If set, Service Engines will have a dedicated management NIC, otherwise, they operate in inband mode.",
    "schema.pb.dockerconfiguration.ucp_nodes.desc": "List of Docker UCP nodes; In case of a load balanced UCP cluster, use Virtual IP of the cluster",
    "schema.pb.dockerconfiguration.client_tls_key_and_certificate_uuid.desc": "UUID of the client TLS cert and key",
    "schema.pb.dockerconfiguration.ca_tls_key_and_certificate_uuid.desc": "UUID of the UCP CA TLS cert and key",
    "schema.pb.dockerconfiguration.container_port_match_http_service.desc": "Perform container port matching to create a HTTP Virtualservice instead of a TCPUDP VirtualService",
    "schema.pb.dockerconfiguration.http_container_ports.desc": "List of container ports that create a HTTP Virtualservice instead of a TCPUDP VirtualService. Defaults to 80",
    "schema.pb.dockerconfiguration.east_west_placement_subnet.desc": "Match against this prefix when placing eastwest VSs on SEs ",
    "schema.pb.dockerconfiguration.se_deployment_method.desc": "Use FleetSSH for SE deployment",
    "schema.pb.dockerconfiguration.fleet_endpoint.desc": "Optional fleet remote endpoint if fleet is used for SE deployment",
    "schema.pb.dockerconfiguration.docker_registry_se.desc": "Docker registry for ServiceEngine image",
    "schema.pb.dockerconfiguration.se_spawn_rate.desc": "New SE spawn rate per minute",
    "schema.pb.dockerconfiguration.app_sync_frequency.desc": "Sync frequency in seconds with frameworks",
    "schema.pb.dockerconfiguration.disable_auto_se_creation.desc": "Disable SE creation",
    "schema.pb.dockerconfiguration.disable_auto_frontend_service_sync.desc": "Disable auto service sync for front end services",
    "schema.pb.dockerconfiguration.disable_auto_backend_service_sync.desc": "Disable auto service sync for back end services",
    "schema.pb.dockerconfiguration.use_container_ip_port.desc": "Use container IP address:port for pool instead of host IP address:hostport. This mode is applicable if the container IP is reachable (not a private NATed IP) from other hosts in a routed environment for containers",
    "schema.pb.dockerconfiguration.se_volume.desc": "Host volume to be used as a disk for Avi SE, This is a disruptive change",
    "schema.pb.dockerconfiguration.coredump_directory.desc": "Directory to mount to check for core dumps on Service Engines. This will be mapped read only to varcrash on any new Service Engines. This is a disruptive change",
    "schema.pb.dockerconfiguration.enable_event_subscription.desc": "Enable Docker event subscription",
    "schema.pb.dockerconfiguration.feproxy_container_port_as_service.desc": "For Front End proxies, use container port as service port",
    "schema.pb.dockerconfiguration.services_accessible_all_interfaces.desc": "Make service ports accessible on all Host interfaces in addition to EastWest VIP andor bridge IP. Usually enabled AWS clusters to export EastWest services on Host interface",
    "schema.pb.dockerconfiguration.feproxy_vips_enable_proxy_arp.desc": "Enable proxy ARP from Host interface for Front End  proxies",
    "schema.pb.dockerconfiguration.se_exclude_attributes.desc": "Exclude hosts with attributes for SE creation",
    "schema.pb.dockerconfiguration.se_include_attributes.desc": "Create SEs just on hosts with include attributes",
    "schema.pb.dockerconfiguration.use_controller_image.desc": "If true, use controller generated SE docker image via fileservice, else use docker repository image as defined by docker_registry_se",
    "schema.pb.dockerconfiguration.ssh_user_uuid.desc": "Cloud connector user uuid for SSH to hosts",
    "schema.pb.mesosattribute.attribute.desc": "Attribute to match",
    "schema.pb.mesosattribute.value.desc": "Attribute value. If not set, match any value",
    "schema.pb.dockerregistry.registry.desc": "Avi ServiceEngine repository name. For private registry, it's registry:portrepository, for public registry, it's registryrepository, for openshift registry, it's registry:portnamespacerepo",
    "schema.pb.dockerregistry.private.desc": "Set if docker registry is private. Avi controller will not attempt to push SE image to the registry, unless se_repository_push is set",
    "schema.pb.dockerregistry.username.desc": "Username for docker registry. Authorized 'regular user' if registry is Openshift integrated registry.",
    "schema.pb.dockerregistry.password.desc": "Password for docker registry. Authorized 'regular user' password if registry is Openshift integrated registry.",
    "schema.pb.dockerregistry.oshift_registry.desc": "Openshift integrated registry config.",
    "schema.pb.oshiftdockerregistrymetadata.registry_service.desc": "Name of the Integrated registry Service in Openshift.",
    "schema.pb.oshiftdockerregistrymetadata.registry_namespace.desc": "Namespace for the ServiceEngine image to be hosted in Openshift Integrated registry.",
    "schema.pb.oshiftdockerregistrymetadata.registry_vip.desc": "Static VIP for 'dockerregistry' service in Openshift if Avi is proxying for this service.This VIP should be outside the cluster IP subnet in Kubernetes and within the subnet configured (but outside the available pool of IPs) in the East West IPAM profile configuration for this Cloud. For example, if kubernetes cluster VIP range is 172.30.0.016 and subnet configured in East West IPAM profile is 172.50.0.016, then 172.50.0.2 can be used for this vip and IP pool can start from 172.50.0.3 onwards. Use this static VIP in 'insecureregistry <thisvip>:5000' docker config if using an insecure registry or add this to the list of IPshostnames when generating certificates if using a secure TLS registry.",
    "schema.pb.linuxserverconfiguration.se_sys_disk_path.desc": "SE System Logs disk path for cloud",
    "schema.pb.linuxserverconfiguration.se_sys_disk_size_gb.desc": "SE System Logs disk size for cloud",
    "schema.pb.linuxserverconfiguration.se_log_disk_path.desc": "SE Client Logs disk path for cloud",
    "schema.pb.linuxserverconfiguration.se_log_disk_size_gb.desc": "SE Client Log disk size for cloud",
    "schema.pb.linuxserverconfiguration.se_inband_mgmt.desc": "Flag to notify the SE's in this cloud have an inband management interface, this can be overridden at SE host level by setting host_attr attr_key as SE_INBAND_MGMT with value of true or false",
    "schema.pb.linuxserverconfiguration.ssh_user_uuid.desc": "Cloud connector user uuid for SSH to hosts",
    "schema.pb.linuxserverhost.node_availability_zone.desc": "Node's availability zone. ServiceEngines belonging to the availability zone will be rebooted during a manual DR failover",
    "schema.pb.linuxserverhost.se_group_uuid.desc": "The SE Group association for the SE. If None, then 'DefaultGroup' SEGroup is associated with the SE",
    "schema.pb.awsconfiguration.access_key_id.desc": "AWS access key ID",
    "schema.pb.awsconfiguration.secret_access_key.desc": "AWS secret access key",
    "schema.pb.awsconfiguration.region.desc": "AWS region",
    "schema.pb.awsconfiguration.vpc.desc": "VPC name",
    "schema.pb.awsconfiguration.vpc_id.desc": "VPC ID",
    "schema.pb.awsconfiguration.route53_integration.desc": "If enabled, createupdate DNS entries in Amazon Route 53 zones",
    "schema.pb.awsconfiguration.free_elasticips.desc": "Free unused elastic IP addresses.",
    "schema.pb.awsconfiguration.use_iam_roles.desc": "Use IAM roles instead of access and secret key.",
    "schema.pb.awsconfiguration.iam_assume_role.desc": "IAM assume role for crossaccount access.",
    "schema.pb.awsconfiguration.ttl.desc": "Default TTL for all records",
    "schema.pb.awsconfiguration.use_sns_sqs.desc": "Use SNSSQS based notifications for monitoring Auto Scaling Groups.",
    "schema.pb.awsconfiguration.asg_poll_interval.desc": "Time interval between periodic polling of all Auto Scaling Groups.",
    "schema.pb.awsconfiguration.ebs_encryption.desc": "EBS encryption mode and the master key to be used for encrypting SE AMI, Volumes, and Snapshots.",
    "schema.pb.awsconfiguration.s3_encryption.desc": "S3 encryption mode and the master key to be used for encrypting S3 buckets during SE AMI upload. Only SSEKMS mode is supported.",
    "schema.pb.awsconfiguration.sqs_encryption.desc": "Server Side Encryption to be used for encrypting SQS Queues",
    "schema.pb.awsconfiguration.publish_vip_to_public_zone.desc": "If enabled and the virtual service is not floating ip capable, vip will be published to both private and public zones.",
    "schema.pb.awsencryption.mode.desc": "AWS encryption mode.",
    "schema.pb.awsencryption.master_key.desc": "AWS KMS ARN ID of the master key for encryption.",
    "schema.pb.awszoneconfig.availability_zone.desc": "Availability zone",
    "schema.pb.awszoneconfig.mgmt_network_name.desc": "Name or CIDR of the network in the Availability Zone that will be used as management network.",
    "schema.pb.awszoneconfig.mgmt_network_uuid.desc": "UUID of the network in the Availability Zone that will be used as management network.",
    "schema.pb.openstackconfiguration.username.desc": "The username Avi Vantage will use when authenticating to Keystone. For Keystone v3, provide the user information in user@domain format, unless that user belongs to the Default domain.",
    "schema.pb.openstackconfiguration.password.desc": "The password Avi Vantage will use when authenticating to Keystone.",
    "schema.pb.openstackconfiguration.admin_tenant.desc": "OpenStack admin tenant (or project) information. For Keystone v3, provide the project information in project@domain format. Domain need not be specified if the project belongs to the 'Default' domain.",
    "schema.pb.openstackconfiguration.keystone_host.desc": "Keystone's hostname or IP address. (Deprecated) Use auth_url instead.",
    "schema.pb.openstackconfiguration.mgmt_network_name.desc": "Avi Management network name or cidr",
    "schema.pb.openstackconfiguration.privilege.desc": "Access privilege",
    "schema.pb.openstackconfiguration.use_keystone_auth.desc": "Use keystone for user authentication",
    "schema.pb.openstackconfiguration.prov_name.desc": "LBaaS provider name",
    "schema.pb.openstackconfiguration.mgmt_network_uuid.desc": "Management network UUID",
    "schema.pb.openstackconfiguration.region.desc": "Region name",
    "schema.pb.openstackconfiguration.hypervisor.desc": "Default hypervisor type, only KVM is supported",
    "schema.pb.openstackconfiguration.tenant_se.desc": "If true, then SEs will be created in the appropriate tenants, else SEs will be created in the admin_tenant.",
    "schema.pb.openstackconfiguration.import_keystone_tenants.desc": "Import keystone tenants list into Avi",
    "schema.pb.openstackconfiguration.anti_affinity.desc": "If true, an antiaffinity policy will be applied to all SEs of a SEGroup, else no such policy will be applied.",
    "schema.pb.openstackconfiguration.security_groups.desc": "If false, securitygroups extension will not be used. ",
    "schema.pb.openstackconfiguration.allowed_address_pairs.desc": "If false, allowedaddresspairs extension will not be used. ",
    "schema.pb.openstackconfiguration.free_floatingips.desc": "Free unused floating IPs.",
    "schema.pb.openstackconfiguration.img_format.desc": "If OS_IMG_FMT_RAW, use RAW images else use QCOW2 for KVM",
    "schema.pb.openstackconfiguration.use_admin_url.desc": "If admin URLs are either inaccessible or not to be accessed from Avi Controller, then set this to False.",
    "schema.pb.openstackconfiguration.role_mapping.desc": "Defines the mapping from OpenStack role names to avi local role names. For an OpenStack role, this mapping is consulted only if there is no local Avi role with the same name as the OpenStack role. This is an ordered list and only the first matching entry is used. You can use '' to match all OpenStack role names.",
    "schema.pb.openstackconfiguration.use_internal_endpoints.desc": "Use internalURL for OpenStack endpoints instead of the default publicURL endpoints.",
    "schema.pb.openstackconfiguration.admin_tenant_uuid.desc": "admintenant's UUID in OpenStack",
    "schema.pb.openstackconfiguration.config_drive.desc": "If false, metadata service will be used instead of  configdrive functionality to retrieve SE VM metadata.",
    "schema.pb.openstackconfiguration.auth_url.desc": "Auth URL for connecting to keystone. If this is specified, any value provided for keystone_host is ignored.",
    "schema.pb.openstackconfiguration.insecure.desc": "Allow selfsigned certificates when communicating with https service endpoints.",
    "schema.pb.openstackconfiguration.external_networks.desc": "If True, allow selection of networks marked as 'external' for management,  vip or data networks.",
    "schema.pb.openstackconfiguration.neutron_rbac.desc": "If True, enable neutron rbac discovery of networks shared across tenantsprojects",
    "schema.pb.openstackconfiguration.map_admin_to_cloudadmin.desc": "If True, map Avi 'admin' tenant to the admin_tenant of the Cloud. Else map Avi 'admin' to OpenStack 'admin' tenant.",
    "schema.pb.openstackconfiguration.hypervisor_properties.desc": "Custom properties per hypervisor type",
    "schema.pb.openstackconfiguration.contrail_plugin.desc": "Enable Contrail plugin mode. (deprecated)",
    "schema.pb.openstackconfiguration.contrail_endpoint.desc": "Contrail VNC endpoint url (example http:10.10.10.100:8082). By default, 'http:' scheme and 8082 port will be used if not provided in the url",
    "schema.pb.openstackconfiguration.name_owner.desc": "If True, embed owner info in VIP port 'name', else embed owner info in 'device_id' field",
    "schema.pb.openstackconfiguration.provider_vip_networks.desc": "A tenant can normally use its own networks and any networks shared with it. In addition, this setting provides extra networks that are usable by tenants.",
    "schema.pb.openstackconfiguration.contrail_disable_policy.desc": "When set to True, the VIP and Data ports will be programmed to set virtual machine interface disablepolicy. Please refer Contrail documentation for more on disablepolicy.",
    "schema.pb.openstackconfiguration.custom_se_image_properties.desc": "Custom image properties to be set on a Service Engine image. Only hw_vif_multiqueue_enabled property is supported. Other properties will be ignored.",
    "schema.pb.openstackvipnetwork.os_network_uuid.desc": "Neutron network UUID",
    "schema.pb.openstackvipnetwork.os_tenant_uuids.desc": "UUIDs of OpenStack tenants that should be allowed to use the specified Neutron network for VIPs. Use '' to make this network available to all tenants.",
    "schema.pb.openstackrolemapping.os_role.desc": "Role name in OpenStack",
    "schema.pb.openstackrolemapping.avi_role.desc": "Role name in Avi",
    "schema.pb.vcenterconfiguration.username.desc": "The username Avi Vantage will use when authenticating with vCenter.",
    "schema.pb.vcenterconfiguration.password.desc": "The password Avi Vantage will use when authenticating with vCenter.",
    "schema.pb.vcenterconfiguration.vcenter_url.desc": "vCenter hostname or IP address.",
    "schema.pb.vcenterconfiguration.privilege.desc": "Set the access mode to vCenter as either Read, which allows Avi to discover networks and servers, or Write, which also allows Avi to create Service Engines and configure their network properties.",
    "schema.pb.vcenterconfiguration.datacenter.desc": "Datacenter for virtual infrastructure discovery",
    "schema.pb.vcenterconfiguration.management_network.desc": "Management network to use for Avi Service Engines",
    "schema.pb.vcenterconfiguration.management_ip_subnet.desc": "Management subnet to use for Avi Service Engines",
    "schema.pb.vcenterconfiguration.vcenter_template_se_location.desc": "Avi Service Engine Template in vCenter to be used for creating Service Engines",
    "schema.pb.vcenterconfiguration.deactivate_vm_discovery.desc": "If true, VM's on the vCenter will not be discovered.Set it to true if there are more than 10000 VMs in the datacenter.",
    "schema.pb.cloudconnectoruser.oci_credentials.desc": "Credentials for Oracle Cloud Infrastructure.",
    "schema.pb.cloudconnectoruser.gcp_credentials.desc": "Credentials for Google Cloud Platform.",
    "schema.pb.cloudconnectoruser.tencent_credentials.desc": "Credentials for Tencent Cloud.",
    "schema.pb.cloudconnectoruser.nsxt_credentials.desc": "Credentials to talk to NSXT manager.",
    "schema.pb.cloudconnectoruser.vcenter_credentials.desc": "Credentials to talk to VCenter.",
    "schema.pb.cloudconnectoruser.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.vcentercredentials.username.desc": "Username to talk to VCenter server.",
    "schema.pb.vcentercredentials.password.desc": "Password to talk to VCenter server.",
    "schema.pb.nsxtcredentials.username.desc": "Username to talk to Nsxt manager.",
    "schema.pb.nsxtcredentials.password.desc": "Password to talk to Nsxt manager.",
    "schema.pb.gcpcredentials.service_account_keyfile_data.desc": "Google Cloud Platform Service Account keyfile data in JSON format.",
    "schema.pb.ocicredentials.user.desc": "Oracle Cloud Id for the User",
    "schema.pb.ocicredentials.key_content.desc": "Private Key file (pem file) content",
    "schema.pb.ocicredentials.pass_phrase.desc": "Pass phrase for the key",
    "schema.pb.ocicredentials.fingerprint.desc": "API key with respect to the Public Key",
    "schema.pb.azureserviceprincipalcredentials.application_id.desc": "Application Id created for Avi Controller. Required for application id based authentication only.",
    "schema.pb.azureserviceprincipalcredentials.authentication_token.desc": "Authentication token created for the Avi Controller application. Required for application id based authentication only.",
    "schema.pb.azureserviceprincipalcredentials.tenant_id.desc": "Tenant ID for the subscription. Required for application id based authentication only.",
    "schema.pb.azureuserpasscredentials.username.desc": "Username for Azure subscription. Required only for username password based authentication.",
    "schema.pb.azureuserpasscredentials.password.desc": "Password for Azure subscription. Required only if username is provided.",
    "schema.pb.azureuserpasscredentials.tenant_name.desc": "Tenant or the active directory associated with the subscription. Required for user name password authentication.",
    "schema.pb.cluster.virtual_ip.desc": "A virtual IP address. This IP address will be dynamically reconfigured so that it always is the IP of the cluster leader.",
    "schema.pb.cluster.rejoin_nodes_automatically.desc": "Rejoin cluster nodes automatically in the event one of the node is reset to factory.",
    "schema.pb.clusternode.ip.desc": "IP address of controller VM.",
    "schema.pb.clusternode.vm_uuid.desc": "UUID on the controller VM",
    "schema.pb.clusternode.vm_name.desc": "Name of the controller VM",
    "schema.pb.clusternode.vm_mor.desc": "Managed object reference of this controller VM",
    "schema.pb.clusternode.vm_hostname.desc": "Hostname assigned to this controller VM",
    "schema.pb.clusternode.public_ip_or_name.desc": "Public IP address or hostname of the controller VM",
    "schema.pb.clusternode.categories.desc": "Optional service categories that a node can be assigned (e.g. SYSTEM, INFRASTRUCTURE or ANALYTICS)",
    "schema.pb.clusternode.password.desc": "The password we will use when authenticating with this node (Not persisted)",
    "schema.pb.clusternode.interfaces.desc": "Interface details of the controller node",
    "schema.pb.clusternode.static_routes.desc": "Static routes configured on the controller node",
    "schema.pb.controllerinterface.if_name.desc": "Interface name",
    "schema.pb.controllerinterface.mac_address.desc": "Mac address of interface",
    "schema.pb.controllerinterface.mode.desc": "IP address mode DHCPSTATIC",
    "schema.pb.controllerinterface.ip.desc": "IP address of the interface",
    "schema.pb.controllerinterface.gateway.desc": "Default gateway of the mgmt interface",
    "schema.pb.controllerinterface.labels.desc": "Interface label like mgmt, secure channel or HSM",
    "schema.pb.controllerinterface.public_ip_or_name.desc": "Public IP of interface",
    "schema.pb.connectionlog.significant_log.desc": "List of enums which indicate why a log is significant",
    "schema.pb.connectionlog.proxy_protocol.desc": "Version of proxy protocol used to convey client connection information to the backend servers.  A value of 0 indicates that proxy protocol is not used.  A value of 1 or 2 indicates the version of proxy protocol used.",
    "schema.pb.connectionlog.client_ip6.desc": "IPv6 address of the client.",
    "schema.pb.connectionlog.vs_ip6.desc": "IPv6 address of the VIP of the VS.",
    "schema.pb.connectionlog.server_ip6.desc": "IPv6 address of the Backend Server.",
    "schema.pb.connectionlog.server_conn_src_ip6.desc": "IPv6 address used to connect to Backend Server.",
    "schema.pb.connectionlog.sip_log.desc": "SIP related logging information",
    "schema.pb.connectionlog.client_log_filter_name.desc": "Name of the Client Log Filter applied",
    "schema.pb.connectionlog.ds_log.desc": "Datascript Log",
    "schema.pb.connectionlog.persistence_used.desc": "Persistence applied during server selection",
    "schema.pb.connectionlog.ocsp_status_resp_sent.desc": "OCSP Response sent in the SSLTLS connection Handshake.",
    "schema.pb.connectionlog.max_ingress_latency_fe.desc": "Maximum packet processing latency for the frontend flow.",
    "schema.pb.connectionlog.avg_ingress_latency_fe.desc": "Average packet processing latency for the frontend flow.",
    "schema.pb.connectionlog.conn_est_time_fe.desc": "TCP connection establishment time for the frontend flow.",
    "schema.pb.connectionlog.max_ingress_latency_be.desc": "Maximum packet processing latency for the backend flow.",
    "schema.pb.connectionlog.avg_ingress_latency_be.desc": "Average packet processing latency for the backend flow.",
    "schema.pb.connectionlog.conn_est_time_be.desc": "TCP connection establishment time for the backend flow.",
    "schema.pb.dnsrequest.query_or_response.desc": "Flag indicating request is a client query (false) or server response (true).",
    "schema.pb.dnsrequest.opcode.desc": "DNS request operation code e.g. QUERY, NOTIFY, etc.",
    "schema.pb.dnsrequest.recursion_desired.desc": "Flag indicating client request for recursive resolution.",
    "schema.pb.dnsrequest.checking_disabled.desc": "Flag indicating client does not want DNSSEC validation of the response.",
    "schema.pb.dnsrequest.authentic_data.desc": "Flag indicating client understands AD bit and is interested in the value of AD bit in the response.",
    "schema.pb.dnsrequest.question_count.desc": "Number of questions in the client DNS request.",
    "schema.pb.dnsrequest.answer_records_count.desc": "Number of answer records in the client DNS request.",
    "schema.pb.dnsrequest.nameserver_records_count.desc": "Number of nameserver records in the client DNS request.",
    "schema.pb.dnsrequest.additional_records_count.desc": "Number of additional records.",
    "schema.pb.dnsrequest.opt_record.desc": "Opt resource records in the request.",
    "schema.pb.dnsrequest.client_location.desc": "Geo Location of Client.",
    "schema.pb.dnsrequest.identifier.desc": "ID of the DNS request",
    "schema.pb.geolocation.latitude.desc": "Latitude of the location. This is represented as degrees.minutes. The range is from 90.0 (south) to +90.0 (north).",
    "schema.pb.geolocation.longitude.desc": "Longitude of the location. This is represented as degrees.minutes. The range is from 180.0 (west) to +180.0 (east).",
    "schema.pb.geolocation.name.desc": "Location name in the format CountryStateCity.",
    "schema.pb.geolocation.tag.desc": "Location tag string  example: USEast.",
    "schema.pb.dnsresponse.response_code.desc": "Response code in the response",
    "schema.pb.dnsresponse.authoritative_answer.desc": "Flag to indicate the responding DNS is an authority for the requested FQDN",
    "schema.pb.dnsresponse.truncation.desc": "Flag to indicate if the answer received from DNS is truncated (original answer exceeds 512 bytes UDP limit)",
    "schema.pb.dnsresponse.recursion_available.desc": "Flag indicating the DNS query is fully answered",
    "schema.pb.dnsresponse.answer_records_count.desc": "Number of answer records",
    "schema.pb.dnsresponse.nameserver_records_count.desc": "Number of nameserver records",
    "schema.pb.dnsresponse.additional_records_count.desc": "Number of additional records",
    "schema.pb.dnsresponse.records.desc": "Resource records in the response",
    "schema.pb.dnsresponse.opt_record.desc": "Opt resource records in the response",
    "schema.pb.dnsresponse.query_or_response.desc": "Flag indicating response is a client query (false) or server response (true).",
    "schema.pb.dnsresponse.opcode.desc": "DNS response operation code e.g. QUERY, NOTIFY, etc.",
    "schema.pb.dnsresponse.recursion_desired.desc": "Flag copied from the DNS query's recursion desired field by the responding DNS.",
    "schema.pb.dnsresponse.question_count.desc": "Number of questions in the client DNS request eliciting this DNS response.",
    "schema.pb.dnsresponse.is_wildcard.desc": "Resource records in the response are generated based on wildcard match",
    "schema.pb.dnsresponse.fallback_algorithm_used.desc": "Flag to indicate whether fallback algorithm was used to serve this request.",
    "schema.pb.dnsresourcerecord.type.desc": "Type of resource record",
    "schema.pb.dnsresourcerecord.ttl.desc": "Number of seconds the resource record can be cached",
    "schema.pb.dnsresourcerecord.dclass.desc": "Class of the data in the resource record",
    "schema.pb.dnsresourcerecord.addr_ip.desc": "IPv4 address of the requested FQDN",
    "schema.pb.dnsresourcerecord.nsname.desc": "Domain name of the name server that is authoritative for the requested FQDN",
    "schema.pb.dnsresourcerecord.cname.desc": "Canonical (real) name of the requested FQDN",
    "schema.pb.dnsresourcerecord.port.desc": "Service port",
    "schema.pb.dnsresourcerecord.site_name.desc": "Site controller cluster name  applicable only for Avi VS GSLB member",
    "schema.pb.dnsresourcerecord.vs_name.desc": "Virtual Service name  applicable only for Avi VS GSLB member",
    "schema.pb.dnsresourcerecord.location.desc": "Geo Location of Member.",
    "schema.pb.dnsresourcerecord.addr6_ip_str.desc": "IPv6 address of the requested FQDN",
    "schema.pb.dnsresourcerecord.mail_server.desc": "Fully qualified domain name of a mail server in the MX record.",
    "schema.pb.dnsresourcerecord.priority.desc": "The priority field identifies which mail server should be preferred.",
    "schema.pb.dnsresourcerecord.text_rdata.desc": "Text resource record.",
    "schema.pb.dnsresourcerecord.name.desc": "Domain name of the resource record",
    "schema.pb.controllerlicense.cores.desc": "Number of Service Engine cores in noncontainer clouds",
    "schema.pb.controllerlicense.max_ses.desc": "Number of Service Engines hosts in container clouds",
    "schema.pb.controllerlicense.sockets.desc": "Number of physical cpu sockets across Service Engines in no access and linux server clouds",
    "schema.pb.controllerlicense.se_bandwidth_limits.desc": "Service Engine bandwidth limits for bandwidth based licenses",
    "schema.pb.controllerlicense.burst_cores.desc": "Total number of Service Engine cores for burst core based licenses",
    "schema.pb.controllerlicense.active_burst_resources.desc": "List of active burst core license in use",
    "schema.pb.controllerlicense.expired_burst_resources.desc": "List of used or expired burst core licenses",
    "schema.pb.controllerlicense.service_cores.desc": "Number of vmware service cores after aggregating all other license types.",
    "schema.pb.controllerlicense.initialized.desc": "Flag used to track initialization.",
    "schema.pb.cumulativelicense.tier_type.desc": "Specifies the licensed tier",
    "schema.pb.cumulativelicense.se_bandwidth_limits.desc": "Service Engine bandwidth limits for bandwidth based licenses",
    "schema.pb.cumulativelicense.cores.desc": "Total number of Service Engine cores for core based licenses",
    "schema.pb.cumulativelicense.sockets.desc": "Total number of Service Engine sockets for socket based licenses",
    "schema.pb.cumulativelicense.max_ses.desc": "Total number of Service Engines for host based licenses",
    "schema.pb.cumulativelicense.burst_cores.desc": "Total number of Service Engine cores for burst core based licenses",
    "schema.pb.cumulativelicense.service_cores.desc": "Total number of Service Engine cores..",
    "schema.pb.singlelicense.cores.desc": "Number of Service Engine cores in noncontainer clouds",
    "schema.pb.singlelicense.max_ses.desc": "Number of Service Engines hosts in container clouds",
    "schema.pb.singlelicense.sockets.desc": "Number of physical cpu sockets across Service Engines in no access and linux server clouds",
    "schema.pb.singlelicense.se_bandwidth_limits.desc": "Service Engine bandwidth limits for bandwidth based licenses",
    "schema.pb.singlelicense.tier_type.desc": "Specifies the licensed tier",
    "schema.pb.singlelicense.burst_cores.desc": "Total number of Service Engine burst cores for core based licenses",
    "schema.pb.singlelicense.serial_key.desc": "Serial key (Hyphen separated 25 char wide alphanumeric key Ex: AA12323BAS383AS383UDFHSFG).",
    "schema.pb.singlelicense.service_cores.desc": "Total number of service cores equivalent to all the resoures available in the single license.",
    "schema.pb.singlelicense.cpu_cores.desc": "Total number of cpu cores.",
    "schema.pb.singlelicense.expired.desc": "Flag to track license expiry.",
    "schema.pb.singlelicense.ccu.desc": "Number of concurrent VMware Horizon users.",
    "schema.pb.singlelicense.addons.desc": "Features supported by the addon license.",
    "schema.pb.singlelicense.capacity.desc": "Total licensing capacity available for all the resoures available in a single license.",
    "schema.pb.singlelicense.unit.desc": "Units in which resources will be licensed.",
    "schema.pb.controllerproperties.upgrade_lease_time.desc": "Amount of time Controller waits for a regularsized SE (<128GB memory) to reconnect after it is rebooted during upgrade. Starting 18.2.1020.1.1, the default time has increased from 360 seconds to 600 seconds.",
    "schema.pb.controllerproperties.dns_refresh_period.desc": "Period for refresh pool and gslb DNS job",
    "schema.pb.controllerproperties.cluster_ip_gratuitous_arp_period.desc": "Period for cluster ip gratuitous arp job",
    "schema.pb.controllerproperties.vs_key_rotate_period.desc": "Period for rotate VS keys job",
    "schema.pb.controllerproperties.secure_channel_cleanup_timeout.desc": "Period for secure channel cleanup job",
    "schema.pb.controllerproperties.persistence_key_rotate_period.desc": "Period for rotate app persistence keys job",
    "schema.pb.controllerproperties.allow_unauthenticated_apis.desc": "Allow unauthenticated access for special APIs",
    "schema.pb.controllerproperties.se_failover_attempt_interval.desc": "Interval between attempting failovers to an SE",
    "schema.pb.controllerproperties.max_pcap_per_tenant.desc": "Maximum number of pcap files stored per tenant",
    "schema.pb.controllerproperties.ssl_certificate_expiry_warning_days.desc": "Number of days for SSL Certificate expiry warning",
    "schema.pb.controllerproperties.seupgrade_fabric_pool_size.desc": "Pool size used for all fabric commands during se upgrade.",
    "schema.pb.controllerproperties.seupgrade_segroup_min_dead_timeout.desc": "Time to wait before marking segroup upgrade as stuck.",
    "schema.pb.controllerproperties.appviewx_compat_mode.desc": "Export configuration in appviewx compatibility mode",
    "schema.pb.controllerproperties.upgrade_dns_ttl.desc": "Time to account for DNS TTL during upgrade. This is in addition to vs_scalein_timeout_for_upgrade in se_group.",
    "schema.pb.controllerproperties.portal_token.desc": "Token used for uploading techsupport to portal",
    "schema.pb.controllerproperties.bm_use_ansible.desc": "Use Ansible for SE creation in baremetal",
    "schema.pb.controllerproperties.vs_se_attach_ip_fail.desc": "Time to wait before marking attach IP operation on an SE as failed",
    "schema.pb.controllerproperties.max_seq_attach_ip_failures.desc": "Maximum number of consecutive attach IP failures that halts VS placement",
    "schema.pb.controllerproperties.safenet_hsm_version.desc": "Version of the safenet package installed on the controller",
    "schema.pb.controllerproperties.cleanup_expired_authtoken_timeout_period.desc": "Period for auth token cleanup job",
    "schema.pb.controllerproperties.cleanup_sessions_timeout_period.desc": "Period for sessions cleanup job",
    "schema.pb.controllerproperties.consistency_check_timeout_period.desc": "Period for consistency check job",
    "schema.pb.controllerproperties.process_locked_useraccounts_timeout_period.desc": "Period for process locked user accounts job",
    "schema.pb.controllerproperties.process_pki_profile_timeout_period.desc": "Period for process PKI profile job",
    "schema.pb.controllerproperties.enable_memory_balancer.desc": "EnableDisable Memory Balancer",
    "schema.pb.controllerproperties.warmstart_vs_resync_wait_time.desc": "Timeout for warmstart VS resync",
    "schema.pb.controllerproperties.api_perf_logging_threshold.desc": "Threshold to log request timing in portal_performance.log and ServerTiming response header. Any stage taking longer than 1% of the threshold will be included in the ServerTiming header.",
    "schema.pb.controllerproperties.se_from_marketplace.desc": "This setting decides whether SE is to be deployed from the cloud marketplace or to be created by the controller. The setting is applicable only when BYOL license is selected.",
    "schema.pb.controllerproperties.cloud_reconcile.desc": "EnableDisable periodic reconcile for all the clouds.",
    "schema.pb.controllerproperties.enable_api_sharding.desc": "This setting enables the controller leader to shard API requests to the followers (if any).",
    "schema.pb.controllerproperties.vs_scaleout_ready_check_interval.desc": "Interval for checking scaleout_ready status while controller is waiting for ScaleOutReady RPC from the Service Engine.",
    "schema.pb.controllerproperties.shared_ssl_certificates.desc": "SSL Certificates in the admin tenant can be used in nonadmin tenants.",
    "schema.pb.controllerproperties.default_minimum_api_timeout.desc": "Minimum api timeout value.If this value is not 60, it will be the default timeout for all APIs that do not have a specific timeout.If an API has a specific timeout but is less than this value, this value will become the new timeout.",
    "schema.pb.controllerproperties.seupgrade_copy_pool_size.desc": "This parameter defines the number of simultaneous SE image downloads in a SeGroup. It is used to pace the SE downloads so that controller networkCPU bandwidth is a bounded operation. A value of 0 will disable the pacing scheme and all the SE(s) in the SeGroup will attempt to download the image. ",
    "schema.pb.controllerproperties.permission_scoped_shared_admin_networks.desc": "Network and VrfContext objects from the admin tenant will not be shared to nonadmin tenants unless admin permissions are granted.",
    "schema.pb.controllerproperties.allow_admin_network_updates.desc": "Allow nonadmin tenants to update admin VrfContext and Network objects.",
    "schema.pb.controllerproperties.se_spawn_retry_interval.desc": "Default retry period before attempting another Service Engine spawn in SE Group.",
    "schema.pb.controllerproperties.max_se_spawn_interval_delay.desc": "Maximum delay possible to add to se_spawn_retry_interval after successive SE spawn failure.",
    "schema.pb.controllerproperties.portal_request_rate_limit.desc": "Maximum average number of requests allowed per second. 0 to disable",
    "schema.pb.controllerproperties.portal_request_burst_limit.desc": "Burst limit on number of incoming requests. 0 to disable",
    "schema.pb.controllerproperties.federated_datastore_cleanup_duration.desc": "Federated datastore will not cleanup diffs unless they are at least this duration in the past.",
    "schema.pb.controllerproperties.edit_system_limits.desc": "Allow editing of system limits. Keep in mind that these system limits have been carefully selected based on rigorous testing in our testig environments. Modifying these limits could destabilize your cluster. Do this at your own risk!",
    "schema.pb.controllerproperties.file_object_cleanup_period.desc": "Period for file object cleanup job.",
    "schema.pb.controllerproperties.upgrade_fat_se_lease_time.desc": "Amount of time Controller waits for a largesized SE (>=128GB memory) to reconnect after it is rebooted during upgrade.",
    "schema.pb.controllerproperties.upgrade_se_per_vs_scale_ops_txn_time.desc": "This parameter defines the upperbound value of the VS scalein or VS scaleout operation executed in the SeScaleIn and SeScale context.  User can tweak this parameter to a higher value if the Segroup gets suspended due to SeScalein or SeScaleOut timeout failure typically associated with high number of VS(es) scaled out. ",
    "schema.pb.controllerproperties.max_threads_cc_vip_bg_worker.desc": "Maximum number of threads in threadpool used by cloud connector CCVIPBGWorker.",
    "schema.pb.controllerproperties.async_patch_merge_period.desc": "Period for which asynchronous patch requests are queued.",
    "schema.pb.controllerproperties.async_patch_request_cleanup_duration.desc": "Duration for which asynchronous patch requests should be kept, after being marked as SUCCESS or FAIL.",
    "schema.pb.controllerproperties.controller_resource_info_collection_period.desc": "Periodically collect stats.",
    "schema.pb.controllerproperties.se_vnic_gc_wait_time.desc": "Duration to wait after last vNIC addition before proceeding with vNIC garbage collection. Used for testing purposes.",
    "schema.pb.controllerproperties.resmgr_log_caching_period.desc": "Period for each cycle of log caching in Resource Manager. At the end of each cycle, the in memory cached log history will be cleared.",
    "schema.pb.controllerproperties.user_agent_cache_config.desc": "Configuration for UserAgent Cache used in Bot Management.",
    "schema.pb.controllerproperties.del_offline_se_after_reboot_delay.desc": "The amount of time the controller will wait before deleting an offline SE after it has been rebooted. For unresponsive SEs, the total time will be  unresponsive_se_reboot + del_offline_se_after_reboot_delay. For crashed SEs, the total time will be crashed_se_reboot + del_offline_se_after_reboot_delay.",
    "schema.pb.controllerproperties.enable_resmgr_log_cache_print.desc": "Enable printing of cached logs inside Resource Manager. Used for debugging purposes only.",
    "schema.pb.controllerproperties.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.controllerproperties.enable_per_process_stop.desc": "Enable stopping of individual processes if process cross the given threshold limit, even when the total controller memory usage is belowits threshold limit.",
    "schema.pb.controllerproperties.check_vsvip_fqdn_syntax.desc": "Enforce VsVip FQDN syntax checks",
    "schema.pb.controllerproperties.vsphere_ha_timer_interval.desc": "vSphere HA monitor timer interval for sending cc_check_se_status to Cloud Connector",
    "schema.pb.controllerproperties.vsphere_ha_detection_timeout.desc": "vSphere HA monitor detection timeout. If vsphere_ha_enabled is true and the controller is not able to reach the SE, placement will wait for this duration for vsphere_ha_inprogress to be marked true before taking corrective action",
    "schema.pb.controllerproperties.vsphere_ha_recovery_timeout.desc": "vSphere HA monitor recovery timeout. Once vsphere_ha_inprogress is set to true (meaning host failure detected and vSphere HA will recover the Service Engine), placement will wait for at least this duration for the SE to reconnect to the controller before taking corrective action.",
    "schema.pb.controllerproperties.detach_ip_retry_interval.desc": "Amount of time to wait after last Detach IP failure before attempting next Detach IP retry",
    "schema.pb.controllerproperties.detach_ip_retry_limit.desc": "Maximum number of Detach IP retries",
    "schema.pb.controllerproperties.detach_ip_timeout.desc": "Time to wait before marking Detach IP as failed",
    "schema.pb.useragentcacheconfig.se_cache_size.desc": "The number of UserAgent entries to cache on each Service Engine.",
    "schema.pb.useragentcacheconfig.controller_cache_size.desc": "The number of UserAgent entries to cache on the Controller.",
    "schema.pb.useragentcacheconfig.percent_reserved_for_outstanding.desc": "How much space to reserve in percent for outstanding upstream requests.",
    "schema.pb.useragentcacheconfig.percent_reserved_for_browsers.desc": "How much space to reserve in percent for browsers.",
    "schema.pb.useragentcacheconfig.percent_reserved_for_good_bots.desc": "How much space to reserve in percent for known good bots.",
    "schema.pb.useragentcacheconfig.percent_reserved_for_bad_bots.desc": "How much space to reserve in percent for known bad bots.",
    "schema.pb.useragentcacheconfig.batch_size.desc": "How many unknown UserAgents to batch up before querying Controller  unless max_wait_time is reached first.",
    "schema.pb.useragentcacheconfig.max_wait_time.desc": "The time interval in seconds after which to make a request to the Controller, even if the 'batch_size' hasn't been reached yet.",
    "schema.pb.useragentcacheconfig.upstream_update_interval.desc": "How often in seconds to send updates about UserAgent cache entries to the next upstream cache.",
    "schema.pb.useragentcacheconfig.num_entries_upstream_update.desc": "How many BotUACacheResult elements to include in an upstream update message.",
    "schema.pb.useragentcacheconfig.max_upstream_queries.desc": "How often at most to query controller for a given UserAgent.",
    "schema.pb.controllersite.uuid.desc": "Reference for the Site Controller Cluster.",
    "schema.pb.controllersite.name.desc": "Name for the Site Controller Cluster.",
    "schema.pb.controllersite.address.desc": "IP Address or a DNS resolvable, fully qualified domain name of the Site Controller Cluster.",
    "schema.pb.controllersite.port.desc": "The Controller Site Cluster's REST API port number.",
    "schema.pb.controllersite.tenant_uuid.desc": "Reference for the Tenant.",
    "schema.pb.controllersite.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.customipamdnsprofile.name.desc": "Name of the Custom IPAM DNS Profile.",
    "schema.pb.customipamdnsprofile.script_uri.desc": "Script URI of form controller:ipamdnsscripts<filename>, filename must have a .py extension and conform to PEP8 naming convention.",
    "schema.pb.customipamdnsprofile.script_params.desc": "Parameters that are always passed to the IPAMDNS script.",
    "schema.pb.customipamdnsprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.debugvirtualservice.debug_ip.desc": "Filters all packets of a complete transaction (client and server side), based on client ip.",
    "schema.pb.debugvirtualservice.debug_hm.desc": "This option controls the capture of Health Monitor flows.",
    "schema.pb.debugvirtualservice.dns_options.desc": "Dns debug options",
    "schema.pb.debugvirtualservice.capture_filters.desc": "Per packet capture filters for Debug Virtual Service. Applies to both frontend and backend packets.",
    "schema.pb.debugvirtualservice.objsync.desc": "Object sync debug options.",
    "schema.pb.debugvirtualservice.resync_flows.desc": "This option resynchronizes flows between ActiveStandby service engines for all the virtual services placed on them. It should be used with caution because as it can cause a flood between ActiveStandby.",
    "schema.pb.debugvirtualservice.latency_audit_filters.desc": "Filters for latency audit. Supported only for ingress.",
    "schema.pb.capturefilters.capture_ip.desc": "Per packet IP filter. Matches with source and destination address. Curently not applicable for DebugServiceEngine.",
    "schema.pb.capturefilters.eth_proto.desc": "Ethernet Proto filter.",
    "schema.pb.capturefilters.ip_proto.desc": "IP Proto filter. Support for TCP only for now.",
    "schema.pb.capturefilters.src_port.desc": "Source Port filter.",
    "schema.pb.capturefilters.dst_port_start.desc": "Destination Port range filter.",
    "schema.pb.capturefilters.dst_port_end.desc": "Destination Port range filter.",
    "schema.pb.capturefilters.tcp_syn.desc": "TCP SYN flag filter.",
    "schema.pb.capturefilters.tcp_ack.desc": "TCP ACK flag filter.",
    "schema.pb.capturefilters.tcp_fin.desc": "TCP FIN flag filter.",
    "schema.pb.capturefilters.tcp_push.desc": "TCP PUSH flag filter.",
    "schema.pb.capturefilters.capture_ipc.desc": "Capture filter for SE IPC. Not applicable for Debug Virtual Service.",
    "schema.pb.capturefilters.src_port_range_end.desc": "Source Port range end filter. If specified, the source port filter will be a range. The filter range will be between src_port and src_port_range_end.",
    "schema.pb.debugvirtualserviceobjsync.trigger_initial_sync.desc": "Triggers Initial Sync on all the SEs of this VS.",
    "schema.pb.debugvirtualservicecapture.pkt_size.desc": "Number of bytes of each packet to capture. Use 0 to capture the entire packet.",
    "schema.pb.debugvirtualservicecapture.duration.desc": "Number of minutes to capture packets. Use 0 to capture until manually stopped.",
    "schema.pb.debugvirtualservicecapture.num_pkts.desc": "Total number of packets to capture.",
    "schema.pb.debugvirtualservicecapture.enable_ssl_session_key_capture.desc": "Enable SSL session key capture.",
    "schema.pb.debugvirtualservicecapture.pcap_ng.desc": "Enable PcapNg for packet capture.",
    "schema.pb.debugvirtualservicecapture.capture_file_size.desc": "Maximum allowed size of PCAP Capture File per SE. Max(absolute_size, percentage_size) will be final value. Set both to 0 for avi default size. DOS, IPC and DROP pcaps not applicaple.",
    "schema.pb.debugvirtualservicecapture.file_count.desc": "Number of files to maintain for SE pcap file rotation.file count set to 1 indicates no rotate.",
    "schema.pb.dnspolicy.uuid.desc": "UUID of the DNS Policy",
    "schema.pb.dnspolicy.name.desc": "Name of the DNS Policy",
    "schema.pb.dnspolicy.rule.desc": "DNS rules",
    "schema.pb.dnspolicy.internal.desc": "The DNS policy is created and modified by internal modules only. This should not be modified by users.",
    "schema.pb.dnspolicy.created_by.desc": "Creator name",
    "schema.pb.dnspolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.dnspolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.dnsrule.name.desc": "Name of the rule",
    "schema.pb.dnsrule.index.desc": "Index of the rule",
    "schema.pb.dnsrule.enable.desc": "Enable or disable the rule",
    "schema.pb.dnsrule.match.desc": "Add match criteria to the rule",
    "schema.pb.dnsrule.action.desc": "Action to be performed upon successful matching",
    "schema.pb.dnsrule.log.desc": "Log DNS query upon rule match",
    "schema.pb.dnsrulematchtarget.protocol.desc": "DNS transport protocol match",
    "schema.pb.dnsrulematchtarget.query_name.desc": "Domain names to match against query name",
    "schema.pb.dnsrulematchtarget.query_type.desc": "DNS query types to match against request query type",
    "schema.pb.dnsrulematchtarget.geo_location.desc": "Geographical location attribute to match against that of the client IP",
    "schema.pb.dnsrulematchtarget.client_ip_address.desc": "IP addresses to match against client IP or the EDNS client subnet IP",
    "schema.pb.dnsrulematchtarget.client_port_numbers.desc": "Port number to match against client port number.",
    "schema.pb.dnsclientportmatch.client_ports.desc": "Port number to match against client port number in request",
    "schema.pb.portmatchgeneric.match_criteria.desc": "Criterion to use for srcdest port in a TCPUDP packet",
    "schema.pb.portmatchgeneric.ports.desc": "Listening TCP port(s)",
    "schema.pb.portmatchgeneric.ranges.desc": "A port range defined by a start and end, including both",
    "schema.pb.dnsclientipmatch.client_ip.desc": "IP addresses to match against client IP",
    "schema.pb.dnsclientipmatch.use_edns_client_subnet_ip.desc": "Use the IP address from the EDNS client subnet option, if available, as the source IP address of the client. It should be noted that the edns subnet IP may not be a 32 IP address.",
    "schema.pb.dnsgeolocationmatch.match_criteria.desc": "Criterion to use for matching the client IP's geographical location",
    "schema.pb.dnsgeolocationmatch.use_edns_client_subnet_ip.desc": "Use the IP address from the EDNS client subnet option, if available, to derive geo location of the DNS query",
    "schema.pb.dnsgeolocationmatch.geolocation_name.desc": "Geographical location of the client IP to be used in the match. This location is of the format CountryStateCity e.g. USCASanta Clara.",
    "schema.pb.dnsgeolocationmatch.geolocation_tag.desc": "Geolocation tag for the client IP. This could be any string value for the client IP, e.g. client IPs from US East Coast geolocation would be tagged as 'East Coast'.",
    "schema.pb.dnsquerytypematch.match_criteria.desc": "Criterion to use for matching the DNS query typein the question section",
    "schema.pb.dnsquerytypematch.query_type.desc": "DNS query types in the request query ",
    "schema.pb.dnsquerynamematch.match_criteria.desc": "Criterion to use for string matching the DNS query domain name in the question section",
    "schema.pb.dnsquerynamematch.query_domain_names.desc": "Domain name to match against that specified in the question section of the DNS query",
    "schema.pb.dnsquerynamematch.string_group_uuids.desc": "UUID of the string group(s) for matching against DNS query domain name in the question section",
    "schema.pb.dnstransportprotocolmatch.match_criteria.desc": "Criterion to use for matching the DNS transport protocol",
    "schema.pb.dnstransportprotocolmatch.protocol.desc": "Protocol to match against transport protocol used by DNS query",
    "schema.pb.dnsruleaction.allow.desc": "Allow or drop the DNS query",
    "schema.pb.dnsruleaction.response.desc": "Generate a response for the DNS query",
    "schema.pb.dnsruleaction.gslb_site_selection.desc": "Select a specific GSLB site for the DNS query. This action should be used only when GSLB services have been configured for the DNS virtual service.",
    "schema.pb.dnsruleaction.pool_switching.desc": "Select a pool or pool group for the passthrough DNS query which cannot be served locally but could be served by upstream servers.",
    "schema.pb.dnsruleaction.dns_rate_limiter.desc": "Rate limits the DNS requests.",
    "schema.pb.dnsratelimiter.rate_limiter_object.desc": "Rate limiting object.",
    "schema.pb.dnsratelimiter.action.desc": "Action to perform upon rate limiting.",
    "schema.pb.dnsrulerlaction.type.desc": "Type of action to be enforced upon hitting the rate limit.",
    "schema.pb.ratelimiter.count.desc": "Maximum number of connections, requests or packets permitted each period.",
    "schema.pb.ratelimiter.period.desc": "Time value in seconds to enforce rate count.",
    "schema.pb.ratelimiter.burst_sz.desc": "Maximum number of connections, requests or packets to be let through instantaneously.  If this is less than count, it will have no effect.",
    "schema.pb.ratelimiter.name.desc": "Identifier for Rate Limit. Constructed according to context.",
    "schema.pb.dnsruleactionpoolswitching.pool_uuid.desc": "Reference of the pool to serve the passthrough DNS query which cannot be served locally.",
    "schema.pb.dnsruleactionpoolswitching.pool_group_uuid.desc": "Reference of the pool group to serve the passthrough DNS query which cannot be served locally.",
    "schema.pb.dnsruleactiongslbsiteselection.site_name.desc": "GSLB site name",
    "schema.pb.dnsruleactiongslbsiteselection.is_site_preferred.desc": "When set to true, GSLB site is a preferred site. This setting comes into play when the site is down, as well as no configured fallback site is available (all fallback sites are also down), then any one available site is selected based on the default algorithm for GSLB pool member selection.",
    "schema.pb.dnsruleactiongslbsiteselection.fallback_site_names.desc": "GSLB fallback sites to use in case the desired site is down.",
    "schema.pb.dnsruleactionresponse.rcode.desc": "DNS response code",
    "schema.pb.dnsruleactionresponse.truncation.desc": "DNS response is truncated",
    "schema.pb.dnsruleactionresponse.authoritative.desc": "DNS response is authoritative",
    "schema.pb.dnsruleactionresponse.resource_record_sets.desc": "DNS resource record sets  (resource record set share the DNS domain name, type, and class)",
    "schema.pb.dnsrulednsrrset.resource_record_set.desc": "DNS resource record set  (records in the resource record set share the DNS domain name, type, and class)",
    "schema.pb.dnsrulednsrrset.section.desc": "DNS message section for the resource record set",
    "schema.pb.dnsrrset.fqdn.desc": "Fully Qualified Domain Name",
    "schema.pb.dnsrrset.type.desc": "DNS record type",
    "schema.pb.dnsrrset.ttl.desc": "Time To Live for this DNS record",
    "schema.pb.dnsrrset.ip_addresses.desc": "IP address in A record",
    "schema.pb.dnsrrset.cname.desc": "Canonical name in CNAME record",
    "schema.pb.dnsrrset.nses.desc": "Name Server information in NS record",
    "schema.pb.dnsrrset.ip6_addresses.desc": "IPv6 address in AAAA record",
    "schema.pb.dnsaaaardata.ip6_address.desc": "IPv6 address for FQDN",
    "schema.pb.dnsnsrdata.nsname.desc": "Name Server name",
    "schema.pb.dnsnsrdata.ip_address.desc": "IP address for Name Server",
    "schema.pb.dnsnsrdata.ip6_address.desc": "IPv6 address for Name Server",
    "schema.pb.dnscnamerdata.cname.desc": "Canonical name",
    "schema.pb.dnsardata.ip_address.desc": "IP address for FQDN",
    "schema.pb.dnsruleactionallowdrop.allow.desc": "Allow the DNS query",
    "schema.pb.dnsruleactionallowdrop.reset_conn.desc": "Reset the TCP connection of the DNS query, if allow is set to false to drop the query",
    "schema.pb.errorpagebody.error_page_body.desc": "Error page body sent to client when match",
    "schema.pb.errorpagebody.format.desc": "Format of an error page body HTML or JSON",
    "schema.pb.errorpagebody.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.errorpagebody.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.errorpageprofile.error_pages.desc": "Defined Error Pages for HTTP status codes",
    "schema.pb.errorpageprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.errorpageprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.errorpage.index.desc": "Index of the error page",
    "schema.pb.errorpage.enable.desc": "Enable or disable the error page",
    "schema.pb.errorpage.match.desc": "Add match criteria for http status codes to the error page",
    "schema.pb.errorpage.error_page_body_uuid.desc": "Custom error page body used to sent to the client",
    "schema.pb.errorpage.error_redirect.desc": "Redirect sent to client when match",
    "schema.pb.httpstatusmatch.match_criteria.desc": "Criterion to use for matching the HTTP response status code(s)",
    "schema.pb.httpstatusmatch.status_codes.desc": "HTTP response status code(s)",
    "schema.pb.httpstatusmatch.ranges.desc": "HTTP response status code range(s)",
    "schema.pb.federationcheckpoint.uuid.desc": "UUID of the Checkpoint.",
    "schema.pb.federationcheckpoint.name.desc": "Name of the Checkpoint.",
    "schema.pb.federationcheckpoint.date.desc": "Date when the checkpoint was created.",
    "schema.pb.federationcheckpoint.is_federated.desc": "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controllercluster and its associated serviceengines. If the field is set to true, then the object is replicated across the federation.",
    "schema.pb.federationcheckpoint.description.desc": "Description for this checkpoint.",
    "schema.pb.federationcheckpoint.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.federationcheckpoint.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.gatewaymonitor.gateway_ip.desc": "IP address of next hop gateway to be monitored",
    "schema.pb.gatewaymonitor.gateway_monitor_interval.desc": "The interval between two ping requests sent by the gateway monitor in milliseconds. If a value is not specified, requests are sent every second.",
    "schema.pb.gatewaymonitor.gateway_monitor_fail_threshold.desc": "The number of consecutive failed gateway health checks before a gateway is marked down.",
    "schema.pb.gatewaymonitor.gateway_monitor_success_threshold.desc": "The number of consecutive successful gateway health checks before a gateway that was marked down by the gateway monitor is marked up.",
    "schema.pb.gatewaymonitor.subnet.desc": "Subnet providing reachability for Multihop Gateway",
    "schema.pb.gcpencryptionkeys.se_image_kms_key_id.desc": "CMEK Resource ID to encrypt Service Engine GCE Image.",
    "schema.pb.gcpencryptionkeys.se_disk_kms_key_id.desc": "CMEK Resource ID to encrypt Service Engine Disks.",
    "schema.pb.gcpencryptionkeys.gcs_bucket_kms_key_id.desc": "CMEK Resource ID to encrypt Google Cloud Storage Bucket. This Bucket is used to upload Service Engine raw image.",
    "schema.pb.gcpencryptionkeys.gcs_objects_kms_key_id.desc": "CMEK Resource ID to encrypt Service Engine raw image. The raw image is a Google Cloud Storage Object.",
    "schema.pb.gcpvipallocation.mode.desc": "VIP Allocation Mode.",
    "schema.pb.gcpvipallocation.routes.desc": "Configure Google Cloud VPC Routes for VIP. The VIP can either be a static IP or auto allocted from AVI Internal Network. The VIP should not overlap with any of the subnet ranges in Google Cloud VPC.",
    "schema.pb.gcpvipallocation.ilb.desc": "Configure Google Cloud Internal LoadBalancer for VIP. The VIP will be auto allocated from a Google Cloud VPC Subnet.",
    "schema.pb.gcpvipilb.cloud_router_names.desc": "Google Cloud Router Names to advertise BYOIP.",
    "schema.pb.gcpviproutes.match_se_group_subnet.desc": "Match SE group subnets for VIP placement. Default is to not match SE group subnets.",
    "schema.pb.gcpviproutes.route_priority.desc": "Priority of the routes created in GCP.",
    "schema.pb.geodb.uuid.desc": "UUID of this object.",
    "schema.pb.geodb.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.geodb.name.desc": "Geo Database name.",
    "schema.pb.geodb.description.desc": "Description.",
    "schema.pb.geodb.is_federated.desc": "This field indicates that this object is replicated across GSLB federation.",
    "schema.pb.geodb.files.desc": "Geo Database files.",
    "schema.pb.geodb.mappings.desc": "Custom mappings of geo values. All mappings which start with the prefix 'System' (any case) are reserved for system default objects and may be overwritten.",
    "schema.pb.geodbmapping.name.desc": "The unique name of the user mapping.",
    "schema.pb.geodbmapping.description.desc": "Description of the mapping.",
    "schema.pb.geodbmapping.elements.desc": "The set of mapping elements.",
    "schema.pb.geodbmappingelement.attribute.desc": "The attribute to map.",
    "schema.pb.geodbmappingelement.values.desc": "The values to map.",
    "schema.pb.geodbfile.index.desc": "Priority of the file  larger number takes precedence.",
    "schema.pb.geodbfile.name.desc": "Name of the file.",
    "schema.pb.geodbfile.enabled.desc": "If set to false, this file is ignored.",
    "schema.pb.geodbfile.vendor.desc": "Source of the file data.",
    "schema.pb.geodbfile.file_uuid.desc": "The file object that contains the geo data. Must be of type 'GeoDB'.",
    "schema.pb.gslb.uuid.desc": "UUID of the GSLB object.",
    "schema.pb.gslb.name.desc": "Name for the GSLB object.",
    "schema.pb.gslb.dns_configs.desc": "Sub domain configuration for the GSLB.  GSLB service's FQDN must be a match one of these subdomains. ",
    "schema.pb.gslb.sites.desc": "Select Avi site member belonging to this Gslb.",
    "schema.pb.gslb.leader_cluster_uuid.desc": "Mark this Site as leader of GSLB configuration. This site is the one among the Avi sites.",
    "schema.pb.gslb.send_interval.desc": "Frequency with which group members communicate.",
    "schema.pb.gslb.clear_on_max_retries.desc": "Max retries after which the remote site is treated as a fresh start. In fresh start all the configs are downloaded.",
    "schema.pb.gslb.view_id.desc": "The viewid is used in changeleader mode to differentiate partitioned groups while they have the same GSLB namespace. Each partitioned group will be able to operate independently by using the viewid.",
    "schema.pb.gslb.third_party_sites.desc": "Third party site member belonging to this Gslb.",
    "schema.pb.gslb.client_ip_addr_group.desc": "Group to specify if the client ip addresses are public or private.",
    "schema.pb.gslb.async_interval.desc": "Frequency with which messages are propagated to Vs Mgr. Value of 0 disables async behavior and RPC are sent inline.",
    "schema.pb.gslb.error_resync_interval.desc": "Frequency with which errored messages are resynced to follower sites. Value of 0 disables resync behavior.",
    "schema.pb.gslb.replication_policy.desc": "Policy for replicating configuration to the active follower sites.",
    "schema.pb.gslb.send_interval_prior_to_maintenance_mode.desc": "The user can specify a sendinterval while entering maintenance mode. The validity of this 'maintenance sendinterval' is only during maintenance mode. When the user leaves maintenance mode, the original sendinterval is reinstated. This internal variable is used to store the original sendinterval. ",
    "schema.pb.gslb.maintenance_mode.desc": "This field disables the configuration operations on the leader for all federated objects.  CUD operations on Gslb, GslbService, GslbGeoDbProfile and other federated objects will be rejected. The restapi disabling helps in upgrade scenarios where we don't want configuration sync operations to the Gslb member when the member is being upgraded.  This configuration programmatically blocks the leader from accepting new Gslb configuration when member sites are undergoing upgrade. ",
    "schema.pb.gslb.is_federated.desc": "This field indicates that this object is replicated across GSLB federation.",
    "schema.pb.gslb.tenant_scoped.desc": "This field indicates tenant visibility for GS pool member selection across the Gslb federated objects.",
    "schema.pb.gslb.enable_config_by_members.desc": "Allows enabledisable of GslbService pool groups and pool members from the gslb follower members.",
    "schema.pb.gslb.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.replicationpolicy.replication_mode.desc": "Replication mode.",
    "schema.pb.replicationpolicy.checkpoint_uuid.desc": "Leader's checkpoint. Follower attempt to replicate configuration till this checkpoint.",
    "schema.pb.gslbclientipaddrgroup.type.desc": "Specify whether this client IP address range is public or private.",
    "schema.pb.gslbclientipaddrgroup.addrs.desc": "Configure IP address(es)",
    "schema.pb.gslbclientipaddrgroup.ranges.desc": "Configure IP address range(s)",
    "schema.pb.gslbclientipaddrgroup.prefixes.desc": "Configure IP address prefix(es)",
    "schema.pb.gslbthirdpartysite.cluster_uuid.desc": "Thirdpartysite identifier generated by Avi.",
    "schema.pb.gslbthirdpartysite.name.desc": "Name of the thirdparty Site.",
    "schema.pb.gslbthirdpartysite.enabled.desc": "Enable or disable the thirdparty Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance. A disabled site's configuration shall be retained  but it will not get any new configuration updates.   VIPs associated with the disabled site shall not be sent in DNS response. ",
    "schema.pb.gslbthirdpartysite.location.desc": "Geographic location of the site.",
    "schema.pb.gslbthirdpartysite.hm_proxies.desc": "User can designate certain Avi sites to run health monitor probes for VIPsVS(es) for this site. This is useful in network deployments where the VIPsVS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites.",
    "schema.pb.gslbthirdpartysite.ratio.desc": "User can overide the individual GslbPoolMember ratio for all the VIPs of this site. If this field is not configured, then the GslbPoolMember ratio gets applied. ",
    "schema.pb.gslbthirdpartysite.uuid.desc": "This field is used as a key in the datastore for the GslbThirdPartySite table to encapsulate siterelated info. ",
    "schema.pb.gslbhealthmonitorproxy.proxy_type.desc": "This field identifies the health monitor proxy behavior. The designated site for health monitor proxy can monitor public or private or all the members of a given site. ",
    "schema.pb.gslbhealthmonitorproxy.site_uuid.desc": "This field identifies the site that will health monitor on behalf of the current site. i.e. it will be a health monitor proxy and monitor members of the current site. ",
    "schema.pb.gslbgeolocation.source.desc": "This field describes the source of the GeoLocation. ",
    "schema.pb.gslbgeolocation.location.desc": "Geographic location of the site.",
    "schema.pb.gslbsite.cluster_uuid.desc": "UUID of the 'Cluster' object of the Controller Cluster in this site.",
    "schema.pb.gslbsite.name.desc": "Name for the Site Controller Cluster. After any changes to site name, references to GSLB site name should be updated manually. Ex: Site name used in DNS policies or Topology policies should be updated to use the new site name.",
    "schema.pb.gslbsite.address.desc": "IP Address or a DNS resolvable, fully qualified domain name of the Site Controller Cluster.",
    "schema.pb.gslbsite.ip_addresses.desc": "IP Address(es) of the Site's Cluster. For a 3node cluster, either the cluster vIP is provided, or the list of controller IPs in the cluster are provided.",
    "schema.pb.gslbsite.port.desc": "The Site Controller Cluster's REST API port number.",
    "schema.pb.gslbsite.username.desc": "The username used when authenticating with the Site. ",
    "schema.pb.gslbsite.password.desc": "The password used when authenticating with the Site.",
    "schema.pb.gslbsite.member_type.desc": "The site's member type: A leader is set to ACTIVE while allmembers are set to passive. ",
    "schema.pb.gslbsite.enabled.desc": "Enable or disable the Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance.  A disabled site's configuration shall be retained but it will not get any new configuration updates.  It shall not participate in HealthStatus monitoring.  VIPs of the Virtual Services on the disabled site shall not be sent in DNS response.  When a site transitions from disabled to enabled, it is treated similar to the addition of a new site.",
    "schema.pb.gslbsite.location.desc": "Geographic location of the site.",
    "schema.pb.gslbsite.hm_proxies.desc": "User can designate certain Avi sites to run health monitor probes for VIPsVS(es) for this site. This is useful in network deployments where the VIPsVS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites.",
    "schema.pb.gslbsite.ratio.desc": "User can overide the individual GslbPoolMember ratio for all the VIPsVS(es) of this site. If this field is not  configured then the GslbPoolMember ratio gets applied. ",
    "schema.pb.gslbsite.dns_vses.desc": "This field identifies the DNS VS and the subdomains it hosts for Gslb services. ",
    "schema.pb.gslbsite.uuid.desc": "This field is used as a key in the datastore for the GslbSite table to encapsulate siterelated info. ",
    "schema.pb.gslbsite.hm_shard_enabled.desc": "This field enables the health monitor shard functionality on a sitebasis.",
    "schema.pb.gslbsite.suspend_mode.desc": "This modes applies to follower sites. When an active site is in suspend mode, the site does not receive any further federated objects.",
    "schema.pb.gslbsitednsvs.dns_vs_uuid.desc": "This field identifies the DNS VS uuid for this site.",
    "schema.pb.gslbsitednsvs.domain_names.desc": "This field identifies the subdomains that are hosted on the DNS VS. GslbService(s) whose FQDNs map to one of the subdomains will be hosted on this DNS VS. If no subdomains are configured, then the default behavior is to host all the GslbServices on this DNS VS.",
    "schema.pb.dnsconfig.domain_name.desc": "GSLB subdomain used for GSLB service FQDN match and placement. ",
    "schema.pb.gslbgeodbprofile.uuid.desc": "UUID of the geodb profile.",
    "schema.pb.gslbgeodbprofile.name.desc": "A userfriendly name for the geodb profile.",
    "schema.pb.gslbgeodbprofile.entries.desc": "List of Geodb entries. An entry can either be a geodb file or an ip address group with geo properties. ",
    "schema.pb.gslbgeodbprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.gslbgeodbprofile.is_federated.desc": "This field indicates that this object is replicated across GSLB federation.",
    "schema.pb.gslbgeodbprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.gslbgeodbentry.priority.desc": "Priority of this geodb entry. This value should be unique in a repeated list of geodb entries.  Higher the value, then greater is the priority.  ",
    "schema.pb.gslbgeodbentry.file.desc": "This field describes the GeoDb file.",
    "schema.pb.gslbgeodbfile.filename.desc": "Geodb Filename in the Avi supported formats.",
    "schema.pb.gslbgeodbfile.format.desc": "This field indicates the file format.",
    "schema.pb.gslbgeodbfile.timestamp.desc": "Internal timestamp associated with the file.",
    "schema.pb.gslbgeodbfile.checksum.desc": "File checksum is internally computed.",
    "schema.pb.gslbgeodbfile.file_id.desc": "System internal identifier for the file.",
    "schema.pb.gslbpoolmember.cluster_uuid.desc": "The Cluster UUID of the Site.",
    "schema.pb.gslbpoolmember.vs_uuid.desc": "Select local virtual service in the specified controller cluster belonging to this GSLB service. The virtual service may have multiple IP addresses and FQDNs.  User will have to choose IP address or FQDN and configure it in the respective field. ",
    "schema.pb.gslbpoolmember.fqdn.desc": "The pool member is configured with a fully qualified domain name.  The FQDN is resolved to an IP address by the controller. DNS service shall health monitor the resolved IP address while it will return the fqdn(cname) in the DNS response.If the user has configured an IP address (in addition to the FQDN), then the IP address will get overwritten whenever periodic FQDN refresh is done by the controller. ",
    "schema.pb.gslbpoolmember.ip.desc": "IP address of the pool member. If this IP address is hosted via an AVI virtual service, then the user should configure the cluster uuid and virtual service uuid. If this IP address is hosted on a thirdparty device and the device is taggedtethered to a thirdparty site, then user can configure the thirdparty site uuid.  User may configure the IP address without the cluster uuid or the virtual service uuid.  In this option, some advanced site related features cannot be enabled. If the user has configured a fqdn for the pool member, then it takes precedence and will overwrite the configured IP address. ",
    "schema.pb.gslbpoolmember.ratio.desc": "Overrides the default ratio of 1.  Reduces the percentage the LB algorithm would pick the server in relation to its peers.  Range is 120.",
    "schema.pb.gslbpoolmember.enabled.desc": "Enable or Disable member to decide if this address should be provided in DNS responses.",
    "schema.pb.gslbpoolmember.location.desc": "Geographic location of the pool member",
    "schema.pb.gslbpoolmember.cloud_uuid.desc": "The Cloud UUID of the Site.",
    "schema.pb.gslbpoolmember.public_ip.desc": "Alternate IP addresses of the pool member. In usual deployments, the VIP in the virtual service is a private IP address. This gets configured in the 'ip' field of the GSLB service. This field is used to host the public IP address for the VIP, which gets NATed to the private IP by a firewall. Client DNS requests coming in from within the intranet should have the private IP served in the A record, and requests from outside this should be served the public IP address.",
    "schema.pb.gslbpoolmember.hostname.desc": "Hostname to be used as host header for http health monitors and as TLS server name for https health monitors.(By default, the fqdn of the GSLB pool member or GSLB service is used.) Note: this field is not used as http host header when exact_http_request is set in the health monitor. ",
    "schema.pb.gslbpoolmember.resolve_fqdn_to_v6.desc": "This field indicates if the fqdn should be resolved to a v6 or a v4 address family. ",
    "schema.pb.gslbpoolmember.description.desc": "User provided information that records member details such as application owner name, contact, etc.",
    "schema.pb.gslbservice.uuid.desc": "UUID of the GSLB service.",
    "schema.pb.gslbservice.name.desc": "Name for the GSLB service.",
    "schema.pb.gslbservice.domain_names.desc": "Fully qualified domain name of the GSLB service.",
    "schema.pb.gslbservice.groups.desc": "Select list of pools belonging to this GSLB service.",
    "schema.pb.gslbservice.num_dns_ip.desc": "Number of IP addresses of this GSLB service to be returned by the DNS Service. Enter 0 to return all IP addresses.",
    "schema.pb.gslbservice.ttl.desc": "TTL value (in seconds) for records served for this GSLB service by the DNS Service.",
    "schema.pb.gslbservice.down_response.desc": "Response to the client query when the GSLB service is DOWN.",
    "schema.pb.gslbservice.health_monitor_uuids.desc": "Verify VS health by applying one or more health monitors.  Active monitors generate synthetic traffic from DNS Service Engine and to mark a VS up or down based on the response. ",
    "schema.pb.gslbservice.controller_health_status_enabled.desc": "GS member's overall health status is derived based on a combination of controller and datapath healthstatus inputs. Note that the datapath status is determined by the association of health monitor profiles. Only the controller provided status is determined through this configuration. ",
    "schema.pb.gslbservice.health_monitor_scope.desc": "Health monitor probe can be executed for all the members or it can be executed only for thirdparty members. This operational mode is useful to reduce the number of health monitor probes in case of a hybrid scenario. In such a case, Avi members can have controller derived status while NonAvi members can be probed by via health monitor probes in dataplane.",
    "schema.pb.gslbservice.enabled.desc": "Enable or disable the GSLB service. If the GSLB service is enabled, then the VIPs are sent in the DNS responses based on reachability and configured algorithm. If the GSLB service is disabled, then the VIPs are no longer available in the DNS response.",
    "schema.pb.gslbservice.use_edns_client_subnet.desc": "Use the client ip subnet from the EDNS option as source IPaddress for client geolocation and consistent hash algorithm. Default is true.",
    "schema.pb.gslbservice.wildcard_match.desc": "Enable wildcard match of fqdn: if an exact match is not found in the DNS table, the longest match is chosen by wildcarding the fqdn in the DNS request. Default is false.",
    "schema.pb.gslbservice.site_persistence_enabled.desc": "Enable sitepersistence for the GslbService. ",
    "schema.pb.gslbservice.application_persistence_profile_uuid.desc": "The federated application persistence associated with GslbService site persistence functionality. ",
    "schema.pb.gslbservice.pool_algorithm.desc": "The load balancing algorithm will pick a GSLB pool within the GSLB service list of available pools.",
    "schema.pb.gslbservice.min_members.desc": "The minimum number of members to distribute traffic to.",
    "schema.pb.gslbservice.hm_off.desc": "This field is an internal field and is used in SE.",
    "schema.pb.gslbservice.resolve_cname.desc": "This field indicates that for a CNAME query, respond with resolved CNAMEs in the additional section with A records.",
    "schema.pb.gslbservice.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.gslbservice.is_federated.desc": "This field indicates that this object is replicated across GSLB federation.",
    "schema.pb.gslbservice.created_by.desc": "Creator name",
    "schema.pb.gslbservice.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.gslbservicedownresponse.type.desc": "Response from DNS service towards the client when the GSLB service is DOWN.",
    "schema.pb.gslbservicedownresponse.fallback_ip.desc": "Fallback IP address to use in A response to the client query when the GSLB service is DOWN.",
    "schema.pb.gslbservicedownresponse.fallback_ip6.desc": "Fallback IPV6 address to use in AAAA response to the client query when the GSLB service is DOWN.",
    "schema.pb.gslbpool.name.desc": "Name of the GSLB service pool.",
    "schema.pb.gslbpool.priority.desc": "Priority of this pool of Members. The higher the number, the higher is the priority of the pool. The DNS Service chooses the pool with the highest priority that is operationally up.",
    "schema.pb.gslbpool.algorithm.desc": "The load balancing algorithm will pick a local member within the GSLB service list of available Members.",
    "schema.pb.gslbpool.consistent_hash_mask.desc": "Mask to be applied on client IP for consistent hash algorithm.",
    "schema.pb.gslbpool.members.desc": "Select list of VIPs belonging to this GSLB service.",
    "schema.pb.gslbpool.enabled.desc": "Enable or disable a GSLB service pool.",
    "schema.pb.gslbpool.fallback_algorithm.desc": "The fallback load balancing algorithm used to pick a member when the pool algorithm fails to find a valid member. For instance when algorithm is Geo and clientserver do not have valid geo location.",
    "schema.pb.gslbpool.consistent_hash_mask6.desc": "Mask to be applied on client IPV6 address for consistent hash algorithm.",
    "schema.pb.gslbpool.min_health_monitors_up.desc": "Minimum number of health monitors in UP state to mark the member UP.",
    "schema.pb.gslbpool.description.desc": "User provided information that records member details such as application owner name, contact, etc.",
    "schema.pb.hardwaresecuritymodulegroup.uuid.desc": "UUID of the HSM Group configuration object",
    "schema.pb.hardwaresecuritymodulegroup.name.desc": "Name of the HSM Group configuration object",
    "schema.pb.hardwaresecuritymodulegroup.hsm.desc": "Hardware Security Module configuration",
    "schema.pb.hardwaresecuritymodulegroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.hardwaresecuritymodulegroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.hardwaresecuritymodule.type.desc": "HSM type to use",
    "schema.pb.hardwaresecuritymodule.rfs.desc": "Thales Remote File Server (RFS), used for the netHSMs, configuration",
    "schema.pb.hardwaresecuritymodule.nethsm.desc": "Thales netHSM specific configuration",
    "schema.pb.hardwaresecuritymodule.sluna.desc": "SafenetGemalto LunaGem specific configuration",
    "schema.pb.hardwaresecuritymodule.cloudhsm.desc": "AWS CloudHSM specific configuration",
    "schema.pb.hsmawscloudhsm.cluster_cert.desc": "AWS CloudHSM Cluster Certificate",
    "schema.pb.hsmawscloudhsm.hsm_ip.desc": "IP address of the HSM in the cluster. If there are more than one HSMs, only one is sufficient",
    "schema.pb.hsmawscloudhsm.crypto_user_name.desc": "Username of the Crypto User. This will be used to access the keys on the HSM ",
    "schema.pb.hsmawscloudhsm.crypto_user_password.desc": "Password of the Crypto User. This will be used to access the keys on the HSM ",
    "schema.pb.hsmsafenetluna.server.desc": "SafeNetGemalto HSM Servers used for crypto operations",
    "schema.pb.hsmsafenetluna.is_ha.desc": "Set to indicate HA across more than one servers",
    "schema.pb.hsmsafenetluna.ha_group_num.desc": "Group Number of generated HA Group",
    "schema.pb.hsmsafenetluna.node_info.desc": "Node specific information",
    "schema.pb.hsmsafenetluna.server_pem.desc": "Generated File  server.pem",
    "schema.pb.hsmsafenetluna.use_dedicated_network.desc": "If enabled, dedicated network is used to communicate with HSM,else, the management network is used.",
    "schema.pb.hsmsafenetclientinfo.client_priv_key.desc": "Client Private Key generated by createCert",
    "schema.pb.hsmsafenetclientinfo.client_cert.desc": "Client Certificate generated by createCert",
    "schema.pb.hsmsafenetclientinfo.client_ip.desc": "Name prepended to client key and certificate filename",
    "schema.pb.hsmsafenetclientinfo.chrystoki_conf.desc": "Generated File  Chrystoki.conf ",
    "schema.pb.hsmsafenetclientinfo.session_major_number.desc": "Major number of the sesseion",
    "schema.pb.hsmsafenetclientinfo.session_minor_number.desc": "Minor number of the sesseion",
    "schema.pb.hsmsafenetlunaserver.remote_ip.desc": "IP address of the SafenetGemalto HSM device",
    "schema.pb.hsmsafenetlunaserver.server_cert.desc": "CA certificate of the server",
    "schema.pb.hsmsafenetlunaserver.partition_passwd.desc": "Password of the partition assigned to this client",
    "schema.pb.hsmsafenetlunaserver.partition_serial_number.desc": "Serial number of the partition assigned to this client.",
    "schema.pb.hsmthalesnethsm.remote_ip.desc": "IP address of the netHSM device",
    "schema.pb.hsmthalesnethsm.remote_port.desc": "Port at which the netHSM device accepts the connection",
    "schema.pb.hsmthalesnethsm.esn.desc": "Electronic serial number of the netHSM device. Use Thales anonkneti utility to find the netHSM ESN",
    "schema.pb.hsmthalesnethsm.module_id.desc": "Local module id of the netHSM device",
    "schema.pb.hsmthalesnethsm.keyhash.desc": "Hash of the key that netHSM device uses to authenticate itself. Use Thales anonkneti utility to find the netHSM keyhash",
    "schema.pb.hsmthalesnethsm.priority.desc": "Priority class of the nethsm in an high availability setup. 1 is the highest priority and 100 is the lowest priority",
    "schema.pb.hsmthalesrfs.ip.desc": "IP address of the RFS server from where to sync the Thales encrypted private key",
    "schema.pb.hsmthalesrfs.port.desc": "Port at which the RFS server accepts the sync request from clients for Thales encrypted private key",
    "schema.pb.healthmonitor.uuid.desc": "UUID of the health monitor.",
    "schema.pb.healthmonitor.name.desc": "A user friendly name for this health monitor.",
    "schema.pb.healthmonitor.send_interval.desc": "Frequency, in seconds, that monitors are sent to a server.",
    "schema.pb.healthmonitor.receive_timeout.desc": "A valid response from the server is expected within the receive timeout window.  This timeout must be less than the send interval.  If server status is regularly flapping up and down, consider increasing this value.",
    "schema.pb.healthmonitor.successful_checks.desc": "Number of continuous successful health checks before server is marked up.",
    "schema.pb.healthmonitor.failed_checks.desc": "Number of continuous failed health checks before the server is marked down.",
    "schema.pb.healthmonitor.type.desc": "Type of the health monitor.",
    "schema.pb.healthmonitor.monitor_port.desc": "Use this port instead of the port defined for the server in the Pool. If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the Pool.",
    "schema.pb.healthmonitor.sip_monitor.desc": "Health monitor for SIP.",
    "schema.pb.healthmonitor.radius_monitor.desc": "Health monitor for Radius.",
    "schema.pb.healthmonitor.disable_quickstart.desc": "During addition of a server or healthmonitors or during bootup, Avi performs sequential health checks rather than waiting for sendinterval to kick in, to mark the server up as soon as possible. This knob may be used to turn this feature off.",
    "schema.pb.healthmonitor.allow_duplicate_monitors.desc": "By default, multiple instances of the same healthmonitor to the same server are suppressed intelligently. In rare cases, the monitor may have specific constructs that go beyond the server keys (ip, port, etc.) during which such suppression is not desired. Use this knob to allow duplicates.",
    "schema.pb.healthmonitor.authentication.desc": "Authentication information for usernamepassword.",
    "schema.pb.healthmonitor.smtp_monitor.desc": "Health monitor for SMTP.",
    "schema.pb.healthmonitor.smtps_monitor.desc": "Health monitor for SMTPS.",
    "schema.pb.healthmonitor.pop3_monitor.desc": "Health monitor for POP3.",
    "schema.pb.healthmonitor.pop3s_monitor.desc": "Health monitor for POP3S.",
    "schema.pb.healthmonitor.imap_monitor.desc": "Health monitor for IMAP.",
    "schema.pb.healthmonitor.imaps_monitor.desc": "Health monitor for IMAPS.",
    "schema.pb.healthmonitor.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.healthmonitor.ftp_monitor.desc": "Health monitor for FTP.",
    "schema.pb.healthmonitor.ftps_monitor.desc": "Health monitor for FTPS.",
    "schema.pb.healthmonitor.ldap_monitor.desc": "Health monitor for LDAP.",
    "schema.pb.healthmonitor.ldaps_monitor.desc": "Health monitor for LDAPS.",
    "schema.pb.healthmonitor.is_federated.desc": "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controllercluster and its associated serviceengines.  If the field is set to true, then the object is replicated across the federation.  ",
    "schema.pb.healthmonitor.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.healthmonitorldap.base_dn.desc": "DN(Distinguished Name) of a directory entry. which will be starting point of the search.",
    "schema.pb.healthmonitorldap.attributes.desc": "Attributes which will be retrieved. commas can be used to delimit more than one attributes (example cn,address,email).",
    "schema.pb.healthmonitorldap.scope.desc": "Search scope which can be base, one, sub.",
    "schema.pb.healthmonitorldap.filter.desc": "Filter to search entries in specified scope.",
    "schema.pb.healthmonitorldap.ssl_attributes.desc": "SSL attributes for LDAPS monitor",
    "schema.pb.healthmonitorsslattributes.ssl_profile_uuid.desc": "SSL profile defines ciphers and SSL versions to be used for healthmonitor traffic to the backend servers.",
    "schema.pb.healthmonitorsslattributes.pki_profile_uuid.desc": "PKI profile used to validate the SSL certificate presented by a server.",
    "schema.pb.healthmonitorsslattributes.ssl_key_and_certificate_uuid.desc": "Service engines will present this SSL certificate to the server.",
    "schema.pb.healthmonitorsslattributes.server_name.desc": "Fully qualified DNS hostname which will be used in the TLS SNI extension in server connections indicating SNI is enabled.",
    "schema.pb.healthmonitorftp.filename.desc": "Filename to download with full path.",
    "schema.pb.healthmonitorftp.mode.desc": "FTP data transfer process mode.",
    "schema.pb.healthmonitorftp.ssl_attributes.desc": "SSL attributes for FTPS monitor.",
    "schema.pb.healthmonitorimap.folder.desc": "Folder to access",
    "schema.pb.healthmonitorimap.ssl_attributes.desc": "SSL attributes for IMAPS monitor",
    "schema.pb.healthmonitorpop3.ssl_attributes.desc": "SSL attributes for POP3S monitor",
    "schema.pb.healthmonitorsmtp.sender_id.desc": "Mail sender",
    "schema.pb.healthmonitorsmtp.recipients_ids.desc": "Mail recipients",
    "schema.pb.healthmonitorsmtp.mail_data.desc": "Mail data",
    "schema.pb.healthmonitorsmtp.domainname.desc": "Sender domain name",
    "schema.pb.healthmonitorsmtp.ssl_attributes.desc": "SSL attributes for SMTPS monitor",
    "schema.pb.healthmonitorauthinfo.username.desc": "Username for server authentication.",
    "schema.pb.healthmonitorauthinfo.password.desc": "Password for server authentication.",
    "schema.pb.healthmonitorradius.username.desc": "Radius monitor will query Radius server with this username.",
    "schema.pb.healthmonitorradius.password.desc": "Radius monitor will query Radius server with this password.",
    "schema.pb.healthmonitorradius.shared_secret.desc": "Radius monitor will query Radius server with this shared secret.",
    "schema.pb.healthmonitorsip.sip_request_code.desc": "Specify the SIP request to be sent to the server. By default, SIP OPTIONS request will be sent.",
    "schema.pb.healthmonitorsip.sip_response.desc": "Match for a keyword in the first 2KB of the server header and body response. By default, it matches for SIP2.0.",
    "schema.pb.healthmonitorsip.sip_monitor_transport.desc": "Specify the transport protocol TCP or UDP, to be used for SIP health monitor. The default transport is UDP.",
    "schema.pb.healthmonitordns.query_name.desc": "The DNS monitor will query the DNS server for the fully qualified name in this field.",
    "schema.pb.healthmonitordns.qtype.desc": "  Query_Type: Response has atleast one answer of which      the resource record type matches the query type   Any_Type: Response should contain atleast one answer  AnyThing: An empty answer is enough",
    "schema.pb.healthmonitordns.rcode.desc": "When No Error is selected, a DNS query will be marked failed is any error code is returned by the server.  With Any selected, the monitor ignores error code in the responses.",
    "schema.pb.healthmonitordns.response_string.desc": "The resource record of the queried DNS server's response for the Request Name must include the IP address defined in this field. ",
    "schema.pb.healthmonitordns.record_type.desc": "Resource record type used in the healthmonitor DNS query, only A or AAAA type supported.",
    "schema.pb.healthmonitorudp.udp_request.desc": "Send UDP request.",
    "schema.pb.healthmonitorudp.udp_response.desc": "Match for keyword in the UDP response.",
    "schema.pb.healthmonitorudp.maintenance_response.desc": "Match or look for this keyword in the first 2KB of server's response indicating server maintenance.  A successful match results in the server being marked down.",
    "schema.pb.healthmonitorexternal.command_path.desc": "Path of external health monitor script.",
    "schema.pb.healthmonitorexternal.command_parameters.desc": "Optional arguments to feed into the script.",
    "schema.pb.healthmonitorexternal.command_code.desc": "Command script provided inline.",
    "schema.pb.healthmonitorexternal.command_variables.desc": "Environment variables to be fed into the script.",
    "schema.pb.healthmonitorhttp.http_request.desc": "Send an HTTP request to the server.  The default GET  HTTP1.0 may be extended with additional headers or information.  For instance, GET index.htm HTTP1.1 Host: www.site.com Connection: Close",
    "schema.pb.healthmonitorhttp.http_response_code.desc": "List of HTTP response codes to match as successful.  Default is 2xx.",
    "schema.pb.healthmonitorhttp.http_response.desc": "Match for a keyword in the first 2Kb of the server header and body response.",
    "schema.pb.healthmonitorhttp.maintenance_code.desc": "Match or look for this HTTP response code indicating server maintenance.  A successful match results in the server being marked down.",
    "schema.pb.healthmonitorhttp.maintenance_response.desc": "Match or look for this keyword in the first 2KB of server header and body response indicating server maintenance.  A successful match results in the server being marked down.",
    "schema.pb.healthmonitorhttp.ssl_attributes.desc": "SSL attributes for HTTPS health monitor.",
    "schema.pb.healthmonitorhttp.exact_http_request.desc": "Use the exact http_request string as specified by user, without any automatic insert of headers like Host header.",
    "schema.pb.healthmonitorhttp.auth_type.desc": "Type of the authentication method.",
    "schema.pb.healthmonitorhttp.http_request_body.desc": "HTTP request body.",
    "schema.pb.healthmonitorhttp.response_size.desc": "Expected httphttps response page size.",
    "schema.pb.healthmonitortcp.tcp_request.desc": "Request data to send after completing the TCP handshake.",
    "schema.pb.healthmonitortcp.tcp_response.desc": "Match for the desired keyword in the first 2Kb of the server's TCP response. If this field is left blank, no server response is required.",
    "schema.pb.healthmonitortcp.maintenance_response.desc": "Match or look for this keyword in the first 2KB of server's response indicating server maintenance.  A successful match results in the server being marked down.",
    "schema.pb.healthmonitortcp.tcp_half_open.desc": "Configure TCP health monitor to use halfopen TCP connections to monitor the health of backend servers thereby avoiding consumption of a full fledged server side connection and the overhead and logs associated with it.  This method is lightweight as it makes use of listener in server's kernel layer to measure the health and a child socket or user thread is not created on the server side.",
    "schema.pb.httpcookiepersistencekey.name.desc": "name to use for cookie encryption",
    "schema.pb.httppolicyset.uuid.desc": "UUID of the HTTP Policy Set",
    "schema.pb.httppolicyset.name.desc": "Name of the HTTP Policy Set",
    "schema.pb.httppolicyset.http_security_policy.desc": "HTTP security policy for the virtual service.",
    "schema.pb.httppolicyset.http_request_policy.desc": "HTTP request policy for the virtual service.",
    "schema.pb.httppolicyset.http_response_policy.desc": "HTTP response policy for the virtual service.",
    "schema.pb.httppolicyset.created_by.desc": "Creator name",
    "schema.pb.httppolicyset.cloud_config_cksum.desc": "Checksum of cloud configuration for Pool. Internally set by cloud connector",
    "schema.pb.httppolicyset.ip_reputation_db_uuid.desc": "IP reputation database.",
    "schema.pb.httppolicyset.geo_db_uuid.desc": "Geo database.",
    "schema.pb.httppolicyset.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.httppolicyset.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.httprequestpolicy.rules.desc": "Add rules to the HTTP request policy",
    "schema.pb.httprequestrule.name.desc": "Name of the rule",
    "schema.pb.httprequestrule.index.desc": "Index of the rule",
    "schema.pb.httprequestrule.enable.desc": "Enable or disable the rule",
    "schema.pb.httprequestrule.match.desc": "Add match criteria to the rule",
    "schema.pb.httprequestrule.redirect_action.desc": "HTTP redirect action",
    "schema.pb.httprequestrule.hdr_action.desc": "HTTP header rewrite action",
    "schema.pb.httprequestrule.rewrite_url_action.desc": "HTTP request URL rewrite action",
    "schema.pb.httprequestrule.switching_action.desc": "Content switching action",
    "schema.pb.httprequestrule.log.desc": "Log HTTP request upon rule match",
    "schema.pb.httprequestrule.all_headers.desc": "Log all HTTP headers upon rule match",
    "schema.pb.httpswitchingaction.action.desc": "Content switching action type",
    "schema.pb.httpswitchingaction.pool_uuid.desc": "UUID of the pool of servers to serve the request",
    "schema.pb.httpswitchingaction.status_code.desc": "HTTP status code to use when serving local response",
    "schema.pb.httpswitchingaction.file.desc": "File from which to serve local response to the request",
    "schema.pb.httpswitchingaction.server.desc": "Specific pool server to select",
    "schema.pb.httpswitchingaction.pool_group_uuid.desc": "UUID of the pool group to serve the request",
    "schema.pb.poolserver.ip.desc": "IP address of the server in the poool",
    "schema.pb.poolserver.hostname.desc": "DNS resolvable name of the server.  May be used in place of the IP address.",
    "schema.pb.poolserver.port.desc": "Port of the pool server listening for HTTPHTTPS. Default value is the default port in the pool.",
    "schema.pb.httplocalfile.content_type.desc": "Mimetype of the content in the file.",
    "schema.pb.httplocalfile.file_content.desc": "File content to used in the local HTTP response body.",
    "schema.pb.httplocalfile.file_length.desc": "File content length.",
    "schema.pb.httphdraction.action.desc": "ADD: A new header with the new value is added irrespective of the existence of an HTTP header of the given name. REPLACE: A new header with the new value is added if no header of the given name exists, else existing headers with the given name are removed and a new header with the new value is added. REMOVE: All the headers of the given name are removed.",
    "schema.pb.httphdraction.hdr.desc": "HTTP header information",
    "schema.pb.httphdraction.cookie.desc": "Cookie information",
    "schema.pb.httpcookiedata.name.desc": "Cookie name",
    "schema.pb.httpcookiedata.value.desc": "Cookie value",
    "schema.pb.httphdrdata.name.desc": "HTTP header name",
    "schema.pb.httphdrdata.value.desc": "HTTP header value",
    "schema.pb.httphdrvalue.var.desc": "Variable",
    "schema.pb.httphdrvalue.val.desc": "HTTP header value or variable representing an HTTP header",
    "schema.pb.httpredirectaction.protocol.desc": "Protocol type",
    "schema.pb.httpredirectaction.host.desc": "Host config",
    "schema.pb.httpredirectaction.port.desc": "Port to which redirect the request",
    "schema.pb.httpredirectaction.path.desc": "Path config",
    "schema.pb.httpredirectaction.keep_query.desc": "Keep or drop the query of the incoming request URI in the redirected URI",
    "schema.pb.httpredirectaction.status_code.desc": "HTTP redirect status code",
    "schema.pb.httpredirectaction.add_string.desc": "Add a query string to the redirect URI. If keep_query is set, concatenates the add_string to the query of the incoming request.",
    "schema.pb.uriparam.type.desc": "URI param type",
    "schema.pb.uriparam.tokens.desc": "Token config either for the URI components or a constant string",
    "schema.pb.uriparamtoken.type.desc": "Token type for constructing the URI",
    "schema.pb.uriparamtoken.start_index.desc": "Index of the starting token in the incoming URI",
    "schema.pb.uriparamtoken.end_index.desc": "Index of the ending token in the incoming URI",
    "schema.pb.uriparamtoken.str_value.desc": "Constant string to use as a token",
    "schema.pb.httpresponsepolicy.rules.desc": "Add rules to the HTTP response policy",
    "schema.pb.httpsecuritypolicy.rules.desc": "Add rules to the HTTP security policy",
    "schema.pb.httpsecurityrule.name.desc": "Name of the rule",
    "schema.pb.httpsecurityrule.index.desc": "Index of the rule",
    "schema.pb.httpsecurityrule.enable.desc": "Enable or disable the rule",
    "schema.pb.httpsecurityrule.match.desc": "Add match criteria to the rule",
    "schema.pb.httpsecurityrule.action.desc": "Action to be performed upon successful matching",
    "schema.pb.httpsecurityrule.log.desc": "Log HTTP request upon rule match",
    "schema.pb.httpsecurityaction.action.desc": "Type of the security action to perform",
    "schema.pb.httpsecurityaction.status_code.desc": "HTTP status code to use for local response",
    "schema.pb.httpsecurityaction.https_port.desc": "Secure SSLTLS port to redirect the HTTP request to",
    "schema.pb.httpsecurityaction.file.desc": "File to be used for generating HTTP local response",
    "schema.pb.httpsecurityaction.rate_profile.desc": "Rate limiting configuration for this action.",
    "schema.pb.httpsecurityactionrateprofile.rate_limiter.desc": "The rate limiter used when this action is triggered.",
    "schema.pb.httpsecurityactionrateprofile.action.desc": "The action to take when the rate limit has been reached.",
    "schema.pb.httpsecurityactionrateprofile.per_client_ip.desc": "Rate limiting should be done on a per client ip basis.",
    "schema.pb.httpsecurityactionrateprofile.per_uri_path.desc": "Rate limiting should be done on a per request uri path basis.",
    "schema.pb.ratelimiteraction.type.desc": "Type of action to be enforced upon hitting the rate limit.",
    "schema.pb.ratelimiteraction.redirect.desc": "Parameters for HTTP Redirect rate limit action.",
    "schema.pb.ratelimiteraction.status_code.desc": "HTTP status code for Local Response rate limit action.",
    "schema.pb.ratelimiteraction.file.desc": "File to be used for HTTP Local response rate limit action.",
    "schema.pb.icapprofile.uuid.desc": "UUID of the ICAP profile.",
    "schema.pb.icapprofile.name.desc": "Name of the ICAP profile.",
    "schema.pb.icapprofile.tenant_uuid.desc": "Tenant which this object belongs to.",
    "schema.pb.icapprofile.cloud_uuid.desc": "The cloud where this object belongs to. This must match the cloud referenced in the pool group below.",
    "schema.pb.icapprofile.description.desc": "A description for this ICAP profile.",
    "schema.pb.icapprofile.pool_group_uuid.desc": "The pool group which is used to connect to ICAP servers.",
    "schema.pb.icapprofile.vendor.desc": "The vendor of the ICAP server.",
    "schema.pb.icapprofile.service_uri.desc": "The path and query component of the ICAP URL. Host name and port will be taken from the pool.",
    "schema.pb.icapprofile.buffer_size.desc": "The maximum buffer size for the HTTP request body. If the request body exceeds this size, the request will not be checked by the ICAP server. In this case, the configured action will be executed and a significant log entry will be generated.",
    "schema.pb.icapprofile.buffer_size_exceed_action.desc": "Decide what should happen if the request body size exceeds the configured buffer size. If this is set to Fail Open, the request will not be checked by the ICAP server. If this is set to Fail Closed, the request will be rejected with 413 status code.",
    "schema.pb.icapprofile.enable_preview.desc": "Use the ICAP preview feature as described in RFC 3507 section 4.5.",
    "schema.pb.icapprofile.preview_size.desc": "The ICAP preview size as described in RFC 3507 section 4.5. This should not exceed the size supported by the ICAP server. If this is set to 0, only the HTTP header will be sent to the ICAP server as a preview. To disable preview completely, set the enablepreview option to false.If vendor is LASTLINE, recommended preview size is 1000 bytes,minimum preview size is 10 bytes.",
    "schema.pb.icapprofile.response_timeout.desc": "Maximum time, client's request will be paused for ICAP processing. If this timeout is exceeded, the request to the ICAP server will be aborted and the configured fail action is executed.",
    "schema.pb.icapprofile.slow_response_warning_threshold.desc": "If the ICAP request takes longer than this value, this request will generate a significant log entry.",
    "schema.pb.icapprofile.fail_action.desc": "Decide what should happen if there is a problem with the ICAP server like communication timeout, protocol error, pool error, etc. If this is set to Fail Open, the request will continue, but will create a significant log entry. If this is set to Fail Closed, the request will be rejected with a 500 status code.",
    "schema.pb.icapprofile.allow_204.desc": "Allow ICAP server to send 204 response as described in RFC 3507 section 4.5. Service Engine will buffer the complete request if alllow_204 is enabled. If disabled, preview_size request body will be buffered if enable_preview is set to true, and rest of the request body will be streamed to the ICAP server.",
    "schema.pb.icapprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.icapprofile.nsx_defender_config.desc": "NSXDefender specific ICAP configurations.",
    "schema.pb.icapnsxdefenderconfig.status_url.desc": "URL to get details from NSXDefender using task_uuid for a particular request.",
    "schema.pb.image.uuid.desc": "UUID of the image.",
    "schema.pb.image.name.desc": "Name of the image.",
    "schema.pb.image.controller_info.desc": "Controller package details.",
    "schema.pb.image.se_info.desc": "SE package details.",
    "schema.pb.image.migrations.desc": "This field describes the api migration related information.",
    "schema.pb.image.type.desc": "Type of the image patchsystem.",
    "schema.pb.image.uber_bundle.desc": "Status to check if the image is an uber bundle.",
    "schema.pb.image.controller_patch_uuid.desc": "It references the controllerpatch associated with the Uber image.",
    "schema.pb.image.se_patch_uuid.desc": "It references the Service Engine patch associated with the Uber Image.",
    "schema.pb.image.cloud_info_values.desc": "This field describes the cloud info specific to the base image.",
    "schema.pb.image.controller_patch_name.desc": "Mandatory Controller patch name that is applied along with this base image.",
    "schema.pb.image.se_patch_name.desc": "Mandatory ServiceEngine patch name that is applied along with this base image.",
    "schema.pb.image.img_state.desc": "Status of the image.",
    "schema.pb.image.events.desc": "Image events for image upload operation.",
    "schema.pb.image.tasks_completed.desc": "Completed set of tasks for Image upload.",
    "schema.pb.image.total_tasks.desc": "Total number of tasks for Image upload.",
    "schema.pb.image.progress.desc": "Image upload progress which holds value between 0100",
    "schema.pb.image.start_time.desc": "Image upload start time.",
    "schema.pb.image.end_time.desc": "Image upload end time.",
    "schema.pb.image.duration.desc": "Time taken to upload the image in seconds.",
    "schema.pb.image.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.imageeventmap.task_name.desc": "Name representing the task.",
    "schema.pb.imageeventmap.nodes_events.desc": "List of all events node wise.",
    "schema.pb.imageeventmap.sub_events.desc": "List of all events node wise.",
    "schema.pb.imageevent.ip.desc": "Ip of the node.",
    "schema.pb.imageevent.start_time.desc": "Task start time.",
    "schema.pb.imageevent.end_time.desc": "Task end time.",
    "schema.pb.imageevent.duration.desc": "Time taken to complete event in seconds.",
    "schema.pb.imageevent.status.desc": "Event status.",
    "schema.pb.imageevent.message.desc": "Event message if any.",
    "schema.pb.imageevent.sub_tasks.desc": "Sub tasks executed on each node.",
    "schema.pb.imageuploadopsstatus.state.desc": "Current fsmstate of image upload operation.",
    "schema.pb.imageuploadopsstatus.reason.desc": "Descriptive reason for the state of the image.",
    "schema.pb.imageuploadopsstatus.last_changed_time.desc": "The last time the state changed.",
    "schema.pb.imageclouddata.cloud_name.desc": "Contains the name of the cloud.",
    "schema.pb.imageclouddata.cloud_data_values.desc": "Cloud Data specific to a particular cloud.",
    "schema.pb.imagecloudspecificdata.key.desc": "Each cloud has specific parameters.",
    "schema.pb.imagecloudspecificdata.values.desc": "Each parameter can have multiple values.",
    "schema.pb.ipaddrgroup.uuid.desc": "UUID of the IP address group",
    "schema.pb.ipaddrgroup.name.desc": "Name of the IP address group",
    "schema.pb.ipaddrgroup.addrs.desc": "Configure IP address(es)",
    "schema.pb.ipaddrgroup.ranges.desc": "Configure IP address range(s)",
    "schema.pb.ipaddrgroup.prefixes.desc": "Configure IP address prefix(es)",
    "schema.pb.ipaddrgroup.country_codes.desc": "Populate the IP address ranges from the geo database for this country",
    "schema.pb.ipaddrgroup.ip_ports.desc": "Configure (IP address, port) tuple(s)",
    "schema.pb.ipaddrgroup.marathon_app_name.desc": "Populate IP addresses from tasks of this Marathon app",
    "schema.pb.ipaddrgroup.marathon_service_port.desc": "Task port associated with marathon service port. If Marathon app has multiple service ports, this is required. Else, the first task port is used",
    "schema.pb.ipaddrgroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.ipaddrgroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ipamdnsproviderprofile.uuid.desc": "UUID of the IPAMDNS Provider profile",
    "schema.pb.ipamdnsproviderprofile.name.desc": "Name for the IPAMDNS Provider profile",
    "schema.pb.ipamdnsproviderprofile.type.desc": "Provider Type for the IPAMDNS Provider profile",
    "schema.pb.ipamdnsproviderprofile.infoblox_profile.desc": "Provider details if type is Infoblox",
    "schema.pb.ipamdnsproviderprofile.aws_profile.desc": "Provider details if type is AWS",
    "schema.pb.ipamdnsproviderprofile.openstack_profile.desc": "Provider details if type is OpenStack",
    "schema.pb.ipamdnsproviderprofile.internal_profile.desc": "Provider details if type is Avi",
    "schema.pb.ipamdnsproviderprofile.gcp_profile.desc": "Provider details if type is Google Cloud",
    "schema.pb.ipamdnsproviderprofile.custom_profile.desc": "Provider details if type is Custom",
    "schema.pb.ipamdnsproviderprofile.azure_profile.desc": "Provider details if type is Microsoft Azure",
    "schema.pb.ipamdnsproviderprofile.oci_profile.desc": "Provider details for Oracle Cloud",
    "schema.pb.ipamdnsproviderprofile.tencent_profile.desc": "Provider details for Tencent Cloud",
    "schema.pb.ipamdnsproviderprofile.allocate_ip_in_vrf.desc": "If this flag is set, only allocate IP from networks in the Virtual Service VRF. Applicable for Avi Vantage IPAM only",
    "schema.pb.ipamdnsproviderprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.ipamdnsproviderprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ipamdnsazureprofile.subscription_id.desc": "Subscription Id for the Azure subscription",
    "schema.pb.ipamdnsazureprofile.azure_userpass.desc": "User name password based credentials for azure. Only one of azure_userpass or azure_serviceprincipal is allowed.",
    "schema.pb.ipamdnsazureprofile.azure_serviceprincipal.desc": "Service principal based credentials for azure. Only one of azure_userpass or azure_serviceprincipal is allowed.",
    "schema.pb.ipamdnsazureprofile.virtual_network_ids.desc": "Virtual networks where Virtual IPs will belong.",
    "schema.pb.ipamdnsazureprofile.resource_group.desc": "Azure resource group dedicated for Avi Controller. Avi Controller will create all its resources in this resource group.",
    "schema.pb.ipamdnsazureprofile.usable_network_uuids.desc": "Usable networks for Virtual IP. If VirtualService does not specify a network and auto_allocate_ip is set, then the first available network from this list will be chosen for IP allocation.",
    "schema.pb.ipamdnsazureprofile.use_enhanced_ha.desc": "Use Azure's enhanced HA features. This needs a public IP to be associated with the VIP.",
    "schema.pb.ipamdnsazureprofile.usable_domains.desc": "Usable domains to pick from Azure DNS",
    "schema.pb.ipamdnsazureprofile.use_standard_alb.desc": "Use Standard SKU Azure Load Balancer. By default Basic SKU Load Balancer is used.",
    "schema.pb.ipamdnsazureprofile.egress_service_subnets.desc": "Used for allocating egress service source IPs.",
    "schema.pb.ipamdnscustomprofile.dynamic_params.desc": "Custom parameters that will passed to the IPAMDNS provider including but not limited to provider credentials and API version.",
    "schema.pb.ipamdnscustomprofile.usable_domains.desc": "Usable domains",
    "schema.pb.ipamdnscustomprofile.usable_alloc_subnets.desc": "Networks or Subnets to use for Custom IPAM IP allocation.",
    "schema.pb.customipamsubnet.network_id.desc": "Network to use for Custom IPAM IP allocation.",
    "schema.pb.customipamsubnet.subnet.desc": "IPv4 subnet to use for Custom IPAM IP allocation.",
    "schema.pb.customipamsubnet.subnet6.desc": "IPv6 subnet to use for Custom IPAM IP allocation.",
    "schema.pb.ipamdnsgcpprofile.usable_network_uuids.desc": "Usable networks for Virtual IP. If VirtualService does not specify a network and auto_allocate_ip is set, then the first available network from this list will be chosen for IP allocation.",
    "schema.pb.ipamdnsgcpprofile.match_se_group_subnet.desc": "Match SE group subnets for VIP placement. Default is to not match SE group subnets.",
    "schema.pb.ipamdnsgcpprofile.use_gcp_network.desc": "Use Google Cloud Platform Network for Private VIP allocation. By default Avi Vantage Network is used for Private VIP allocation.",
    "schema.pb.ipamdnsgcpprofile.network_host_project_id.desc": "Google Cloud Platform Network Host Project ID. This is the host project in which Google Cloud Platform Network resides.",
    "schema.pb.ipamdnsgcpprofile.se_project_id.desc": "Google Cloud Platform Project ID. This is the project where service engines are hosted. This field is optional. By default it will use the value of the field network_host_project_id.",
    "schema.pb.ipamdnsgcpprofile.region_name.desc": "Google Cloud Platform Region Name.",
    "schema.pb.ipamdnsgcpprofile.vpc_network_name.desc": "Google Cloud Platform VPC Network Name.",
    "schema.pb.ipamdnsinternalprofile.dns_service_domain.desc": "List of service domains",
    "schema.pb.ipamdnsinternalprofile.ttl.desc": "Default TTL for all records, overridden by TTL value for each service domain configured in DnsServiceDomain.",
    "schema.pb.ipamdnsinternalprofile.dns_virtualservice_uuid.desc": "Avi VirtualService to be used for serving DNS records.",
    "schema.pb.ipamdnsinternalprofile.usable_networks.desc": "Usable networks for Virtual IP. If VirtualService does not specify a network and auto_allocate_ip is set, then the first available network from this list will be chosen for IP allocation.",
    "schema.pb.ipamusablenetwork.nw_uuid.desc": "Network",
    "schema.pb.ipamusablenetwork.labels.desc": "Labels as key value pairs, used for selection of IPAM networks",
    "schema.pb.keyvaluetuple.key.desc": "Key",
    "schema.pb.keyvaluetuple.value.desc": "Value",
    "schema.pb.dnsservicedomain.domain_name.desc": "Service domain string used for FQDN",
    "schema.pb.dnsservicedomain.record_ttl.desc": "TTL value for DNS records",
    "schema.pb.dnsservicedomain.pass_through.desc": "Thirdparty Authoritative domain requests are delegated toDNS VirtualService's pool of nameservers.",
    "schema.pb.ipamdnsopenstackprofile.username.desc": "The username Avi Vantage will use when authenticating to Keystone.",
    "schema.pb.ipamdnsopenstackprofile.password.desc": "The password Avi Vantage will use when authenticating to Keystone.",
    "schema.pb.ipamdnsopenstackprofile.tenant.desc": "OpenStack tenant name",
    "schema.pb.ipamdnsopenstackprofile.keystone_host.desc": "Keystone's hostname or IP address.",
    "schema.pb.ipamdnsopenstackprofile.vip_network_name.desc": "Network to be used for VIP allocation",
    "schema.pb.ipamdnsopenstackprofile.region.desc": "Region name",
    "schema.pb.ipamdnsawsprofile.region.desc": "AWS region",
    "schema.pb.ipamdnsawsprofile.vpc.desc": "VPC name",
    "schema.pb.ipamdnsawsprofile.vpc_id.desc": "VPC ID",
    "schema.pb.ipamdnsawsprofile.use_iam_roles.desc": "Use IAM roles instead of access and secret key.",
    "schema.pb.ipamdnsawsprofile.access_key_id.desc": "AWS access key ID",
    "schema.pb.ipamdnsawsprofile.secret_access_key.desc": "AWS secret access key",
    "schema.pb.ipamdnsawsprofile.usable_network_uuids.desc": "Usable networks for Virtual IP. If VirtualService does not specify a network and auto_allocate_ip is set, then the first available network from this list will be chosen for IP allocation.",
    "schema.pb.ipamdnsawsprofile.usable_domains.desc": "Usable domains to pick from Amazon Route 53",
    "schema.pb.ipamdnsawsprofile.iam_assume_role.desc": "IAM assume role for crossaccount access.",
    "schema.pb.ipamdnsawsprofile.zones.desc": "Network configuration for Virtual IP per AZ.",
    "schema.pb.ipamdnsawsprofile.ttl.desc": "Default TTL for all records",
    "schema.pb.ipamdnsawsprofile.publish_vip_to_public_zone.desc": "If enabled and the virtual service is not floating ip capable, vip will be published to both private and public zones. This flag is applicable only for AWS DNS profile.",
    "schema.pb.ipamdnsawsprofile.egress_service_subnets.desc": "A list of subnets used for source IP allocation for egress services in Openshiftk8s on Aws.",
    "schema.pb.awszonenetwork.availability_zone.desc": "Availability zone",
    "schema.pb.awszonenetwork.usable_network_uuids.desc": "Usable networks for Virtual IP. If VirtualService does not specify a network and auto_allocate_ip is set, then the first available network from this list will be chosen for IP allocation.",
    "schema.pb.ipamdnsinfobloxprofile.ip_address.desc": "Address of Infoblox appliance",
    "schema.pb.ipamdnsinfobloxprofile.username.desc": "Username for API access for Infoblox appliance",
    "schema.pb.ipamdnsinfobloxprofile.password.desc": "Password for API access for Infoblox appliance",
    "schema.pb.ipamdnsinfobloxprofile.wapi_version.desc": "WAPI version",
    "schema.pb.ipamdnsinfobloxprofile.dns_view.desc": "DNS view",
    "schema.pb.ipamdnsinfobloxprofile.network_view.desc": "Network view",
    "schema.pb.ipamdnsinfobloxprofile.usable_domains.desc": "Usable domains to pick from Infoblox",
    "schema.pb.ipamdnsinfobloxprofile.extensible_attributes.desc": "Custom parameters that will passed to the Infoblox provider as extensible attributes.",
    "schema.pb.ipamdnsinfobloxprofile.usable_alloc_subnets.desc": "Subnets to use for Infoblox IP allocation.",
    "schema.pb.infobloxsubnet.subnet.desc": "IPv4 subnet to use for Infoblox allocation.",
    "schema.pb.infobloxsubnet.subnet6.desc": "IPv6 subnet to use for Infoblox allocation.",
    "schema.pb.ipreputationdb.uuid.desc": "UUID of this object.",
    "schema.pb.ipreputationdb.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.ipreputationdb.name.desc": "IP reputation DB name.",
    "schema.pb.ipreputationdb.description.desc": "Description.",
    "schema.pb.ipreputationdb.base_file_uuids.desc": "IP reputation DB base file.",
    "schema.pb.ipreputationdb.incremental_file_uuids.desc": "IP reputation DB incremental update files.",
    "schema.pb.ipreputationdb.vendor.desc": "Organization providing IP reputation data.",
    "schema.pb.ipreputationdb.version.desc": "A version number for this database object. This is informal for the consumer of this API only, a tool which manages this object can store version information here.",
    "schema.pb.ipreputationdb.service_status.desc": "If this object is managed by the IP reputation service, this field contain the status of this syncronization.",
    "schema.pb.ipreputationdb.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ipreputationdb.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.ipreputationservicestatus.error.desc": "If the last attempted update failed, this is a more detailed error message.",
    "schema.pb.ipreputationservicestatus.last_successful_update_check.desc": "The time when the IP reputation service last successfull attemped to update this object. This is the case when either this file references in this object got updated or when the IP reputation service knows positively that there are no newer versions for these files. It will be not update, if an error occurs during an update attempt. In this case, the errror will be set.",
    "schema.pb.jwtserverprofile.uuid.desc": "UUID of the JWTProfile.",
    "schema.pb.jwtserverprofile.name.desc": "Name of the JWT Profile.",
    "schema.pb.jwtserverprofile.jwks_keys.desc": "JWKS key set used for validating the JWT, only allowed with profile_type CLIENT_AUTH.",
    "schema.pb.jwtserverprofile.issuer.desc": "Uniquely identifiable name of the Token Issuer, only allowed with profile_type CLIENT_AUTH.",
    "schema.pb.jwtserverprofile.tenant_uuid.desc": "UUID of the Tenant.",
    "schema.pb.jwtserverprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.jwtserverprofile.is_federated.desc": "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controllercluster.  If the field is set to true, then the object is replicated across the federation.  ",
    "schema.pb.jwtserverprofile.jwt_profile_type.desc": "Type of JWT Server profile which defines the usage type.",
    "schema.pb.jwtserverprofile.controller_internal_auth.desc": "JWT Auth configuration for profile_type CONTROLLER_INTERNAL_AUTH.",
    "schema.pb.controllerinternalauth.symmetric_jwks_keys.desc": "Symmetric keys used for signingvalidating the JWT, only allowed with profile_type CONTROLLER_INTERNAL_AUTH.",
    "schema.pb.jwskey.alg.desc": "Algorithm that need to be used while signingvalidation, allowed values: HS256, HS384, HS512.",
    "schema.pb.jwskey.kty.desc": "Secret key typeformat, allowed value: octet(oct).",
    "schema.pb.jwskey.kid.desc": "Unique key id across all keys.",
    "schema.pb.jwskey.key.desc": "Secret JWK for signingvalidation, length of the key varies depending upon the type of algorithm used for key generation {HS256: 32 bytes, HS384: 48bytes, HS512: 64 bytes}.",
    "schema.pb.l4connectionpolicy.rules.desc": "Rules to apply when a new transport connection is setup",
    "schema.pb.l4rule.name.desc": "Name of the rule",
    "schema.pb.l4rule.index.desc": "Index of the rule",
    "schema.pb.l4rule.enable.desc": "Enable or disable the rule",
    "schema.pb.l4rule.match.desc": "Match criteria of the rule",
    "schema.pb.l4rule.action.desc": "Action to be performed upon successful rule match",
    "schema.pb.l4ruleaction.select_pool.desc": "Indicates pool or poolgroup selection on rule match",
    "schema.pb.l4ruleactionselectpool.action_type.desc": "Indicates action to take on rule match",
    "schema.pb.l4ruleactionselectpool.pool_uuid.desc": "ID of the pool of servers to serve the request",
    "schema.pb.l4ruleactionselectpool.pool_group_uuid.desc": "ID of the pool group to serve the request",
    "schema.pb.l4rulematchtarget.client_ip.desc": "IP addresses to match against client IP",
    "schema.pb.l4rulematchtarget.port.desc": "Port number to match against Virtual Service listner port",
    "schema.pb.l4rulematchtarget.protocol.desc": "TCPUDPICMP protocol to match against transport protocol",
    "schema.pb.l4ruleprotocolmatch.match_criteria.desc": "Criterion to use for transport protocol matching",
    "schema.pb.l4ruleprotocolmatch.protocol.desc": "Transport protocol to match",
    "schema.pb.l4ruleportmatch.match_criteria.desc": "Criterion to use for Virtual Service port matching",
    "schema.pb.l4ruleportmatch.ports.desc": "Virtual Service's listening port(s)",
    "schema.pb.l4ruleportmatch.port_ranges.desc": "Range of TCPUDP port numbers of the Virtual Service",
    "schema.pb.portrange.start.desc": "TCPUDP port range start (inclusive).",
    "schema.pb.portrange.end.desc": "TCPUDP port range end (inclusive).",
    "schema.pb.l4policyset.uuid.desc": "ID of the L4 Policy Set",
    "schema.pb.l4policyset.name.desc": "Name of the L4 Policy Set",
    "schema.pb.l4policyset.l4_connection_policy.desc": "Policy to apply when a new transport connection is setup",
    "schema.pb.l4policyset.created_by.desc": "Creator name",
    "schema.pb.l4policyset.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.l4policyset.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.natpolicy.uuid.desc": "UUID of the Nat policy.",
    "schema.pb.natpolicy.name.desc": "Name of the Nat policy.",
    "schema.pb.natpolicy.rules.desc": "Nat policy Rules.",
    "schema.pb.natpolicy.created_by.desc": "Creator name",
    "schema.pb.natpolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.natpolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.natrule.name.desc": "Nat rule Name.",
    "schema.pb.natrule.index.desc": "Nat rule Index.",
    "schema.pb.natrule.enable.desc": "Nat rule enable flag.",
    "schema.pb.natrule.match.desc": "Nat rule Match Criteria.",
    "schema.pb.natrule.action.desc": "Nat rule Action Information.",
    "schema.pb.natrule.created_by.desc": "Creator name",
    "schema.pb.natpolicyaction.type.desc": "Nat Action Type.",
    "schema.pb.natpolicyaction.nat_info.desc": "Pool of IP Addresses used for Nat.",
    "schema.pb.nataddrinfo.nat_ip.desc": "Nat IP address",
    "schema.pb.nataddrinfo.nat_ip_range.desc": "Nat IP address range",
    "schema.pb.natmatchtarget.source_ip.desc": "Source IP of the packet",
    "schema.pb.natmatchtarget.destination_ip.desc": "Destination IP of the packet",
    "schema.pb.natmatchtarget.services.desc": "Services like portmatching and protocol.",
    "schema.pb.servicematch.source_port.desc": "Source Port of the packet",
    "schema.pb.servicematch.destination_port.desc": "Destination Port of the packet",
    "schema.pb.servicematch.protocol.desc": "Protocol to match. Supported protocols are TCP, UDP and ICMP.",
    "schema.pb.network.dhcp_enabled.desc": "Select the IP address management scheme for this Network",
    "schema.pb.network.exclude_discovered_subnets.desc": "When selected, excludes all discovered subnets in this network from consideration for virtual service placement.",
    "schema.pb.network.ip6_autocfg_enabled.desc": "Enable IPv6 auto configuration",
    "schema.pb.network.attrs.desc": "Keyvalue network attributes.",
    "schema.pb.network.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.network.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.keyvalue.key.desc": "Key",
    "schema.pb.keyvalue.value.desc": "Value",
    "schema.pb.subnet.prefix.desc": "Specify an IP subnet prefix for this Network",
    "schema.pb.subnet.static_ip_ranges.desc": "Static IP ranges for this subnet",
    "schema.pb.staticiprange.range.desc": "IP range",
    "schema.pb.staticiprange.type.desc": "Object type (VIP only, Service Engine only, or both) which can use this IP range",
    "schema.pb.networkprofile.uuid.desc": "UUID of the network profile.",
    "schema.pb.networkprofile.name.desc": "The name of the network profile.",
    "schema.pb.networkprofile.connection_mirror.desc": "When enabled, Avi mirrors all TCP fastpath connections to standby. Applicable only in Legacy HA Mode.",
    "schema.pb.networkprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.networkprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.networkprofileunion.type.desc": "Configure one of either proxy or fast path profiles.",
    "schema.pb.networkprofileunion.udp_proxy_profile.desc": "Configure UDP Proxy network profile",
    "schema.pb.udpproxyprofile.session_idle_timeout.desc": "The amount of time (in sec) for which a flow needs to be idle before it is deleted.",
    "schema.pb.udpfastpathprofile.session_idle_timeout.desc": "The amount of time (in sec) for which a flow needs to be idle before it is deleted.",
    "schema.pb.udpfastpathprofile.per_pkt_loadbalance.desc": "When enabled, every UDP packet is considered a new transaction and may be load balanced to a different server.  When disabled, packets from the same client source IP and port are sent to the same server.",
    "schema.pb.udpfastpathprofile.snat.desc": "When disabled, Source NAT will not be performed for all client UDP packets",
    "schema.pb.udpfastpathprofile.dsr_profile.desc": "DSR profile information",
    "schema.pb.dsrprofile.dsr_type.desc": "DSR type L2L3",
    "schema.pb.dsrprofile.dsr_encap_type.desc": "Encapsulation type to use when DSR is L3",
    "schema.pb.tcpfastpathprofile.session_idle_timeout.desc": "The amount of time (in sec) for which a connection needs to be idle before it is eligible to be deleted.",
    "schema.pb.tcpfastpathprofile.enable_syn_protection.desc": "When enabled, Avi will complete the 3way handshake with the client before forwarding any packets to the server.  This will protect the server from SYN flood and half open SYN connections.",
    "schema.pb.tcpfastpathprofile.dsr_profile.desc": "DSR profile information",
    "schema.pb.tcpproxyprofile.automatic.desc": "Dynamically pick the relevant parameters for connections.",
    "schema.pb.tcpproxyprofile.idle_connection_type.desc": "Controls the behavior of idle connections.",
    "schema.pb.tcpproxyprofile.idle_connection_timeout.desc": "The duration for keepalive probes or session idle timeout. Max value is 3600 seconds, min is 5.  Set to 0 to allow infinite idle time.",
    "schema.pb.tcpproxyprofile.ignore_time_wait.desc": "A new SYN is accepted from the same 4tuple even if there is already a connection in TIME_WAIT state.  This is equivalent of setting Time Wait Delay to 0",
    "schema.pb.tcpproxyprofile.time_wait_delay.desc": "The time (in millisec) to wait before closing a connection in the TIME_WAIT state.",
    "schema.pb.tcpproxyprofile.max_retransmissions.desc": "The number of attempts at retransmit before closing the connection.",
    "schema.pb.tcpproxyprofile.max_syn_retransmissions.desc": "The maximum number of attempts at retransmitting a SYN packet before giving up.",
    "schema.pb.tcpproxyprofile.receive_window.desc": "Size of the receive window.",
    "schema.pb.tcpproxyprofile.use_interface_mtu.desc": "Use the interface MTU to calculate the TCP max segment size.",
    "schema.pb.tcpproxyprofile.max_segment_size.desc": "Maximum TCP segment size.",
    "schema.pb.tcpproxyprofile.nagles_algorithm.desc": "Consolidates small data packets to send clients fewer but larger packets.  Adversely affects real time protocols such as telnet or SSH.",
    "schema.pb.tcpproxyprofile.ip_dscp.desc": "Controls the value of the Differentiated Services Code Point field inserted in the IP header.  This has two options:  Set to a specific value, or Pass Through, which uses the incoming DSCP value.",
    "schema.pb.tcpproxyprofile.cc_algo.desc": "Controls the congestion control algorithm we use.",
    "schema.pb.tcpproxyprofile.aggressive_congestion_avoidance.desc": "Controls the our congestion window to send, normally it's 1 mss, If this option is turned on, we use 10 msses",
    "schema.pb.tcpproxyprofile.reorder_threshold.desc": "Controls the number of duplicate acks required to trigger retransmission. Setting a higher value reduces retransmission caused by packet reordering. A larger value is recommended in public cloud environments where packet reordering is quite common. The default value is 8 in public cloud platforms (AWS, Azure, GCP), and 3 in other environments.",
    "schema.pb.tcpproxyprofile.min_rexmt_timeout.desc": "The minimum wait time (in millisec) to retransmit packet",
    "schema.pb.tcpproxyprofile.slow_start_scaling_factor.desc": "Congestion window scaling factor during slow start.",
    "schema.pb.tcpproxyprofile.congestion_recovery_scaling_factor.desc": "Congestion window scaling factor after recovery.",
    "schema.pb.tcpproxyprofile.reassembly_queue_size.desc": "Maximum number of TCP segments that can be queued for reassembly. Configuring this to 0 disables the feature and provides unlimited queuing.",
    "schema.pb.tcpproxyprofile.keepalive_in_halfclose_state.desc": "Controls whether to keep the connection alive with keepalive messages in the TCP half close state. The interval for sending keepalive messages is 30s. If a timeout is already configured in the network profile, this will not override it.",
    "schema.pb.tcpproxyprofile.auto_window_growth.desc": "Controls whether the windows are static or supports autogrowth. Maximum that it can grow to is limited to 4MB.",
    "schema.pb.networksecuritypolicy.created_by.desc": "Creator name",
    "schema.pb.networksecuritypolicy.cloud_config_cksum.desc": "Checksum of cloud configuration for Network Sec Policy. Internally set by cloud connector",
    "schema.pb.networksecuritypolicy.ip_reputation_db_uuid.desc": "IP reputation database.",
    "schema.pb.networksecuritypolicy.geo_db_uuid.desc": "Geo database.",
    "schema.pb.networksecuritypolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.networksecuritypolicy.internal.desc": "Network Security Policy is created and modified by internal modules only. Should not be modified by users.",
    "schema.pb.networksecuritypolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.networksecurityrule.age.desc": "Time in minutes after which rule will be deleted.",
    "schema.pb.networksecurityrule.created_by.desc": "Creator name",
    "schema.pb.networksecuritypolicyactionrlparam.max_rate.desc": "Maximum number of connections or requests or packets per second.",
    "schema.pb.networksecuritypolicyactionrlparam.burst_size.desc": "Maximum number of connections or requests or packets to be rate limited instantaneously.",
    "schema.pb.networksecuritymatchtarget.client_port.desc": "Matches the source port of incoming packets in the client side traffic",
    "schema.pb.networksecuritymatchtarget.geo_matches.desc": "Matches the geo information of incoming packets in the client side traffic.",
    "schema.pb.microservicematch.match_criteria.desc": "Criterion to use for Micro Service matching the HTTP request",
    "schema.pb.microservicematch.group_uuid.desc": "UUID of Micro Service group(s)",
    "schema.pb.oslbprovpluginform.neutron_host_ip.desc": "Neutron Host IP Address",
    "schema.pb.oslbprovpluginform.neutron_host_user.desc": "Neutron Host root username",
    "schema.pb.oslbprovpluginform.neutron_host_passwd.desc": "Neutron Host IP root password",
    "schema.pb.oslbprovpluginform.op_type.desc": "Operation to perform",
    "schema.pb.oslbprovpluginform.prov_name.desc": "OpenStack LBaaS provider name",
    "schema.pb.oslbprovpluginform.prov_host_ip.desc": "Avi Controller IP Address",
    "schema.pb.oslbprovpluginform.prov_svc_user.desc": "Avi Controller service username",
    "schema.pb.oslbprovpluginform.prov_svc_passwd.desc": "Avi Controller service password",
    "schema.pb.oslbprovpluginform.restart_neutron.desc": "restart neutron service after provider configuration",
    "schema.pb.pingaccessagent.uuid.desc": "UUID of the PingAccess Agent",
    "schema.pb.pingaccessagent.name.desc": "Name of the PingAccess Agent",
    "schema.pb.pingaccessagent.pingaccess_pool_uuid.desc": "Pool containing a primary PingAccess Server, as well as any failover servers included in the agent.properties file.",
    "schema.pb.pingaccessagent.properties_file_data.desc": "PingAccessAgent's agent.properties file generated by PingAccess server.",
    "schema.pb.pingaccessagent.primary_server.desc": "The ip and port of the primary PingAccess Server.",
    "schema.pb.pingaccessagent.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.pingaccessagent.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.pkiprofile.name.desc": "Name of the PKI Profile",
    "schema.pb.pkiprofile.ca_certs.desc": "List of Certificate Authorities (Root and Intermediate) trusted that is used for certificate validation",
    "schema.pb.pkiprofile.crls.desc": "Certificate Revocation Lists",
    "schema.pb.pkiprofile.ignore_peer_chain.desc": "When enabled, Avi will not trust Intermediate and Root certs presented by a client.  Instead, only the chain certs configured in the Certificate Authority section will be used to verify trust of the client's cert.",
    "schema.pb.pkiprofile.crl_check.desc": "When enabled, Avi will verify via CRL checks that certificates in the trust chain have not been revoked.",
    "schema.pb.pkiprofile.validate_only_leaf_crl.desc": "When enabled, Avi will only validate the revocation status of the leaf certificate using CRL. To enable validation for the entire chain, disable this option and provide all the relevant CRLs",
    "schema.pb.pkiprofile.created_by.desc": "Creator name",
    "schema.pb.pkiprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.pkiprofile.is_federated.desc": "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controllercluster and its associated serviceengines.  If the field is set to true, then the object is replicated across the federation.  ",
    "schema.pb.pkiprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.crl.server_url.desc": "URL of a server that issues the Certificate Revocation list. If this is configured, CRL will be periodically downloaded either based on the configured update interval or the next update interval in the CRL. CRL itself is stored in the body.",
    "schema.pb.crl.body.desc": "Certificate Revocation list from a given issuer in PEM format. This can either be configured directly or via the server_url. ",
    "schema.pb.crl.last_update.desc": "The date when this CRL was last issued",
    "schema.pb.crl.next_update.desc": "The date when a newer CRL will be available. Also conveys the date after which the CRL should be considered obsolete.",
    "schema.pb.crl.update_interval.desc": "Interval in minutes to check for CRL update. If not specified, interval will be 1 day",
    "schema.pb.crl.etag.desc": "Cached etag to optimize the download of the CRL",
    "schema.pb.crl.text.desc": "Certificate Revocation list in plain text for readability",
    "schema.pb.crl.common_name.desc": "Common name of the issuer in the Certificate Revocation list",
    "schema.pb.crl.fingerprint.desc": "Fingerprint of the CRL. Used to avoid configuring duplicates",
    "schema.pb.crl.distinguished_name.desc": "Distinguished name of the issuer in the Certificate Revocation list",
    "schema.pb.crl.last_refreshed.desc": "Last time CRL was refreshed by the system. This is an internal field used by the system",
    "schema.pb.pool.uuid.desc": "UUID of the pool",
    "schema.pb.pool.name.desc": "The name of the pool.",
    "schema.pb.pool.default_server_port.desc": "Traffic sent to servers will use this destination server port unless overridden by the server's specific port attribute. The SSL checkbox enables Avi to server encryption.",
    "schema.pb.pool.graceful_disable_timeout.desc": "Used to gracefully disable a server. Virtual service waits for the specified time before terminating the existing connections  to the servers that are disabled.",
    "schema.pb.pool.connection_ramp_duration.desc": "Duration for which new connections will be gradually ramped up to a server recently brought online.  Useful for LB algorithms that are least connection based.",
    "schema.pb.pool.max_concurrent_connections_per_server.desc": "The maximum number of concurrent connections allowed to each server within the pool. NOTE: applied value will be no less than the number of service engines that the pool is placed on. If set to 0, no limit is applied.",
    "schema.pb.pool.health_monitor_uuids.desc": "Verify server health by applying one or more health monitors.  Active monitors generate synthetic traffic from each Service Engine and mark a server up or down based on the response. The Passive monitor listens only to client to server communication. It raises or lowers the ratio of traffic destined to a server based on successful responses.",
    "schema.pb.pool.servers.desc": "The pool directs load balanced traffic to this list of destination servers. The servers can be configured by IP address, name, network or via IP Address Group",
    "schema.pb.pool.lb_algorithm.desc": "The load balancing algorithm will pick a server within the pool's list of available servers. Values LB_ALGORITHM_NEAREST_SERVER and LB_ALGORITHM_TOPOLOGY are only allowed for GSLB pool",
    "schema.pb.pool.lb_algorithm_hash.desc": "Criteria used as a key for determining the hash between the client and  server.",
    "schema.pb.pool.lb_algorithm_consistent_hash_hdr.desc": "HTTP header name to be used for the hash key.",
    "schema.pb.pool.networks.desc": "(internaluse) Networks designated as containing servers for this pool.  The servers may be further narrowed down by a filter. This field is used internally by Avi, not editable by the user.",
    "schema.pb.pool.placement_networks.desc": "Manually select the networks and subnets used to provide reachability to the pool's servers.  Specify the Subnet using the following syntax: 1011024. Use static routes in VRF configuration when pool servers are not directly connected but routable from the service engine.",
    "schema.pb.pool.application_persistence_profile_uuid.desc": "Persistence will ensure the same user sticks to the same server for a desired duration of time.",
    "schema.pb.pool.ssl_profile_uuid.desc": "When enabled, Avi reencrypts traffic to the backend servers. The specific SSL profile defines which ciphers and SSL versions will be supported.",
    "schema.pb.pool.inline_health_monitor.desc": "The Passive monitor will monitor client to server connections and requests and adjust traffic load to servers based on successful responses.  This may alter the expected behavior of the LB method, such as Round Robin.",
    "schema.pb.pool.use_service_port.desc": "Do not translate the client's destination port when sending the connection to the server. Monitor port needs to be specified for health monitors.",
    "schema.pb.pool.fail_action.desc": "Enable an action  Close Connection, HTTP Redirect or Local HTTP Response  when a pool failure happens. By default, a connection will be closed, in case the pool experiences a failure.",
    "schema.pb.pool.capacity_estimation.desc": "Inline estimation of capacity of servers.",
    "schema.pb.pool.capacity_estimation_ttfb_thresh.desc": "The maximum timetofirstbyte of a server.",
    "schema.pb.pool.pki_profile_uuid.desc": "Avi will validate the SSL certificate present by a server against the selected PKI Profile.",
    "schema.pb.pool.ssl_key_and_certificate_uuid.desc": "Service Engines will present a client SSL certificate to the server.",
    "schema.pb.pool.autoscale_networks.desc": "Network Ids for the launch configuration",
    "schema.pb.pool.autoscale_policy_uuid.desc": "Reference to Server Autoscale Policy",
    "schema.pb.pool.autoscale_launch_config_uuid.desc": "If configured then Avi will trigger orchestration of pool server creation and deletion.",
    "schema.pb.pool.vrf_uuid.desc": "Virtual Routing Context that the pool is bound to. This is used to provide the isolation of the set of networks the pool is attached to. The pool inherits the Virtual Routing Conext of the Virtual Service, and this field is used only internally, and is set by pbtransform.",
    "schema.pb.pool.ipaddrgroup_uuid.desc": "Use list of servers from Ip Address Group",
    "schema.pb.pool.fewest_tasks_feedback_delay.desc": "Periodicity of feedback for fewest tasks server selection algorithm.",
    "schema.pb.pool.enabled.desc": "Enable or disable the pool.  Disabling will terminate all open connections and pause health monitors.",
    "schema.pb.pool.max_conn_rate_per_server.desc": "Rate Limit connections to each server.",
    "schema.pb.pool.east_west.desc": "Inherited config from VirtualService.",
    "schema.pb.pool.created_by.desc": "Creator name",
    "schema.pb.pool.cloud_config_cksum.desc": "Checksum of cloud configuration for Pool. Internally set by cloud connector",
    "schema.pb.pool.request_queue_enabled.desc": "Enable request queue when pool is full",
    "schema.pb.pool.request_queue_depth.desc": "Minimum number of requests to be queued when pool is full.",
    "schema.pb.pool.server_reselect.desc": "Server reselect configuration for HTTP requests.",
    "schema.pb.pool.host_check_enabled.desc": "Enable common name check for server certificate. If enabled and no explicit domain name is specified, Avi will use the incoming host header to do the match.",
    "schema.pb.pool.domain_name.desc": "Comma separated list of domain names which will be used to verify the common names or subject alternative names presented by server certificates. It is performed only when common name check host_check_enabled is enabled.",
    "schema.pb.pool.sni_enabled.desc": "Enable TLS SNI for server connections. If disabled, Avi will not send the SNI extension as part of the handshake.",
    "schema.pb.pool.server_name.desc": "Fully qualified DNS hostname which will be used in the TLS SNI extension in server connections if SNI is enabled. If no value is specified, Avi will use the incoming host header instead.",
    "schema.pb.pool.rewrite_host_header_to_sni.desc": "If SNI server name is specified, rewrite incoming host header to the SNI server name.",
    "schema.pb.pool.rewrite_host_header_to_server_name.desc": "Rewrite incoming Host Header to server name of the server to which the request is proxied.  Enabling this feature rewrites Host Header for requests to all servers in the pool.",
    "schema.pb.pool.nsx_securitygroup.desc": "A list of NSX Groups where the Servers for the Pool are created ",
    "schema.pb.pool.external_autoscale_groups.desc": "Names of external autoscale groups for pool servers. Currently available only for AWS and Azure",
    "schema.pb.pool.lb_algorithm_core_nonaffinity.desc": "Degree of nonaffinity for core affinity based server selection.",
    "schema.pb.pool.gslb_sp_enabled.desc": "Indicates if the pool is a sitepersistence pool. ",
    "schema.pb.pool.lookup_server_by_name.desc": "Allow server lookup by name.",
    "schema.pb.pool.analytics_profile_uuid.desc": "Specifies settings related to analytics.",
    "schema.pb.pool.analytics_policy.desc": "Determines analytics settings for the pool.",
    "schema.pb.pool.service_metadata.desc": "Metadata pertaining to the service provided by this Pool. In OpenshiftKubernetes environments, app metadata info is stored. Any user input to this field will be overwritten by Avi Vantage.",
    "schema.pb.pool.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.pool.description.desc": "A description of the pool.",
    "schema.pb.pool.min_servers_up.desc": "Minimum number of servers in UP state for marking the pool UP.",
    "schema.pb.pool.min_health_monitors_up.desc": "Minimum number of health monitors in UP state to mark server UP.",
    "schema.pb.pool.server_timeout.desc": "Server timeout value specifies the time within which a server connection needs to be established and a requestresponse exchange completes between AVI and the server. Value of 0 results in using default timeout of 60 minutes.",
    "schema.pb.pool.conn_pool_properties.desc": "Connnection pool properties",
    "schema.pb.pool.delete_server_on_dns_refresh.desc": "Indicates whether existing IPs are disabled(false) or deleted(true) on dns hostname refreshDetail  On a dns refresh, some IPs set on pool may no longer be returned by the resolver. These IPs are deleted from the pool when this knob is set to true. They are disabled, if the knob is set to false",
    "schema.pb.pool.enable_http2.desc": "Enable HTTP2 for traffic from VirtualService to all backend servers in this pool.",
    "schema.pb.pool.ignore_server_port.desc": "Ignore the server port in building the load balancing state.Applicable only for consistent hash load balancing algorithm or Disable Port translation (use_service_port) use cases.",
    "schema.pb.pool.routing_pool.desc": "Enable to do routing when this pool is selected to send traffic. No servers present in routing pool.",
    "schema.pb.pool.tier1_lr.desc": "This tier1_lr field should be set same as VirtualService associated for NSXT.",
    "schema.pb.pool.resolve_pool_by_dns.desc": "This field is used as a flag to create a job for JobManager.",
    "schema.pb.pool.append_port.desc": "Allows the option to append port to hostname in the host header while sending a request to the server. By default, port is appended for nondefault ports. This setting will apply for Pool's 'Rewrite Host Header to Server Name', 'Rewrite Host Header to SNI' features and Server's 'Rewrite Host Header' settings as well as HTTP healthmonitors attached to pools.",
    "schema.pb.pool.http2_properties.desc": "HTTP2 pool properties.",
    "schema.pb.pool.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.pool.server_disable_type.desc": "Server graceful disable timeout behaviour.",
    "schema.pb.pool.use_service_ssl_mode.desc": "This applies only when use_service_port is set to true. If enabled, SSL mode of the connection to the server is decided by the SSL mode on the Virtualservice service port, on which the request was received.",
    "schema.pb.pool.horizon_profile.desc": "Horizon UAG configuration.",
    "schema.pb.horizonprofile.blast_port.desc": "Horizon blast port of the UAG server.",
    "schema.pb.horizonprofile.pcoip_port.desc": "Horizon pcoip port of the UAG server.",
    "schema.pb.http2poolproperties.max_http2_control_frames_per_connection.desc": "The max number of control frames that server can send over an HTTP2 connection. '0' means unlimited.",
    "schema.pb.http2poolproperties.max_http2_header_field_size.desc": "The maximum size in bytes of the compressed request header field. The limit applies equally to both name and value.",
    "schema.pb.connpoolproperties.upstream_connpool_server_max_cache.desc": "Maximum number of connections a server can cache",
    "schema.pb.connpoolproperties.upstream_connpool_conn_max_reuse.desc": "Maximum number of times a connection can be reused",
    "schema.pb.connpoolproperties.upstream_connpool_conn_idle_tmo.desc": "Connection idle timeout",
    "schema.pb.connpoolproperties.upstream_connpool_conn_life_tmo.desc": "Connection life timeout",
    "schema.pb.httpserverreselect.enabled.desc": "Enable HTTP request reselect when server responds with specific response codes.",
    "schema.pb.httpserverreselect.svr_resp_code.desc": "Server response codes which will trigger an HTTP request retry.",
    "schema.pb.httpserverreselect.num_retries.desc": "Number of times to retry an HTTP request when server responds with configured status codes.",
    "schema.pb.httpserverreselect.retry_nonidempotent.desc": "Allow retry of nonidempotent HTTP requests.",
    "schema.pb.httpserverreselect.retry_timeout.desc": "Timeout per retry attempt, for a given request. Value of 0 indicates default timeout.",
    "schema.pb.httpreselectrespcode.codes.desc": "HTTP response code to be matched.",
    "schema.pb.httpreselectrespcode.ranges.desc": "HTTP response code ranges to match.",
    "schema.pb.httpreselectrespcode.resp_code_block.desc": "Block of HTTP response codes to match for server reselect.",
    "schema.pb.failaction.type.desc": "Enables a response to client when pool experiences a failure. By default TCP connection is closed.",
    "schema.pb.failaction.redirect.desc": "URL to redirect HTTP requests to when pool experiences a failure",
    "schema.pb.failaction.local_rsp.desc": "Local response to HTTP requests when pool experiences a failure",
    "schema.pb.poolgroup.uuid.desc": "UUID of the pool group",
    "schema.pb.poolgroup.name.desc": "The name of the pool group.",
    "schema.pb.poolgroup.members.desc": "List of pool group members object of type PoolGroupMember.",
    "schema.pb.poolgroup.priority_labels_uuid.desc": "UUID of the priority labels. If not provided, pool group member priority label will be interpreted as a number with a larger number considered higher priority.",
    "schema.pb.poolgroup.min_servers.desc": "The minimum number of servers to distribute traffic to.",
    "schema.pb.poolgroup.deployment_policy_uuid.desc": "When setup autoscale manager will automatically promote new pools into production when deployment goals are met.",
    "schema.pb.poolgroup.fail_action.desc": "Enable an action  Close Connection, HTTP Redirect, or Local HTTP Response  when a pool group failure happens. By default, a connection will be closed, in case the pool group experiences a failure.",
    "schema.pb.poolgroup.implicit_priority_labels.desc": "Whether an implicit set of priority labels is generated.",
    "schema.pb.poolgroup.service_metadata.desc": "Metadata pertaining to the service provided by this PoolGroup. In OpenshiftKubernetes environments, app metadata info is stored. Any user input to this field will be overwritten by Avi Vantage.",
    "schema.pb.poolgroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.poolgroup.created_by.desc": "Name of the user who created the object.",
    "schema.pb.poolgroup.cloud_config_cksum.desc": "Checksum of cloud configuration for PoolGroup. Internally set by cloud connector",
    "schema.pb.poolgroup.description.desc": "Description of Pool Group.",
    "schema.pb.poolgroup.enable_http2.desc": "Enable HTTP2 for traffic from VirtualService to all the backend servers in all the pools configured under this PoolGroup.",
    "schema.pb.poolgroup.deactivate_primary_pool_on_down.desc": "Deactivate primary pool for selection when down until it is activated by user via clear poolgroup command.",
    "schema.pb.poolgroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.poolgroupmember.pool_uuid.desc": "UUID of the pool",
    "schema.pb.poolgroupmember.ratio.desc": "Ratio of selecting eligible pools in the pool group. ",
    "schema.pb.poolgroupmember.priority_label.desc": "All pools with same label are treated similarly in a pool group. A pool with a higher priority is selected, as long as the pool is eligible or an explicit policy chooses a different pool.",
    "schema.pb.poolgroupmember.deployment_state.desc": "Pool deployment state used with the PG deployment policy",
    "schema.pb.poolgroupdeploymentpolicy.uuid.desc": "UUID of the pool group deployment policy",
    "schema.pb.poolgroupdeploymentpolicy.name.desc": "The name of the pool group deployment policy",
    "schema.pb.poolgroupdeploymentpolicy.scheme.desc": "deployment scheme",
    "schema.pb.poolgroupdeploymentpolicy.test_traffic_ratio_rampup.desc": "Ratio of the traffic that is sent to the pool under test. test ratio of 100 means blue green",
    "schema.pb.poolgroupdeploymentpolicy.webhook_uuid.desc": "Webhook configured with URL that Avi controller will pass back information about pool group, old and new pool information and current deployment rule results",
    "schema.pb.poolgroupdeploymentpolicy.evaluation_duration.desc": "Duration of evaluation period for automatic deployment",
    "schema.pb.poolgroupdeploymentpolicy.target_test_traffic_ratio.desc": "Target traffic ratio before pool is made production",
    "schema.pb.poolgroupdeploymentpolicy.auto_disable_old_prod_pools.desc": "It will automatically disable old production pools once there is a new production candidate",
    "schema.pb.poolgroupdeploymentpolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.poolgroupdeploymentpolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.pgdeploymentrule.threshold.desc": "metric threshold that is used as the pass fail. If it is not provided then it will simply compare it with current pool vs new pool",
    "schema.pb.portalfeatureoptin.enable_ip_reputation.desc": "Enable to receive IP reputation updates.",
    "schema.pb.portalfeatureoptin.enable_appsignature_sync.desc": "Enable to receive Application specific signature updates.",
    "schema.pb.portalfeatureoptin.enable_user_agent_db_sync.desc": "Enable to receive Bot Management updates.",
    "schema.pb.portalfeatureoptin.enable_pulse_waf_management.desc": "Enable to receive WAF CRS updates.",
    "schema.pb.portalfeatureoptin.enable_pulse_case_management.desc": "Enable Pulse Case Management.",
    "schema.pb.protocolparser.uuid.desc": "UUID of the protocol parser",
    "schema.pb.protocolparser.name.desc": "Name of the protocol parser",
    "schema.pb.protocolparser.parser_code.desc": "Command script provided inline.",
    "schema.pb.protocolparser.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.protocolparser.description.desc": "Description of the protocol parser",
    "schema.pb.protocolparser.tenant_uuid.desc": "Tenant UUID of the protocol parser",
    "schema.pb.protocolparser.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ratelimiterprofile.client_ip_connections_rate_limit.desc": "Rate Limit all connections made from any single client IP address to the Virtual Service.",
    "schema.pb.ratelimiterprofile.client_ip_requests_rate_limit.desc": "Rate Limit all HTTP requests from any single client IP address to all URLs of the Virtual Service.",
    "schema.pb.ratelimiterprofile.uri_requests_rate_limit.desc": "Rate Limit all HTTP requests from all client IP addresses to any single URL.",
    "schema.pb.ratelimiterprofile.client_ip_to_uri_requests_rate_limit.desc": "Rate Limit all HTTP requests from any single client IP address to any single URL.",
    "schema.pb.ratelimiterprofile.client_ip_failed_requests_rate_limit.desc": "Rate Limit all requests from a client for a specified period of time once the count of failed requests from that client crosses a threshold for that period. Clients are tracked based on their IP address. Count and time period are specified through the RateProfile. Requests are deemed failed based on client or server side error status codes, consistent with how Avi Logs and Metrics subsystems mark failed requests. ",
    "schema.pb.ratelimiterprofile.uri_failed_requests_rate_limit.desc": "Rate Limit all requests to a URI for a specified period of time once the count of failed requests to that URI crosses a threshold for that period. Count and time period are specified through the RateProfile. Requests are deemed failed based on client or server side error status codes, consistent with how Avi Logs and Metrics subsystems mark failed requests. ",
    "schema.pb.ratelimiterprofile.client_ip_to_uri_failed_requests_rate_limit.desc": "Rate Limit all requests from a client to a URI for a specified period of time once the count of failed requests from that client to the URI crosses a threshold for that period. Clients are tracked based on their IP address. Count and time period are specified through the RateProfile. Requests are deemed failed based on client or server side error status codes, consistent with how Avi Logs and Metrics subsystems mark failed requests. ",
    "schema.pb.ratelimiterprofile.client_ip_scanners_requests_rate_limit.desc": "Automatically track clients and classify them into 3 groups  Good, Bad, Unknown. Clients are tracked based on their IP Address. Clients are added to the Good group when the Avi Scan Detection system builds history of requests from them that complete successfully. Clients are added to Unknown group when there is insufficient history about them. Requests from such clients are rate limited to the rate specified in the RateProfile. Finally, Clients with history of failed requests are added to Bad group and their requests are rate limited with stricter thresholds than the Unknown Clients group. The Avi Scan Detection system automatically tunes itself so that the Good, Bad, and Unknown client IPs group membership changes dynamically with the changes in traffic patterns through the ADC.",
    "schema.pb.ratelimiterprofile.uri_scanners_requests_rate_limit.desc": "Automatically track URIs and classify them into 3 groups  Good, Bad, Unknown. URIs are added to the Good group when the Avi Scan Detection system builds history of requests to URIs that complete successfully. URIs are added to Unknown group when there is insufficient history about them. Requests for such URIs are rate limited to the rate specified in the RateProfile. Finally, URIs with history of failed requests are added to Bad group and requests to them are rate limited with stricter thresholds than the Unknown URIs group. The Avi Scan Detection system automatically tunes itself so that the Good, Bad, and Unknown URIs group membership changes dynamically with the changes in traffic patterns through the ADC.",
    "schema.pb.ratelimiterprofile.http_header_rate_limits.desc": "Rate Limit all HTTP requests from all client IP addresses that contain any single HTTP header value.",
    "schema.pb.ratelimiterprofile.custom_requests_rate_limit.desc": "Rate Limit all HTTP requests that map to any custom string.",
    "schema.pb.rateprofile.explicit_tracking.desc": "Explicitly tracks an attacker across rate periods",
    "schema.pb.rateprofile.fine_grain.desc": "Enable fine granularity",
    "schema.pb.rateprofile.action.desc": "Action to perform upon rate limiting",
    "schema.pb.rateprofile.http_header.desc": "HTTP header name.",
    "schema.pb.rateprofile.http_cookie.desc": "HTTP cookie name.",
    "schema.pb.rateprofile.rate_limiter.desc": "The rate limiter configuration for this rate profile.",
    "schema.pb.role.filters.desc": "Filters for granular object access control based on object labels. Multiple filters are merged using the AND operator. If empty, all objects according to the privileges will be accessible to the user.",
    "schema.pb.role.allow_unlabelled_access.desc": "Allow access to unlabelled objects.",
    "schema.pb.role.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.rolefilter.name.desc": "Name for the filter.",
    "schema.pb.rolefilter.match_operation.desc": "Label match operation criteria.",
    "schema.pb.rolefilter.match_label.desc": "Label key to match against objects for values.",
    "schema.pb.rolefilter.enabled.desc": "Enable this filter.",
    "schema.pb.permission.subresource.desc": "Limits the scope of Write Access on the parent resource to modification of only the specified subresources",
    "schema.pb.subresource.exclude_subresources.desc": "Allows modification of all fields except for the specified subresources.",
    "schema.pb.subresource.subresources.desc": "Subresources user can modify. Each subresource specifies and individual field. I.e. SUBRESOURCE_POOL_ENABLED allows modification of the enabled field in the Pool object.",
    "schema.pb.saaslicensinginfo.reserve_service_units.desc": "Minimum service units that always remain reserved on controller.",
    "schema.pb.saaslicensinginfo.max_service_units.desc": "Maximum service units limit for controller.",
    "schema.pb.scheduler.name.desc": "Name of scheduler",
    "schema.pb.scheduler.run_mode.desc": "Scheduler Run Mode",
    "schema.pb.scheduler.start_date_time.desc": "Scheduler start date and time",
    "schema.pb.scheduler.end_date_time.desc": "Scheduler end date and time",
    "schema.pb.scheduler.frequency.desc": "Frequency at which CUSTOM scheduler will run",
    "schema.pb.scheduler.frequency_unit.desc": "Unit at which CUSTOM scheduler will run",
    "schema.pb.scheduler.backup_config_uuid.desc": "Backup Configuration to be executed by this scheduler",
    "schema.pb.scheduler.run_script_uuid.desc": "Control script to be executed by this scheduler",
    "schema.pb.scheduler.scheduler_action.desc": "Define Scheduler Action",
    "schema.pb.scheduler.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.securitypolicy.uuid.desc": "The UUID of the security policy.",
    "schema.pb.securitypolicy.name.desc": "The name of the security policy.",
    "schema.pb.securitypolicy.oper_mode.desc": "Mode of dealing with the attacks  perform detection only, or detect and mitigate the attacks.",
    "schema.pb.securitypolicy.dns_attacks.desc": "Attacks utilizing the DNS protocol operations.",
    "schema.pb.securitypolicy.tcp_attacks.desc": "Attacks utilizing the TCP protocol operations.",
    "schema.pb.securitypolicy.udp_attacks.desc": "Attacks utilizing the UDP protocol operations.",
    "schema.pb.securitypolicy.network_security_policy_index.desc": "Index of the network security policy to use for the mitigation rules applied to the attacks.",
    "schema.pb.securitypolicy.dns_policy_index.desc": "Index of the dns policy to use for the mitigation rules applied to the dns attacks.",
    "schema.pb.securitypolicy.dns_amplification_denyports.desc": "Source ports and port ranges to deny in DNS Amplification attacks.",
    "schema.pb.securitypolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.securitypolicy.description.desc": "Security policy is used to specify various configuration information used to perform Distributed Denial of Service (DDoS) attacks detection and mitigation.",
    "schema.pb.securitypolicy.tenant_uuid.desc": "Tenancy of the security policy.",
    "schema.pb.securitypolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.segroupoptions.action_on_error.desc": "The error recovery action configured for a SE Group.",
    "schema.pb.segroupoptions.disruptive.desc": "Disable nondisruptive mechanism.",
    "schema.pb.server.ip.desc": "IP Address of the server.  Required if there is no resolvable host name.",
    "schema.pb.server.port.desc": "Optionally specify the servers port number.  This will override the pool's default server port attribute.",
    "schema.pb.server.hostname.desc": "DNS resolvable name of the server.  May be used in place of the IP address.",
    "schema.pb.server.enabled.desc": "Enable, Disable or Graceful Disable determine if new or existing connections to the server are allowed.",
    "schema.pb.server.ratio.desc": "Ratio of selecting eligible servers in the pool",
    "schema.pb.server.vm_uuid.desc": "(internaluse) This field is used internally by Avi, not editable by the user.",
    "schema.pb.server.nw_uuid.desc": "(internaluse) This field is used internally by Avi, not editable by the user.",
    "schema.pb.server.external_uuid.desc": "UUID identifying VM in OpenStack and other external compute",
    "schema.pb.server.verify_network.desc": "Verify server belongs to a discovered network or reachable via a discovered network. Verify reachable network isn't the OpenStack management network",
    "schema.pb.server.discovered_networks.desc": "(internaluse) Discovered networks providing reachability for server IP. This field is used internally by Avi, not editable by the user.",
    "schema.pb.server.resolve_server_by_dns.desc": "Auto resolve server's IP using DNS name",
    "schema.pb.server.prst_hdr_val.desc": "Header value for custom header persistence. ",
    "schema.pb.server.mac_address.desc": "MAC address of server.",
    "schema.pb.server.static.desc": "If statically learned.",
    "schema.pb.server.server_node.desc": "Hostname of the node where the server VM or container resides",
    "schema.pb.server.availability_zone.desc": "Availabilityzone of the server VM.",
    "schema.pb.server.rewrite_host_header.desc": "Rewrite incoming Host Header to server name.",
    "schema.pb.server.external_orchestration_id.desc": "UID of server in external orchestration systems",
    "schema.pb.server.description.desc": "A description of the Server.",
    "schema.pb.server.location.desc": "(internaluse) Geographic location of the server.Currently only for internal usage.",
    "schema.pb.server.autoscaling_group_name.desc": "Name of autoscaling group this server belongs to.",
    "schema.pb.discoverednetwork.network_uuid.desc": "Discovered network for this IP.",
    "schema.pb.discoverednetwork.subnet.desc": "Discovered subnet for this IP.",
    "schema.pb.discoverednetwork.subnet6.desc": "Discovered IPv6 subnet for this IP.",
    "schema.pb.serverautoscalepolicy.intelligent_autoscale.desc": "Use Avi intelligent autoscale algorithm where autoscale is performed by comparing load on the pool against estimated capacity of all the servers.",
    "schema.pb.serverautoscalepolicy.intelligent_scaleout_margin.desc": "Minimum extra capacity as percentage of load used by the intelligent scheme. Scaleout is triggered when available capacity is less than this margin.",
    "schema.pb.serverautoscalepolicy.intelligent_scalein_margin.desc": "Maximum extra capacity as percentage of load used by the intelligent scheme. Scalein is triggered when available capacity is more than this margin.",
    "schema.pb.serverautoscalepolicy.min_size.desc": "No scalein happens once number of operationally up servers reach min_servers.",
    "schema.pb.serverautoscalepolicy.max_size.desc": "Maximum number of servers after scaleout.",
    "schema.pb.serverautoscalepolicy.max_scaleout_adjustment_step.desc": "Maximum number of servers to scaleout simultaneously. The actual number of servers to scaleout is chosen such that target number of servers is always less than or equal to the max_size.",
    "schema.pb.serverautoscalepolicy.max_scalein_adjustment_step.desc": "Maximum number of servers to scalein simultaneously. The actual number of servers to scalein is chosen such that target number of servers is always more than or equal to the min_size.",
    "schema.pb.serverautoscalepolicy.scaleout_cooldown.desc": "Cooldown period during which no new scaleout is triggered to allow previous scaleout to successfully complete.",
    "schema.pb.serverautoscalepolicy.scalein_cooldown.desc": "Cooldown period during which no new scalein is triggered to allow previous scalein to successfully complete.",
    "schema.pb.serverautoscalepolicy.scaleout_alertconfig_uuids.desc": "Trigger scaleout when alerts due to any of these Alert configurations are raised.",
    "schema.pb.serverautoscalepolicy.scalein_alertconfig_uuids.desc": "Trigger scalein when alerts due to any of these Alert configurations are raised.",
    "schema.pb.serverautoscalepolicy.use_predicted_load.desc": "Use predicted load rather than current load.",
    "schema.pb.serverautoscalepolicy.delay_for_server_garbage_collection.desc": "Delay in minutes after which a down server will be removed from Pool. Value 0 disables this functionality.",
    "schema.pb.serverautoscalepolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.serverautoscalepolicy.scheduled_scalings.desc": "Scheduledbased scaleinout policy. During scheduled intervals, metrics based autoscale is not enabled and number of servers will be solely derived from ScheduleScale policy.",
    "schema.pb.serverautoscalepolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.scheduledscaling.enable.desc": "Enables the scheduled autoscale.",
    "schema.pb.scheduledscaling.desired_capacity.desc": "Desired number of servers during scheduled intervals, it may cause scalein or scaleout based on the value.",
    "schema.pb.scheduledscaling.cron_expression.desc": "The cron expression describing desired time for the scheduled autoscale.",
    "schema.pb.scheduledscaling.start_date.desc": "Scheduled autoscale start date in ISO8601 format, said day will be included in scheduled and have to be in future.",
    "schema.pb.scheduledscaling.end_date.desc": "Scheduled autoscale end date in ISO8601 format, said day will be included in scheduled and have to be in future and greater than start date.",
    "schema.pb.scheduledscaling.autoscaling_duration.desc": "Scheduled autoscale duration (in hours)",
    "schema.pb.scheduledscaling.schedule_max_step.desc": "Maximum number of simultaneous scaleinout servers for scheduled autoscale. If this value is 0, regular autoscale policy dictates this. ",
    "schema.pb.serviceengine.enable_state.desc": "inorder to disable SE set this field appropriately",
    "schema.pb.vnic.ip6_autocfg_enabled.desc": "Enable IPv6 auto configuration",
    "schema.pb.vnic.dp_deletion_done.desc": "The VNIC has been cleaned up in the datapath.",
    "schema.pb.vnic.delete_vnic.desc": "Delete this VNIC. Please confirm dp_deletion_done before removing the VNIC from the cloud.",
    "schema.pb.vnic.link_up.desc": "The link is operationally up.",
    "schema.pb.vlaninterface.vlan_id.desc": "VLAN ID",
    "schema.pb.vlaninterface.ip6_autocfg_enabled.desc": "Enable IPv6 auto configuration",
    "schema.pb.vlaninterface.enabled.desc": "Enable the interface",
    "schema.pb.seresources.hypervisor_mode.desc": "Indicates that the SE is running on a Virtual Machine.",
    "schema.pb.seresources.num_datapath_processes.desc": "Indicates the number of active datapath processes.",
    "schema.pb.serviceenginegroup.max_vs_per_se.desc": "Maximum number of Virtual Services that can be placed on a single Service Engine.",
    "schema.pb.serviceenginegroup.min_scaleout_per_vs.desc": "Minimum number of active Service Engines for the Virtual Service.",
    "schema.pb.serviceenginegroup.max_scaleout_per_vs.desc": "Maximum number of active Service Engines for the Virtual Service.",
    "schema.pb.serviceenginegroup.max_se.desc": "Maximum number of Services Engines in this group.",
    "schema.pb.serviceenginegroup.vcpus_per_se.desc": "Number of vcpus for each of the Service Engine virtual machines. Changes to this setting do not affect existing SEs.",
    "schema.pb.serviceenginegroup.memory_per_se.desc": "Amount of memory for each of the Service Engine virtual machines. Changes to this setting do not affect existing SEs.",
    "schema.pb.serviceenginegroup.disk_per_se.desc": "Amount of disk space for each of the Service Engine virtual machines.",
    "schema.pb.serviceenginegroup.max_cpu_usage.desc": "When CPU usage on an SE exceeds this threshold, Virtual Services hosted on this SE may be rebalanced to other SEs to reduce load. A new SE may be created as part of this process.",
    "schema.pb.serviceenginegroup.min_cpu_usage.desc": "When CPU usage on an SE falls below the minimum threshold, Virtual Services hosted on the SE may be consolidated onto other underutilized SEs. After consolidation, unused Service Engines may then be eligible for deletion. ",
    "schema.pb.serviceenginegroup.se_deprovision_delay.desc": "Duration to preserve unused Service Engine virtual machines before deleting them. If traffic to a Virtual Service were to spike up abruptly, this SE would still be available to be utilized again rather than creating a new SE. If this value is set to 0, Controller will never delete any SEs and administrator has to manually cleanup unused SEs.",
    "schema.pb.serviceenginegroup.auto_rebalance.desc": "If set, Virtual Services will be automatically migrated when load on an SE is less than minimum or more than maximum thresholds. Only Alerts are generated when the auto_rebalance is not set.",
    "schema.pb.serviceenginegroup.se_name_prefix.desc": "Prefix to use for virtual machine name of Service Engines.",
    "schema.pb.serviceenginegroup.vs_host_redundancy.desc": "Ensure primary and secondary Service Engines are deployed on different physical hosts.",
    "schema.pb.serviceenginegroup.vcenter_folder.desc": "Folder to place all the Service Engine virtual machines in vCenter.",
    "schema.pb.serviceenginegroup.mgmt_network_uuid.desc": "Management network to use for Avi Service Engines",
    "schema.pb.serviceenginegroup.mgmt_subnet.desc": "Management subnet to use for Avi Service Engines",
    "schema.pb.serviceenginegroup.ha_mode.desc": "High Availability mode for all the Virtual Services using this Service Engine group.",
    "schema.pb.serviceenginegroup.algo.desc": "In compact placement, Virtual Services are placed on existing SEs until max_vs_per_se limit is reached.",
    "schema.pb.serviceenginegroup.buffer_se.desc": "Excess Service Engine capacity provisioned for HA failover",
    "schema.pb.serviceenginegroup.active_standby.desc": "Service Engines in activestandby mode for HA failover",
    "schema.pb.serviceenginegroup.placement_mode.desc": "If placement mode is 'Auto', Virtual Services are automatically placed on Service Engines.",
    "schema.pb.serviceenginegroup.openstack_mgmt_network_name.desc": "Avi Management network name",
    "schema.pb.serviceenginegroup.openstack_mgmt_network_uuid.desc": "Management network UUID",
    "schema.pb.serviceenginegroup.instance_flavor.desc": "InstanceFlavor name for SE instance",
    "schema.pb.serviceenginegroup.hypervisor.desc": "Override default hypervisor",
    "schema.pb.serviceenginegroup.auto_rebalance_interval.desc": "Frequency of rebalance, if 'Auto rebalance' is enabled",
    "schema.pb.serviceenginegroup.aggressive_failure_detection.desc": "Enable aggressive failover configuration for ha.",
    "schema.pb.serviceenginegroup.realtime_se_metrics.desc": "Enable or deactivate real time SE metrics",
    "schema.pb.serviceenginegroup.vs_scaleout_timeout.desc": "Time to wait for the scaled out SE to become ready before marking the scaleout done",
    "schema.pb.serviceenginegroup.vs_scalein_timeout.desc": "Time to wait for the scaled in SE to drain existing flows before marking the scalein done",
    "schema.pb.serviceenginegroup.connection_memory_percentage.desc": "Percentage of memory for connection state. This will come at the expense of memory used for HTTP inmemory cache.",
    "schema.pb.serviceenginegroup.extra_config_multiplier.desc": "Multiplier for extra config to support large VSPool config.",
    "schema.pb.serviceenginegroup.vs_scalein_timeout_for_upgrade.desc": "During SE upgrade, Time to wait for the scaledin SE to drain existing flows before marking the scalein done",
    "schema.pb.serviceenginegroup.host_attribute_key.desc": "Key of a (Key, Value) pair identifying a label for a set of Nodes usually in Container Clouds. Needs to be specified together with host_attribute_value. SEs can be configured differently including HA modes across different SE Groups. May also be used for isolation between different classes of VirtualServices. VirtualServices' SE Group may be specified via annotationslabels. A OpenShiftKubernetes namespace maybe annotated with a matching SE Group label as openshift.ionodeselector: apptype=prod. When multiple SE Groups are used in a Cloud with host attributes specified,just a single SE Group can exist as a matchall SE Group without a host_attribute_key.",
    "schema.pb.serviceenginegroup.host_attribute_value.desc": "Value of a (Key, Value) pair identifying a label for a set of Nodes usually in Container Clouds. Needs to be specified together with host_attribute_key.",
    "schema.pb.serviceenginegroup.log_disksz.desc": "Maximum disk capacity (in MB) to be allocated to an SE. This is exclusively used for debug and log data.",
    "schema.pb.serviceenginegroup.os_reserved_memory.desc": "Amount of extra memory to be reserved for use by the Operating System on a Service Engine.",
    "schema.pb.serviceenginegroup.hm_on_standby.desc": "Enable active health monitoring from the standby SE for all placed virtual services.",
    "schema.pb.serviceenginegroup.per_app.desc": "Perapp SE mode is designed for deploying dedicated load balancers per app (VS). In this mode, each SE is limited to a max of 2 VSs. vCPUs in perapp SEs count towards licensing usage at 25% rate.",
    "schema.pb.serviceenginegroup.distribute_load_active_standby.desc": "Use both the active and standby Service Engines for Virtual Service placement in the legacy active standby HA mode.",
    "schema.pb.serviceenginegroup.auto_redistribute_active_standby_load.desc": "Redistribution of virtual services from the takeover SE to the replacement SE can cause momentary traffic loss. If the autoredistribute load option is left in its default off state, any desired rebalancing requires calls to REST API.",
    "schema.pb.serviceenginegroup.custom_tag.desc": "Custom tag will be used to create the tags for SE instance in AWS. Note this is not the same as the prefix for SE name",
    "schema.pb.serviceenginegroup.dedicated_dispatcher_core.desc": "Dedicate the core that handles packet receivetransmit from the network to just the dispatching function. Don't use it for TCPIP and SSL functions.",
    "schema.pb.serviceenginegroup.cpu_socket_affinity.desc": "Allocate all the CPU cores for the Service Engine Virtual Machines  on the same CPU socket. Applicable only for vCenter Cloud.",
    "schema.pb.serviceenginegroup.num_flow_cores_sum_changes_to_ignore.desc": "Number of changes in num flow cores sum to ignore.",
    "schema.pb.serviceenginegroup.least_load_core_selection.desc": "Select core with least load for new flow.",
    "schema.pb.serviceenginegroup.extra_shared_config_memory.desc": "Extra config memory to support large Geo DB configuration.",
    "schema.pb.serviceenginegroup.se_tunnel_mode.desc": "Determines if Direct Secondary Return (DSR) from secondary SE is active or not: 0: Automatically determine based on hypervisor type. 1: Enable tunnel mode  DSR is unconditionally disabled. 2: Disable tunnel mode  DSR is unconditionally enabled. Tunnel mode can be enabled or disabled at runtime.",
    "schema.pb.serviceenginegroup.service_ip_subnets.desc": "Subnets assigned to the SE group. Required for VS group placement.",
    "schema.pb.serviceenginegroup.se_vs_hb_max_vs_in_pkt.desc": "Maximum number of virtualservices for which heartbeat messages are aggregated in one packet.",
    "schema.pb.serviceenginegroup.se_vs_hb_max_pkts_in_batch.desc": "Maximum number of aggregated vs heartbeat packets to send in a batch.",
    "schema.pb.serviceenginegroup.auto_rebalance_criteria.desc": "Set of criteria for SE Auto Rebalance.",
    "schema.pb.serviceenginegroup.iptables.desc": "Iptable Rules",
    "schema.pb.serviceenginegroup.se_thread_multiplier.desc": "Multiplier for SE threads based on vCPU.",
    "schema.pb.serviceenginegroup.async_ssl.desc": "SSL handshakes will be handled by dedicated SSL Threads.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.async_ssl_threads.desc": "Number of Async SSL threads per se_dp.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_udp_encap_ipc.desc": "Determines if SESE IPC messages are encapsulated in a UDP header: 0: Automatically determine based on hypervisor type. 1: Use UDP encap unconditionally.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_tunnel_udp_port.desc": "UDP Port for tunneled packets from secondary to primary SE in Docker bridge mode.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.custom_securitygroups_mgmt.desc": "Custom Security Groups to be associated with management vNic for SE instances in OpenStack and AWS Clouds.",
    "schema.pb.serviceenginegroup.custom_securitygroups_data.desc": "Custom Security Groups to be associated with data vNics for SE instances in OpenStack and AWS Clouds.",
    "schema.pb.serviceenginegroup.archive_shm_limit.desc": "Amount of SE memory in GB until which shared memory is collected in core archive.",
    "schema.pb.serviceenginegroup.significant_log_throttle.desc": "This setting limits the number of significant logs generated per second per core on this SE. Default is 100 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.serviceenginegroup.udf_log_throttle.desc": "This setting limits the number of UDF logs generated per second per core on this SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 100 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.serviceenginegroup.non_significant_log_throttle.desc": "This setting limits the number of nonsignificant logs generated per second per core on this SE. Default is 100 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.serviceenginegroup.ingress_access_mgmt.desc": "Program SE security group ingress rules to allow SSHICMP management access from remote CIDR type.",
    "schema.pb.serviceenginegroup.ingress_access_data.desc": "Program SE security group ingress rules to allow VIP data access from remote CIDR type.",
    "schema.pb.serviceenginegroup.se_sb_dedicated_core.desc": "Sideband traffic will be handled by a dedicated core.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_probe_port.desc": "TCP port on SE where echo service will be run",
    "schema.pb.serviceenginegroup.se_sb_threads.desc": "Number of Sideband threads per SE.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.ignore_rtt_threshold.desc": "Ignore RTT samples if it is above threshold",
    "schema.pb.serviceenginegroup.waf_mempool.desc": "Enable memory pool for WAF.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.waf_mempool_size.desc": "Memory pool size used for WAF.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_bandwidth_type.desc": "Select the SE bandwidth for the bandwidth license.",
    "schema.pb.serviceenginegroup.license_type.desc": "If no license type is specified then default license enforcement for the cloud type is chosen.",
    "schema.pb.serviceenginegroup.license_tier.desc": "Specifies the license tier which would be used. This field by default inherits the value from cloud.",
    "schema.pb.serviceenginegroup.allow_burst.desc": "Allow SEs to be created using burst license",
    "schema.pb.serviceenginegroup.auto_rebalance_capacity_per_se.desc": "Capacities of SE for auto rebalance for each criteria.",
    "schema.pb.serviceenginegroup.host_gateway_monitor.desc": "Enable the host gateway monitor when service engine is deployed as docker container. Disabled by default.",
    "schema.pb.serviceenginegroup.vss_placement.desc": "Parameters to place Virtual Services on only a subset of the cores of an SE.",
    "schema.pb.serviceenginegroup.flow_table_new_syn_max_entries.desc": "Maximum number of flow table entries that have not completed TCP threeway handshake yet",
    "schema.pb.serviceenginegroup.disable_csum_offloads.desc": "Stop using TCPUDP and IP checksum offload features of NICs",
    "schema.pb.serviceenginegroup.disable_gro.desc": "Disable Generic Receive Offload (GRO) in DPDK pollmode driver packet receive path.  GRO is on by default on NICs that do not support LRO (Large Receive Offload) or do not gain performance boost from LRO.",
    "schema.pb.serviceenginegroup.disable_tso.desc": "Disable TCP Segmentation Offload (TSO) in DPDK pollmode driver packet transmit path. TSO is on by default on NICs that support it.",
    "schema.pb.serviceenginegroup.enable_hsm_priming.desc": "(This is a beta feature). Enable HSM key priming. If enabled, key handles on the hsm will be synced to SE before processing client connections.",
    "schema.pb.serviceenginegroup.service_ip6_subnets.desc": "IPv6 Subnets assigned to the SE group. Required for VS group placement.",
    "schema.pb.serviceenginegroup.se_tracert_port_range.desc": "Traceroute port range",
    "schema.pb.serviceenginegroup.distribute_queues.desc": "Distributes queue ownership among cores so multiple cores handle dispatcher duties. Requires SE Reboot. Deprecated from 18.2.8, instead use max_queues_per_vnic.",
    "schema.pb.serviceenginegroup.vss_placement_enabled.desc": "If set, Virtual Services will be placed on only a subset of the cores of an SE.",
    "schema.pb.serviceenginegroup.enable_multi_lb.desc": "Applicable only for Azure cloud with Basic SKU LB. If set, additional Azure LBs will be automatically created if resources in existing LB are exhausted.",
    "schema.pb.serviceenginegroup.n_log_streaming_threads.desc": "Number of threads to use for log streaming.",
    "schema.pb.serviceenginegroup.free_list_size.desc": "Number of entries in the free list",
    "schema.pb.serviceenginegroup.max_rules_per_lb.desc": "Applicable to Azure platform only. Maximum number of rules per Azure LB. ",
    "schema.pb.serviceenginegroup.max_public_ips_per_lb.desc": "Applicable to Azure platform only. Maximum number of public IPs per Azure LB. ",
    "schema.pb.serviceenginegroup.self_se_election.desc": "Enable SEs to elect a primary amongst themselves in the absence of a connectivity to controller.",
    "schema.pb.serviceenginegroup.vip_asg.desc": "When vip_asg is set, Vip configuration will be managed by Avi.User will be able to configure vip_asg or Vips individually at the time of create.",
    "schema.pb.serviceenginegroup.minimum_connection_memory.desc": "Indicates the percent of memory reserved for connections.",
    "schema.pb.serviceenginegroup.shm_minimum_config_memory.desc": "Minimum required shared memory to apply any configuration.",
    "schema.pb.serviceenginegroup.heap_minimum_config_memory.desc": "Minimum required heap memory to apply any configuration.",
    "schema.pb.serviceenginegroup.disable_se_memory_check.desc": "If set, disable the config memory check done in service engine.",
    "schema.pb.serviceenginegroup.memory_for_config_update.desc": "Indicates the percent of memory reserved for config updates.",
    "schema.pb.serviceenginegroup.num_dispatcher_cores.desc": "Number of dispatcher cores (0,1,2,4,8 or 16). If set to 0, then number of dispatcher cores is deduced automatically.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.ssl_preprocess_sni_hostname.desc": "(Beta) Preprocess SSL Client Hello for SNI hostname extension.If set to True, this will apply SNI child's SSL protocol(s), if they are different from SNI Parent's allowed SSL protocol(s).",
    "schema.pb.serviceenginegroup.se_dpdk_pmd.desc": "Determines if DPDK pool mode driver should be used or not : 0: Automatically determine based on hypervisorNIC type 1: Unconditionally use DPDK poll mode driver 2: Don't use DPDK poll mode driver.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_use_dpdk.desc": "Determines if DPDK library should be used or not : 0: Automatically determine based on hypervisor type 1: Use DPDK if PCAP is not enabled 2: Don't use DPDK.",
    "schema.pb.serviceenginegroup.min_se.desc": "Minimum number of Services Engines in this group (relevant for SE AutoRebalance only).",
    "schema.pb.serviceenginegroup.se_pcap_reinit_frequency.desc": "Frequency in seconds at which periodically a PCAP reinit check is triggered. May be used in conjunction with the configuration pcap_reinit_threshold. (Valid range : 15 mins  12 hours, 0  disables).",
    "schema.pb.serviceenginegroup.se_pcap_reinit_threshold.desc": "Threshold for input packet receive errors in PCAP mode exceeding which a PCAP reinit is triggered. If not set, an unconditional reinit is performed. This value is checked every pcap_reinit_frequency interval.",
    "schema.pb.serviceenginegroup.ephemeral_portrange_start.desc": "Start local ephemeral port number for outbound connections",
    "schema.pb.serviceenginegroup.ephemeral_portrange_end.desc": "End local ephemeral port number for outbound connections",
    "schema.pb.serviceenginegroup.disable_avi_securitygroups.desc": "By default, Avi creates and manages security groups along with custom sg provided by user. Set this to True to disallow Avi to create and manage new security groups. Avi will only make use of custom security groups provided by user. This option is supported for AWS and OpenStack cloud types.",
    "schema.pb.serviceenginegroup.se_flow_probe_retries.desc": "Flow probe retry count if no replies are received.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.vs_switchover_timeout.desc": "During SE upgrade in a legacy activestandby segroup, Time to wait for the new primary SE to accept flows before marking the switchover done.",
    "schema.pb.serviceenginegroup.config_debugs_on_all_cores.desc": "Enable config debugs on all cores of SE.",
    "schema.pb.serviceenginegroup.accelerated_networking.desc": "Enable accelerated networking option for Azure SE. Accelerated networking enables single root IO virtualization (SRIOV) to a SE VM. This improves networking performance.",
    "schema.pb.serviceenginegroup.vs_se_scaleout_ready_timeout.desc": "Timeout in seconds for Service Engine to sendScaleout Ready notification of a Virtual Service.",
    "schema.pb.serviceenginegroup.vs_se_scaleout_additional_wait_time.desc": "Wait time for sending scaleout ready notification after Virtual Service is marked UP. In certain deployments, there may be an additional delay to accept traffic. For example, for BGP, some time is needed for route advertisement.",
    "schema.pb.serviceenginegroup.se_dp_hm_drops.desc": "Internal only. Used to simulate SE  SE HB failure.",
    "schema.pb.serviceenginegroup.disable_flow_probes.desc": "Disable Flow Probes for Scaled out VS'es.",
    "schema.pb.serviceenginegroup.dp_aggressive_hb_frequency.desc": "Frequency of SE  SE HB messages when aggressive failure mode detection is enabled.",
    "schema.pb.serviceenginegroup.dp_aggressive_hb_timeout_count.desc": "Consecutive HB failures after which failure is reported to controller,when aggressive failure mode detection is enabled.",
    "schema.pb.serviceenginegroup.bgp_state_update_interval.desc": "BGP peer state update interval.",
    "schema.pb.serviceenginegroup.max_memory_per_mempool.desc": "Max bytes that can be allocated in a single mempool.",
    "schema.pb.serviceenginegroup.app_cache_percent.desc": "A percent value of total SE memory reserved for applicationcaching. This is an SE bootup property and requires SE restart.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.use_standard_alb.desc": "Use Standard SKU Azure Load Balancer. By default cloud level flag is set. If not set, it inheritsuses the use_standard_alb flag from the cloud.",
    "schema.pb.serviceenginegroup.app_learning_memory_percent.desc": "A percent value of total SE memory reserved for Application learning. This is an SE bootup property and requires SE restart.",
    "schema.pb.serviceenginegroup.datascript_timeout.desc": "Number of instructions before datascript times out.",
    "schema.pb.serviceenginegroup.data_network_id.desc": "Subnet used to spin up the data nic for Service Engines, used only for Azure cloud. Overrides the cloud level setting for Service Engine subnet.",
    "schema.pb.serviceenginegroup.se_pcap_lookahead.desc": "Enables lookahead mode of packet receive in PCAP mode. Introduced to overcome an issue with hv_netvsc driver. Lookahead mode attempts to ensure that application and kernel's view of the receive rings are consistent.",
    "schema.pb.serviceenginegroup.enable_gratarp_permanent.desc": "Enable GratArp for VIP_IP.",
    "schema.pb.serviceenginegroup.gratarp_permanent_periodicity.desc": "GratArp periodicity for VIPIP.",
    "schema.pb.serviceenginegroup.reboot_on_panic.desc": "Reboot the VM or host on kernel panic.",
    "schema.pb.serviceenginegroup.se_flow_probe_retry_timer.desc": "Timeout in milliseconds for flow probe retries.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_lro.desc": "Enable or disable Large Receive Optimization for vnics. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_tx_batch_size.desc": "Number of packets to batch for transmit to the nic. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_pcap_pkt_sz.desc": "Max size of each packet in the pcap interface. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_pcap_pkt_count.desc": "Max number of packets the pcap interface can hold and if the value is 0 the optimum value will be chosen. The optimum value will be chosen based on SEmemory, Cloud Type and Number of Interfaces.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.distribute_vnics.desc": "Distributes vnic ownership among cores so multiple cores handle dispatcher duties.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_dp_vnic_queue_stall_event_sleep.desc": "Time (in seconds) service engine waits for after generating a Vnic transmit queue stall event before resetting theNIC.",
    "schema.pb.serviceenginegroup.se_dp_vnic_queue_stall_timeout.desc": "Time (in milliseconds) to wait for networkNIC recovery on detecting a transmit queue stall after which service engine resets the NIC",
    "schema.pb.serviceenginegroup.se_dp_vnic_queue_stall_threshold.desc": "Number of consecutive transmit failures to look for before generating a Vnic transmit queue stall event.",
    "schema.pb.serviceenginegroup.se_dp_vnic_restart_on_queue_stall_count.desc": "Number of consecutive transmit queue stall events in se_dp_vnic_stall_se_restart_window to look for before restarting SE",
    "schema.pb.serviceenginegroup.se_dp_vnic_stall_se_restart_window.desc": "Window of time (in seconds) during which se_dp_vnic_restart_on_queue_stall_count number of consecutive stalls results in a SE restart",
    "schema.pb.serviceenginegroup.enable_pcap_tx_ring.desc": "Enable TX ring support in pcap mode of operation. TSO feature is not supported with TX Ring enabled. Deprecated from 18.2.8, instead use pcap_tx_mode. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_pcap_qdisc_bypass.desc": "Bypass the kernel's traffic control layer, to deliver packets directly to the driver. Enabling this feature results in egress packets not being captured in host tcpdump. Note : brief packet reordering or loss may occur upon toggle.",
    "schema.pb.serviceenginegroup.se_rum_sampling_nav_percent.desc": "Percentage of navigation timing data from the end user client, used for sampling to get client insights",
    "schema.pb.serviceenginegroup.se_rum_sampling_res_percent.desc": "Percentage of resource timing data from the end user client used for sampling to get client insight",
    "schema.pb.serviceenginegroup.se_rum_sampling_nav_interval.desc": "Minimum time to wait on server between taking sampleswhen sampling the navigation timing data from the end user client.",
    "schema.pb.serviceenginegroup.se_rum_sampling_res_interval.desc": "Minimum time to wait on server between taking sampleswhen sampling the resource timing data from the end user client.",
    "schema.pb.serviceenginegroup.se_kni_burst_factor.desc": "This knob controls the resource availability and burst size used between SE datapath and KNI. This helps in minimising packet drops when there is higher KNI traffic (nonVIP traffic from and to Linux). The factor takes the following values:     0default.     1doubles the burst size and KNI resources.     2quadruples the burst size and KNI resources.",
    "schema.pb.serviceenginegroup.max_queues_per_vnic.desc": "Maximum number of queues per vnic Setting to '0' utilises all queues that are distributed across dispatcher cores.",
    "schema.pb.serviceenginegroup.se_rl_prop.desc": "Rate limiter properties.",
    "schema.pb.serviceenginegroup.app_cache_threshold.desc": "The max memory that can be allocated for the app cache. This value will act as an upper bound on the cache size specified in app_cache_percent.",
    "schema.pb.serviceenginegroup.max_concurrent_external_hm.desc": "Maximum number of external health monitors that can run concurrently in a service engine. This helps control the CPU and memory use by external health monitors.",
    "schema.pb.serviceenginegroup.se_mtu.desc": "MTU for the VNICs of SEs in the SE group.",
    "schema.pb.serviceenginegroup.core_shm_app_learning.desc": "Include shared memory for app learning in core file.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.core_shm_app_cache.desc": "Include shared memory for app cache in core file.Requires SE Reboot.",
    "schema.pb.serviceenginegroup.pcap_tx_mode.desc": "Determines the PCAP transmit mode of operation. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_dp_max_hb_version.desc": "The highest supported SESE Heartbeat protocol version. This version is reported by Secondary SE to Primary SE in Heartbeat response messages.",
    "schema.pb.serviceenginegroup.max_num_se_dps.desc": "Configures the maximum number of se_dp processes that handles traffic. If not configured, defaults to the number of CPUs on the SE. If decreased, it will only take effect after SE reboot.",
    "schema.pb.serviceenginegroup.resync_time_interval.desc": "Time interval to resync SE's time with wall clock time.",
    "schema.pb.serviceenginegroup.use_hyperthreaded_cores.desc": "Enables the use of hyperthreaded cores on SE. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_hyperthreaded_mode.desc": "Controls the distribution of SE data path processes on CPUs which support hyperthreading. Requires hyperthreading to be enabled at host level. Requires SE Reboot. For more details please refer to SE placement KB.",
    "schema.pb.serviceenginegroup.compress_ip_rules_for_each_ns_subnet.desc": "Compress IP rules into a single subnet based IP rule for each northsouth IPAM subnet configured in PCAP mode in OpenShiftKubernetes node.",
    "schema.pb.serviceenginegroup.availability_zone_uuids.desc": "Availability zones for Virtual Service High Availability",
    "schema.pb.serviceenginegroup.vcenters.desc": "VCenter information for scoping at HostCluster level.",
    "schema.pb.serviceenginegroup.se_vnic_tx_sw_queue_size.desc": "Configure the size of software transmit spillover queue when enabled. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.se_vnic_tx_sw_queue_flush_frequency.desc": "Configure the frequency in milliseconds of software transmit spillover queue flush when enabled. This is necessary to flush any packets in the spillover queue in the absence of a packet transmit in the normal course of operation.",
    "schema.pb.serviceenginegroup.transient_shared_memory_max.desc": "The threshold for the transient shared config memory in the SE.",
    "schema.pb.serviceenginegroup.instance_flavor_info.desc": "Additional information associated with instance_flavor",
    "schema.pb.serviceenginegroup.labels.desc": "Labels associated with this SE group.",
    "schema.pb.serviceenginegroup.log_malloc_failure.desc": "SE will log memory allocation related failure to the se_trace file, wherever available",
    "schema.pb.serviceenginegroup.se_delayed_flow_delete.desc": "Delay the cleanup of flowtable entry. To be used under surveillance of Avi Support.",
    "schema.pb.serviceenginegroup.se_txq_threshold.desc": "Once the TX queue of the dispatcher reaches this threshold, hardware queues are not polled for further packets. To be used under surveillance of Avi Support.",
    "schema.pb.serviceenginegroup.se_mp_ring_retry_count.desc": "The retry count for the multiproducer enqueue before yielding the CPU. To be used under surveillance of Avi Support.",
    "schema.pb.serviceenginegroup.se_group_analytics_policy.desc": "Analytics Policy for ServiceEngineGroup.",
    "schema.pb.serviceenginegroup.dp_hb_frequency.desc": "Frequency of SE  SE HB messages when aggressive failure mode detection is not enabled.",
    "schema.pb.serviceenginegroup.dp_hb_timeout_count.desc": "Consecutive HB failures after which failure is reported to controller, when aggressive failure mode detection is not enabled.",
    "schema.pb.serviceenginegroup.pcap_tx_ring_rd_balancing_factor.desc": "In PCAP mode, reserve a configured portion of TX ring resources for itself and the remaining portion for the RX ring to achieve better balance in terms of queue depth. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.gcp_config.desc": "Google Cloud Platform, Service Engine Group Configuration.",
    "schema.pb.serviceenginegroup.use_objsync.desc": "Enable InterSE Objsyc distribution framework",
    "schema.pb.serviceenginegroup.se_ip_encap_ipc.desc": "Determines if SESE IPC messages are encapsulated in an IP header :     0      : Automatically determine based on hypervisor type    1      : Use IP encap unconditionally    ~[0,1] : Don't use IP encapRequires SE Reboot.",
    "schema.pb.serviceenginegroup.se_l3_encap_ipc.desc": "Determines if SESE IPC messages use SE interface IP instead of VIP  :     0      : Automatically determine based on hypervisor type    1      : Use SE interface IP unconditionally    ~[0,1] : Don't use SE interface IPRequires SE Reboot.",
    "schema.pb.serviceenginegroup.netlink_poller_threads.desc": "Number of threads to poll for netlink messages excluding the thread for default namespace. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.netlink_sock_buf_size.desc": "Socket buffer size for the netlink sockets. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.handle_per_pkt_attack.desc": "Configuration to handle per packet attack handling.For example, DNS Reflection Attack is a type of attack where a response packet is sent to the DNS VS.This configuration tells if such packets should be dropped without further processing.",
    "schema.pb.serviceenginegroup.per_vs_admission_control.desc": "EnableDisable per VS level admission control.Enabling this feature will cause the connection and packet throttling on a particular VS that has high packet buffer consumption.",
    "schema.pb.serviceenginegroup.objsync_port.desc": "TCP port on SE management interface for InterSE Object Distribution. Supported only for externally managed security groups. Not supported on full access deployments. Requires SE reboot.",
    "schema.pb.serviceenginegroup.objsync_config.desc": "Configuration knobs for InterSE Object Distribution.",
    "schema.pb.serviceenginegroup.dp_aggressive_deq_interval_msec.desc": "Dequeue interval for receive queue from se_dp in aggressive mode.",
    "schema.pb.serviceenginegroup.dp_aggressive_enq_interval_msec.desc": "Enqueue interval for request queue to se_dp in aggressive mode.",
    "schema.pb.serviceenginegroup.ns_helper_deq_interval_msec.desc": "Dequeue interval for receive queue from NS HELPER.",
    "schema.pb.serviceenginegroup.dp_deq_interval_msec.desc": "Dequeue interval for receive queue from se_dp.",
    "schema.pb.serviceenginegroup.dp_enq_interval_msec.desc": "Enqueue interval for request queue to se_dp.",
    "schema.pb.serviceenginegroup.send_se_ready_timeout.desc": "Timeout for sending SE_READY without NS HELPER registration completion",
    "schema.pb.serviceenginegroup.vnic_dhcp_ip_check_interval.desc": "DHCP ip check interval",
    "schema.pb.serviceenginegroup.vnic_dhcp_ip_max_retries.desc": "DHCP ip max retries",
    "schema.pb.serviceenginegroup.vnic_ip_delete_interval.desc": "wait interval before deleting IP. ",
    "schema.pb.serviceenginegroup.vnic_probe_interval.desc": "Probe vnic interval",
    "schema.pb.serviceenginegroup.vnic_rpc_retry_interval.desc": "Time interval for retrying the failed VNIC RPC requests",
    "schema.pb.serviceenginegroup.vnicdb_cmd_history_size.desc": "Size of vnicdb command history",
    "schema.pb.serviceenginegroup.se_dp_isolation.desc": "Toggle support to run SE datapath instances in isolation on exclusive CPUs. This improves latency and performance. However, this could reduce the total number of se_dp instances created on that SE instance. Supported for >= 8 CPUs. Requires SE reboot.",
    "schema.pb.serviceenginegroup.se_dp_isolation_num_non_dp_cpus.desc": "Number of CPUs for non sedp tasks in SE datapath isolation mode. Translates Total cpus minus 'num_non_dp_cpus' for datapath use. It is recommended to reserve an even number of CPUs for hyperthreaded processors. Requires SE reboot.",
    "schema.pb.serviceenginegroup.user_agent_cache_config.desc": "Configuration for UserAgent Cache used in Bot Management.",
    "schema.pb.serviceenginegroup.sdb_scan_count.desc": "SDB scan count",
    "schema.pb.serviceenginegroup.sdb_pipeline_size.desc": "SDB pipeline size",
    "schema.pb.serviceenginegroup.sdb_flush_interval.desc": "SDB pipeline flush interval",
    "schema.pb.serviceenginegroup.l7_conns_per_core.desc": "Number of L7 connections that can be cached per core.",
    "schema.pb.serviceenginegroup.ssl_sess_cache_per_vs.desc": "Number of SSL sessions that can be cached per VS.",
    "schema.pb.serviceenginegroup.l7_resvd_listen_conns_per_core.desc": "Number of reserved L7 listener connections per core.",
    "schema.pb.serviceenginegroup.upstream_connpool_enable.desc": "Enable upstream connection pool,",
    "schema.pb.serviceenginegroup.ngx_free_connection_stack.desc": "Free the connection stack.",
    "schema.pb.serviceenginegroup.http_rum_console_log.desc": "Enable Javascript console logs on the client browser when collecting client insights.",
    "schema.pb.serviceenginegroup.http_rum_min_content_length.desc": "Minimum response size content length to sample for client insights.",
    "schema.pb.serviceenginegroup.upstream_connect_timeout.desc": "Timeout for backend connection.",
    "schema.pb.serviceenginegroup.upstream_send_timeout.desc": "Timeout for upstream to become writable.",
    "schema.pb.serviceenginegroup.upstream_read_timeout.desc": "Timeout for data to be received from backend.",
    "schema.pb.serviceenginegroup.downstream_send_timeout.desc": "Timeout for downstream to become writable.",
    "schema.pb.serviceenginegroup.lbaction_num_requests_to_dispatch.desc": "Number of requests to dispatch from the request. queue at a regular interval.",
    "schema.pb.serviceenginegroup.lbaction_rq_per_request_max_retries.desc": "Maximum retries per request in the request queue.",
    "schema.pb.serviceenginegroup.user_defined_metric_age.desc": "Defines in seconds how long before an unused userdefinedmetric is garbage collected.",
    "schema.pb.serviceenginegroup.enable_hsm_log.desc": "Enable HSM luna engine logs.",
    "schema.pb.serviceenginegroup.ignore_docker_mac_change.desc": "Ignore docker mac change.",
    "schema.pb.serviceenginegroup.se_dump_core_on_assert.desc": "Enable core dump on assert",
    "schema.pb.serviceenginegroup.se_packet_buffer_max.desc": "Internal use only. Used to artificially reduce the available number of packet buffers.",
    "schema.pb.serviceenginegroup.se_dp_if_state_poll_interval.desc": "Number of jiffies between polling interface state.",
    "schema.pb.serviceenginegroup.se_emulated_cores.desc": "Use this to emulate moreless cpus than is actually available. One datapath process is started for each core.",
    "schema.pb.serviceenginegroup.baremetal_dispatcher_handles_flows.desc": "Control if dispatcher core also handles TCP flows in baremetal SE.",
    "schema.pb.serviceenginegroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.serviceenginegroup.use_legacy_netlink.desc": "Enable legacy model of netlink notifications.",
    "schema.pb.serviceenginegroup.log_agent_trace_enabled.desc": "Enable trace logs by default on Service Engine. Configuration operations are logged along with other important logs by Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_debug_enabled.desc": "Enable debug logs by default on Service Engine. This includes all other debugging logs. Debug logs can also be explcitly enabled from the CLI shell.",
    "schema.pb.serviceenginegroup.se_log_buffer_app_blocking_dequeue.desc": "Internal flag that blocks dataplane until all application logs are flushed to logagent process.",
    "schema.pb.serviceenginegroup.se_log_buffer_conn_blocking_dequeue.desc": "Internal flag that blocks dataplane until all connection logs are flushed to logagent process.",
    "schema.pb.serviceenginegroup.se_log_buffer_events_blocking_dequeue.desc": "Internal flag that blocks dataplane until all outstanding events are flushed to logagent process.",
    "schema.pb.serviceenginegroup.log_agent_file_sz_debug.desc": "Maximum debug log file size before rollover.",
    "schema.pb.serviceenginegroup.log_agent_file_sz_conn.desc": "Maximum connection log file size before rollover.",
    "schema.pb.serviceenginegroup.log_agent_file_sz_appl.desc": "Maximum application log file size before rollover.",
    "schema.pb.serviceenginegroup.log_agent_file_sz_event.desc": "Maximum event log file size before rollover.",
    "schema.pb.serviceenginegroup.log_agent_min_storage_per_vs.desc": "Minimum storage allocated to any given VirtualService on the Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_max_storage_ignore_percent.desc": "Maximum storage on the disk not allocated for logs on the Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_max_storage_excess_percent.desc": "Excess percentage threshold of disk size to trigger cleanup of logs on the Service Engine.",
    "schema.pb.serviceenginegroup.se_dp_log_nf_enqueue_percent.desc": "Internal buffer full indicator on the Service Engine beyond which the unfiltered logs are abandoned.",
    "schema.pb.serviceenginegroup.se_dp_log_udf_enqueue_percent.desc": "Internal buffer full indicator on the Service Engine beyond which the user filtered logs are abandoned.",
    "schema.pb.serviceenginegroup.log_agent_compress_logs.desc": "Flag to indicate if log files are compressed upon full on the Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_sleep_interval.desc": "Internal timer to stall logagent and prevent it from hogging CPU cycles on the Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_unknown_vs_timer.desc": "Timeout to purge unknown Virtual Service logs from the Service Engine.",
    "schema.pb.serviceenginegroup.log_agent_max_concurrent_rsync.desc": "Maximum concurrent rsync requests initiated from logagent to the Controller",
    "schema.pb.serviceenginegroup.log_agent_log_storage_min_sz.desc": "Minimum storage allocated for logs irrespective of memory and cores.",
    "schema.pb.serviceenginegroup.log_message_max_file_list_size.desc": "Maximum number of file names in a log message",
    "schema.pb.serviceenginegroup.deactivate_ipv6_discovery.desc": "If activated, IPv6 address and route discovery are deactivated.Requires SE reboot.",
    "schema.pb.serviceenginegroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.serviceenginegroup.bgp_peer_monitor_failover_enabled.desc": "Enable BGP peer monitoring based failover.",
    "schema.pb.serviceenginegroup.max_skb_frags.desc": "Maximum of number of 4 KB pages allocated to the Linux kernel GRO subsystem for packet coalescing. This parameter is limited to supported kernels only. Requires SE Reboot.",
    "schema.pb.serviceenginegroup.hybrid_rss_mode.desc": "Toggles SE hybrid only mode of operation in DPDK mode with RSS configured;wherein each SE datapath instance operates as an independent standalonehybrid instance performing both dispatcher and proxy function. Requires reboot.",
    "schema.pb.serviceenginegroup.num_dispatcher_queues.desc": "Number of queues to each dispatcher.",
    "schema.pb.serviceenginegroup.kni_allowed_server_ports.desc": "Port ranges for any servers running in inband LinuxServer clouds.",
    "schema.pb.serviceenginegroup.deactivate_kni_filtering_at_dispatcher.desc": "Deactivate filtering of packets to KNI interface. To be used under surveillance of Avi Support.",
    "schema.pb.kniportrange.range.desc": "Port range to be allowed to KNI.",
    "schema.pb.kniportrange.protocol.desc": "Protocol associated with port range.",
    "schema.pb.objsyncconfig.objsync_cpu_limit.desc": "SE CPU limit for InterSE Object Distribution.",
    "schema.pb.objsyncconfig.objsync_reconcile_interval.desc": "Reconcile interval for InterSE Object Distribution.",
    "schema.pb.objsyncconfig.objsync_hub_elect_interval.desc": "Hub election interval for InterSE Object Distribution.",
    "schema.pb.gcpsegroupconfig.backend_data_vpc_network_name.desc": "Service Engine Backend Data Network Name, used only for GCP cloud.Overrides the cloud level setting for Backend Data Network in GCP Two Arm Mode.",
    "schema.pb.gcpsegroupconfig.backend_data_vpc_subnet_name.desc": "Service Engine Backend Data Subnet Name, used only for GCP cloud.Overrides the cloud level setting for Backend Data Subnet in GCP Two Arm Mode.",
    "schema.pb.gcpsegroupconfig.backend_data_vpc_project_id.desc": "Project ID of the Service Engine Backend Data Network. By default, Service Engine Project ID will be used.",
    "schema.pb.segroupanalyticspolicy.metrics_event_thresholds.desc": "Thresholds for various events generated by metrics system.",
    "schema.pb.metricseventthreshold.reset_threshold.desc": "This value is used to reset the event state machine.",
    "schema.pb.metricseventthreshold.watermark_thresholds.desc": "Threshold value for which event in raised. There can be multiple thresholds defined.Health score degrades when the the target is higher than this threshold.",
    "schema.pb.metricseventthreshold.metrics_event_threshold_type.desc": "Type of the metrics event threshold. This value will decide which metric rule (or rules) use configured thresholds.",
    "schema.pb.cloudflavor.max_ip6s_per_nic.desc": "Maximum number of IPv6 addresses that can be configured per NIC.",
    "schema.pb.cloudflavor.is_recommended.desc": "If a vm flavor is recommended for requested se_usage_type.Set to True if the chosen VM flavor is recommended for requested se_usage_type.Else set to False.",
    "schema.pb.placementscopeconfig.vcenter_uuid.desc": "VCenter server configuration.",
    "schema.pb.placementscopeconfig.vcenter_folder.desc": "Folder to place all the Service Engine virtual machines in vCenter.",
    "schema.pb.placementscopeconfig.nsxt_hosts.desc": "List of transport nodes include or exclude.",
    "schema.pb.placementscopeconfig.nsxt_datastores.desc": "List of shared datastores to include or exclude.",
    "schema.pb.placementscopeconfig.nsxt_clusters.desc": "List of transport node clusters include or exclude.",
    "schema.pb.placementscopeconfig.clusters.desc": "Cluster vSphere HA configuration.",
    "schema.pb.clusterhaconfig.cluster_id.desc": "Transport node cluster. Avi derives vSphere HA property from vCenter cluster.If vSphere HA enabled on vCenter cluster, vSphere will handle HA of ServiceEngine VMs in case of underlying ESX failure.Ex MOB: domainc23.",
    "schema.pb.clusterhaconfig.vmg_name.desc": "Cluster VM Group name.VM Group name is unique inside cluster",
    "schema.pb.clusterhaconfig.override_vsphere_ha.desc": "If this flag set to True, Avi handles ServiceEngine failure irrespective of vSphere HA enabled on vCenter cluster or not.",
    "schema.pb.nsxtclusters.cluster_ids.desc": "List of transport node clusters.",
    "schema.pb.nsxtclusters.include.desc": "Include or Exclude.",
    "schema.pb.nsxtdatastores.ds_ids.desc": "List of shared datastores.",
    "schema.pb.nsxtdatastores.include.desc": "Include or Exclude.",
    "schema.pb.nsxthosts.host_ids.desc": "List of transport nodes.",
    "schema.pb.nsxthosts.include.desc": "Include or Exclude.",
    "schema.pb.vipautoscaleconfiguration.zones.desc": "This is the list of AZ+Subnet in which Vips will be spawned.",
    "schema.pb.vipautoscalezones.availability_zone.desc": "Availability zone associated with the subnet.",
    "schema.pb.vipautoscalezones.subnet_uuid.desc": "UUID of the subnet for new IP address allocation.",
    "schema.pb.vipautoscalezones.fip_capable.desc": "Determines if the subnet is capable of hosting publicly accessible IP.",
    "schema.pb.metricsrealtimeupdate.enabled.desc": "Enables real time metrics collection.  When deactivated, 6 hour view is the most granular the system will track.",
    "schema.pb.metricsrealtimeupdate.duration.desc": "Real time metrics collection duration in minutes. 0 for infinite.",
    "schema.pb.dosthresholdprofile.thresh_period.desc": "Timer value in seconds to collect DoS attack metrics based on threshold on the Service Engine for this Virtual Service.",
    "schema.pb.dosthresholdprofile.thresh_info.desc": "Attack type, min and max values for DoS attack detection.",
    "schema.pb.dosthreshold.attack.desc": "Attack type.",
    "schema.pb.dosthreshold.min_value.desc": "Minimum number of packets or connections or requests in a given interval of time to be deemed as attack.",
    "schema.pb.dosthreshold.max_value.desc": "Maximum number of packets or connections or requests in a given interval of time to be deemed as attack.",
    "schema.pb.snmptrapprofile.uuid.desc": "UUID of the SNMP trap profile object",
    "schema.pb.snmptrapprofile.name.desc": "A userfriendly name of the SNMP trap configuration.",
    "schema.pb.snmptrapprofile.trap_servers.desc": "The IP address or hostname of the SNMP trap destination server.",
    "schema.pb.snmptrapprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.snmptrapserver.ip_addr.desc": "IP Address of the SNMP trap destination",
    "schema.pb.snmptrapserver.community.desc": "The community string to communicate with the trap server.",
    "schema.pb.snmptrapserver.version.desc": "SNMP version support. V2 or V3",
    "schema.pb.snmptrapserver.user.desc": "SNMP version 3 configuration",
    "schema.pb.snmptrapserver.port.desc": "The UDP port of the trap server.",
    "schema.pb.snmpv3userparams.username.desc": "SNMP username to be used by SNMP clients for performing SNMP walk",
    "schema.pb.snmpv3userparams.auth_type.desc": "SNMP V3 user authentication type",
    "schema.pb.snmpv3userparams.auth_passphrase.desc": "SNMP V3 authentication passphrase",
    "schema.pb.snmpv3userparams.priv_type.desc": "SNMP V3 privacy setting",
    "schema.pb.snmpv3userparams.priv_passphrase.desc": "SNMP V3 privacy passphrase",
    "schema.pb.sslcertificate.subject_alt_names.desc": "subjectAltName that provides additional subject identities",
    "schema.pb.sslcertificaterequest.hardwaresecuritymodulegroup_uuid.desc": "HSMGroup to use to generate the key and the certificate",
    "schema.pb.sslcertificaterequest.dynamic_params.desc": "Dynamic parameters needed for certificate management profile",
    "schema.pb.sslcertificaterequest.subject_alt_names.desc": "subjectAltName that provides additional subject identities",
    "schema.pb.sslkeyandcertificate.key.desc": "Private key",
    "schema.pb.sslkeyandcertificate.ca_certs.desc": "CA certificates in certificate chain",
    "schema.pb.sslkeyandcertificate.enckey_base64.desc": "Encrypted private key corresponding to the private key (e.g. those generated by an HSM such as Thales nShield)",
    "schema.pb.sslkeyandcertificate.enckey_name.desc": "Name of the encrypted private key (e.g. those generated by an HSM such as Thales nShield)",
    "schema.pb.sslkeyandcertificate.dynamic_params.desc": "Dynamic parameters needed for certificate management profile",
    "schema.pb.sslkeyandcertificate.created_by.desc": "Creator name",
    "schema.pb.sslkeyandcertificate.format.desc": "Format of the KeyCertificate file.",
    "schema.pb.sslkeyandcertificate.key_passphrase.desc": "Passphrase used to encrypt the private key.",
    "schema.pb.sslkeyandcertificate.certificate_base64.desc": "States if the certificate is base64 encoded.",
    "schema.pb.sslkeyandcertificate.key_base64.desc": "States if the private key is base64 encoded.",
    "schema.pb.sslkeyandcertificate.enable_ocsp_stapling.desc": "Enables OCSP Stapling.",
    "schema.pb.sslkeyandcertificate.ocsp_responder_url_list_from_certs.desc": "This is an Internal field to store the OCSP Responder URLs contained in the certificate.",
    "schema.pb.sslkeyandcertificate.ocsp_config.desc": "Configuration related to OCSP.",
    "schema.pb.sslkeyandcertificate.ocsp_response_info.desc": "Information related to OCSP response.",
    "schema.pb.sslkeyandcertificate.ocsp_error_status.desc": "Error reported during OCSP status query.",
    "schema.pb.sslkeyandcertificate.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.sslkeyandcertificate.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ocspresponseinfo.ocsp_response.desc": "Signed OCSP response received from the CA's OCSP Responder.",
    "schema.pb.ocspresponseinfo.cert_status.desc": "Revocation status of the certificate.",
    "schema.pb.ocspresponseinfo.this_update.desc": "The most recent time at which the status being indicated is known by the OCSP Responder to have been correct.",
    "schema.pb.ocspresponseinfo.next_update.desc": "The time at or before which newer information will be available about the status of the certificate.",
    "schema.pb.ocspresponseinfo.revocation_time.desc": "ISO 8601 compatible timestamp at which the certificate was revoked or placed on hold.",
    "schema.pb.ocspresponseinfo.revocation_reason.desc": "The reason for the revocation of the certificate.",
    "schema.pb.ocspresponseinfo.ocsp_resp_from_responder_url.desc": "The OCSP Responder URL from which the response is received.",
    "schema.pb.ocspconfig.ocsp_req_interval.desc": "Interval between the OCSP queries.",
    "schema.pb.ocspconfig.ocsp_resp_timeout.desc": "Time in seconds that the system waits for a reply from the OCSP responder before dropping the connection.",
    "schema.pb.ocspconfig.responder_url_lists.desc": "List of Responder URLs configured by user to do failoveroverride the AIA extension contained in the OCSP responder's SSLTLS certificate.",
    "schema.pb.ocspconfig.url_action.desc": "Describes the type of action to take with the Responder URLs.",
    "schema.pb.ocspconfig.failed_ocsp_jobs_retry_interval.desc": "Describes the Time Interval after which the next OCSP job needs to be scheduled in case of the OCSP job failures.",
    "schema.pb.ocspconfig.max_tries.desc": "Maximum number of times the failed OCSP jobs can be scheduled.",
    "schema.pb.sslkeyandcertificateimport.key.desc": "Private key",
    "schema.pb.sslkeyandcertificateimport.enckey_base64.desc": "Encrypted private key corresponding to the private key (e.g. those generated by an HSM such as Thales nShield)",
    "schema.pb.sslkeyandcertificateimport.enckey_name.desc": "Name of the encrypted private key (e.g. those generated by an HSM such as Thales nShield)",
    "schema.pb.sslkeyandcertificateimport.hardwaresecuritymodulegroup_uuid.desc": "HSMGroup to use to generate the key and the certificate",
    "schema.pb.sslprofile.accepted_versions.desc": "Set of versions accepted by the server",
    "schema.pb.sslprofile.accepted_ciphers.desc": "Ciphers suites represented as defined by https:www.openssl.orgdocsappsciphers.html",
    "schema.pb.sslprofile.send_close_notify.desc": "Send 'close notify' alert message for a clean shutdown of the SSL connection.",
    "schema.pb.sslprofile.dhparam.desc": "DH Parameters used in SSL. At this time, it is not configurable and is set to 2048 bits.",
    "schema.pb.sslprofile.prefer_client_cipher_ordering.desc": "Prefer the SSL cipher ordering presented by the client during the SSL handshake over the one specified in the SSL Profile.",
    "schema.pb.sslprofile.enable_ssl_session_reuse.desc": "Enable SSL session reuse.",
    "schema.pb.sslprofile.ssl_session_timeout.desc": "The amount of time in seconds before an SSL session expires.",
    "schema.pb.sslprofile.type.desc": "SSL Profile Type.",
    "schema.pb.sslprofile.ciphersuites.desc": "TLS 1.3 Ciphers suites represented as defined by U(https:www.openssl.orgdocsmanmasterman1ciphers.html).",
    "schema.pb.sslprofile.enable_early_data.desc": "Enable early data processing for TLS1.3 connections.",
    "schema.pb.sslprofile.ec_named_curve.desc": "Elliptic Curve Cryptography NamedCurves (TLS Supported Groups)represented as defined by RFC 8422Section 5.1.1 andhttps:www.openssl.orgdocsman1.1.0man3SSL_CTX_set1_curves.html.",
    "schema.pb.sslprofile.signature_algorithm.desc": "Signature Algorithms represented as defined by RFC5246Section 7.4.1.4.1 andhttps:www.openssl.orgdocsman1.1.0man3SSL_CTX_set1_client_sigalgs_list.html.",
    "schema.pb.sslprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.sslprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.ssopolicy.uuid.desc": "UUID of the SSO Policy.",
    "schema.pb.ssopolicy.name.desc": "Name of the SSO Policy.",
    "schema.pb.ssopolicy.authentication_policy.desc": "Authentication Policy Settings",
    "schema.pb.ssopolicy.authorization_policy.desc": "Authorization Policy Settings",
    "schema.pb.ssopolicy.type.desc": "SSO Policy Type",
    "schema.pb.ssopolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.ssopolicy.tenant_uuid.desc": "UUID of the Tenant.",
    "schema.pb.ssopolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.authenticationpolicy.default_auth_profile_uuid.desc": "Auth Profile to use for validating users",
    "schema.pb.authenticationpolicy.authn_rules.desc": "Add rules to apply auth profile to specific targets.",
    "schema.pb.authenticationrule.name.desc": "Name of the rule.",
    "schema.pb.authenticationrule.index.desc": "Index of the rule.",
    "schema.pb.authenticationrule.enable.desc": "Enable or disable the rule.",
    "schema.pb.authenticationrule.match.desc": "Add match criteria to the rule.",
    "schema.pb.authenticationrule.action.desc": "Enable or disable authentication for matched targets.",
    "schema.pb.authenticationaction.type.desc": "Authentication Action to be taken for a matched Rule.",
    "schema.pb.authenticationmatch.client_ip.desc": "Configure client ip addresses",
    "schema.pb.authenticationmatch.path.desc": "Configure request paths",
    "schema.pb.authenticationmatch.host_hdr.desc": "Configure the host header",
    "schema.pb.staticroute.disable_gateway_monitor.desc": "Disable the gateway monitor for default gateway. They are monitored by default.",
    "schema.pb.staticroute.labels.desc": "Labels associated with this route.",
    "schema.pb.stringgroup.uuid.desc": "UUID of the string group",
    "schema.pb.stringgroup.name.desc": "Name of the string group",
    "schema.pb.stringgroup.kv.desc": "Configure Key:Value in the string group",
    "schema.pb.stringgroup.type.desc": "Type of StringGroup.",
    "schema.pb.stringgroup.longest_match.desc": "Enable the longest match, default is the shortest match.",
    "schema.pb.stringgroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.stringgroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.systestemailparams.to_emails.desc": "Alerts are sent to the comma separated list of  email recipients",
    "schema.pb.systestemailparams.cc_emails.desc": "Alerts are copied to the comma separated list of  email recipients",
    "schema.pb.systestemailparams.subject.desc": "The Subject line of the originating email from  Avi Controller",
    "schema.pb.systestemailparams.text.desc": "The email context",
    "schema.pb.systemconfiguration.mgmt_ip_access_control.desc": "Configure Ip Access control for controller to restrict open access.",
    "schema.pb.systemconfiguration.ssh_ciphers.desc": "Allowed Ciphers list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default ciphers are allowed.",
    "schema.pb.systemconfiguration.ssh_hmacs.desc": "Allowed HMAC list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default HMACs are allowed.",
    "schema.pb.systemconfiguration.dns_virtualservice_uuids.desc": "DNS virtualservices hosting FQDN records for applications across Avi Vantage. If no virtualservices are provided, Avi Vantage will provide DNS services for configured applications. Switching back to Avi Vantage from DNS virtualservices is not allowed.",
    "schema.pb.systemconfiguration.default_license_tier.desc": "Specifies the default license tier which would be used by new Clouds.",
    "schema.pb.systemconfiguration.secure_channel_configuration.desc": "Configure Secure Channel properties",
    "schema.pb.systemconfiguration.welcome_workflow_complete.desc": "This flag is set once the Initial Controller Setup workflow is complete.",
    "schema.pb.systemconfiguration.fips_mode.desc": "FIPS mode current state.",
    "schema.pb.systemconfiguration.enable_cors.desc": "Enable CORS Header.",
    "schema.pb.systemconfiguration.common_criteria_mode.desc": "Common criteria mode's current state.",
    "schema.pb.systemconfiguration.controller_analytics_policy.desc": "Controller metrics event dynamic thresholds can be set here. CONTROLLER_CPU_HIGH and CONTROLLER_MEM_HIGH evets can take configured dynamic thresholds.",
    "schema.pb.systemconfiguration.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.controlleranalyticspolicy.metrics_event_thresholds.desc": "Thresholds for various events generated by metrics system.",
    "schema.pb.securechannelconfiguration.sslkeyandcertificate_uuids.desc": "Certificate for secure channel. Leave list empty to use system default certs.",
    "schema.pb.mgmtipaccesscontrol.ssh_access.desc": "Configure IP addresses to access controller using SSH",
    "schema.pb.mgmtipaccesscontrol.api_access.desc": "Configure IP addresses to access controller using API",
    "schema.pb.mgmtipaccesscontrol.shell_server_access.desc": "Configure IP addresses to access controller using CLI Shell",
    "schema.pb.mgmtipaccesscontrol.snmp_access.desc": "Configure IP addresses to access controller using SNMP",
    "schema.pb.mgmtipaccesscontrol.sysint_access.desc": "Configure IP addresses to access controller using sysint access",
    "schema.pb.linuxconfiguration.motd.desc": "Message of the day, shown to users on login via the command line interface, web interface, or ssh.",
    "schema.pb.linuxconfiguration.banner.desc": "Banner displayed before login to ssh, and UI",
    "schema.pb.linuxconfiguration.cis_mode.desc": "Enforce CIS benchmark recommendations for Avi Controller and Service Engines. The enforcement is as per CIS DIL 1.0.1 level 2, for applicable controls.",
    "schema.pb.snmpconfiguration.community.desc": "Community string for SNMP v2c",
    "schema.pb.snmpconfiguration.sys_location.desc": "Sets the sysLocation in system MIB",
    "schema.pb.snmpconfiguration.sys_contact.desc": "Sets the sysContact in system MIB",
    "schema.pb.snmpconfiguration.version.desc": "SNMP version support. V2 or V3",
    "schema.pb.snmpconfiguration.snmp_v3_config.desc": "SNMP version 3 configuration",
    "schema.pb.snmpconfiguration.large_trap_payload.desc": "Support for 4096 bytes trap payload",
    "schema.pb.snmpv3configuration.user.desc": "SNMP ver 3 user definition",
    "schema.pb.snmpv3configuration.engine_id.desc": "Engine Id of the Avi Controller SNMP",
    "schema.pb.adminauthconfiguration.mapping_rules.desc": "Rules list for tenant or role mapping",
    "schema.pb.adminauthconfiguration.allow_local_user_login.desc": "Allow any user created locally to login with local credentials",
    "schema.pb.adminauthconfiguration.alternate_auth_configurations.desc": "Secondary authentication mechanisms to be used.",
    "schema.pb.alternateauthconfiguration.index.desc": "index used for maintaining order of AlternateAuthConfiguration.",
    "schema.pb.alternateauthconfiguration.auth_profile_uuid.desc": "UUID of the authprofile.",
    "schema.pb.alternateauthconfiguration.mapping_rules.desc": "Rules list for tenant or role mapping.",
    "schema.pb.authmappingrule.assign_policy.desc": "Assignment rule for the Object Access Policy.",
    "schema.pb.authmappingrule.policy_attribute_name.desc": "Attribute name for Object Access Policy assignment.",
    "schema.pb.authmappingrule.assign_userprofile.desc": "Assignment rule for the User Account Profile.",
    "schema.pb.authmappingrule.userprofile_attribute_name.desc": "Attribute name for User Account Profile assignment.",
    "schema.pb.authmappingrule.userprofile_uuid.desc": "User Account Profile to assign to user on successful match.",
    "schema.pb.authmatchattribute.criteria.desc": "rule match criteria",
    "schema.pb.authmatchgroupmembership.criteria.desc": "rule match criteria",
    "schema.pb.emailconfiguration.smtp_type.desc": "Type of SMTP Mail Service",
    "schema.pb.emailconfiguration.from_email.desc": "Email address in From field",
    "schema.pb.emailconfiguration.mail_server_name.desc": "Mail server host",
    "schema.pb.emailconfiguration.mail_server_port.desc": "Mail server port",
    "schema.pb.emailconfiguration.auth_username.desc": "Username for mail server",
    "schema.pb.emailconfiguration.auth_password.desc": "Password for mail server",
    "schema.pb.emailconfiguration.disable_tls.desc": "When set, disables TLS on the connection to the mail server.",
    "schema.pb.emailconfiguration.email_timezone.desc": "Timezone for timestamps in alert emails",
    "schema.pb.tenantconfiguration.tenant_vrf.desc": "When \"Per Tenant IP Domain\" is selected, each tenant gets its own routing domain that is not shared with any other tenant. When \"Share IP Domain across all tenants\" is selected, all tenants share the same routing domain.",
    "schema.pb.tenantconfiguration.se_in_provider_context.desc": "Controls the ownership of ServiceEngines. Service Engines can either be exclusively owned by each tenant or owned by the administrator and shared by all tenants. When ServiceEngines are owned by the administrator, each tenant can have either read access or no access to their Service Engines.",
    "schema.pb.portalconfiguration.sslkeyandcertificate_uuids.desc": "Certificates for system portal. Maximum 2 allowed. Leave list empty to use system default certs",
    "schema.pb.portalconfiguration.use_uuid_from_input.desc": "Use UUID in POST object data as UUID of the new object, instead of a generated UUID.",
    "schema.pb.portalconfiguration.enable_clickjacking_protection.desc": "EnableDisable Clickjacking protection",
    "schema.pb.portalconfiguration.allow_basic_authentication.desc": "EnableDisable HTTP basic authentication",
    "schema.pb.portalconfiguration.http_port.desc": "HTTP port",
    "schema.pb.portalconfiguration.https_port.desc": "HTTPS port",
    "schema.pb.portalconfiguration.password_strength_check.desc": "Strict checking of password strength for user accounts",
    "schema.pb.portalconfiguration.disable_remote_cli_shell.desc": "Disable Remote CLI Shell Client access",
    "schema.pb.portalconfiguration.disable_swagger.desc": "Disable Swagger access",
    "schema.pb.portalconfiguration.api_force_timeout.desc": "Force API session timeout after the specified time (in hours)",
    "schema.pb.portalconfiguration.minimum_password_length.desc": "Minimum password length for user accounts.",
    "schema.pb.ntpconfiguration.ntp_server_list.desc": "List of NTP server hostnames or IP addresses",
    "schema.pb.ntpconfiguration.ntp_authentication_keys.desc": "NTP Authentication keys",
    "schema.pb.ntpconfiguration.ntp_servers.desc": "List of NTP Servers",
    "schema.pb.ntpserver.server.desc": "IP Address of the NTP Server",
    "schema.pb.ntpserver.key_number.desc": "Key number from the list of trusted keys used to authenticate this server",
    "schema.pb.ntpauthenticationkey.key_number.desc": "Key number to be assigned to the authenticationkey.",
    "schema.pb.ntpauthenticationkey.algorithm.desc": "Message Digest Algorithm used for NTP authentication. Default is NTP_AUTH_ALGORITHM_MD5",
    "schema.pb.ntpauthenticationkey.key.desc": "NTP Authentication key",
    "schema.pb.dnsconfiguration.server_list.desc": "List of DNS Server IP addresses",
    "schema.pb.dnsconfiguration.search_domain.desc": "Search domain to use in DNS lookup",
    "schema.pb.tenant.created_by.desc": "Creator of this tenant",
    "schema.pb.tenant.enforce_label_group.desc": "The referred label groups are enforced on the tenant if this is set to true.If this is set to false, the label groups are suggested for the tenant.",
    "schema.pb.tenant.label_group_uuids.desc": "The label_groups to be enforced on the tenant. This is strictly enforced only if enforce_label_group is set to True",
    "schema.pb.tenant.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.trafficcloneprofile.uuid.desc": "UUID of the Traffic Clone Profile.",
    "schema.pb.trafficcloneprofile.name.desc": "Name for the Traffic Clone Profile.",
    "schema.pb.trafficcloneprofile.preserve_client_ip.desc": "Specifies if client IP needs to be preserved to clone destination",
    "schema.pb.trafficcloneprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.trafficcloneprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.cloneserver.ip_address.desc": "IP Address of the Clone Server.",
    "schema.pb.cloneserver.mac.desc": "MAC Address of the Clone Server.",
    "schema.pb.cloneserver.subnet.desc": "Subnet of the network to clone the traffic to",
    "schema.pb.cloneserver.network_uuid.desc": "Network to clone the traffic to",
    "schema.pb.upgradeopsstate.state.desc": "The upgrade operations current fsmstate.",
    "schema.pb.upgradeopsstate.last_changed_time.desc": "The last time the state changed.",
    "schema.pb.upgradeopsstate.reason.desc": "Descriptive reason for the statechange.",
    "schema.pb.upgradeopsstate.rebooted.desc": "State for keeping track of reboot status during upgrade operation.",
    "schema.pb.upgradeparams.image_uuid.desc": "Image uuid for identifying base image.",
    "schema.pb.upgradeparams.controller_patch_uuid.desc": "Image uuid for identifying Controller patch.",
    "schema.pb.upgradeparams.se_patch_uuid.desc": "Image uuid for identifying Service Engine patch.",
    "schema.pb.upgradeparams.system.desc": "Apply upgrade operations such as UpgradePatch to Controller and ALL SE groups.",
    "schema.pb.upgradeparams.se_group_options.desc": "This field identifies SE group options that need to be applied during the upgrade operations.",
    "schema.pb.upgradeparams.se_group_uuids.desc": "This field identifies the list of SE groups for which the upgrade operations are applicable.  This field is ignored if the 'system' is enabled.",
    "schema.pb.upgradeparams.skip_warnings.desc": "This is flag when set as true skips few optional must check.",
    "schema.pb.useraccountprofile.max_password_history_count.desc": "Maximum number of passwords to be maintained in the password history. Default is 4 passwords.",
    "schema.pb.useraccountprofile.max_login_failure_count.desc": "Number of login attempts before lockout. Default is 3 attempts.",
    "schema.pb.useraccountprofile.account_lock_timeout.desc": "Lock timeout period (in minutes). Default is 30 minutes.",
    "schema.pb.useraccountprofile.max_concurrent_sessions.desc": "Maximum number of concurrent sessions allowed. There are unlimited sessions by default.",
    "schema.pb.useraccountprofile.credentials_timeout_threshold.desc": "The time period after which credentials expire. Default is 180 days.",
    "schema.pb.useraccountprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.vcentermgmtnwdiag.is_static.desc": "StaticDHCP mode for vCenter Management Network",
    "schema.pb.vcentermgmtnwdiag.static_no_ip_pool.desc": "Static IP configuration for Management Network",
    "schema.pb.vcentermgmtnwdiag.static_subnet_not_present.desc": "IP subnet for Management Network not provided",
    "schema.pb.vcentermgmtnwdiag.static_ip_pool_exhausted.desc": "Static IP Pool configuration exhausted for Management Network",
    "schema.pb.vcenterhostdiag.powerstate_up.desc": "ESX Host Power State",
    "schema.pb.vcenterhostdiag.maintenance_mode.desc": "ESX Host Maintenance Mode",
    "schema.pb.vcenterhostdiag.connection_state.desc": "ESX Host connection to vCenter",
    "schema.pb.vcenterhostdiag.cntlr_accessible.desc": "ESX Host accessible from Avi Controller",
    "schema.pb.vcenterhostdiag.quarantined.desc": "ESX Host quarantined from Service Engine Placements",
    "schema.pb.vcenterserver.uuid.desc": "VCenter config UUID.",
    "schema.pb.vcenterserver.name.desc": "Availabilty zone where VCenter list belongs to",
    "schema.pb.vcenterserver.vcenter_url.desc": "VCenter hostname or IP address.",
    "schema.pb.vcenterserver.vcenter_credentials_uuid.desc": "Credentials to access VCenter",
    "schema.pb.vcenterserver.content_lib.desc": "VCenter template to create Service Engine",
    "schema.pb.vcenterserver.tenant_uuid.desc": "VCenter belongs to tenant.",
    "schema.pb.vcenterserver.cloud_uuid.desc": "VCenter belongs to cloud.",
    "schema.pb.vcenterserver.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.contentlibconfig.name.desc": "Content Library name",
    "schema.pb.contentlibconfig.id.desc": "Content Library Id",
    "schema.pb.virtualservice.uuid.desc": "UUID of the VirtualService.",
    "schema.pb.virtualservice.name.desc": "Name for the Virtual Service.",
    "schema.pb.virtualservice.fqdn.desc": "DNS resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed.",
    "schema.pb.virtualservice.enabled.desc": "Enable or disable the Virtual Service.",
    "schema.pb.virtualservice.services.desc": "List of Services defined for this Virtual Service.",
    "schema.pb.virtualservice.application_profile_uuid.desc": "Enable application layer specific features for the Virtual Service.",
    "schema.pb.virtualservice.network_profile_uuid.desc": "Determines network settings such as protocol, TCP or UDP, and related options for the protocol.",
    "schema.pb.virtualservice.server_network_profile_uuid.desc": "Determines the network settings profile for the server side of TCP proxied connections.  Leave blank to use the same settings as the client to VS side of the connection.",
    "schema.pb.virtualservice.pool_uuid.desc": "The pool is an object that contains destination servers and related attributes such as loadbalancing and persistence.",
    "schema.pb.virtualservice.se_group_uuid.desc": "The Service Engine Group to use for this Virtual Service. Moving to a new SE Group is disruptive to existing connections for this VS.",
    "schema.pb.virtualservice.network_security_policy_uuid.desc": "Network security policies for the Virtual Service.",
    "schema.pb.virtualservice.http_policies.desc": "HTTP Policies applied on the data traffic of the Virtual Service",
    "schema.pb.virtualservice.dns_policies.desc": "DNS Policies applied on the dns traffic of the Virtual Service",
    "schema.pb.virtualservice.security_policy_uuid.desc": "Security policy applied on the traffic of the Virtual Service. This policy is used to perform security actions such as Distributed Denial of Service (DDoS) attack mitigation, etc.",
    "schema.pb.virtualservice.ssl_key_and_certificate_uuids.desc": "Select or create one or two certificates, EC andor RSA, that will be presented to SSLTLS terminated connections.",
    "schema.pb.virtualservice.ssl_profile_uuid.desc": "Determines the set of SSL versions and ciphers to accept for SSLTLS terminated connections.",
    "schema.pb.virtualservice.performance_limits.desc": "Optional settings that determine performance limits like max connections or bandwdith etc.",
    "schema.pb.virtualservice.analytics_policy.desc": "Determines analytics settings for the application.",
    "schema.pb.virtualservice.vrf_context_uuid.desc": "Virtual Routing Context that the Virtual Service is bound to. This is used to provide the isolation of the set of networks the application is attached to.",
    "schema.pb.virtualservice.enable_autogw.desc": "Response traffic to clients will be sent back to the source MAC address of the connection, rather than statically sent to a default gateway.",
    "schema.pb.virtualservice.analytics_profile_uuid.desc": "Specifies settings related to analytics.",
    "schema.pb.virtualservice.host_name_xlate.desc": "Translate the host name sent to the servers to this value.  Translate the host name sent from servers back to the value used by the client.",
    "schema.pb.virtualservice.vs_datascripts.desc": "Datascripts applied on the data traffic of the Virtual Service",
    "schema.pb.virtualservice.weight.desc": "The Quality of Service weight to assign to traffic transmitted from this Virtual Service.  A higher weight will prioritize traffic versus other Virtual Services sharing the same Service Engines.",
    "schema.pb.virtualservice.delay_fairness.desc": "Select the algorithm for QoS fairness.  This determines how multiple Virtual Services sharing the same Service Engines will prioritize traffic over a congested network.",
    "schema.pb.virtualservice.max_cps_per_client.desc": "Maximum connections per second per client IP.",
    "schema.pb.virtualservice.limit_doser.desc": "Limit potential DoS attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while.",
    "schema.pb.virtualservice.type.desc": "Specify if this is a normal Virtual Service, or if it is the parent or child of an SNIenabled virtual hosted Virtual Service.",
    "schema.pb.virtualservice.vh_parent_vs_uuid.desc": "Specifies the Virtual Service acting as Virtual Hosting (SNI) parent.",
    "schema.pb.virtualservice.vh_domain_name.desc": "The exact name requested from the client's SNIenabled TLS hello domain name field. If this is a match, the parent VS will forward the connection to this child VS.",
    "schema.pb.virtualservice.connections_rate_limit.desc": "Rate limit the incoming connections to this virtual service",
    "schema.pb.virtualservice.requests_rate_limit.desc": "Rate limit the incoming requests to this virtual service",
    "schema.pb.virtualservice.use_bridge_ip_as_vip.desc": "Use Bridge IP as VIP on each Host in Mesos deployments",
    "schema.pb.virtualservice.flow_dist.desc": "Criteria for flow distribution among SEs.",
    "schema.pb.virtualservice.ign_pool_net_reach.desc": "Ignore Pool servers network reachability constraints for Virtual Service placement.",
    "schema.pb.virtualservice.ssl_sess_cache_avg_size.desc": "Expected number of SSL session cache entries (may be exceeded).",
    "schema.pb.virtualservice.pool_group_uuid.desc": "The pool group is an object that contains pools.",
    "schema.pb.virtualservice.remove_listening_port_on_vs_down.desc": "Remove listening port if VirtualService is down",
    "schema.pb.virtualservice.close_client_conn_on_config_update.desc": "close client connection on vs config update",
    "schema.pb.virtualservice.bulk_sync_kvcache.desc": "(This is a beta feature). Sync KeyValue cache to the new SEs when VS is scaled out. For ex: SSL sessions are stored using VS's KeyValue cache. When the VS is scaled out, the SSL session information is synced to the new SE, allowing existing SSL sessions to be reused on the new SE. ",
    "schema.pb.virtualservice.topology_policies.desc": "Topology Policies applied on the dns traffic of the Virtual Service based onGSLB Topology algorithm",
    "schema.pb.virtualservice.advertise_down_vs.desc": "Keep advertising Virtual Service via BGP even if it is marked down by health monitor. This setting takes effect for future Virtual Service flaps. To advertise current VSes that are down, please disable and reenable the Virtual Service.",
    "schema.pb.virtualservice.east_west_placement.desc": "Force placement on all SE's in service group (Mesos mode only)",
    "schema.pb.virtualservice.scaleout_ecmp.desc": "Disable redistribution of flows across service engines for a virtual service. Enable if the network itself performs flow hashing with ECMP in environments such as GCP",
    "schema.pb.virtualservice.microservice_uuid.desc": "Microservice representing the virtual service",
    "schema.pb.virtualservice.service_pool_select.desc": "Select pool based on destination port",
    "schema.pb.virtualservice.created_by.desc": "Creator name",
    "schema.pb.virtualservice.cloud_config_cksum.desc": "Checksum of cloud configuration for VS. Internally set by cloud connector",
    "schema.pb.virtualservice.enable_rhi.desc": "Enable Route Health Injection using the BGP Config in the vrf context",
    "schema.pb.virtualservice.snat_ip.desc": "NAT'ted floating source IP Address(es) for upstream connection to servers",
    "schema.pb.virtualservice.active_standby_se_tag.desc": "This configuration only applies if the VirtualService is in Legacy Active Standby HA mode and Load Distribution among Active Standby is enabled. This field is used to tag the VirtualService so that VirtualServices with the same tag will share the same Active ServiceEngine. VirtualServices with different tags will have different Active ServiceEngines. If one of the ServiceEngine's in the ServiceEngineGroup fails, all VirtualServices will end up using the same Active ServiceEngine. Redistribution of the VirtualServices can be either manual or automated when the failed ServiceEngine recovers. Redistribution is based on the auto redistribute property of the ServiceEngineGroup.",
    "schema.pb.virtualservice.flow_label_type.desc": "Criteria for flow labelling.",
    "schema.pb.virtualservice.enable_rhi_snat.desc": "Enable Route Health Injection for Source NAT'ted floating IP Address using the BGP Config in the vrf context",
    "schema.pb.virtualservice.static_dns_records.desc": "List of static DNS records applied to this Virtual Service. These are static entries and no health monitoring is performed against the IP addresses.",
    "schema.pb.virtualservice.dns_info.desc": "Service discovery specific data including fully qualified domain name, type and TimeToLive of the DNS record. Note that only one of fqdn and dns_info setting is allowed.",
    "schema.pb.virtualservice.service_metadata.desc": "Metadata pertaining to the Service provided by this virtual service. In OpenshiftKubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by Avi Vantage.",
    "schema.pb.virtualservice.traffic_clone_profile_uuid.desc": "Server network or list of servers for cloning traffic.",
    "schema.pb.virtualservice.content_rewrite.desc": "Profile used to match and rewrite strings in request andor response body.",
    "schema.pb.virtualservice.sideband_profile.desc": "Sideband configuration to be used for this virtualservice.It can be used for sending traffic to sideband VIPs for external inspection etc.",
    "schema.pb.virtualservice.vip.desc": "List of Virtual Service IPs. While creating a 'Shared VS',please use vsvip_ref to point to the shared entities.",
    "schema.pb.virtualservice.nsx_securitygroup.desc": "A list of NSX Groups representing the Clients which can access the Virtual IP of the Virtual Service",
    "schema.pb.virtualservice.vsvip_uuid.desc": "Mostly used during the creation of Shared VS, this field refers to entities that can be shared across Virtual Services.",
    "schema.pb.virtualservice.waf_policy_uuid.desc": "WAF policy for the Virtual Service.",
    "schema.pb.virtualservice.sp_pool_uuids.desc": "GSLB pools used to manage sitepersistence functionality. Each sitepersistence pool contains the virtualservices in all the other sites, that is autogenerated by the GSLB manager. This is a readonly field for the user.",
    "schema.pb.virtualservice.use_vip_as_snat.desc": "Use the Virtual IP as the SNAT IP for health monitoring and sending traffic to the backend servers instead of the Service Engine interface IP. The caveat of enabling this option is that the VirtualService cannot be configued in an ActiveActive HA mode. DNS based Multi VIP solution has to be used for HA & Nondisruptive Upgrade purposes.",
    "schema.pb.virtualservice.error_page_profile_uuid.desc": "Error Page Profile to be used for this virtualservice.This profile is used to send the custom error page to the client generated by the proxy",
    "schema.pb.virtualservice.l4_policies.desc": "L4 Policies applied to the data traffic of the Virtual Service",
    "schema.pb.virtualservice.traffic_enabled.desc": "Knob to enable the Virtual Service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to True.",
    "schema.pb.virtualservice.bgp_peer_labels.desc": "Select BGP peers, using peer label, for VsVip advertisement.",
    "schema.pb.virtualservice.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.virtualservice.vsvip_cloud_config_cksum.desc": "Checksum of cloud configuration for VsVip. Internally set by cloud connector",
    "schema.pb.virtualservice.azure_availability_set.desc": "(internaluse)Applicable for Azure only. Azure Availability set to which this VS is associated. Internally set by the cloud connector",
    "schema.pb.virtualservice.min_pools_up.desc": "Minimum number of UP pools to mark VS up.",
    "schema.pb.virtualservice.allow_invalid_client_cert.desc": "Process request even if invalid client certificate is presented. Datascript APIs need to be used for processing of such requests.",
    "schema.pb.virtualservice.ssl_profile_selectors.desc": "Select SSL Profile based on client IP address match.",
    "schema.pb.virtualservice.sso_policy_uuid.desc": "The SSO Policy attached to the virtualservice.",
    "schema.pb.virtualservice.saml_sp_config.desc": "Applicationspecific SAML config.",
    "schema.pb.virtualservice.test_se_datastore_level_1_uuid.desc": "Used for testing SE Datastore Upgrade 2.0 functionality",
    "schema.pb.virtualservice.icap_request_profile_uuids.desc": "The config settings for the ICAP server when checking the HTTP request.",
    "schema.pb.virtualservice.jwt_config.desc": "Applicationspecific config for JWT validation.",
    "schema.pb.virtualservice.vh_matches.desc": "Host and path match criteria to select this child VS.",
    "schema.pb.virtualservice.vh_type.desc": "Specify if the Virtual Hosting VS is of type SNI or Enhanced.",
    "schema.pb.virtualservice.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.virtualservice.bot_policy_uuid.desc": "Bot detection policy for the Virtual Service.",
    "schema.pb.virtualservice.ldap_vs_config.desc": "Applicationspecific LDAP config.",
    "schema.pb.virtualservice.oauth_vs_config.desc": "VirtualService specific OAuth config.",
    "schema.pb.oauthvsconfig.redirect_uri.desc": "Redirect URI specified in the request to Authorization Server.",
    "schema.pb.oauthvsconfig.cookie_name.desc": "HTTP cookie name for authorized session.",
    "schema.pb.oauthvsconfig.cookie_timeout.desc": "HTTP cookie timeout for authorized session.",
    "schema.pb.oauthvsconfig.oauth_settings.desc": "Application and IDP settings for OAuthOIDC.",
    "schema.pb.oauthvsconfig.key.desc": "Key to generate the cookie.",
    "schema.pb.oauthsettings.auth_profile_uuid.desc": "Auth Profile to use for validating users",
    "schema.pb.oauthsettings.app_settings.desc": "Applicationspecific OAuth config.",
    "schema.pb.oauthsettings.resource_server.desc": "Resource Server OAuth config.",
    "schema.pb.oauthresourceserver.access_type.desc": "Access token type.",
    "schema.pb.oauthresourceserver.opaque_token_params.desc": "Validation parameters to be used when access token type is opaque.",
    "schema.pb.oauthresourceserver.jwt_params.desc": "Validation parameters to be used when access token type is JWT.",
    "schema.pb.jwtvalidationparams.audience.desc": "Audience parameter used for validation using JWT token.",
    "schema.pb.opaquetokenvalidationparams.server_id.desc": "Resource server specific identifier used to validate against introspection endpoint when access token is opaque.",
    "schema.pb.opaquetokenvalidationparams.server_secret.desc": "Resource server specific passwordsecret.",
    "schema.pb.oauthappsettings.scopes.desc": "Scope specified to give limited access to the app.",
    "schema.pb.oauthappsettings.oidc_config.desc": "OpenID Connect specific configuration.",
    "schema.pb.oauthappsettings.client_id.desc": "Application specific identifier.",
    "schema.pb.oauthappsettings.client_secret.desc": "Application specific identifier secret.",
    "schema.pb.oidcconfig.oidc_enable.desc": "Adds openid as one of the scopes enabling OpenID Connect flow.",
    "schema.pb.oidcconfig.profile.desc": "Fetch profile information by enabling profile scope.",
    "schema.pb.oidcconfig.userinfo.desc": "Fetch profile information from Userinfo Endpoint.",
    "schema.pb.ldapvsconfig.realm.desc": "Basic authentication realm to present to a user along with the prompt for credentials.",
    "schema.pb.ldapvsconfig.se_auth_ldap_cache_size.desc": "Size of LDAP auth credentials cache used on the dataplane.",
    "schema.pb.ldapvsconfig.se_auth_ldap_conns_per_server.desc": "Number of concurrent connections to LDAP server by a single basic auth LDAP process.",
    "schema.pb.ldapvsconfig.se_auth_ldap_connect_timeout.desc": "Default connection timeout enforced on connections to LDAP server.",
    "schema.pb.ldapvsconfig.se_auth_ldap_reconnect_timeout.desc": "Default reconnect timeout enforced on connections to LDAP server.",
    "schema.pb.ldapvsconfig.se_auth_ldap_bind_timeout.desc": "Default bind timeout enforced on connections to LDAP server.",
    "schema.pb.ldapvsconfig.se_auth_ldap_request_timeout.desc": "Default login or group search request timeout enforced on connections to LDAP server.",
    "schema.pb.ldapvsconfig.se_auth_ldap_servers_failover_only.desc": "If enabled, connections are always made to the first available LDAP server in the list and will failover to subsequent servers.",
    "schema.pb.vhmatch.host.desc": "Hostdomain name match configuration. Must be configured along with at least one path match criteria.",
    "schema.pb.vhmatch.path.desc": "Resourceuri path match configuration. Must be configured along with Host match criteria.",
    "schema.pb.jwtvalidationvsconfig.jwt_location.desc": "Defines where to look for JWT in the request.",
    "schema.pb.jwtvalidationvsconfig.jwt_name.desc": "Name by which the JWT can be identified if the token is sent as a query param in the request url.",
    "schema.pb.jwtvalidationvsconfig.audience.desc": "Uniquely identifies a resource server. This is used to validate against the aud claim.",
    "schema.pb.samlspconfig.entity_id.desc": "Globally unique SAML entityID for this node. The SAML application entity ID on the IDP should match this.",
    "schema.pb.samlspconfig.single_signon_url.desc": "SAML Single Signon URL to be programmed on the IDP.",
    "schema.pb.samlspconfig.sp_metadata.desc": "SAML SP metadata for this application.",
    "schema.pb.samlspconfig.key.desc": "Key to generate the cookie.",
    "schema.pb.samlspconfig.cookie_timeout.desc": "Cookie timeout in minutes.",
    "schema.pb.samlspconfig.cookie_name.desc": "HTTP cookie name for authenticated session.",
    "schema.pb.samlspconfig.signing_ssl_key_and_certificate_uuid.desc": "SP will use this SSL certificate to sign requests going to the IdP and decrypt the assertions coming from IdP.",
    "schema.pb.samlspconfig.use_idp_session_timeout.desc": "By enabling this field IdP can control how long the SP session can exist through the SessionNotOnOrAfter field in the AuthNStatement of SAML Response.",
    "schema.pb.sslprofileselector.client_ip_list.desc": "Configure client IP address groups.",
    "schema.pb.sslprofileselector.ssl_profile_uuid.desc": "SSL profile for the client IP addresses listed.",
    "schema.pb.l4policies.index.desc": "Index of the virtual service L4 policy set",
    "schema.pb.l4policies.l4_policy_set_uuid.desc": "ID of the virtual service L4 policy set",
    "schema.pb.vip.vip_id.desc": "Unique ID associated with the vip.",
    "schema.pb.vip.ip_address.desc": "IPv4 Address of the VIP.",
    "schema.pb.vip.enabled.desc": "Enable or disable the Vip.",
    "schema.pb.vip.network_uuid.desc": "Manually override the network on which the Vip is placed.",
    "schema.pb.vip.port_uuid.desc": "(internaluse) Network port assigned to the Vip IP address.",
    "schema.pb.vip.subnet_uuid.desc": "If auto_allocate_ip is True, then the subnet for the Vip IP address allocation. This field is applicable only if the VirtualService belongs to an Openstack or AWS cloud, in which case it is mandatory, if auto_allocate is selected.",
    "schema.pb.vip.subnet.desc": "Subnet providing reachability for client facing Vip IP.",
    "schema.pb.vip.discovered_networks.desc": "Discovered networks providing reachability for client facing Vip IP.",
    "schema.pb.vip.availability_zone.desc": "Availabilityzone to place the Virtual Service.",
    "schema.pb.vip.auto_allocate_ip.desc": "Autoallocate VIP from the provided subnet.",
    "schema.pb.vip.floating_ip.desc": "Floating IPv4 to associate with this Vip.",
    "schema.pb.vip.auto_allocate_floating_ip.desc": "Autoallocate floatingelastic IP from the Cloud infrastructure.",
    "schema.pb.vip.floating_subnet_uuid.desc": "If auto_allocate_floating_ip is True and more than one floatingip subnets exist, then the subnet for the floating IP address allocation.",
    "schema.pb.vip.avi_allocated_vip.desc": "(internaluse) VIP allocated by Avi in the Cloud infrastructure.",
    "schema.pb.vip.avi_allocated_fip.desc": "(internaluse) FIP allocated by Avi in the Cloud infrastructure.",
    "schema.pb.vip.ipam_network_subnet.desc": "Subnet andor Network for allocating VirtualService IP by IPAM Provider module.",
    "schema.pb.vip.ip6_address.desc": "IPv6 Address of the Vip.",
    "schema.pb.vip.subnet6_uuid.desc": "If auto_allocate_ip is True, then the subnet for the Vip IPv6 address allocation. This field is applicable only if the VirtualService belongs to an Openstack or AWS cloud, in which case it is mandatory, if auto_allocate is selected.",
    "schema.pb.vip.subnet6.desc": "Subnet providing reachability for client facing Vip IPv6.",
    "schema.pb.vip.floating_ip6.desc": "Floating IPv6 address to associate with this Vip.",
    "schema.pb.vip.floating_subnet6_uuid.desc": "If auto_allocate_floating_ip is True and more than one floatingip subnets exist, then the subnet for the floating IPv6 address allocation.",
    "schema.pb.vip.auto_allocate_ip_type.desc": "Specifies whether to autoallocate only a V4 address, only a V6 address, or one of each type.",
    "schema.pb.vip.placement_networks.desc": "Placement networkssubnets to use for vip placement.",
    "schema.pb.vip.prefix_length.desc": "Mask applied for the Vip, nondefault mask supported only for wildcard Vip.",
    "schema.pb.vipplacementnetwork.network_uuid.desc": "Network to use for vip placement.",
    "schema.pb.vipplacementnetwork.subnet.desc": "IPv4 Subnet to use for vip placement.",
    "schema.pb.vipplacementnetwork.subnet6.desc": "IPv6 subnet to use for vip placement.",
    "schema.pb.ipnetworksubnet.network_uuid.desc": "Network for VirtualService IP allocation with Vantage as the IPAM provider. Network should be created before this is configured.",
    "schema.pb.ipnetworksubnet.subnet.desc": "Subnet for VirtualService IP allocation with Vantage or Infoblox as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed.",
    "schema.pb.ipnetworksubnet.subnet_uuid.desc": "Subnet UUID or Name or Prefix for VirtualService IP allocation with AWS or OpenStack as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed.",
    "schema.pb.ipnetworksubnet.subnet6.desc": "Subnet for VirtualService IPv6 allocation with Vantage or Infoblox as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed.",
    "schema.pb.ipnetworksubnet.subnet6_uuid.desc": "Subnet UUID or Name or Prefix for VirtualService IPv6 allocation with AWS or OpenStack as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed.",
    "schema.pb.sidebandprofile.ip.desc": "IP Address of the sideband server.",
    "schema.pb.sidebandprofile.sideband_max_request_body_size.desc": "Maximum size of the request body that will be sent on the sideband.",
    "schema.pb.dnsinfo.fqdn.desc": "Fully qualified domain name.",
    "schema.pb.dnsinfo.ttl.desc": "Time to live for fqdn record. Default value is chosen from DNS profile for this cloud if no value provided.",
    "schema.pb.dnsinfo.type.desc": "DNS record type",
    "schema.pb.dnsinfo.num_records_in_response.desc": "Specifies the number of records returned for this FQDN. Enter 0 to return all records. Default is 0",
    "schema.pb.dnsinfo.algorithm.desc": "Specifies the algorithm to pick the IP address(es) to be returned, when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is consistent hash.",
    "schema.pb.dnsinfo.cname.desc": "Canonical name in CNAME record.",
    "schema.pb.dnsinfo.metadata.desc": "Any metadata associated with this record",
    "schema.pb.dnsrecord.fqdn.desc": "Fully Qualified Domain Name",
    "schema.pb.dnsrecord.type.desc": "DNS record type",
    "schema.pb.dnsrecord.ttl.desc": "Time To Live for this DNS record",
    "schema.pb.dnsrecord.ip_address.desc": "IP address in A record",
    "schema.pb.dnsrecord.service_locator.desc": "Service locator info in SRV record",
    "schema.pb.dnsrecord.cname.desc": "Canonical name in CNAME record",
    "schema.pb.dnsrecord.ns.desc": "Name Server information in NS record",
    "schema.pb.dnsrecord.num_records_in_response.desc": "Specifies the number of records returned by the DNS service. Enter 0 to return all records. Default is 0",
    "schema.pb.dnsrecord.algorithm.desc": "Specifies the algorithm to pick the IP address(es) to be returned, when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is roundrobin.",
    "schema.pb.dnsrecord.wildcard_match.desc": "Enable wildcard match of fqdn: if an exact match is not found in the DNS table, the longest match is chosen by wildcarding the fqdn in the DNS request. Default is false.",
    "schema.pb.dnsrecord.delegated.desc": "Configured FQDNs are delegated domains (i.e. they represent a zone cut).",
    "schema.pb.dnsrecord.ip6_address.desc": "IPv6 address in AAAA record",
    "schema.pb.dnsrecord.description.desc": "Details of DNS record",
    "schema.pb.dnsrecord.metadata.desc": "Internal metadata for the DNS record",
    "schema.pb.dnsrecord.mx_records.desc": "MX record.",
    "schema.pb.dnsrecord.txt_records.desc": "Text record.",
    "schema.pb.dnssrvrdata.priority.desc": "Priority of the target hosting the service, low value implies higher priority for this service record",
    "schema.pb.dnssrvrdata.weight.desc": "Relative weight for service records with same priority, high value implies higher preference for this service record",
    "schema.pb.dnssrvrdata.target.desc": "Canonical hostname, of the machine hosting the service, with no trailing period. 'default.host' is valid but not 'default.host.'",
    "schema.pb.dnssrvrdata.port.desc": "Service port",
    "schema.pb.servicepoolselector.service_port.desc": "Pool based destination port",
    "schema.pb.servicepoolselector.service_protocol.desc": "Destination protocol to match for the pool selection. If not specified, it will match any protocol.",
    "schema.pb.servicepoolselector.service_port_range_end.desc": "The end of the Service port number range.",
    "schema.pb.dnspolicies.index.desc": "Index of the dns policy",
    "schema.pb.dnspolicies.dns_policy_uuid.desc": "UUID of the dns policy",
    "schema.pb.vsdatascripts.index.desc": "Index of the virtual service datascript collection.",
    "schema.pb.vsdatascripts.vs_datascript_set_uuid.desc": "UUID of the virtual service datascript collection.",
    "schema.pb.analyticspolicy.udf_log_throttle.desc": "This setting limits the total number of UDF logs generated per second for this VS on each SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 10 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.analyticspolicy.significant_log_throttle.desc": "This setting limits the number of significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.analyticspolicy.client_insights.desc": "Gain insights from sampled client to server HTTP requests and responses.",
    "schema.pb.analyticspolicy.metrics_realtime_update.desc": "Settings to turn on realtime metrics and set duration for realtime updates",
    "schema.pb.analyticspolicy.all_headers.desc": "Log all headers.",
    "schema.pb.analyticspolicy.learning_log_policy.desc": "Configuration for learning logging determining whether it's enabled and where is the destination",
    "schema.pb.learninglogpolicy.enabled.desc": "Determine whether app learning logging is enabled.",
    "schema.pb.learninglogpolicy.host.desc": "Host name where learning logs will be sent to.",
    "schema.pb.learninglogpolicy.port.desc": "Port number for the service listening for learning logs.",
    "schema.pb.clientinsightssampling.skip_uris.desc": "URL patterns to avoid when inserting RUM script.",
    "schema.pb.clientinsightssampling.sample_uris.desc": "URL patterns to check when inserting RUM script.",
    "schema.pb.clientinsightssampling.client_ip.desc": "Client IP addresses to check when inserting RUM script.",
    "schema.pb.fullclientlogs.enabled.desc": "Capture all client logs including connections and requests.  When deactivated, only errors will be logged.",
    "schema.pb.fullclientlogs.duration.desc": "How long should the system capture all logs, measured in minutes. Set to 0 for infinite.",
    "schema.pb.fullclientlogs.throttle.desc": "This setting limits the number of nonsignificant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to deactivate throttling.",
    "schema.pb.performancelimits.max_concurrent_connections.desc": "The maximum number of concurrent client conections allowed to the Virtual Service.",
    "schema.pb.performancelimits.max_throughput.desc": "The maximum throughput per second for all clients allowed through the client side of the Virtual Service per SE.",
    "schema.pb.httppolicies.index.desc": "Index of the virtual service HTTP policy collection",
    "schema.pb.httppolicies.http_policy_set_uuid.desc": "UUID of the virtual service HTTP policy collection",
    "schema.pb.service.port.desc": "The Virtual Service's port number.",
    "schema.pb.service.enable_ssl.desc": "Enable SSL termination and offload for traffic from clients.",
    "schema.pb.service.override_network_profile_uuid.desc": "Override the network profile for this specific service port.",
    "schema.pb.service.port_range_end.desc": "The end of the Virtual Service's port number range.",
    "schema.pb.service.override_application_profile_uuid.desc": "Enable application layer specific features for the this specific service.",
    "schema.pb.service.enable_http2.desc": "Enable HTTP2 on this port.",
    "schema.pb.service.horizon_internal_ports.desc": "Used for Horizon deployment. If set used for L7 redirect.",
    "schema.pb.vrfcontext.bgp_profile.desc": "Bgp Local and Peer Info",
    "schema.pb.vrfcontext.gateway_mon.desc": "Configure ping based heartbeat check for gateway in service engines of vrf.",
    "schema.pb.vrfcontext.internal_gateway_monitor.desc": "Configure ping based heartbeat check for all default gateways in service engines of vrf.",
    "schema.pb.vrfcontext.debugvrfcontext.desc": "Configure debug flags for VRF",
    "schema.pb.vrfcontext.bfd_profile.desc": "BFD configuration profile.",
    "schema.pb.vrfcontext.lldp_enable.desc": "Enable LLDP.",
    "schema.pb.vrfcontext.attrs.desc": "Keyvalue vrfcontext attributes.",
    "schema.pb.vrfcontext.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.vrfcontext.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.bfdprofile.multi.desc": "Default detection multiplier used in BFD.",
    "schema.pb.bfdprofile.mintx.desc": "Default desired minimum transmit interval (in ms) used in BFD.",
    "schema.pb.bfdprofile.minrx.desc": "Default required minimum receive interval (in ms) used in BFD.",
    "schema.pb.debugvrfcontext.command_buffer_size.desc": "Vrf config command buffer size.",
    "schema.pb.debugvrfcontext.command_buffer_interval.desc": "Vrf config command buffer process interval.",
    "schema.pb.bgpprofile.local_as.desc": "Local Autonomous System ID",
    "schema.pb.bgpprofile.ibgp.desc": "BGP peer type",
    "schema.pb.bgpprofile.peers.desc": "BGP Peers",
    "schema.pb.bgpprofile.keepalive_interval.desc": "Keepalive interval for Peers",
    "schema.pb.bgpprofile.hold_time.desc": "Hold time for Peers",
    "schema.pb.bgpprofile.send_community.desc": "Send community attribute to all peers.",
    "schema.pb.bgpprofile.community.desc": "Community string either in aa:nn format where aa, nn is within [1,65535] or localAS|noadvertise|noexport|internet.",
    "schema.pb.bgpprofile.ip_communities.desc": "Communities per IP address range.",
    "schema.pb.bgpprofile.local_preference.desc": "LOCAL_PREF to be used for routes advertised. Applicable only over iBGP.",
    "schema.pb.bgpprofile.num_as_path_prepend.desc": "Number of times the local AS should be prepended additionally.",
    "schema.pb.bgpprofile.routing_options.desc": "Learning and advertising options for BGP peers.",
    "schema.pb.bgpprofile.shutdown.desc": "Shutdown the bgp",
    "schema.pb.bgproutingoptions.label.desc": "Features are applied to peers matching this label.",
    "schema.pb.bgproutingoptions.learn_only_default_route.desc": "Learn only default route from the BGP peer.",
    "schema.pb.bgproutingoptions.learn_routes.desc": "Learn routes from the BGP peer.",
    "schema.pb.bgproutingoptions.advertise_default_route.desc": "Advertise self as default router to the BGP peer.",
    "schema.pb.bgproutingoptions.advertise_learned_routes.desc": "Advertise the learned routes to the BGP peer.",
    "schema.pb.bgproutingoptions.max_learn_limit.desc": "Maximum number of routes that can be learned from a BGP peer.",
    "schema.pb.ipcommunity.ip_begin.desc": "Beginning of IP address range.",
    "schema.pb.ipcommunity.ip_end.desc": "End of IP address range. Optional if ip_begin is the only IP address in specified IP range.",
    "schema.pb.ipcommunity.community.desc": "Community string either in aa:nn format where aa, nn is within [1,65535] or localAS|noadvertise|noexport|internet.",
    "schema.pb.bgppeer.remote_as.desc": "Peer Autonomous System ID",
    "schema.pb.bgppeer.peer_ip.desc": "IP Address of the BGP Peer",
    "schema.pb.bgppeer.subnet.desc": "Subnet providing reachability for Peer",
    "schema.pb.bgppeer.md5_secret.desc": "Peer Autonomous System Md5 Digest Secret Key",
    "schema.pb.bgppeer.bfd.desc": "Enable BiDirectional Forward Detection. Only async mode supported.",
    "schema.pb.bgppeer.network_uuid.desc": "Network providing reachability for Peer",
    "schema.pb.bgppeer.advertise_vip.desc": "Advertise VIP to this Peer",
    "schema.pb.bgppeer.advertise_snat_ip.desc": "Advertise SNAT IP to this Peer",
    "schema.pb.bgppeer.advertisement_interval.desc": "Advertisement interval for this Peer",
    "schema.pb.bgppeer.connect_timer.desc": "Connect timer for this Peer",
    "schema.pb.bgppeer.keepalive_interval.desc": "Keepalive interval for this Peer",
    "schema.pb.bgppeer.hold_time.desc": "Hold time for this Peer",
    "schema.pb.bgppeer.ebgp_multihop.desc": "TTL for multihop ebgp Peer",
    "schema.pb.bgppeer.local_as.desc": "Local AS to use for this ebgp peer. If specified, this will override the local AS configured at the VRF level",
    "schema.pb.bgppeer.peer_ip6.desc": "IPv6 Address of the BGP Peer.",
    "schema.pb.bgppeer.subnet6.desc": "IPv6 subnet providing reachability for Peer.",
    "schema.pb.bgppeer.shutdown.desc": "Shutdown the BGP peer.",
    "schema.pb.bgppeer.label.desc": "Label used to enable learning andor advertisement of routes to this peer.",
    "schema.pb.bgppeer.ibgp_local_as_override.desc": "Override the profile level local_as with the peer level remote_as.",
    "schema.pb.vsdatascriptset.uuid.desc": "UUID of the virtual service datascript collection",
    "schema.pb.vsdatascriptset.name.desc": "Name for the virtual service datascript collection",
    "schema.pb.vsdatascriptset.datascript.desc": "DataScripts to execute",
    "schema.pb.vsdatascriptset.pool_uuids.desc": "UUID of pools that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.pool_group_uuids.desc": "UUID of pool groups that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.ipgroup_uuids.desc": "UUID of IP Groups that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.string_group_uuids.desc": "UUID of String Groups that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.created_by.desc": "Creator name",
    "schema.pb.vsdatascriptset.protocol_parser_uuids.desc": "List of protocol parsers that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.ip_reputation_db_uuid.desc": "IP reputation database that can be used by DataScript functions.",
    "schema.pb.vsdatascriptset.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.vsdatascriptset.rate_limiters.desc": "The Rate Limit definitions needed for this DataScript. The name is composed of the Virtual Service name and the DataScript name.",
    "schema.pb.vsdatascriptset.geo_db_uuid.desc": "Geo Location Mapping Database used by this DataScriptSet.",
    "schema.pb.vsdatascriptset.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.vsdatascriptset.ssl_profile_uuids.desc": "UUIDs of SSLProfile objects that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.ssl_key_certificate_uuids.desc": "UUIDs of SSLKeyAndCertificate objects that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascriptset.pki_profile_uuids.desc": "UUIDs of PKIProfile objects that could be referred by VSDataScriptSet objects.",
    "schema.pb.vsdatascript.evt.desc": "Event triggering execution of datascript",
    "schema.pb.vsdatascript.script.desc": "Datascript to execute when the event triggers",
    "schema.pb.vsvip.uuid.desc": "UUID of the VsVip object.",
    "schema.pb.vsvip.name.desc": "Name for the VsVip object.",
    "schema.pb.vsvip.vip.desc": "List of Virtual Service IPs and other shareable entities.",
    "schema.pb.vsvip.dns_info.desc": "Service discovery specific data including fully qualified domain name, type and TimeToLive of the DNS record.",
    "schema.pb.vsvip.vrf_context_uuid.desc": "Virtual Routing Context that the Virtual Service is bound to. This is used to provide the isolation of the set of networks the application is attached to.",
    "schema.pb.vsvip.east_west_placement.desc": "Force placement on all Service Engines in the Service Engine Group (Container clouds only)",
    "schema.pb.vsvip.use_standard_alb.desc": "This overrides the cloud level default and needs to match the SE Group value in which it will be used if the SE Group use_standard_alb value is set. This is only used when FIP is used for VS on Azure Cloud.",
    "schema.pb.vsvip.tier1_lr.desc": "This sets the placement scope of virtualservice to given tier1 logical router in Nsxt.",
    "schema.pb.vsvip.ipam_selector.desc": "Determines the set of IPAM networks to use for this VsVip. Selector type must be SELECTOR_IPAM and only one label is supported.",
    "schema.pb.vsvip.bgp_peer_labels.desc": "Select BGP peers, using peer label, for VsVip advertisement.",
    "schema.pb.vsvip.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.vsvip.vsvip_cloud_config_cksum.desc": "Checksum of cloud configuration for VsVip. Internally set by cloud connector",
    "schema.pb.vsvip.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.selector.type.desc": "Selector type",
    "schema.pb.selector.labels.desc": "Labels as key value pairs to select on",
    "schema.pb.wafapplicationsignatures.provider_uuid.desc": "The external provide for the rules.",
    "schema.pb.wafapplicationsignatures.ruleset_version.desc": "The version in use of the provided ruleset.",
    "schema.pb.wafapplicationsignatures.selected_applications.desc": "List of applications for which we use the rules from the WafApplicationSignatureProvider.",
    "schema.pb.wafapplicationsignatures.rule_overrides.desc": "Override attributes of application signature rules.",
    "schema.pb.wafapplicationsignatures.resolved_rules.desc": "A resolved version of the active application specific rules together with the overrides.",
    "schema.pb.wafrule.name.desc": "Userfriendly optional name for a rule.",
    "schema.pb.wafrule.rule_id.desc": "Identifier (id) for a rule per Modsec language. All SecRule and SecAction directives require an id. It is extracted from the id action in a Modsec rule. Rules within a single WAF Policy are required to have unique rule_ids.",
    "schema.pb.wafrule.enable.desc": "Enable or disable WAF Rule Group.",
    "schema.pb.wafrule.rule.desc": "Rule as per Modsec language.",
    "schema.pb.wafrule.exclude_list.desc": "Exclude list for the WAF rule. The fields in the exclude list entry are logically and'ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be 'logical or' of them.",
    "schema.pb.wafrule.tags.desc": "Tags for WAF rule as per Modsec language. They are extracted from the tag action in a ModSec rule.",
    "schema.pb.wafrule.mode.desc": "WAF Rule mode. This can be detection or enforcement. If this is not set, the Policy mode is used. This only takes effect if the policy allows delegation.",
    "schema.pb.wafrule.is_sensitive.desc": "The rule field is sensitive and will not be displayed.",
    "schema.pb.wafrule.phase.desc": "The execution phase where this rule will be executed.",
    "schema.pb.wafexcludelistentry.client_subnet.desc": "Client IP Subnet to exclude for WAF rules.",
    "schema.pb.wafexcludelistentry.uri_path.desc": "URI Path to exclude for WAF rules.",
    "schema.pb.wafexcludelistentry.match_element.desc": "The match_element can be 'ARGS:xxx', 'ARGS_GET:xxx', 'ARGS_POST:xxx', 'ARGS_NAMES:xxx', 'FILES:xxx', 'QUERY_STRING', 'REQUEST_BASENAME', 'REQUEST_BODY', 'REQUEST_URI', 'REQUEST_URI_RAW', 'REQUEST_COOKIES:xxx', 'REQUEST_HEADERS:xxx', 'RESPONSE_HEADERS:xxx' or XML:xxx. These match_elements in the HTTP Transaction (if present) will be excluded when executing WAF Rules.",
    "schema.pb.wafexcludelistentry.uri_match_criteria.desc": "Criteria for URI matching.",
    "schema.pb.wafexcludelistentry.match_element_criteria.desc": "Criteria for match_element matching.",
    "schema.pb.wafexcludelistentry.description.desc": "Freetext comment about this exclusion.",
    "schema.pb.wafexclusiontype.match_op.desc": "String Operation to use for matching the Exclusion.",
    "schema.pb.wafexclusiontype.match_case.desc": "Case sensitivity to use for the matching.",
    "schema.pb.wafruleoverrides.rule_id.desc": "The rule_id of the rule where attributes are overridden.",
    "schema.pb.wafruleoverrides.enable.desc": "Override the enable flag for this rule.",
    "schema.pb.wafruleoverrides.mode.desc": "Override the waf mode for this rule.",
    "schema.pb.wafruleoverrides.exclude_list.desc": "Replace the exclude list for this rule.",
    "schema.pb.wafapplicationsignatureprovider.name.desc": "Name of Application Specific Ruleset Provider.",
    "schema.pb.wafapplicationsignatureprovider.ruleset_version.desc": "Version of signatures.",
    "schema.pb.wafapplicationsignatureprovider.available_applications.desc": "Available application names and the ruleset version, when the rules for an application changed the last time.",
    "schema.pb.wafapplicationsignatureprovider.signatures.desc": "The WAF rules. Not visible in the API.",
    "schema.pb.wafapplicationsignatureprovider.service_status.desc": "If this object is managed by the Application Signatures update  service, this field contain the status of this syncronization.",
    "schema.pb.wafapplicationsignatureprovider.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.webapplicationsignatureservicestatus.error.desc": "If the last attempted update failed, this is a more detailed error message.",
    "schema.pb.webapplicationsignatureservicestatus.last_successful_update_check.desc": "The time when the Application Signature service last successfull attemped to update this object. It will be not update, if an error occurs during an update attempt. In this case, the error will be set.",
    "schema.pb.webapplicationsignatureservicestatus.upstream_sync_timestamp.desc": "A timestamp field. It is used by the Application Signature Sync service to keep track of the current version.",
    "schema.pb.wafapplicationsignatureappversion.application.desc": "Name of an application in the rule set.",
    "schema.pb.wafapplicationsignatureappversion.last_changed_ruleset_version.desc": "The last version of the rule set when the rules corresponding to the application changed.",
    "schema.pb.wafapplicationsignatureappversion.number_of_rules.desc": "The number of rules available for this application.",
    "schema.pb.wafcrs.version.desc": "The version of this ruleset object.",
    "schema.pb.wafcrs.release_date.desc": "The release date of this version in RFC 3339  ISO 8601 format.",
    "schema.pb.wafcrs.description.desc": "A short description of this ruleset.",
    "schema.pb.wafcrs.groups.desc": "WAF Rules are sorted in groups based on their characterization.",
    "schema.pb.wafcrs.name.desc": "The name of this ruleset object.",
    "schema.pb.wafcrs.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.wafcrs.integrity.desc": "Integrity protection value.",
    "schema.pb.wafcrs.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.wafcrs.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.wafrulegroup.enable.desc": "Enable or disable WAF Rule Group.",
    "schema.pb.wafrulegroup.rules.desc": "Rules as per Modsec language.",
    "schema.pb.wafrulegroup.exclude_list.desc": "Exclude list for the WAF rule group. The fields in the exclude list entry are logically and'ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be 'logical or' of them.",
    "schema.pb.wafpolicy.mode.desc": "WAF Policy mode. This can be detection or enforcement. It can be overwritten by rules if allow_mode_delegation is set.",
    "schema.pb.wafpolicy.waf_profile_uuid.desc": "WAF Profile for WAF policy",
    "schema.pb.wafpolicy.pre_crs_groups.desc": "WAF Rules are categorized in to groups based on their characterization. These groups are created by the user and will be  enforced before the CRS groups.",
    "schema.pb.wafpolicy.post_crs_groups.desc": "WAF Rules are categorized in to groups based on their characterization. These groups are created by the user and will be enforced after the CRS groups.",
    "schema.pb.wafpolicy.paranoia_level.desc": "WAF Ruleset paranoia  mode. This is used to select Rules based on the paranoialevel tag.",
    "schema.pb.wafpolicy.created_by.desc": "Creator name",
    "schema.pb.wafpolicy.waf_crs_uuid.desc": "WAF core ruleset used for the CRS part of this Policy.",
    "schema.pb.wafpolicy.failure_mode.desc": "WAF Policy failure mode. This can be 'Open' or 'Closed'.",
    "schema.pb.wafpolicy.allow_mode_delegation.desc": "Allow Rules to overwrite the policy mode. This must be set if the policy mode is set to enforcement.",
    "schema.pb.wafpolicy.positive_security_model.desc": "The Positive Security Model. This is used to describe how the request or parts of the request should look like. It is executed in the Request Body Phase of Avi WAF.",
    "schema.pb.wafpolicy.enable_app_learning.desc": "Enable Application Learning for this WAF policy.",
    "schema.pb.wafpolicy.application_signatures.desc": "Application Specific Signatures",
    "schema.pb.wafpolicy.learning_params.desc": "Parameters for tuning Application learning.",
    "schema.pb.wafpolicy.min_confidence.desc": "Minimum confidence label required for auto rule updates.",
    "schema.pb.wafpolicy.confidence_override.desc": "Configure thresholds for confidence labels.",
    "schema.pb.wafpolicy.enable_auto_rule_updates.desc": "Enable Application Learning based rule updates on the WAF Profile. Rules will be programmed in dedicated WAF learning group.",
    "schema.pb.wafpolicy.enable_regex_learning.desc": "Enable dynamic regex generation for positive security model rules. This is an experimental feature and shouldn't be used in production.",
    "schema.pb.wafpolicy.allowlist.desc": "A set of rules which describe conditions under which the request will bypass the WAF. This will be processed in the request header phase before any other WAF related code.",
    "schema.pb.wafpolicy.geo_db_uuid.desc": "Geo Location Mapping Database used by this WafPolicy.",
    "schema.pb.wafpolicy.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.wafpolicy.crs_overrides.desc": "Override attributes for CRS rules.",
    "schema.pb.wafpolicy.bypass_static_extensions.desc": "Enable the functionality to bypass WAF for static file extensions.",
    "schema.pb.wafpolicy.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.wafrulegroupoverrides.name.desc": "The name of the group where attributes or rules are overridden.",
    "schema.pb.wafrulegroupoverrides.enable.desc": "Override the enable flag for this group.",
    "schema.pb.wafrulegroupoverrides.mode.desc": "Override the waf mode for this group..",
    "schema.pb.wafrulegroupoverrides.exclude_list.desc": "Replace the exclude list for this group.",
    "schema.pb.wafrulegroupoverrides.rule_overrides.desc": "Rule specific overrides.",
    "schema.pb.wafpolicyallowlist.rules.desc": "Rules to bypass WAF.",
    "schema.pb.wafpolicyallowlistrule.index.desc": "Rules are processed in order of this index field.",
    "schema.pb.wafpolicyallowlistrule.name.desc": "A name describing the rule in a short form.",
    "schema.pb.wafpolicyallowlistrule.enable.desc": "Enable or deactivate the rule.",
    "schema.pb.wafpolicyallowlistrule.match.desc": "Match criteria describing requests to which this rule should be applied.",
    "schema.pb.wafpolicyallowlistrule.actions.desc": "Actions to be performed upon successful matching.",
    "schema.pb.wafpolicyallowlistrule.description.desc": "Description of this rule.",
    "schema.pb.wafpolicyallowlistrule.sampling_percent.desc": "Percentage of traffic that is sampled.",
    "schema.pb.applearningconfidenceoverride.confid_very_high_value.desc": "Confidence threshold for label CONFIDENCE_VERY_HIGH.",
    "schema.pb.applearningconfidenceoverride.confid_high_value.desc": "Confidence threshold for label CONFIDENCE_HIGH.",
    "schema.pb.applearningconfidenceoverride.confid_probable_value.desc": "Confidence threshold for label CONFIDENCE_PROBABLE.",
    "schema.pb.applearningconfidenceoverride.confid_low_value.desc": "Confidence threshold for label CONFIDENCE_LOW.",
    "schema.pb.applearningparams.sampling_percent.desc": "Percent of the requests subjected to Application learning.",
    "schema.pb.applearningparams.update_interval.desc": "Frequency with which SE publishes Application learning data to controller.",
    "schema.pb.applearningparams.max_uris.desc": "Maximum number of URI paths programmed for an application.",
    "schema.pb.applearningparams.max_params.desc": "Maximum number of params programmed for an application.",
    "schema.pb.applearningparams.enable_per_uri_learning.desc": "Learn the params per URI path.",
    "schema.pb.applearningparams.min_hits_to_learn.desc": "Minimum number of occurances required for a Param to qualify for learning.",
    "schema.pb.wafpositivesecuritymodel.group_uuids.desc": "These groups should be used to separate different levels of concern. The order of the groups matters, one group may mark parts of the request as valid, so that subsequent groups will not check these parts.",
    "schema.pb.wafpolicypsmgroup.uuid.desc": "UUID of this object.",
    "schema.pb.wafpolicypsmgroup.tenant_uuid.desc": "Tenant that this object belongs to.",
    "schema.pb.wafpolicypsmgroup.name.desc": "User defined name of the group.",
    "schema.pb.wafpolicypsmgroup.enable.desc": "Enable or disable this WAF rule group.",
    "schema.pb.wafpolicypsmgroup.locations.desc": "Positive Security Model locations. These are used to partition the application name space.",
    "schema.pb.wafpolicypsmgroup.hit_action.desc": "If a rule in this group matches the match_value pattern, this action will be executed. Allowed actions are WAF_ACTION_NO_OP and WAF_ACTION_ALLOW_PARAMETER.",
    "schema.pb.wafpolicypsmgroup.miss_action.desc": "If a rule in this group does not match the match_value pattern, this action will be executed. Allowed actions are WAF_ACTION_NO_OP and WAF_ACTION_BLOCK.",
    "schema.pb.wafpolicypsmgroup.description.desc": "Freetext comment about this group.",
    "schema.pb.wafpolicypsmgroup.is_learning_group.desc": "This field indicates that this group is used for learning.",
    "schema.pb.wafpolicypsmgroup.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.wafpolicypsmgroup.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.wafpsmlocation.index.desc": "Location index, this is used to determine the order of the locations.",
    "schema.pb.wafpsmlocation.name.desc": "User defined name for this location, it must be unique in the group.",
    "schema.pb.wafpsmlocation.match.desc": "Apply these rules only if the request is matching this description.",
    "schema.pb.wafpsmlocation.rules.desc": "A list of rules which should be applied on this location.",
    "schema.pb.wafpsmlocation.description.desc": "Freetext comment about this location.",
    "schema.pb.wafpsmrule.index.desc": "Rule index, this is used to determine the order of the rules.",
    "schema.pb.wafpsmrule.rule_id.desc": "Id field which is used for log and metric generation. This id must be unique for all rules in this group.",
    "schema.pb.wafpsmrule.name.desc": "Name of the rule.",
    "schema.pb.wafpsmrule.enable.desc": "Enable or disable this rule.",
    "schema.pb.wafpsmrule.mode.desc": "WAF Rule mode. This can be detection or enforcement. If this is not set, the Policy mode is used. This only takes effect if the policy allows delegation.",
    "schema.pb.wafpsmrule.paranoia_level.desc": "WAF Ruleset paranoia mode. This is used to select Rules based on the paranoialevel.",
    "schema.pb.wafpsmrule.match_elements.desc": "The match elements, for example ARGS:id or ARGS|!ARGS:password.",
    "schema.pb.wafpsmrule.match_value_max_length.desc": "The maximum allowed length of the match_value. If this is not set, the length will not be checked.",
    "schema.pb.wafpsmrule.match_value_pattern.desc": "A regular expression which describes the expected value.",
    "schema.pb.wafpsmrule.match_case.desc": "The field match_value_pattern regular expression is case sensitive.",
    "schema.pb.wafpsmrule.description.desc": "Freetext comment about this rule.",
    "schema.pb.wafpsmrule.match_value_string_group_uuid.desc": "The UUID of a string group containing key used in match_value_string_group_key.",
    "schema.pb.wafpsmrule.match_value_string_group_key.desc": "If match_value_string_group_uuid and match_value_string_group_key are set, the referenced regular expression is used as match_value_pattern.",
    "schema.pb.wafpsmmatchelement.index.desc": "Match_element index.",
    "schema.pb.wafpsmmatchelement.name.desc": "The variable specification. For example ARGS or REQUEST_COOKIES. This can be a scalar like PATH_INFO.",
    "schema.pb.wafpsmmatchelement.sub_element.desc": "The name of the request collection element. This can be empty, if we address the whole collection or a scalar element.",
    "schema.pb.wafpsmmatchelement.excluded.desc": "Mark this element excluded, like in '!ARGS:password'.",
    "schema.pb.wafpsmmatchelement.match_op.desc": "String operation to use for matching the sub_element. Default is EQUALS.",
    "schema.pb.wafpsmmatchelement.match_case.desc": "Case sensitivity of match_op operation.",
    "schema.pb.wafpsmlocationmatch.methods.desc": "Apply the rules only to requests that have the specified methods. If this is not set, the method will not be checked.",
    "schema.pb.wafpsmlocationmatch.path.desc": "Apply the rules only to requests that match the specified URI. If this is not set, the path will not be checked.",
    "schema.pb.wafpsmlocationmatch.host.desc": "Apply the rules only to requests that match the specified Host header. If this is not set, the host header will not be checked.",
    "schema.pb.wafprofile.config.desc": "Config params for WAF.",
    "schema.pb.wafprofile.files.desc": "List of Data Files Used for WAF Rules.",
    "schema.pb.wafprofile.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.wafprofile.configpb_attributes.desc": "Protobuf versioning for config pbs.",
    "schema.pb.wafdatafile.name.desc": "WAF Data File Name.",
    "schema.pb.wafdatafile.data.desc": "Stringified WAF File Data.",
    "schema.pb.wafdatafile.type.desc": "WAF data file type.",
    "schema.pb.wafconfig.request_hdr_default_action.desc": "WAF default action for Request Header Phase.",
    "schema.pb.wafconfig.request_body_default_action.desc": "WAF default action for Request Body Phase.",
    "schema.pb.wafconfig.response_hdr_default_action.desc": "WAF default action for Response Header Phase.",
    "schema.pb.wafconfig.response_body_default_action.desc": "WAF default action for Response Body Phase.",
    "schema.pb.wafconfig.allowed_http_versions.desc": "WAF allowed HTTP Versions.",
    "schema.pb.wafconfig.allowed_methods.desc": "WAF allowed HTTP methods.",
    "schema.pb.wafconfig.restricted_extensions.desc": "WAF Restricted File Extensions.",
    "schema.pb.wafconfig.restricted_headers.desc": "WAF Restricted HTTP Headers.",
    "schema.pb.wafconfig.static_extensions.desc": "WAF Static File Extensions. GET and HEAD requests with no query args and one of these extensions are allowed and not checked by the ruleset.",
    "schema.pb.wafconfig.server_response_max_body_size.desc": "Maximum size for response body scanned by WAF",
    "schema.pb.wafconfig.argument_separator.desc": "Argument seperator",
    "schema.pb.wafconfig.cookie_format_version.desc": "0: For Netscape Cookies. 1: For version 1 cookies.",
    "schema.pb.wafconfig.regex_match_limit.desc": "Limit CPU utilization for each regular expression match when processing rules",
    "schema.pb.wafconfig.max_execution_time.desc": "The maximum period of time WAF processing is allowed to take for a single request. A value of 0 (zero) means no limit and should not be chosen in production deployments. It is only used for exceptional situations where crashes of se_dp processes are acceptable. The behavior of the system if this time is exceeded depends on two other configuration settings, the WAF policy mode and the WAF failure mode. In WAF policy mode 'Detection', the request is allowed and flagged for both failure mode 'Closed' and 'Open'. In enforcement node, 'Closed' means the request is rejected, 'Open' means the request is allowed and flagged. Irrespective of these settings, no subsequent WAF rules of this or other phases will be executed once the maximum execution time has been exceeded.",
    "schema.pb.wafconfig.client_request_max_body_size.desc": "Maximum size for the client request body scanned by WAF",
    "schema.pb.wafconfig.ignore_incomplete_request_body_error.desc": "Ignore request body parsing errors due to partial scanning",
    "schema.pb.wafconfig.status_code_for_rejected_requests.desc": "HTTP status code used by WAF Positive Security Model when rejecting a request.",
    "schema.pb.wafconfig.regex_recursion_limit.desc": "Limit depth of recursion for each regular expression match when processing rules",
    "schema.pb.wafconfig.xml_xxe_protection.desc": "Block or flag XML requests referring to External Entities.",
    "schema.pb.wafconfig.status_header_name.desc": "The name of the request header indicating WAF evaluation status to pool servers.",
    "schema.pb.wafconfig.send_status_header.desc": "Whether or not to send WAF status in a request header to pool servers.",
    "schema.pb.wafconfig.content_type_mappings.desc": "WAF ContentTypes and their request body parsers. Use this field to configure which ContentTypes should be handled by WAF and which parser should be used. All ContentTypes here are treated as 'allowed'. The order of entries matters. If the request's ContentType matches an entry, its request body parser will run and no other parser will be invoked.",
    "schema.pb.wafcontenttypemapping.content_type.desc": "Request ContentType. When it is equal to request ContentType header value, the specified request_body_parser is used.",
    "schema.pb.wafcontenttypemapping.request_body_parser.desc": "Request body parser.",
    "schema.pb.webhook.uuid.desc": "UUID of the webhook profile",
    "schema.pb.webhook.name.desc": "The name of the webhook profile",
    "schema.pb.webhook.callback_url.desc": "Callback URL for the Webhook",
    "schema.pb.webhook.verification_token.desc": "Verification token sent back with the callback asquery parameters",
    "schema.pb.webhook.markers.desc": "List of labels to be used for granular RBAC.",
    "schema.pb.webhook.configpb_attributes.desc": "Protobuf versioning for config pbs."
};